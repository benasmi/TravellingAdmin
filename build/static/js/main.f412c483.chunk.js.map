{"version":3,"sources":["res/selectedParking.svg","res/availableParking.svg","helpers/firebaseInit.js","pages/Home.js","components/TableComponent.js","helpers/debounce.js","helpers/history.js","helpers/tokens.js","Networking/NetworkLayerCentral.js","Networking/API.js","contexts/AlertDialogContext.js","contexts/UseAlertDialogContext.js","helpers/stringResources.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","components/AutocompleteChip.js","contexts/PlacesFilterContext.js","components/add_place_components/FilterBlock.js","pages/Places.js","helpers/priceRange.js","helpers/averageTimeSpent.js","components/AddSourceDialog.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/maps/MapGeolocation.js","components/maps/MapToolbar.js","components/maps/MapLock.js","components/maps/CustomControlsManager.js","components/maps/PlaceMap.js","components/add_place_components/PlaceLocation.js","components/maps/ParkingMap.js","components/add_place_components/ParkingLocation.js","components/AddDialog.js","contexts/EditDialogContext.js","contexts/UseEditDialogContext.js","components/add_place_components/PlaceDiscovery.js","components/add_place_components/initialScheduleData.js","components/ReviewCard.js","components/add_place_components/Reviews.js","contexts/AppBarTitleContext.js","contexts/UseAppBarTitleContext.js","components/ScheduleInterval.js","components/DayComponent.js","components/Schedule.js","components/add_place_components/SchedulesWrapper.js","pages/AddPlace.js","components/ApiPlaceCard.js","components/SearchInputComponent.js","pages/ApiPlaces.js","pages/NotFoundPage.js","components/tour_components/TourPlaceComponent.js","components/tour_components/TransportItem.js","components/tour_components/TourPlacesWrapper.js","components/tour_components/PlaceSearch.js","components/tour_components/DayCard.js","components/tour_components/DaysWrapper.js","components/tour_components/TourReducer.js","components/tour_components/TourInfoComponent.js","components/tour_components/TourMap.js","components/tour_components/Tour.js","pages/Tours.js","components/Resources.js","components/Appbar.js","App.js","contexts/AuthContext.js","pages/LoginPage.js","components/AuthenticatedRoute.js","components/feedback/SnackbarFeedback.js","components/feedback/AlertDialogFeedback.js","components/feedback/TextInputDialog.js","index.js"],"names":["module","exports","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","withStyles","theme","button","margin","spacing","input","display","props","classes","descendingComparator","a","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","checkable","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","customToolbarElements","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","style","alignItems","TextField","target","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","centerCell","textAlign","rowNotPublished","rowNotVerified","rowBasic","TableComponent","searchFunction","pagingInfo","data","updateCallback","removeCallback","isLoading","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","filter","item","undefined","slice","row","isItemSelected","indexOf","labelId","rowStyle","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckboxChange","header","isId","scope","fontSize","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","pageNum","onChangePage","newPage","onChangeRowsPerPage","parseInt","console","log","history","getAccessToken","Cookies","get","isAuthenticated","request","options","contentType","client","axios","create","baseURL","headers","interceptors","response","use","error","originalRequest","config","status","auth","currentUser","_retry","Promise","reject","getIdToken","then","token","Authorization","set","onSuccess","onError","debug","push","message","catch","RequestType","getRequest","path","urlData","url","method","postRequest","postMultipartRequest","formData","API","Tour","insertTour","getTour","urlParams","updateTour","getAllToursAdmin","removeTour","SourcePlace","updateSourcesForPlace","Source","getSources","addSource","Places","getAllCities","getAllCounties","getAllCountries","getAllMunicipalities","getAllPlaces","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","removePlace","Tags","getAllTags","addTag","params","removeTags","updateTags","Categories","addCategory","getAllCategories","removeCategory","updateCategory","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","Reviews","getPlaceReviews","AlertDialogContext","createContext","alertConfig","addAlertConfig","removeAlertConfig","AlertDialogProvider","children","setAlertConfig","contextValue","actions","onClose","Provider","UseAlertDialogContext","useContext","Strings","DIALOG_PLACE_PUBLISH_TITLE","DIALOG_PLACE_PUBLISH_MESSAGE","DIALOG_PLACE_UNPUBLISH_MESSAGE","DIALOG_PLACE_INSERT_TITLE","DIALOG_PLACE_INSERT","DIALOG_PLACE_UPDATE_TITLE","DIALOG_PLACE_UPDATE","DIALOG_PLACE_VERIFY_TITLE","DIALOG_PLACE_VERIFY_MESSAGE","DIALOG_PLACE_DELETE_TITLE","DIALOG_PLACE_DELETE_MESSAGE","DIALOG_TOUR_DELETE_TITLE","DIALOG_TOUR_DELETE_MESSAGE","SNACKBAR_PLACE_INSERTED_SUCCESS","SNACKBAR_PLACE_REMOVE_SUCCESS","SNACKBAR_TOUR_INSERTED_SUCCESS","SNACKBAR_TOUR_REMOVE_SUCCESS","SNACKBAR_ERROR","SNACKBAR_CHANGES_SAVED","SnackbarContext","addConfig","removeConfig","SnackbarProvider","setConfig","success","UseSnackbarContext","autoComplete","chip","justifyContent","flexWrap","listStyle","autoCompleteChipContainer","setOptions","selectedOptions","setSelectedOptions","getCurrentVal","setCurrentVal","firstLoad","setFirstLoad","handleDelete","found","row1","JSON","stringify","Box","option","Chip","onDelete","Autocomplete","disableClearable","getOptionLabel","renderInput","PlacesFilterContext","buildUrl","require","initialDates","insertionStart","moment","Date","format","insertionEnd","modificationStart","modificationEnd","PlacesFilterProvider","categories","setCategories","selectedCategories","setSelectedCategories","cities","setCities","selectedCities","setSelectedCities","countries","setCountries","selectedCountries","setSelectedCountries","municipalities","setMunicipalities","selectedMunicipalities","setSelectedMunicipalities","counties","setCounties","selectedCounties","setSelectedCounties","initialLoading","setInitialLoading","resetFilterOptions","setResetFilterOptions","filterLabel","filterName","filterOptions","setFilterOptions","dates","setDates","queryParams","di","dm","parseFilterOptions","parseCategories","filterQuery","setFilterQuery","cats","all","res","err","filterOptionsCleared","areFiltersCleared","o","c","filterDiv","flexDirection","sortingButtons","rightLayout","boxShadow","datesLayout","filterDateChange","date","cDate","Object","assign","FormControlLabel","control","generalOptions","filterOptionsChanged","Grid","container","justify","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","AutocompleteChip","Button","filters","clearFilters","buttonsDiv","content","breakpoints","down","up","autocomplete","borderBottom","outline","setData","pageData","setPageData","setIsLoading","getPlaceNameById","i","placeId","requestAllPlaces","p","parseData","placesData","list","anchorEl","setAnchorEl","open","Boolean","handleClick","currentTarget","action","tmp","aria-describedby","Popover","anchorOrigin","vertical","horizontal","transformOrigin","startIcon","priceRange","averageTimeSpent","closeButton","right","grey","setDialogOpen","setText","setUrl","setError","Dialog","fullWidth","DialogTitle","DialogContent","dividers","ev","marginTop","DialogActions","autoFocus","validateInput","placeInfo","setPlaceInfo","selectedSources","setSelectedSources","updatePlaceInfo","newValue","place","valuetext","setAvailableSources","dialogOpen","availableSources","val","required","placeholder","e","InputLabelProps","shrink","multiline","rows","Slider","marginLeft","defaultValue","getAriaValueText","step","max","marks","FormControl","InputLabel","Select","native","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","pressDelay","disableAutoscroll","onSortEnd","oldIndex","newIndex","arrayMove","axis","acceptedFileFormats","dropzoneArea","onCloseCallback","onFinishCallback","loading","selectedFiles","setSelectedFiles","acceptedFiles","maxFileSize","dropzoneProps","disabled","filesLimit","onDrop","imagefile","FormData","append","finally","addImageDialogOpen","setAddImageDialogOpen","files","handleAddPhoto","Geocode","setApiKey","enableDebug","getCountry","addressArray","types","long_name","getCity","city","getCounty","county","getMunicipality","municipality","geocodeFromLatLng","newLat","newLng","fromLatLng","address","results","formatted_address","address_components","country","latitude","longitude","isLocked","locationCallback","handleKeyPress","which","keyCode","test","fromAddress","geometry","location","lat","lng","split","parseFloat","onKeyPress","onPlaceSelected","navigator","geolocation","getCurrentPosition","coords","alert","setIsLocked","Switch","old","Alert","severity","CustomControlsManager","context","window","google","maps","ControlPosition","TOP_LEFT","MAP","controlDiv","document","createElement","controls","removeAt","createPortal","contextTypes","PropTypes","object","MapComponent","withGoogleMap","defaultZoom","ref","refInstance","center","defaultCenter","visible","draggable","onDragEnd","setLocationMarker","latLng","onMarkerDragEnd","setPosition","BOTTOM_CENTER","mapCenter","current","getCenter","locationMarker","refMap","useRef","Fragment","loadingElement","containerElement","mapElement","locationData","setLocationData","changeLocationData","setMainInfoWindow","mainInfoWindow","onCloseClick","parking","parkingData","calcCrow","nearestParkingCount","addNewParking","loc","parkingIsAttached","selectedParkingData","parkingId","icon","scaledSize","Size","origin","Point","anchor","markers","parkingInfoWindows","setParkingInfoWindows","addExistingParking","lat1","lon1","lat2","lon2","dLat","toRad","dLon","sin","cos","atan2","sqrt","Value","PI","ParkingMap","setParkingData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","SortableItem","elevation","SortableList","oldArray","textFieldLabel","description","EditDialogContext","dialogConfig","addEditDialogConfig","removeEditDialogConfig","defaultOptions","errorMessages","explanation","onDoneCallback","defaultText","EditDialogProvider","setDialogConfig","UseEditDialogContext","selectedTags","setSelectedTags","availableCategories","setAvailableCategories","availableTags","setAvailableTags","tagName","newTag","tagId","1","2","categoryName","newCat","categoryId","initialScheduleData","openDay","closeDay","openTime","closeTime","marginRight","ReviewCard","review","CardContent","Avatar","alt","photoUrl","surname","Rating","rating","readOnly","upvotes","timeAdded","reviewsInfo","reviews","overflowX","setReviews","filterBy","setFilterBy","getReviewsForPlace","debounceScroll","debounce","round","scrollWidth","scrollLeft","clientWidth","totalReviews","handleScrollDebounced","handleClose","overallStarRating","precision","RadioGroup","Radio","onScroll","persist","handleScroll","AppBarTitleContext","setTitle","AppBarTitleProvider","UseAppBarTitleContext","flexFlow","picker","intervalRightSide","intervalLeftSide","intervals","setIntervals","currentInterval","lastAccommodation","lastAccommodationEnabled","setLastAccommodationEnabled","lastAccommodationTime","setLastAccommodationTime","getCloseDay","currentPeriod","isBefore","oldIntervals","useTheme","largeScreen","useMediaQuery","only","TimePicker","ampm","InputProps","disableUnderline","state","scheduleData","setScheduleData","globalTime","periods","ignoreOpenTime","ignoreCloseTime","ignoreGlobalTime","setIgnoreGlobalTime","Divider","pickerStyle","headerLeft","globalTimeEditLayout","globalTimeEditLeft","globalTimePicker","setPeriods","setGlobalTime","handleIntervalChange","newIntervals","oldPeriods","filtered","oldData","schedule","scheduleDefault","DatePicker","views","from","to","generateWeekdayViews","isScheduleEnabled","setIsScheduleEnabled","float","paperContent","loader","bottom","match","website","phoneNumber","hasSchedule","isPublic","isVerified","source","price","parkingMarkerData","setParkingMarkerData","sources","setSources","setPlaceId","firstTimeLoading","setFirstTimeLoading","checkErrors","ColorButton","getContrastText","green","formFeedback","saveChanges","formPlaceInfo","plc","updateAll","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","updateSources","er","tags","responses","CircularProgress","obj","CategoriesDisplay","SubheaderDisplay","media","expand","transform","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","renderActionArea","CardHeader","subheader","substring","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debouncedInput","InputBase","orientation","topBar","zIndex","searchBox","placeApiCard","isLoadingData","setIsLoadingData","word","query","encodeURI","elementType","isFitWidth","disableImagesLoaded","updateOnEachImageLoad","boxSizing","Copyright","getFullYear","minHeight","footer","cardRoot","details","cover","addParkingWrapper","elementData","addTransportCallback","displayNoTransportWarning","transportTypes","transportSelectWrapper","transportSelect","transportId","transportChangeCallback","transportRemoveCallback","currentTransport","setCurrentTransport","NativeSelect","transport","TourPlaceSortable","removePlaceCallback","tourPlaceComponent","TransportItemSortable","currentDay","removeElementCallback","tourInfo","shouldDisplayNoTransportWarning","elements","days","tour","ElementType","elementIdentifier","tourInfoReducer","errorInfo","setErrorInfo","day","shortid","generate","searchInputComponent","placeCard","addPlaceCallback","apiPlacesFound","setApiPlacesFound","localPlacesFound","setLocalPlacesFound","apiPlacesLoading","setApiPlacesLoading","localPlacesLoading","setLocalPlacesLoading","placeType","genProps","mappedPlaces","forEach","generatePlaceCards","radioButtonArea","cardArea","descriptionInput","headerWrap","onSelectCallback","handleRemoveDay","updateDescriptionGlobally","DayCardSortable","dayInfo","removeDayCallback","addDayButton","footerWrapper","setCurrentDay","removeDay","TourDataReducer","findIndex","splice","nameField","descriptionField","errors","titleMissing","shouldDisplayTitleMissingError","showErrors","helperText","MyMapComponent","suppressMarkers","directions","places","marker","info","infoWindows","setInfoWindows","setDirection","setPlaces","markersInfo","constructPlaceData","waypoints","stopover","shift","destination","pop","DirectionsService","route","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","sampleTourData","overflowY","leftLayout","actionsArea","tourId","setTourId","useReducer","dispatchTourInfo","handleAddPlaceClick","loadData","aggregatedDays","aggregatedElements","aggregatedPlace","fk_transportId","aggregatedDay","aggregatedTour","handleSave","containsErrors","keys","keyIndex","element","j","useMemo","tourDaysComponents","getAllTours","fq","join","categoriesHeadCells","tagsHeadCells","buttonWrapper","setTags","includes","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","Appbar","setOpen","useLocation","handleDrawerClose","handleListItemClick","RegExp","pathname","go","CssBaseline","AppBar","edge","Drawer","List","ListItem","Link","ListItemText","exact","Home","Tours","AddPlace","ApiPlaces","Resources","Redirect","App","Component","AuthContext","AuthProvider","setCurrentUser","onAuthStateChanged","user","idToken","form","submit","loaderMain","AuthenticatedRoute","rest","Route","render","routeProps","SnackbarFeedback","Snackbar","autoHideDuration","AlertDialogFeedback","remove","DialogContentText","TextInputDialog","inputText","setInputText","deInit","onInput","errorCode","ReactDOM","email","setEmail","password","setPassword","handleLogin","signInWithEmailAndPassword","Container","maxWidth","mt","gutterBottom","getElementById"],"mappings":"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","file":"static/js/main.f412c483.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/selectedParking.102bdd14.svg\";","module.exports = __webpack_public_path__ + \"static/media/availableParking.6ac3f9ec.svg\";","import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n});\r\n\r\nexport default app;","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport app from \"../helpers/firebaseInit\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Home = props => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport useDebounce from \"../helpers/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, checkable} = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n\r\n                {checkable ? <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell> : null}\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right'  : 'left' }\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    headCells: PropTypes.object.isRequired,\r\n    checkable: PropTypes.bool.isRequired\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected, title, changePageCallback, keyword, setKeyword, customToolbarElements} = props;\r\n\r\n\r\n    const debouncedSearch = useDebounce(keyword, 300);\r\n\r\n\r\n    useEffect( () => {\r\n            changePageCallback(1,keyword)\r\n        },\r\n        [debouncedSearch]\r\n    );\r\n\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n            )}\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"delete\">\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : <div style={{display: \"flex\", alignItems: \"center\"}}>\r\n                <TextField id=\"standard-basic\" label=\"Search\" onChange={ event =>{setKeyword(event.target.value)}}/>\r\n                {!!customToolbarElements ? customToolbarElements : null}\r\n            </div>}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    centerCell: {\r\n        textAlign: \"center\",\r\n        width: '100%'\r\n    },\r\n    rowNotPublished:{\r\n        backgroundColor: \"#ffcdd2\"\r\n    },\r\n    rowNotVerified:{\r\n        backgroundColor: \"#fff9c4\"\r\n    },\r\n    rowBasic: {\r\n        backgroundColor: \"#FFFFFF\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function TableComponent({title, searchFunction, headCells, pagingInfo, data, checkable, changePageCallback, updateCallback, removeCallback, id, isLoading, customToolbarElements}) {\r\n\r\n    TableComponent.propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        headCells: PropTypes.object.isRequired,\r\n        pagingInfo: PropTypes.object,\r\n        data: PropTypes.object.isRequired,\r\n        checkable: PropTypes.bool.isRequired,\r\n        changePageCallback: PropTypes.func,\r\n        updateCallback: PropTypes.func,\r\n        removeCallback: PropTypes.func,\r\n        id: PropTypes.string.isRequired,\r\n        isLoading: PropTypes.bool,\r\n        customToolbarElements: PropTypes.object\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = data.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleCheckboxChange = (event, name) =>{\r\n\r\n            const selectedIndex = selected.indexOf(name);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(selected, name);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(selected.slice(1));\r\n            } else if (selectedIndex === selected.length - 1) {\r\n                newSelected = newSelected.concat(selected.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    selected.slice(0, selectedIndex),\r\n                    selected.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelected(newSelected);\r\n\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n\r\n    };\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n        console.log(\"handleChangeRowsPerPage\")\r\n\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                {isLoading ? <LinearProgress/> : null }\r\n                <EnhancedTableToolbar\r\n                    title={title}\r\n                    numSelected={selected.length}\r\n                    changePageCallback={changePageCallback}\r\n                    keyword={keyword}\r\n                    setKeyword={setKeyword}\r\n                    customToolbarElements={customToolbarElements}\r\n                />\r\n                 <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={data.length}\r\n                            headCells={headCells}\r\n                            checkable={checkable}\r\n                        />\r\n\r\n\r\n                        <TableBody>\r\n                            {stableSort(data, getComparator(order, orderBy))\r\n                                .filter(item => searchFunction === undefined ? true : searchFunction(keyword, item))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n\r\n                                    const isItemSelected = isSelected(row.name);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    const rowStyle = row['isVerified'] !== undefined  && row['isVerified'] === false ? classes.rowNotVerified :\r\n                                        row['isPublic'] !== undefined && row['isPublic'] === false ? classes.rowNotPublished :  classes.rowBasic;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            className={rowStyle}\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row.name)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row[id]}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            {checkable ? <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    onChange={(event)=>handleCheckboxChange(event, row.name)}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell> : null}\r\n\r\n                                            {headCells.map(header=>{\r\n                                                if(header.isId){\r\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\r\n                                                            {row[header.id]}\r\n                                                        </TableCell>\r\n                                                }else if(header.id === 'actions' ){\r\n                                                        return <TableCell >\r\n                                                            <div>\r\n                                                                <IconButton onClick={()=>updateCallback(row[id])} size=\"small\" aria-label=\"edit\" >\r\n                                                                    <EditIcon fontSize=\"small\" />\r\n                                                                </IconButton>\r\n\r\n                                                                <IconButton size=\"small\" aria-label=\"delete\" >\r\n                                                                    <DeleteIcon onClick={()=>removeCallback(row[id])} fontSize=\"small\" />\r\n                                                                </IconButton>\r\n                                                            </div>\r\n                                                            </TableCell>\r\n                                                }else{\r\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\r\n                                                }\r\n\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows}}>\r\n\r\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\r\n                                        <TableCell colSpan={6} className={classes.centerCell}>\r\n                                            <Typography variant=\"h6\" noWrap>\r\n                                                No results\r\n                                            </Typography>\r\n                                        </TableCell>}\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10]}\r\n                    component=\"div\"\r\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\r\nexport default function useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(\r\n        () => {\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n\r\n        [value]\r\n    );\r\n\r\n    return debouncedValue;\r\n}","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import Cookies from 'js-cookie'\r\n\r\nexport const getAccessToken = () => Cookies.get('access_token');\r\nexport const isAuthenticated = () => !!getAccessToken();","import React from \"react\";\r\nimport axios from \"axios\"\r\nimport history from \"../helpers/history\";\r\nimport {getAccessToken} from \"../helpers/tokens\";\r\nimport Cookies from \"js-cookie\";\r\nimport app from \"../helpers/firebaseInit\";\r\n\r\nconst request = async function (options, contentType) {\r\n\r\n    const client = axios.create({\r\n        baseURL: false ? \"http://localhost:8080/\" : \"https://www.traveldirection.ax.lt:8080/\",\r\n        headers: {\r\n            'Content-Type': (contentType == null) ? 'application/json' : contentType,\r\n            'Accept': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            \"Authorization\": getAccessToken()\r\n        },\r\n    });\r\n\r\n\r\n    // Add a response interceptor\r\n    client.interceptors.response.use(function (response) {\r\n        return response;\r\n    }, function (error) {\r\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n        // Do something with response error\r\n        const originalRequest = error.config;\r\n        const status = error.response.status;\r\n        if (!!app.auth().currentUser  &&\r\n            (status === 401 || status === 403) &&\r\n            originalRequest._retry === undefined\r\n        ) {\r\n            //console.log(\"Users token has expired!\");\r\n            return app.auth().currentUser.getIdToken(true).then(token => {\r\n                //console.log(\"Retrieving new token and making the same request!\");\r\n                originalRequest._retry = true;\r\n                originalRequest.headers.Authorization = token;\r\n                Cookies.set(\"access_token\", token);\r\n                return axios(originalRequest)\r\n            });\r\n        }\r\n        return Promise.reject(error);\r\n    });\r\n\r\n    const onSuccess = function (response) {\r\n        console.log('Request Successful!', response);\r\n        return response.data;\r\n    };\r\n\r\n    const onError = function (error) {\r\n        console.debug('Request Failed:', error.config);\r\n        if (error.response) {\r\n            console.debug('Status:', error.response.status);\r\n            if (error.response.status === 403) {\r\n                history.push(\"/login\")\r\n            }\r\n            console.debug('Data:', error.response.data);\r\n            console.debug('Headers:', error.response.headers);\r\n        } else {\r\n            console.debug('Error Message:', error.message);\r\n        }\r\n        return Promise.reject(error.response || error.message);\r\n    };\r\n\r\n    return client(options)\r\n        .then(onSuccess)\r\n        .catch(onError);\r\n};\r\n\r\nconst getRequest = function (path, urlData = \"\") {\r\n    return request({\r\n        url: path + urlData,\r\n        method: 'GET'\r\n    });\r\n};\r\n\r\nconst postRequest = function (path, data, urlData = \"\") {\r\n    return request({\r\n        url: path + urlData,\r\n        method: 'POST',\r\n        data: data\r\n    });\r\n};\r\n\r\nconst postMultipartRequest = function (path, formData) {\r\n    return request({\r\n        url: path,\r\n        method: 'POST',\r\n        data: formData\r\n    }, 'multipart/form-data' /*'application/x-www-form-urlencoded'*/);\r\n};\r\n\r\nconst RequestType = {\r\n    getRequest, postRequest, postMultipartRequest\r\n};\r\n\r\nexport default RequestType\r\n\r\n\r\n","import RequestType from '../Networking/NetworkLayerCentral'\r\n\r\n//Places\r\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\r\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\r\n\r\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\r\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\r\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\r\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\r\nconst removePlace = (urlParams) => RequestType.getRequest(\"api/v1/place/delete\", urlParams);\r\n\r\nconst getAllCities = () =>RequestType.getRequest(\"api/v1/place/city/all\");\r\nconst getAllCounties = () =>RequestType.getRequest(\"api/v1/place/county/all\");\r\nconst getAllCountries = () =>RequestType.getRequest(\"api/v1/place/country/all\");\r\nconst getAllMunicipalities = () =>RequestType.getRequest(\"api/v1/place/municipality/all\");\r\n\r\nconst Places = {getAllCities,getAllCounties, getAllCountries, getAllMunicipalities, getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces, removePlace};\r\n\r\n//Tags\r\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\r\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\r\nconst removeTags = (params) => RequestType.postRequest(\"api/v1/tags/delete\", params);\r\nconst updateTags = (params) => RequestType.postRequest(\"api/v1/tags/update\", params);\r\nconst Tags = {getAllTags, addTag, removeTags, updateTags};\r\n\r\n//Category\r\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\r\nconst removeCategory = (params) => RequestType.postRequest(\"api/v1/categories/delete\", params);\r\nconst updateCategory = (params) => RequestType.postRequest(\"api/v1/categories/update\", params);\r\nconst getAllCategories = () => RequestType.getRequest(\"api/v1/categories/all\");\r\nconst Categories = {addCategory, getAllCategories, removeCategory, updateCategory};\r\n\r\n//Photo\r\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\r\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\r\nconst Photos = {addPhoto, uploadPhoto};\r\n\r\n\r\n//Parking\r\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\r\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\r\nconst Parking = {getParkingByLocation, insertNewParking};\r\n\r\n\r\n//TagsPlace\r\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\r\nconst TagsPlace = {updateTagsForPlace};\r\n\r\n//CategoriesPlace\r\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\r\nconst CategoriesPlace = {updateCategoriesForPlace};\r\n\r\n//PhotoPlace\r\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\r\nconst ParkingPlace = {updateParkingForPlace};\r\n\r\n//PhotoPlace\r\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\r\nconst PhotoPlace = {updatePhotoForPlace};\r\n\r\n//Schedule\r\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\r\nconst Schedule = {updateScheduleForPlace};\r\n\r\n//ReviewsPlace\r\nconst getPlaceReviews = (urlParams) => RequestType.getRequest(\"api/v1/reviews/all\", urlParams);\r\nconst Reviews = {getPlaceReviews};\r\n\r\n//Sources\r\nconst getSources = () => RequestType.getRequest(\"api/v1/source/all\");\r\nconst addSource = (data) => RequestType.postRequest(\"api/v1/source/insert\",data);\r\nconst Source = {getSources, addSource};\r\n\r\n//SourcePlace\r\nconst updateSourcesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/sourceplace/update\", data, urlParams);\r\nconst SourcePlace = {updateSourcesForPlace};\r\n\r\n//Tours\r\nconst insertTour = (data) => RequestType.postRequest(\"api/v1/tour/insert\",data)\r\nconst updateTour = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/update\",data, urlParams)\r\nconst getTour = (urlParams) => RequestType.getRequest(\"api/v1/tour\",urlParams)\r\nconst removeTour = (urlParams) => RequestType.getRequest(\"api/v1/tour/delete\", urlParams);\r\nconst getAllToursAdmin = (urlParams) => RequestType.getRequest(\"api/v1/tour/searchadmin\", urlParams);\r\nconst Tour = {insertTour, getTour, updateTour, getAllToursAdmin, removeTour}\r\n\r\nconst API = {Tour, SourcePlace, Source,Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule, Reviews};\r\n\r\nexport default API\r\n\r\n","// src/common/providers/APIErrorProvider/index.js\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nexport const AlertDialogContext = React.createContext({\r\n    alertConfig: null,\r\n    addAlertConfig: () => {},\r\n    removeAlertConfig: () => {}\r\n});\r\n\r\nexport default function AlertDialogProvider({ children }) {\r\n    const [alertConfig, setAlertConfig] = useState(null);\r\n    const contextValue = {\r\n        alertConfig,\r\n        addAlertConfig: (title, message, actions, onClose = undefined) => setAlertConfig({ title, message, actions, onClose}),\r\n        removeAlertConfig: () => setAlertConfig(null)\r\n    };\r\n\r\n    return (\r\n        <AlertDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </AlertDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AlertDialogContext} from \"./AlertDialogContext\";\r\n\r\nexport default function UseAlertDialogContext() {\r\n    const { alertConfig, addAlertConfig, removeAlertConfig } = useContext(AlertDialogContext);\r\n    return { alertConfig, addAlertConfig, removeAlertConfig };\r\n}\r\n","const Strings = {\r\n    DIALOG_PLACE_PUBLISH_TITLE : 'Place publicity',\r\n    DIALOG_PLACE_PUBLISH_MESSAGE: \"This place will be visible for all users. Are you sure?\",\r\n    DIALOG_PLACE_UNPUBLISH_MESSAGE :\"This place will not be visible anymore. Are you sure?\",\r\n\r\n    DIALOG_PLACE_INSERT_TITLE: \"Insert place\",\r\n    DIALOG_PLACE_INSERT: \"Are you sure you want to insert this place?\",\r\n\r\n    DIALOG_PLACE_UPDATE_TITLE: \"Update place\",\r\n    DIALOG_PLACE_UPDATE: \"Are you sure you want to make changes to this place?\",\r\n\r\n    DIALOG_PLACE_VERIFY_TITLE: \"Place verification\",\r\n    DIALOG_PLACE_VERIFY_MESSAGE: \"This is a user's suggested place. Are you sure you want to verify this place and make it visible to others?\",\r\n\r\n    DIALOG_PLACE_DELETE_TITLE: \"Delete place\",\r\n    DIALOG_PLACE_DELETE_MESSAGE: \"This action will remove this place permanently. Are you sure you want to proceed?\",\r\n\r\n    DIALOG_TOUR_DELETE_TITLE: \"Delete tour\",\r\n    DIALOG_TOUR_DELETE_MESSAGE: \"This action will remove this tour permanently. Are you sure you want to proceed?\",\r\n\r\n    SNACKBAR_PLACE_INSERTED_SUCCESS: \"Place inserted successfully\",\r\n    SNACKBAR_PLACE_REMOVE_SUCCESS: \"Place was removed successfully\",\r\n\r\n    SNACKBAR_TOUR_INSERTED_SUCCESS: \"Tour inserted successfully\",\r\n    SNACKBAR_TOUR_REMOVE_SUCCESS: \"Tour was removed successfully\",\r\n\r\n    SNACKBAR_ERROR: \"Something went wrong!\",\r\n    SNACKBAR_CHANGES_SAVED: \"All changes saved!\"\r\n};\r\n\r\nexport default Strings;","import React, { useState, useCallback } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nexport const SnackbarContext = React.createContext({\r\n    config: null,\r\n    addConfig: () => {},\r\n    removeConfig: () => {}\r\n});\r\n\r\n\r\nexport default function SnackbarProvider({ children }) {\r\n    const [config, setConfig] = useState(null);\r\n\r\n    const removeConfig = () => setConfig(null);\r\n    const addConfig = (success, message) => setConfig({ success, message });\r\n\r\n    const contextValue = {\r\n        config,\r\n        addConfig: (success, message) => addConfig(success, message),\r\n        removeConfig: () => removeConfig()\r\n    };\r\n\r\n    return (\r\n        <SnackbarContext.Provider value={contextValue}>\r\n            {children}\r\n        </SnackbarContext.Provider>\r\n    );\r\n}","import { useContext } from 'react';\r\nimport {SnackbarContext} from \"./SnackbarContext\";\r\n\r\nexport default function UseSnackbarContext() {\r\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\r\n    return { config, addConfig, removeConfig };\r\n}\r\n","\r\nimport React, {useEffect, useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    autoComplete: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(1),\r\n        margin: 0,\r\n    },\r\n    autoCompleteChipContainer: {\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction AutoCompleteChip(props){\r\n\r\n    const {options, setOptions, selectedOptions, setSelectedOptions, classes, label, id} = props;\r\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\r\n    const [firstLoad, setFirstLoad] = useState(true);\r\n\r\n    function handleDelete(data) {\r\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\r\n        setOptions(\r\n            [\r\n                ...options,\r\n                data\r\n            ]\r\n        )\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(firstLoad && options.length>0){\r\n            let data = [];\r\n            options.map(row=>{\r\n                let found = false;\r\n                selectedOptions.map(row1=>{\r\n                    if(JSON.stringify(row) === JSON.stringify(row1)){\r\n                        found = true\r\n                    }\r\n                });\r\n                if(!found){\r\n                   data.push(row)\r\n                }\r\n            });\r\n            setOptions(data);\r\n            setFirstLoad(false)\r\n        }\r\n    },[options]);\r\n\r\n    function handleInput(event, value){\r\n        setCurrentVal({\"name\": \"\"});\r\n        setSelectedOptions(\r\n            [\r\n                ...selectedOptions,\r\n                value\r\n            ]\r\n        );\r\n        setOptions(options.filter(item => item !== value))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Box  className={classes.autoCompleteChipContainer}>\r\n                {selectedOptions.length !== 0 &&\r\n                <Box component=\"ul\" className={classes.root}>\r\n                    {\r\n                        selectedOptions.map(option => {\r\n                            return id !== undefined ?\r\n                                <li key={option[id]}>\r\n                                    <Chip\r\n                                        variant=\"outlined\"\r\n                                        label={option.name}\r\n                                        onDelete={() => handleDelete(option)}\r\n                                        className={classes.chip}\r\n                                    />\r\n                                </li>\r\n                                :\r\n                                <li key={option}>\r\n                                        <Chip\r\n                                            variant=\"outlined\"\r\n                                            label={option}\r\n                                            onDelete={() => handleDelete(option)}\r\n                                            className={classes.chip}\r\n                                        />\r\n                                </li>\r\n                                }\r\n\r\n                            )\r\n                    }\r\n                </Box>\r\n                }\r\n\r\n                <Autocomplete\r\n                    className={classes.autoComplete}\r\n                    value={getCurrentVal}\r\n                    options={options}\r\n                    onChange={handleInput}\r\n                    disableClearable\r\n                    getOptionLabel={(option) =>  id!==undefined ? option.name : option}\r\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\r\n                />\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nAutoCompleteChip.propTypes = {\r\n    setSelectedOptions: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    setOptions: PropTypes.func.isRequired,\r\n    selectedOptions: PropTypes.array.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    label: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AutoCompleteChip)","import React, {useEffect, useState} from \"react\";\r\nimport API from \"../Networking/API\";\r\nimport * as moment from \"moment\";\r\nimport {func} from \"prop-types\";\r\nexport const PlacesFilterContext = React.createContext();\r\nvar buildUrl = require('build-url');\r\n\r\n\r\nconst initialDates = {\r\n    insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n    insertionEnd: moment(new Date()).format(),\r\n    modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n    modificationEnd: moment(new Date()).format()\r\n}\r\n\r\nexport const PlacesFilterProvider = ({children}) => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    const [cities, setCities] = useState([]);\r\n    const [selectedCities, setSelectedCities] = useState([]);\r\n\r\n    const [countries, setCountries] = useState([]);\r\n    const [selectedCountries, setSelectedCountries] = useState([]);\r\n\r\n    const [municipalities, setMunicipalities] = useState([]);\r\n    const [selectedMunicipalities, setSelectedMunicipalities] = useState([]);\r\n\r\n    const [counties, setCounties] = useState([]);\r\n    const [selectedCounties, setSelectedCounties] = useState([]);\r\n\r\n    const [initialLoading, setInitialLoading] = useState(true);\r\n    const [resetFilterOptions, setResetFilterOptions] = useState(false);\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [dates, setDates] = useState(initialDates);\r\n\r\n    const [filterQuery, setFilterQuery] = useState( buildUrl(null, {\r\n        queryParams: {\r\n            di: [dates.insertionStart, dates.insertionEnd],\r\n            dm: [dates.modificationStart, dates.modificationEnd],\r\n            filterOptions: parseFilterOptions(),\r\n            categories: parseCategories(),\r\n            countries: selectedCountries,\r\n            cities: selectedCities\r\n        }\r\n    }));\r\n\r\n\r\n    const getCategories = () => {\r\n        API.Categories.getAllCategories().then(response=>{\r\n            setCategories(response);\r\n            console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        });\r\n    };\r\n\r\n    const getAllCities = () =>{\r\n        API.Places.getAllCities().then(res=>{\r\n            setCities(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllCounties = () =>{\r\n        API.Places.getAllCounties().then(res=>{\r\n            setCounties(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllCountries = () =>{\r\n        API.Places.getAllCountries().then(res=>{\r\n            setCountries(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllMunicipalities = () =>{\r\n        API.Places.getAllMunicipalities().then(res=>{\r\n            setMunicipalities(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Fetching...\");\r\n        Promise.all([\r\n            getCategories(),\r\n            getAllCities(),\r\n            getAllCountries(),\r\n            getAllCounties(),\r\n            getAllMunicipalities()\r\n        ]).then(response => {\r\n            setInitialLoading(false);\r\n            console.log(\"All data received!\")\r\n        }).catch(err => {\r\n        })\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            if(!resetFilterOptions){\r\n                setFilterQuery(buildUrl(null, {\r\n                    queryParams: {\r\n                        di: [dates.insertionStart, dates.insertionEnd],\r\n                        dm: [dates.modificationStart, dates.modificationEnd],\r\n                        o: parseFilterOptions(),\r\n                        c: parseCategories(),\r\n                        countries: selectedCountries,\r\n                        cities: selectedCities\r\n                    }\r\n                }))\r\n            }else{\r\n                console.log(\"Clearing filters\");\r\n                if(areFiltersCleared()){\r\n                    console.log(\"All filters cleared\");\r\n                    setResetFilterOptions(false)\r\n                }\r\n            }\r\n        }\r\n    },[selectedCategories, selectedCities,selectedCountries,dates,filterOptions,resetFilterOptions]);\r\n\r\n    function areFiltersCleared() {\r\n        let filterOptionsCleared = true;\r\n        filterOptions.map(row=>{\r\n            if(row.filter){\r\n                filterOptionsCleared = false\r\n            }\r\n        });\r\n        return filterOptionsCleared &&\r\n            selectedCategories.length === 0 &&\r\n            selectedCities.length === 0 &&\r\n            selectedCountries.length ===0 &&\r\n            dates.insertionStart === initialDates.insertionStart &&\r\n            dates.modificationStart === initialDates.modificationStart\r\n    }\r\n\r\n    function parseCategories(){\r\n        let cats = [];\r\n        selectedCategories.map(row=>{\r\n            cats.push(row.name)\r\n        });\r\n        return cats\r\n    }\r\n\r\n    function parseFilterOptions(){\r\n        let options = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filter === true)\r\n                options.push(row.filterName)\r\n        });\r\n        return options\r\n    }\r\n\r\n    const contextValue = {\r\n        filterQuery,\r\n        setResetFilterOptions,\r\n\r\n        dates,\r\n        setDates,\r\n\r\n        filterOptions,\r\n        setFilterOptions,\r\n\r\n        categories,\r\n        setCategories,\r\n        selectedCategories,\r\n        setSelectedCategories,\r\n\r\n        counties,\r\n        setCounties,\r\n        selectedCounties,\r\n        setSelectedCounties,\r\n\r\n        cities,\r\n        setCities,\r\n        selectedCities,\r\n        setSelectedCities,\r\n\r\n        countries,\r\n        setCountries,\r\n        selectedCountries,\r\n        setSelectedCountries,\r\n\r\n        municipalities,\r\n        setMunicipalities,\r\n        selectedMunicipalities,\r\n        setSelectedMunicipalities\r\n    };\r\n\r\n    return (\r\n        <PlacesFilterContext.Provider value={contextValue}>\r\n            {children}\r\n        </PlacesFilterContext.Provider>\r\n    );\r\n};","import React, {useContext, useEffect, useState} from \"react\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport moment from \"moment\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport MuiPickersUtilsProvider from \"@material-ui/pickers/MuiPickersUtilsProvider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\r\n\r\nconst style = theme =>({\r\n    filterDiv: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    sortingButtons: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(2),\r\n        height: \"100%\"\r\n\r\n    },\r\n    rightLayout: {\r\n        boxShadow: \"0 0 1px 0 #666\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(2)\r\n    },\r\n    datesLayout:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    }\r\n});\r\n\r\n\r\n\r\nfunction FilterBlock({classes}) {\r\n    const {\r\n        categories, setCategories, selectedCategories, setSelectedCategories,\r\n        cities, setCities, selectedCities, setSelectedCities,\r\n        countries, setCountries, selectedCountries, setSelectedCountries,\r\n        filterOptions, setFilterOptions, setResetFilterOptions,\r\n        dates, setDates} = useContext(PlacesFilterContext);\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let generalOptions = Object.assign([], filterOptions);\r\n        generalOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n        });\r\n        setFilterOptions(generalOptions)\r\n    };\r\n\r\n    function filterDateChange(date, id) {\r\n        let cDate = Object.assign( {}, dates);\r\n        cDate[id] = moment(date).format('YYYY-MM-DD');\r\n        setDates(cDate)\r\n    }\r\n\r\n    function clearFilters() {\r\n        setResetFilterOptions(true);\r\n\r\n        setSelectedCities([]);\r\n        setSelectedCountries([]);\r\n        setSelectedCategories([]);\r\n\r\n        let filters = Object.assign(filterOptions, []);\r\n        filters.map(row=>{\r\n            row.filter = false\r\n        });\r\n        setFilterOptions(filters);\r\n\r\n        setDates({\r\n            insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n            insertionEnd: moment(new Date()).format(),\r\n            modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n            modificationEnd: moment(new Date()).format()\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return <div className={classes.filterDiv}>\r\n        <div className={classes.sortingButtons}>\r\n            {filterOptions.map(row=>{\r\n                return <FormControlLabel\r\n                    control={<Checkbox\r\n                        checked={row.filter}\r\n                        onChange={()=>filterOptionsChanged(row.filterName)}\r\n                        name={row.filterName} />}\r\n                    label={row.filterLabel}\r\n                />\r\n            })}\r\n        </div>\r\n        <div className={classes.rightLayout}>\r\n            <Typography variant=\"h6\">\r\n                Filter by dates\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n                Insertion dates between\r\n            </Typography>\r\n            <Grid container justify=\"space-around\">\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"MM-dd-yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"insertionStart\"\r\n                    onChange={(date)=>filterDateChange(date,\"insertionStart\")}\r\n                    value={dates.insertionStart}\r\n                    label=\"Date start\"\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                />\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"MM-dd-yyyy\"\r\n                    margin=\"normal\"\r\n                    value={dates.insertionEnd}\r\n                    onChange={(date)=>filterDateChange(date,\"insertionEnd\")}\r\n                    id=\"insertionEnd\"\r\n                    label=\"Date end\"\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <br/>\r\n            <br/>\r\n            <Typography variant=\"subtitle1\">\r\n                Modification dates between\r\n            </Typography>\r\n            <Grid container justify=\"space-around\">\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"MM-dd-yyyy\"\r\n                    margin=\"normal\"\r\n                    value={dates.modificationStart}\r\n                    onChange={(date)=>filterDateChange(date,\"modificationStart\")}\r\n                    id=\"modificationStart\"\r\n                    label=\"Date start\"\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                />\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"MM-dd-yyyy\"\r\n                    margin=\"normal\"\r\n                    value={dates.modificationEnd}\r\n                    onChange={(date)=>filterDateChange(date,\"modificationEnd\")}\r\n                    id=\"modificationEnd\"\r\n                    label=\"Date end\"\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                />\r\n            </Grid>\r\n            <br/>\r\n            <Typography variant=\"h6\">\r\n                Filter by categories\r\n            </Typography>\r\n            <AutocompleteChip label=\"Select categories\"\r\n                              id=\"categoryId\"\r\n                              options={categories}\r\n                              setOptions={setCategories}\r\n                              selectedOptions={selectedCategories}\r\n                              setSelectedOptions={setSelectedCategories}/>\r\n\r\n                              <br/>\r\n                              <br/>\r\n            <Typography variant=\"h6\">\r\n                Filter by countries\r\n            </Typography>\r\n            <AutocompleteChip label=\"Select countries\"\r\n                              options={countries}\r\n                              setOptions={setCountries}\r\n                              selectedOptions={selectedCountries}\r\n                              setSelectedOptions={setSelectedCountries}/>\r\n            <br/>\r\n            <br/>\r\n\r\n            <Typography variant=\"h6\">\r\n                Filter by cities\r\n            </Typography>\r\n            <AutocompleteChip label=\"Select cities\"\r\n                              options={cities}\r\n                              setOptions={setCities}\r\n                              selectedOptions={selectedCities}\r\n                              setSelectedOptions={setSelectedCities}/>\r\n            <br/>\r\n            <br/>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => clearFilters()}>\r\n                Clear filters\r\n            </Button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default withStyles(style)(FilterBlock)","import React, {useContext, useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport FilterBlock from \"../components/add_place_components/FilterBlock\";\r\nimport * as moment from \"moment\";\r\nimport {PlacesFilterContext} from \"../contexts/PlacesFilterContext\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    root:{\r\n        height:\"100vh\",\r\n        width:\"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content:{\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    autocomplete:{\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline:\"0\",\r\n        marginBottom: \"4px\"\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\r\n    { id: 'address', numeric: false, disablePadding: false, label: 'Address',isId: false},\r\n    { id: 'city', numeric: false, disablePadding: false, label: 'City',isId: false },\r\n    { id: 'country', numeric: false, disablePadding: false, label: 'Country',isId: false },\r\n    { id: 'dateModified', numeric: false, disablePadding: false, label: 'Date modified',isId: false },\r\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\r\n];\r\n\r\nfunction Places(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { classes } = props;\r\n\r\n\r\n    const { filterQuery } = useContext(PlacesFilterContext);\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    useEffect(()=>{\r\n        setIsLoading(true);\r\n        requestAllPlaces();\r\n    },[filterQuery]);\r\n\r\n    function getPlaceNameById(id){\r\n        for(var i = 0; i<data.length; i++){\r\n            if(data[i].placeId === id)\r\n                return data[i].name\r\n        }\r\n    }\r\n\r\n    function requestAllPlaces(p=1,keyword=\"\"){\r\n        console.log(filterQuery + \"&p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword);\r\n        getAllPlaces(filterQuery+\"&p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword);\r\n    }\r\n\r\n    function parseData(data){\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        console.log(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updatePlaceCallback(id){\r\n        history.push(\"/app/addplace/\"+id)\r\n    }\r\n    function removePlaceCallback(id){\r\n        console.log(\"Name\",getPlaceNameById(id));\r\n        setIsLoading(true);\r\n        addAlertConfig(Strings.DIALOG_PLACE_DELETE_TITLE +\" - \" + getPlaceNameById(id), Strings.DIALOG_PLACE_DELETE_MESSAGE, [{\r\n            name: \"Remove\",\r\n            action: () =>{\r\n                    API.Places.removePlace(\"?p=\"+id).then(response=>{\r\n                        let tmp = [];\r\n                        data.map(row=>{\r\n                            if(row.placeId !== id){\r\n                                tmp.push(row)\r\n                            }\r\n                        });\r\n                        setData(tmp);\r\n                        addConfig(true, Strings.SNACKBAR_PLACE_REMOVE_SUCCESS)\r\n                        setIsLoading(false)\r\n                    }).catch(error=>{\r\n                        setIsLoading(false);\r\n                        addConfig(false, Strings.SNACKBAR_ERROR)\r\n                    })\r\n            }\r\n        }], ()=>{setIsLoading(false)})\r\n    }\r\n\r\n    const changePageCallback = (p=0, keyword=\"\") => {\r\n        setIsLoading(true);\r\n        requestAllPlaces(p, keyword)\r\n    };\r\n\r\n    //Sorting stuff\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n\r\n    const customToolbarElements = () =>{\r\n        return <div>\r\n            <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                    <FilterListIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={()=>{setAnchorEl(null)}}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <FilterBlock/>\r\n\r\n            </Popover>\r\n        </div>\r\n    };\r\n    /*------------------------------------------------------------------------------------------------------*/\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content} >\r\n                <TableComponent\r\n                    title={\"Places\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updatePlaceCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    id={\"placeId\"}\r\n                    isLoading={isLoading}\r\n                    customToolbarElements={customToolbarElements()}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={()=>{history.push(\"/app/addplace\")}}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon />}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n            <Button>\r\n                Clear filters\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    function getAllPlaces(urlParams=\"\") {\r\n        API.Places.getAllPlacesAdmin(urlParams).then(response=>{\r\n            setIsLoading(false);\r\n            parseData(response)\r\n        }).catch(error=>{\r\n            setIsLoading(false);\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nPlaces.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Places);","export const priceRange = [\r\n    {\r\n        value: 0,\r\n        label: \"FREE\",\r\n    },\r\n    {\r\n        value: 25,\r\n        label: \"$\",\r\n    },\r\n    {\r\n        value: 50,\r\n        label: \"$$\",\r\n    },\r\n    {\r\n        value: 75,\r\n        label: \"$$$\",\r\n    },\r\n    {\r\n        value: 100,\r\n        label: \"$$$$\",\r\n    },\r\n    {\r\n        value: 125,\r\n        label: \"$$$$$\",\r\n    }\r\n];\r\n","export const averageTimeSpent = [\r\n    {\r\n        value: 5,\r\n        label: 5,\r\n    },\r\n    {\r\n        value: 10,\r\n        label: 10,\r\n    },\r\n    {\r\n        value: 15,\r\n        label: 15,\r\n    },\r\n    {\r\n        value: 30,\r\n        label: 30,\r\n    },\r\n    {\r\n        value: 45,\r\n        label: 45,\r\n    },\r\n    {\r\n        value: 60,\r\n        label: 60,\r\n    },\r\n    {\r\n        value: 90,\r\n        label: 90,\r\n    },\r\n    {\r\n        value: 120,\r\n        label: 120,\r\n    },\r\n    {\r\n        value: 150,\r\n        label: 150,\r\n    },\r\n    {\r\n        value: 180,\r\n        label: 180,\r\n    },\r\n    {\r\n        value: 210,\r\n        label: 210,\r\n    },\r\n    {\r\n        value: 240,\r\n        label: 240,\r\n    },\r\n    {\r\n        value: 270,\r\n        label: 270,\r\n    },\r\n];","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    }\r\n});\r\n\r\nfunction AddSourceDialog(props){\r\n\r\n    function validateInput(){\r\n        let error = false;\r\n        if(text.length <= 3 || url.length <=3)\r\n            error = true;\r\n        setError(error);\r\n        return error\r\n    }\r\n\r\n    let {classes, open, action, setDialogOpen} = props;\r\n    const [text, setText] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    return(\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Insert source\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                        <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}\r\n                                   label=\"Source name\" variant=\"outlined\" fullWidth />\r\n                        <TextField style={{marginTop:\"16px\"}} error={error} onChange = {(ev) => {setUrl(ev.target.value)}}\r\n                                   label=\"Source url\" variant=\"outlined\" fullWidth />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={()=>setDialogOpen(false)} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text, url);\r\n                        setDialogOpen(false)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\nexport default withStyles(styles)(AddSourceDialog)","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {priceRange} from \"../../helpers/priceRange\";\r\nimport {averageTimeSpent} from \"../../helpers/averageTimeSpent\"\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport API from \"../../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddSourceDialog from \"../AddSourceDialog\";\r\n\r\n\r\nconst styles = theme => ({});\r\nlet previousPrice = \"\";\r\n\r\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo, selectedSources, setSelectedSources}) {\r\n\r\n    const updatePlaceInfo = (event, newValue) => {\r\n        const {name, value, id} = event.target;\r\n        let place = Object.assign({}, placeInfo, {});\r\n        if (id !== \"\") {\r\n            place[id] = valuetext(newValue[0]);\r\n        } else {\r\n            place[name] = value\r\n        }\r\n        console.log(\"Updated place\", place);\r\n        setPlaceInfo(place)\r\n    };\r\n\r\n    const getSources = () =>{\r\n        API.Source.getSources().then(response=>{\r\n            setAvailableSources(response)\r\n        }).catch(error=>{\r\n\r\n        })\r\n    };\r\n\r\n    const handleAddSource = (name, url) =>{\r\n        API.Source.addSource({name: name, url: url}).then(response=>{\r\n            setAvailableSources(\r\n                [\r\n                    ...availableSources,\r\n                    response\r\n                ]\r\n            );\r\n            setSelectedSources([\r\n                ...selectedSources,\r\n                response\r\n            ]);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getSources()\r\n    },[]);\r\n\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [availableSources, setAvailableSources] = useState([]);\r\n\r\n    function valuetext(value) {\r\n        let val = \"\";\r\n        priceRange.map(row => {\r\n            if (row.value === value)\r\n                val = row.label\r\n        });\r\n        return val\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\">\r\n            Basic place information\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Place name\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter the place name\"\r\n            fullWidth\r\n            value={placeInfo['name']}\r\n            name=\"name\"\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Place description\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Describe the place thoroughly\"\r\n            fullWidth\r\n            multiline\r\n            name=\"description\"\r\n            value={placeInfo['description']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            rows={4}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Phone number\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter phone number\"\r\n            fullWidth\r\n            name=\"phoneNumber\"\r\n            value={placeInfo['phoneNumber']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Website\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter website\"\r\n            fullWidth\r\n            name=\"website\"\r\n            value={placeInfo['website']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n       <AutoCompleteChip\r\n                id=\"source\"\r\n                label=\"Select sources\"\r\n                options={availableSources}\r\n                setOptions={setAvailableSources}\r\n                setSelectedOptions={setSelectedSources}\r\n                selectedOptions={selectedSources}\r\n       />\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={() => setDialogOpen(true)}\r\n            startIcon={<AddIcon />}>\r\n            Add missing source\r\n        </Button>\r\n        <AddSourceDialog\r\n            action={handleAddSource}\r\n            open={dialogOpen}\r\n            setDialogOpen={setDialogOpen}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Typography>\r\n                Price\r\n            </Typography>\r\n            <Slider\r\n                id=\"price\"\r\n                onChange={updatePlaceInfo}\r\n                value={priceRange.map(row => {\r\n                    if (row.label === placeInfo['price']) return row.value\r\n                })}\r\n                style={{width: \"60%\", marginLeft: \"48px\"}}\r\n                defaultValue={0}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider-always\"\r\n                step={25}\r\n                max={125}\r\n                marks={priceRange}\r\n            />\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Typography>\r\n                Average time spent\r\n            </Typography>\r\n            <FormControl variant=\"outlined\" style={{width: \"60%\", marginLeft: \"48px\"}}>\r\n                <InputLabel>Minutes</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={parseInt(placeInfo['averageTimeSpent'], 10)}\r\n                    onChange={updatePlaceInfo}\r\n                    label=\"Average Time spent\"\r\n                    inputProps={{\r\n                        name: 'averageTimeSpent'\r\n                    }}\r\n                >\r\n                    <option value=\"-1\">None</option>\r\n                    {\r\n                        averageTimeSpent.map(row=>{\r\n                            return <option value={parseInt(row.value, 10)}> {row.value}</option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport React, {useMemo, useState} from \"react\"\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Delete from \"@material-ui/icons/Delete\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst imgWithClick = {cursor: \"pointer\"};\r\n\r\nconst Photo = ({index, onItemDelete, photo, margin, direction, top, left}) => {\r\n\r\n    const styles = {\r\n        imgContainer: {\r\n            margin: margin,\r\n            display: 'inline',\r\n            position: 'relative',\r\n            width: '300px',\r\n            height: '300px',\r\n        }\r\n    }\r\n    if (direction === \"column\") {\r\n        styles.imgContainer.position = \"absolute\";\r\n        styles.imgContainer.imgStyle.left = left;\r\n        styles.imgContainer.imgStyle.top = top;\r\n    }\r\n\r\n    const handleDelete = event => {\r\n        onItemDelete(photo);\r\n    }\r\n\r\n    return (\r\n\r\n        <Card style={styles.imgContainer}>\r\n            <CardMedia\r\n                style={{height: 0, paddingTop: '80%'}}\r\n                image={photo.src}\r\n            />\r\n            <CardActions disableSpacing>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon/>}\r\n                    onClick={(event) => {\r\n                        handleDelete(event)\r\n                    }}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n\r\n        </Card>\r\n    )\r\n\r\n};\r\n\r\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\r\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\r\nconst SortableGallery = SortableContainer(({items, onItemDelete}) => (\r\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>}/>\r\n));\r\n\r\nfunction ReorderablePhotos(props) {\r\n    let {setPhotos, photos, srcName, keyName} = props\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\r\n    };\r\n\r\n    function handleItemDelete(photo) {\r\n        setPhotos(photos.filter(item => {\r\n            return item[keyName].toString() !== photo.key\r\n        }))\r\n    }\r\n\r\n    let modifiedData = photos.map(item => {\r\n        return (\r\n            {\r\n                key: item[keyName].toString(),\r\n                src: item[srcName],\r\n                width: 1,\r\n                height: 1\r\n            })\r\n\r\n    })\r\n    return (\r\n        <div>\r\n            <SortableGallery pressDelay={200}\r\n                             disableAutoscroll={false} items={modifiedData} onSortEnd={onSortEnd}\r\n                             axis={\"xy\"} onItemDelete={handleItemDelete}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport {DropzoneArea} from \"material-ui-dropzone\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../Networking/API\";\r\n\r\nconst styles = theme => ({\r\n    dropzoneArea: {\r\n        overflow: \"hidden\"\r\n    }\r\n});\r\n\r\nconst acceptedFileFormats = ['image/jpeg', 'image/png', 'image/bmp', 'image/jpg']\r\n\r\nfunction AddImageDialog(props) {\r\n\r\n    const {onCloseCallback, open, onFinishCallback, classes} = props\r\n    const [loading, setIsLoading] = useState(false)\r\n    const [selectedFiles, setSelectedFiles] = useState([])\r\n\r\n    const submitCallback = () => {\r\n        setIsLoading(true)\r\n\r\n        Promise.all(selectedFiles.map(imagefile => {\r\n            let formData = new FormData()\r\n            formData.append(\"image\", imagefile)\r\n            return API.Photos.uploadPhoto(formData)\r\n        })).then(response => {\r\n            console.log(response)\r\n            onFinishCallback(response)\r\n        }).catch(error => {\r\n            onFinishCallback()\r\n        }).finally(() => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Photo upload\r\n                </DialogTitle>\r\n                {loading && <LinearProgress variant=\"query\"/>}\r\n                <DialogContent dividers>\r\n                    <DropzoneArea\r\n                        className={classes.dropzoneArea}\r\n                        acceptedFiles={acceptedFileFormats}\r\n                        maxFileSize={25000000}\r\n                        dropzoneProps={{disabled: loading}} filesLimit={5} onDrop={setSelectedFiles}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={submitCallback} color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddImageDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onFinishCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddImageDialog)\r\n","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ReorderablePhotos from \"../ReorderablePhotos\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddImageDialog from \"../AddImageDialog\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PhotosInfo({classes, setPhotos, photos}) {\r\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\r\n\r\n    function handleAddPhoto(files) {\r\n        setAddImageDialogOpen(false);\r\n        if(files == null)\r\n            return;\r\n\r\n        setPhotos([\r\n            ...photos,\r\n            ...files]\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h6\" >\r\n                Photos\r\n            </Typography>\r\n            <Card variant={\"outlined\"} className={classes.outline}>\r\n\r\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\r\n\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{width: '15%'}}\r\n                    className={classes.button}\r\n                    onClick={() => setAddImageDialogOpen(true)}\r\n                    startIcon={<AddIcon />}>\r\n                    Add photo\r\n                </Button>\r\n\r\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(files) => handleAddPhoto(files)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\r\n\r\n\r\n            </Card>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PhotosInfo)\r\n\r\n\r\n","import React from \"react\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nGeocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\r\nGeocode.enableDebug();\r\n\r\n/**\r\n * Get country from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCountry = (addressArray) =>{\r\n    if(addressArray!==undefined){\r\n        let country = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\r\n                country = addressArray[ i ].long_name;\r\n                return country;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get country from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCity = ( addressArray ) => {\r\n    if(addressArray !== undefined){\r\n        console.log(\"Address array\", addressArray);\r\n        let city = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'locality' === addressArray[ i ].types[0] ) {\r\n                city = addressArray[ i ].long_name;\r\n                return city;\r\n            }\r\n        }\r\n        return city;\r\n    }\r\n};\r\n\r\n/**\r\n * Get district from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCounty = ( addressArray ) => {\r\n        if(addressArray !== undefined){\r\n            let county = '';\r\n            for( let i = 0; i < addressArray.length; i++ ) {\r\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n                    county = addressArray[ i ].long_name;\r\n                    return county;\r\n                }\r\n            }\r\n            return county\r\n        }\r\n    };\r\n/**\r\n * Get district from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getMunicipality = ( addressArray ) => {\r\n    if(addressArray !== undefined){\r\n        let municipality = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\r\n                municipality = addressArray[ i ].long_name;\r\n                return municipality;\r\n            }\r\n        }\r\n        return municipality;\r\n    }\r\n};\r\n\r\n/**\r\n * Geocode location from string address\r\n * @param address\r\n * @type string\r\n * @return location object\r\n */\r\nexport function geocodeFromAddress(address){\r\n    return Geocode.fromAddress( address ).then(\r\n        response => {\r\n            const { lat, lng } = response.results[0].geometry.location;\r\n            const address = response.results[0].formatted_address;\r\n            const addressArray =  response.results[0].address_components;\r\n            if(addressArray!==undefined){\r\n                const city = getCity( addressArray ),\r\n                    country = getCountry( addressArray ),\r\n                    county = getCounty(addressArray),\r\n                    municipality = getMunicipality(addressArray);\r\n                let loc = {address: address, city: city, country: country, latitude: lat, longitude: lng, county: county, municipality: municipality};\r\n                return loc\r\n            }\r\n            return null\r\n        },\r\n        error => {\r\n            console.log(error);\r\n        }\r\n    );\r\n}\r\n\r\n/**\r\n * Geocode location from latitude and longitude\r\n * @param newLat\r\n * @param newLng\r\n * @return location object\r\n */\r\nexport function geocodeFromLatLng(newLat, newLng){\r\n    return Geocode.fromLatLng( newLat , newLng ).then(\r\n        response => {\r\n            const address = response.results[0].formatted_address\r\n            const addressArray =  response.results[0].address_components\r\n            if(addressArray!==undefined){\r\n                const city = getCity( addressArray ),\r\n                    country = getCountry( addressArray ),\r\n                    county = getCounty(addressArray),\r\n                    municipality = getMunicipality(addressArray);\r\n                let loc = {address: address, city: city, country: country, latitude: newLat, longitude: newLng, county: county, municipality: municipality};\r\n                return loc;\r\n            }\r\n            return null\r\n        },\r\n        error => {\r\n            console.error(error);\r\n        }\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\r\nimport PropTypes from \"prop-types\";\r\nimport {geocodeFromAddress, geocodeFromLatLng, getCity, getCountry, getCounty, getMunicipality} from \"./MapGeolocation\";\r\nimport {load} from \"dotenv\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    autocomplete:{\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline:\"0\",\r\n        marginBottom: \"4px\"\r\n    },\r\n    root: {\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"8px\",\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction MapToolbar({classes, isLocked, locationCallback}) {\r\n\r\n    const [loading, setIsLoading] = useState(false);\r\n\r\n    /**\r\n     * Handle manual address and coordinates filling with key presses and return location\r\n     * @param event\r\n     * @return {boolean}\r\n     */\r\n    function handleKeyPress(event){\r\n        const value = event.target.value;\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            setIsLoading(true);\r\n            if (/[a-zA-Z]+/.test(value)){\r\n                geocodeFromAddress(value).then(location=>{\r\n                    locationCallback(location)\r\n                    setIsLoading(false)\r\n                });\r\n            }else{\r\n                let position = value.split(/[ ,]+/);\r\n                if(position.length === 2){\r\n                    geocodeFromLatLng(parseFloat(position[0]), parseFloat(position[1])).then(location=>{\r\n                        locationCallback(location);\r\n                        setIsLoading(false)\r\n                    })\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Handle place selection from google maps autocomplete\r\n     * @param place\r\n     * @return {{country: (*|string), address: *, city: (*|string), latitude: *, longitude: *}|null}\r\n     */\r\n    const onPlaceSelected = (place) => {\r\n        setIsLoading(true);\r\n        const address = place.formatted_address;\r\n        const addressArray =  place.address_components;\r\n        if(addressArray !== undefined){\r\n            const city = getCity( addressArray ),\r\n                country = getCountry(addressArray),\r\n                county = getCounty(addressArray),\r\n                municipality = getMunicipality(addressArray),\r\n                lat = place.geometry.location.lat(),\r\n                lng = place.geometry.location.lng();\r\n                setIsLoading(false)\r\n                locationCallback({address: address, city: city, country: country, latitude: lat, longitude: lng, county: county, municipality: municipality})\r\n        }\r\n        return null\r\n    };\r\n\r\n    /**\r\n     * Get current location\r\n     */\r\n    function getCurrentPosition(){\r\n        setIsLoading(true)\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n            let newLat = position.coords.latitude,\r\n                newLng = position.coords.longitude;\r\n            geocodeFromLatLng(newLat, newLng).then(location=>{\r\n                setIsLoading(false)\r\n                locationCallback(location)\r\n            });\r\n        }, error=>{\r\n            setIsLoading(false)\r\n            alert(error.message + \"\\n\" + JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    return <div className={classes.root}>\r\n        <div className={classes.content}>\r\n            <Autocomplete\r\n                onKeyPress={(event)=>{if(!isLocked)handleKeyPress(event)}}\r\n                onPlaceSelected={(place)=>{if(!isLocked)onPlaceSelected(place)} }\r\n                className={classes.autocomplete}\r\n                types={['(regions)']}\r\n            />\r\n            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\">\r\n                <MyLocationIcon\r\n                    onClick={()=>{if(!isLocked)getCurrentPosition()}}\r\n                    fontSize=\"large\"\r\n                    color=\"primary\"\r\n                />\r\n            </IconButton>\r\n        </div>\r\n        {loading ? <LinearProgress /> : null}\r\n\r\n    </div>\r\n\r\n\r\n}\r\n\r\nMapToolbar.propTypes = {\r\n    isLocked: PropTypes.bool.isRequired,\r\n    locationCallback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(MapToolbar)","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"8px\",\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction MapLock({classes, isLocked, setIsLocked}) {\r\n    return <div className={classes.root}>\r\n        <FormControlLabel\r\n            control={<Switch />}\r\n            label=\"Lock\"\r\n            checked={isLocked}\r\n            onChange={()=>{\r\n               setIsLocked(old=>!old)\r\n            }}\r\n        />\r\n        {isLocked ?\r\n            <Alert  severity=\"error\">Map is currently locked. If you want to do any changes unlock it.</Alert> : null}\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(MapLock)","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { MAP } from 'react-google-maps/lib/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CustomControlsManager(\r\n    { position = window.google.maps.ControlPosition.TOP_LEFT, children },\r\n    context\r\n) {\r\n    const map = context[MAP];\r\n\r\n    const controlDiv = document.createElement('div');\r\n\r\n    useEffect(() => {\r\n        const controls = map.controls[position];\r\n        const index = controls.length;\r\n        controls.push(controlDiv);\r\n        return () => {\r\n            controls.removeAt(index);\r\n        };\r\n    });\r\n\r\n    return createPortal(\r\n        <div style={{ marginBottom: 8 }}>{children}</div>,\r\n        controlDiv\r\n    );\r\n}\r\n\r\nCustomControlsManager.contextTypes = {\r\n    [MAP]: PropTypes.object,\r\n};","import React, {useCallback, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer} from \"react-google-maps\"\r\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport MapToolbar from \"./MapToolbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport MapLock from \"./MapLock\";\r\nimport CustomControlsManager from \"./CustomControlsManager\";\r\nimport ExploreIcon from '@material-ui/icons/Explore';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst styles = theme => ({});\r\n\r\nconst MapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        defaultZoom={12}\r\n        ref={props.refInstance}\r\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\r\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n        <Marker\r\n            name={'Dolores park'}\r\n            visible={true}\r\n            draggable={!props.isLocked}\r\n            onDragEnd={e => onMarkerDragEnd(e, props.setPosition)}\r\n            position={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n        </Marker>\r\n\r\n        <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\r\n            <div>\r\n                <IconButton aria-label=\"delete\" onClick={()=>{\r\n                    if(!props.isLocked){\r\n                        const mapCenter = props.refInstance.current.getCenter();\r\n                        geocodeFromLatLng(mapCenter.lat(), mapCenter.lng()).then(location=>{\r\n                            props.setPosition(location)\r\n                        });\r\n                    }\r\n                }}>\r\n                    <ExploreIcon fontSize={\"large\"}/>\r\n                </IconButton>\r\n            </div>\r\n        </CustomControlsManager>\r\n    </GoogleMap>\r\n\r\n);\r\n\r\nfunction onMarkerDragEnd(event, setLocationMarker) {\r\n    let newLat = event.latLng.lat(),\r\n        newLng = event.latLng.lng();\r\n    geocodeFromLatLng(newLat, newLng).then(location => {\r\n        setLocationMarker(location)\r\n    })\r\n}\r\n\r\nfunction PlaceMap({placeInfo,locationMarker, setLocationMarker}) {\r\n\r\n    const [isLocked, setIsLocked] = useState(placeInfo.placeId !== \"\");\r\n    const refMap = useRef(null);\r\n\r\n    function mapToolbarCallback(location) {\r\n        setLocationMarker(location)\r\n    }\r\n    \r\n    return <React.Fragment>\r\n        <MapToolbar\r\n            isLocked={isLocked}\r\n            locationCallback={mapToolbarCallback}/>\r\n\r\n        <MapComponent\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            refInstance={refMap}\r\n            isLocked={isLocked}\r\n            position={locationMarker}\r\n            setPosition={setLocationMarker}/>\r\n\r\n        <MapLock\r\n            isLocked={isLocked}\r\n            setIsLocked={setIsLocked}\r\n        />\r\n    </React.Fragment>\r\n\r\n\r\n}\r\n\r\nPlaceMap.propTypes = {\r\n    locationMarker: PropTypes.object.isRequired,\r\n    setLocationMarker: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PlaceMap)","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PlaceMap from \"../maps/PlaceMap\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PlaceLocation({locationData, setLocationData, placeInfo}) {\r\n\r\n    function changeLocationData(event){\r\n        const {name, value} = event.target;\r\n        let data = Object.assign({}, locationData, {});\r\n        data[name] = value;\r\n\r\n        setLocationData(data)\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select place location from map\r\n        </Typography>\r\n        <br/>\r\n        <PlaceMap\r\n            placeInfo={placeInfo}\r\n            locationMarker={locationData}\r\n            setLocationMarker={setLocationData}\r\n        />\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Address\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place address\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['address']}\r\n            name='address'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"City\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place city\"\r\n            fullWidth\r\n            value={locationData['city']}\r\n            name='city'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"County\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place county\"\r\n            fullWidth\r\n            value={locationData['county']}\r\n            name='county'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Municipality\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place municipality\"\r\n            fullWidth\r\n            value={locationData['municipality']}\r\n            name='municipality'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Country\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place country\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['country']}\r\n            name='country'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            rows={4}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceLocation)","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from \"react-google-maps\";\r\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport MapToolbar from \"./MapToolbar\";\r\nimport API from \"../../Networking/API\";\r\nimport PropTypes, {func} from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CustomControlsManager from \"./CustomControlsManager\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExploreIcon from \"@material-ui/icons/Explore\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\n\r\nconst MapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        ref={props.refInstance}\r\n        defaultZoom={12}\r\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\r\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n        <Marker\r\n            onClick={()=>{if(!props.isLocked)props.setMainInfoWindow(true)}}\r\n            name={'Dolores park'}\r\n            visible={true}\r\n            draggable={!props.isLocked}\r\n            onDragEnd={e => onMarkerDragEnd(e, props.setPosition)}\r\n            position={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n            {props.mainInfoWindow && (\r\n                <InfoWindow onCloseClick={()=>{props.setMainInfoWindow(false)}}>\r\n                    <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                        {props.position.address}\r\n                        <Button\r\n                            onClick={()=>{\r\n                                let c = nearestParkingCount(props.position, props.parkingData);\r\n                                if(c>0){\r\n                                    props.addAlertConfig(\"Parkings nearby already exist!\", c+\" parking(-s) within 150 meter already exist(-s).\" +\r\n                                        \" Are you sure you don't want to use already existings parking locations?\",[{name:\"ADD NEW PARKING!\", action: ()=>{\r\n                                            props.addNewParking(props.position)\r\n                                        }}])\r\n                                }\r\n                            }}\r\n                            variant=\"text\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            startIcon={<AddIcon />}>\r\n                            Add new parking\r\n                        </Button>\r\n                    </div>\r\n                </InfoWindow>\r\n            )}\r\n        </Marker>\r\n\r\n        <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\r\n            <div>\r\n                <IconButton aria-label=\"delete\" onClick={()=>{\r\n                    if(!props.isLocked){\r\n                        let loc = Object.assign({},props.position, {});\r\n                        const mapCenter = props.refInstance.current.getCenter();\r\n                        loc.latitude = mapCenter.lat();\r\n                        loc.longitude = mapCenter.lng();\r\n                        props.setPosition(loc)\r\n                    }\r\n                }}>\r\n                    <ExploreIcon fontSize={\"large\"}/>\r\n                </IconButton>\r\n            </div>\r\n        </CustomControlsManager>\r\n\r\n        {\r\n            props.parkingData.map((location, i) =>{\r\n                const latitude = parseFloat(location.latitude);\r\n                const longitude = parseFloat(location.longitude);\r\n                console.log(parkingIsAttached(location, props.selectedParkingData));\r\n                return <Marker\r\n                    key={location.parkingId}\r\n                    position={{ lat: latitude, lng: longitude}}\r\n                    icon={{\r\n                        url: parkingIsAttached(location, props.selectedParkingData) ? require('../../res/selectedParking.svg') :\r\n                            require('../../res/availableParking.svg'),\r\n                        scaledSize: new window.google.maps.Size(20, 48),\r\n                        origin: new window.google.maps.Point(0, 0),\r\n                        anchor: new window.google.maps.Point(10, 35)\r\n                    }}\r\n                    onClick={()=>{\r\n                        if(!props.isLocked){\r\n                            let markers = Object.assign({},props.parkingInfoWindows, {});\r\n                            markers[i] = true;\r\n                            props.setParkingInfoWindows(markers)\r\n                        }\r\n                    }}\r\n                >\r\n                    {props.parkingInfoWindows[i] && (\r\n                        <InfoWindow onCloseClick={()=>{\r\n                                let markers = Object.assign({},props.parkingInfoWindows, {});\r\n                                markers[i] = false;\r\n                                props.setParkingInfoWindows(markers)\r\n                            }\r\n                        }>\r\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                                <Typography variant=\"h6\">\r\n                                    {location.address}\r\n                                </Typography>\r\n                                {parkingIsAttached(location, props.selectedParkingData) ? <div>\r\n                                        <Alert severity=\"success\">This parking location is already attached! See below in \"Selected parking locations\" section.</Alert>\r\n                                </div> :\r\n                                <Button\r\n                                    onClick={()=>{props.addExistingParking(location)}}\r\n                                    variant=\"text\"\r\n                                    color=\"secondary\"\r\n                                    size=\"large\"\r\n                                    startIcon={<AddIcon />}>\r\n                                    Add parking\r\n                                </Button>\r\n                                }\r\n                            </div>\r\n                        </InfoWindow>\r\n                    )}\r\n\r\n                </Marker>\r\n\r\n            })\r\n        }\r\n\r\n    </GoogleMap>\r\n);\r\n\r\nfunction parkingIsAttached(parking, selectedParkingData) {\r\n    for(let i = 0; i<selectedParkingData.length; i++){\r\n        if(selectedParkingData[i].address === parking.address)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction calcCrow(lat1, lon1, lat2, lon2)\r\n{\r\n    var R = 6371; // km\r\n    var dLat = toRad(lat2-lat1);\r\n    var dLon = toRad(lon2-lon1);\r\n    var lat1 = toRad(lat1);\r\n    var lat2 = toRad(lat2);\r\n\r\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    var d = R * c;\r\n    return d;\r\n}\r\nfunction toRad(Value) {return Value * Math.PI / 180}\r\n\r\nfunction nearestParkingCount(parking, parkingData){\r\n    let count = 0;\r\n    for(let i = 0; i<parkingData.length; i++){\r\n        let distance = calcCrow(parking.latitude, parking.longitude, parkingData[i].latitude, parkingData[i].longitude);\r\n        if(distance<=0.15){\r\n            count++;\r\n        }\r\n    }\r\n    return count\r\n}\r\n\r\n\r\nfunction onMarkerDragEnd(event, setLocationMarker) {\r\n    let newLat = event.latLng.lat(),\r\n        newLng = event.latLng.lng();\r\n    geocodeFromLatLng(newLat, newLng).then(location => {\r\n        setLocationMarker(location)\r\n    })\r\n}\r\n\r\nfunction ParkingMap({placeInfo,\r\n                        locationMarker,\r\n                        setLocationMarker,\r\n                        addNewParking,\r\n                        addExistingParking,\r\n                        selectedParkingData\r\n                    }) {\r\n\r\n    const [parkingData, setParkingData] = useState([]);\r\n    const [mainInfoWindow, setMainInfoWindow] = useState(false);\r\n    const [parkingInfoWindows, setParkingInfoWindows] = useState(false);\r\n    const [isLocked, setIsLocked] = useState(false);\r\n    const refMap = useRef(null);\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    function getClosestParking(){\r\n        API.Parking.getParkingByLocation(\"?lat=\"+locationMarker.latitude+\"&lng=\"+locationMarker.longitude).then(response=>{\r\n            setParkingData(response);\r\n        }).catch(error=>{\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Downloading new markers\");\r\n        getClosestParking()\r\n    },[locationMarker]);\r\n\r\n    function mapToolbarCallback(location) {\r\n        setMainInfoWindow(true);\r\n        setLocationMarker(location)\r\n    }\r\n\r\n    return <React.Fragment>\r\n        <MapToolbar\r\n            isLocked={isLocked}\r\n            locationCallback={mapToolbarCallback}/>\r\n\r\n        <MapComponent\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            mainInfoWindow={mainInfoWindow}\r\n            setMainInfoWindow={setMainInfoWindow}\r\n            addNewParking={addNewParking}\r\n            addExistingParking={addExistingParking}\r\n            parkingInfoWindows={parkingInfoWindows}\r\n            setParkingInfoWindows={setParkingInfoWindows}\r\n            parkingData={parkingData}\r\n            position={locationMarker}\r\n            setPosition={setLocationMarker}\r\n            isLocked={isLocked}\r\n            refInstance={refMap}\r\n            selectedParkingData={selectedParkingData}\r\n            addAlertConfig={addAlertConfig}\r\n        />\r\n\r\n    </React.Fragment>\r\n}\r\n\r\n\r\nParkingMap.propTypes = {\r\n    placeInfo: PropTypes.object.isRequired,\r\n    locationMarker: PropTypes.object.isRequired,\r\n    setLocationMarker: PropTypes.func.isRequired,\r\n    addNewParking: PropTypes.func.isRequired,\r\n    addExistingParking: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ParkingMap","import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../../Networking/API\";\r\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport ParkingMap from \"../maps/ParkingMap\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction ParkingLocation({classes, locationData, setLocationData, allSelectedParkingData, setAllSelectedParkingData, placeInfo}) {\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\r\n    };\r\n\r\n    function addNewParking(markerData){\r\n        if(!parkingExists(markerData)){\r\n            API.Parking.insertNewParking([markerData]).then(response=>{\r\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\r\n                addConfig(true)\r\n            }).catch(error=>{\r\n                addConfig(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    function addExistingParking(location) {\r\n        if(!parkingExists(location)){\r\n            setAllSelectedParkingData(oldArray=> [...oldArray, location])\r\n        }\r\n    }\r\n\r\n    function parkingExists(markerData){\r\n        for(let i = 0; i<allSelectedParkingData.length; i++){\r\n            if(allSelectedParkingData[i].address === markerData.address){\r\n                addConfig(false, \"This parking is already attached!\");\r\n                return true;\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    const SortableItem = SortableElement(({value}) => (\r\n        <Paper className={classes.paper} elevation={3}>\r\n            <Typography>\r\n                {value.address}\r\n            </Typography>\r\n            <IconButton aria-label=\"delete\" className={classes.margin}\r\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </Paper>\r\n    ));\r\n\r\n\r\n    const SortableList = SortableContainer(({items}) => {\r\n        return (\r\n            <ul>\r\n                {items.map((value, index) => (\r\n                <SortableItem key={index} index={index} value={value} />\r\n                ))}\r\n            </ul>\r\n        );\r\n    });\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Add parking\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select parking\r\n        </Typography>\r\n\r\n        <ParkingMap\r\n            selectedParkingData={allSelectedParkingData}\r\n            placeInfo={placeInfo}\r\n            locationMarker={locationData}\r\n            setLocationMarker={setLocationData}\r\n            addNewParking={addNewParking}\r\n            addExistingParking={addExistingParking}\r\n        />\r\n\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Selected parking locations\r\n        </Typography>\r\n        {allSelectedParkingData.length === 0 ? <Alert severity=\"error\">\r\n            This place has no selected parking! To select parking for this place do the following:\r\n            <br/>\r\n            1. Select your current location or any other location\r\n            <br/>\r\n            2. Select already existing nearby parking locations and click add\r\n            <br/>\r\n            3. If none of the location is valid, click on the orange marker and add new parking\r\n            </Alert> :\r\n            <SortableList pressDelay={200} disableAutoscroll={false} items={allSelectedParkingData} onSortEnd={onSortEnd} />\r\n        }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(ParkingLocation)","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nfunction AddDialog(props){\r\n\r\n    function validateInput(){\r\n        var error = false;\r\n        if(text.length <= 3)\r\n            error = true\r\n        setError(error)\r\n        return error\r\n    }\r\n\r\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\r\n    const [text, setText] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    return(\r\n        <div>\r\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\r\n                    {header}\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    action: PropTypes.func.isRequired,\r\n    onCloseCallback: PropTypes.func.isRequired\r\n};\r\nexport default withStyles(styles)(AddDialog)\r\n","import React, { useState, useCallback } from 'react';\r\n\r\nexport const EditDialogContext = React.createContext({\r\n    dialogConfig: null,\r\n    dialogOpen: null,\r\n    setDialogOpen: null,\r\n    addEditDialogConfig: () => {},\r\n    removeEditDialogConfig: () => {}\r\n});\r\n\r\nconst defaultOptions = {\r\n\r\n    /**\r\n     * The dialog's title.\r\n     */\r\n    title: \"Sample title\",\r\n\r\n    /**\r\n     * Object, that defines an error message for each error returned by validateInput function.\r\n     * Should follow this structure: {errorCode: \"message\", differentErrorCode: \"Message\"}\r\n     * Keys of this object are integers (that represent the error code)\r\n     */\r\n    errorMessages: {},\r\n\r\n    /**\r\n     * Explanation text for this dialog.\r\n     */\r\n    explanation: \"Sample explanation\",\r\n\r\n    /**\r\n     * A callback for when user presses cancel.\r\n     */\r\n    onCloseCallback: () => {},\r\n\r\n    /**\r\n     * A callback for when the user input passes error checks and done button is pressed\r\n     * @param input is the input text\r\n     */\r\n    onDoneCallback: (input) => {},\r\n\r\n    /**\r\n     * The label text to be displayed above textfield\r\n     */\r\n    textFieldLabel: \"Type here\",\r\n\r\n    /**\r\n     * Should return 0 if input is valid.\r\n     * If the input is not valid, it should return an error code.\r\n     * Any returned code, that is not 0 is considered to be an error.\r\n     * The error code returned may have a message in errorMessages prop.\r\n     * @param input\r\n     * @returns {number}\r\n     */\r\n    validateInput: (input) => 0,\r\n\r\n    /**\r\n     * The default text to be displayed in TextField\r\n     */\r\n    defaultText: \"\"\r\n}\r\n\r\nexport default function EditDialogProvider({ children }) {\r\n    const [dialogConfig, setDialogConfig] = useState(defaultOptions);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const contextValue = {\r\n        dialogConfig,\r\n        dialogOpen: dialogOpen,\r\n        setDialogOpen: setDialogOpen,\r\n        addEditDialogConfig: (options) => {\r\n            setDialogConfig({\r\n                ...defaultOptions,\r\n                ...options\r\n            })\r\n            setDialogOpen(true)\r\n        },\r\n        removeEditDialogConfig: () => setDialogConfig(null)\r\n    };\r\n\r\n    return (\r\n        <EditDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </EditDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {EditDialogContext} from \"./EditDialogContext\";\r\n\r\nexport default function UseEditDialogContext() {\r\n    const { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen } = useContext(EditDialogContext);\r\n    return { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen};\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddDialog from \"../AddDialog\";\r\nimport API from \"../../Networking/API\";\r\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories}) {\r\n\r\n    const [availableCategories, setAvailableCategories] = useState([]);\r\n    const [availableTags, setAvailableTags] = useState([]);\r\n\r\n    const {addEditDialogConfig} = UseEditDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    const updateTags = () => {\r\n        API.Tags.getAllTags().then(response=>{\r\n            setAvailableTags(response);\r\n            console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n    const updateCategories = () => {\r\n        API.Categories.getAllCategories().then(response=>{\r\n            setAvailableCategories(response)\r\n            console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        });\r\n    };\r\n\r\n    useEffect(()=>{\r\n        updateTags();\r\n        updateCategories();\r\n    },[]);\r\n\r\n\r\n    const promptAddTag = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add tag\",\r\n            explanation: \"Type the tag name\",\r\n            onDoneCallback: (tagName) => {\r\n                API.Tags.addTag([{name: tagName}]).then(response=>{\r\n                    let newTag = {tagId: response[0], name: tagName}\r\n                    setAvailableTags(\r\n                        [\r\n                            ...availableTags,\r\n                            newTag\r\n                        ]\r\n                    );\r\n                    setSelectedTags([\r\n                        ...selectedTags,\r\n                        newTag\r\n                    ]);\r\n\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to add tag.\")\r\n                })\r\n            },\r\n            errorMessages: {\r\n                1: \"The tag name is too short\",\r\n                2: \"A tag with identical name already exists. You should choose the existing tag instead\"\r\n            },\r\n            validateInput: (input) => {\r\n                if(input.length < 4){\r\n                    return 1 //Input too short\r\n                }else if(availableTags.filter(item => item.name === input).length !== 0){\r\n                    return 2 //Identical tag already exists\r\n                }\r\n                return 0\r\n            },\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const promptAddCategory = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add category\",\r\n            explanation: \"Type the category name\",\r\n            onDoneCallback: (categoryName) => {\r\n                API.Categories.addCategory([{name: categoryName}]).then(response=>{\r\n                    let newCat = {categoryId: response[0], name: categoryName};\r\n                    setAvailableCategories(\r\n                        [\r\n                            ...availableCategories,\r\n                            newCat\r\n                        ]\r\n                    );\r\n                    setSelectedCategories([\r\n                        ...selectedCategories,\r\n                        newCat\r\n                    ]);\r\n                }).catch(error=>{\r\n                    addConfig(false, \"Failed to add category.\")\r\n                })\r\n            },\r\n            errorMessages: {\r\n                1: \"The category name is too short\",\r\n                2: \"A category with identical name already exists. You should choose the existing category instead\"\r\n            },\r\n            validateInput: (input) => {\r\n                if(input.length < 4){\r\n                    return 1 //Input too short\r\n                }else if(availableCategories.filter(item => item.name === input).length !== 0){\r\n                    return 2 //Identical category already exists\r\n                }\r\n                return 0\r\n            },\r\n            textFieldLabel: \"Restaurant, hotel, hiking...\"\r\n        })\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place discovery settings\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select tags\r\n        </Typography>\r\n        <AutocompleteChip label=\"Select tags\"\r\n                          id=\"tagId\"\r\n                          options={availableTags}\r\n                          setOptions={setAvailableTags}\r\n                          selectedOptions={selectedTags}\r\n                          setSelectedOptions ={setSelectedTags}/>\r\n\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={promptAddTag}\r\n            startIcon={<AddIcon />}>\r\n            Add missing tag\r\n        </Button>\r\n\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select categories\r\n        </Typography>\r\n        <AutocompleteChip label=\"Select categories\"\r\n                          id=\"categoryId\"\r\n                          options={availableCategories}\r\n                          setOptions={setAvailableCategories}\r\n                          selectedOptions={selectedCategories} \r\n                          setSelectedOptions={setSelectedCategories}/>\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={promptAddCategory}\r\n            startIcon={<AddIcon />}>\r\n            Add missing category\r\n        </Button>\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceDiscovery)","const initialScheduleData = [\r\n    {\r\n        \"scheduleDefault\": true,\r\n        \"periods\": [\r\n            {\r\n                openDay: 0,\r\n                closeDay: 0,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            },\r\n            {\r\n                openDay: 1,\r\n                closeDay: 1,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            },\r\n            {\r\n                openDay: 2,\r\n                closeDay: 2,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            },\r\n            {\r\n                openDay: 3,\r\n                closeDay: 3,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            },\r\n            {\r\n                openDay: 4,\r\n                closeDay: 4,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default initialScheduleData","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        width: \"20%\",\r\n        padding: \"2px\",\r\n        marginRight: \"16px\"\r\n    },\r\n\r\n});\r\nexport default function ReviewCard({review}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <div style={{display: \"flex\"}} >\r\n                    <Avatar alt=\"Cindy Baker\" src={!!review.photoUrl ? review.photoUrl : \"/broken-image.jpg\"} />\r\n                    <div style={{display: \"flex\", flexDirection: \"column\", marginLeft:\"8px\"}}>\r\n                        <Typography title=\"subtitle1\">\r\n                            {review.name} {review.surname}\r\n                        </Typography>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <Rating size=\"small\" name=\"read-only\" value={review.rating} readOnly />\r\n                            <Typography title=\"subtitle1\">\r\n                                {\"+\" + review.upvotes}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                    {moment(review.timeAdded).format('LL')}\r\n                </Typography>\r\n                <div style={{marginTop: \"16px\"}}>\r\n                    {review.title}\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                        {review.review}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ReviewCard from \"../ReviewCard\";\r\nimport API from \"../../Networking/API\";\r\nimport debounce from \"lodash/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nconst styles = theme => ({\r\n    reviewsInfo:{\r\n        display: \"flex\",\r\n    },\r\n    reviews:{\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        margin: theme.spacing(2),\r\n        overflowX: \"scroll\"\r\n    },\r\n    sortingButtons: {\r\n        padding: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction Reviews({classes, placeInfo}) {\r\n\r\n    const [reviews, setReviews] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    const [filterBy, setFilterBy] = useState('mostRated');\r\n\r\n    function getReviewsForPlace(urlParams = \"?p=\"+placeInfo.placeId) {\r\n        API.Reviews.getPlaceReviews(urlParams).then(response=>{\r\n            setReviews(old=>[...old, ...response.list]);\r\n            setIsLoading(false)\r\n        }).catch(error=>{\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    //Get ordered by new filter\r\n    useEffect(()=>{\r\n            getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=1&o=\"+filterBy)\r\n    },[filterBy]);\r\n\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollWidth - e.target.scrollLeft - scrollOffset)  <= e.target.clientWidth;\r\n        if (bottom && !isLoading && reviews.length>0 && reviews.length<placeInfo.totalReviews) {\r\n            setIsLoading(true);\r\n            setPage(old=>{\r\n                getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=\"+(old+1)+\"&o=\"+filterBy);\r\n                return old+1\r\n            });\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    function changeSorting(e){\r\n        const {name, value} = e.target;\r\n        setFilterBy(value);\r\n        setReviews([]);\r\n        setPage(1);\r\n        handleClose()\r\n    }\r\n\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Reviews\r\n            <br/>\r\n            {\r\n               reviews.length > 0 ?\r\n                   <React.Fragment>\r\n                       <div style={{display:\"flex\", justifyContent: \"space-between\"}}>\r\n                           <div className={classes.reviewsInfo}>\r\n                               <Rating name=\"read-only\" value={placeInfo.overallStarRating} precision={0.2} readOnly />\r\n                               <Typography style={{marginLeft:\"8px\"}} variant=\"subtitle1\">\r\n                                   {placeInfo.totalReviews} reviews\r\n                               </Typography>\r\n                           </div>\r\n                           <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                               <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                                   <FilterListIcon />\r\n                               </IconButton>\r\n                           </Tooltip>\r\n                           <Popover\r\n                               id={id}\r\n                               open={open}\r\n                               anchorEl={anchorEl}\r\n                               onClose={handleClose}\r\n                               anchorOrigin={{\r\n                                   vertical: 'bottom',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                               transformOrigin={{\r\n                                   vertical: 'top',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                           >\r\n                               <RadioGroup className={classes.sortingButtons} aria-label=\"gender\" value={filterBy} name=\"gender1\"  onChange={changeSorting}>\r\n                                   <FormControlLabel value=\"mostRated\" control={<Radio />} label=\"Most rated\" />\r\n                                   <FormControlLabel value=\"newest\" control={<Radio />} label=\"Newest\" />\r\n                               </RadioGroup>\r\n                           </Popover>\r\n                       </div>\r\n\r\n                       <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                           <Typography>\r\n                               Showing: {reviews.length} out of {placeInfo.totalReviews}\r\n                           </Typography>\r\n                           <Typography>\r\n                               Sorting by: {filterBy}\r\n                           </Typography>\r\n                       </div>\r\n                       <div className={classes.reviews} onScroll={e=>handleScroll(e)}>\r\n                           {reviews.map(row=>{\r\n                               return <ReviewCard review={row}/>\r\n                           })}\r\n                       </div>\r\n                   </React.Fragment> : <Typography> No reviews for this place</Typography>\r\n            }\r\n\r\n        </Typography>\r\n        <br/>\r\n        {isLoading ? <LinearProgress/> : null }\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(Reviews)","import React, { useState } from 'react';\r\n\r\nexport const AppBarTitleContext = React.createContext({\r\n    title: \"\",\r\n    setTitle: () => {},\r\n});\r\n\r\nexport default function AppBarTitleProvider({ children }) {\r\n    const [title, setTitle] = useState(\"Home\");\r\n\r\n    const contextValue = {\r\n        title,\r\n        setTitle: (title) => setTitle(title)\r\n    };\r\n\r\n    return (\r\n        <AppBarTitleContext.Provider value={contextValue}>\r\n            {children}\r\n        </AppBarTitleContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AppBarTitleContext} from \"./AppBarTitleContext\";\r\n\r\nexport default function UseAppBarTitleContext() {\r\n    const { title, setTitle } = useContext(AppBarTitleContext);\r\n    return { title, setTitle };\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { TimePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport Moment from \"react-moment\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\",\r\n        margin: theme.spacing(0.5),\r\n        alignItems: \"center\",\r\n        flexFlow: \"row wrap\"\r\n    },\r\n    picker: {\r\n        margin: theme.spacing(0.5),\r\n        width: \"30%\"\r\n    },\r\n    intervalRightSide: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    intervalLeftSide: {\r\n    }\r\n});\r\n\r\nfunction ScheduleInterval({classes, intervals, index, setIntervals}){\r\n\r\n    let currentInterval = intervals[index]\r\n\r\n    const [lastAccommodationEnabled, setLastAccommodationEnabled] = useState(currentInterval.lastAccommodation != null)\r\n    const [lastAccommodationTime, setLastAccommodationTime] = useState(currentInterval.lastAccommodation == null ? currentInterval.closeTime : currentInterval.lastAccommodation)\r\n\r\n    const getCloseDay = (closeTime, openTime) => {\r\n        let currentPeriod = intervals[index]\r\n        if(moment(closeTime, \"HH:mm\").isBefore(moment(openTime, \"HH:mm\")))\r\n            return (currentPeriod.openDay + 1) > 6 ? 0 : (currentPeriod.openDay +1)\r\n        else return currentPeriod.openDay\r\n    }\r\n\r\n    let handleUpdateOpenTime = (value) => {\r\n        setIntervals((oldIntervals) => {\r\n            return oldIntervals.map((item, i) => {\r\n                if(index === i){\r\n                    return {\r\n                        ...item,\r\n                        openTime: moment(value).format(\"HH:mm\").toString(),\r\n                        closeDay: getCloseDay(item.closeTime, value)\r\n                    }\r\n                }else return item\r\n            })\r\n        })\r\n    }\r\n    let handleUpdateCloseTime = (value) => {\r\n        setIntervals((oldIntervals) => {\r\n            return oldIntervals.map((item, i) => {\r\n                if(index === i){\r\n                    return {\r\n                        ...item,\r\n                        closeTime: moment(value).format(\"HH:mm\").toString(),\r\n                        closeDay: getCloseDay(value, item.openTime)\r\n                    }\r\n                }else return item\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setIntervals(oldIntervals => {\r\n            return oldIntervals.filter((item, i) => i !== index)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIntervals((oldIntervals) => {\r\n            return oldIntervals.map((item, i) => {\r\n                if(index === i){\r\n                    return {\r\n                        ...item,\r\n                        lastAccommodation: lastAccommodationEnabled ? lastAccommodationTime.toString() : null\r\n                    }\r\n                }else return item\r\n            })\r\n\r\n        })\r\n    }, [lastAccommodationTime, lastAccommodationEnabled])\r\n\r\n    const theme = useTheme();\r\n    const largeScreen = useMediaQuery(theme.breakpoints.only('lg'));\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.intervalLeftSide}>\r\n                <TimePicker\r\n                    margin=\"normal\"\r\n                    ampm={false}\r\n                    label=\"Opens\"\r\n                    className={classes.picker}\r\n                    format=\"HH:mm\"\r\n                    value={moment(currentInterval.openTime, \"HH:mm\")}\r\n                    onChange={handleUpdateOpenTime}\r\n                    InputProps={{\r\n                        disableUnderline: true,\r\n                    }}\r\n                />\r\n                <TimePicker\r\n                    margin=\"normal\"\r\n                    ampm={false}\r\n                    className={classes.picker}\r\n                    label=\"Closes\"\r\n                    format=\"HH:mm\"\r\n                    value={moment(currentInterval.closeTime, \"HH:mm\")}\r\n                    onChange={handleUpdateCloseTime}\r\n                    InputProps={{\r\n                        disableUnderline: true,\r\n                    }}\r\n                />\r\n\r\n                {intervals[index].closeDay !== intervals[index].openDay &&\r\n                    <React.Fragment>\r\n                        <Typography variant=\"subtitle1\">\r\n                            <WarningIcon style={{marginRight: \"10px\"}}/>\r\n                            Closes the next day\r\n                        </Typography>\r\n                    </React.Fragment>}\r\n\r\n                {!largeScreen &&\r\n                <Button color=\"primary\" onClick={handleDelete}>\r\n                    <DeleteOutlineIcon/>\r\n                </Button>\r\n                }\r\n            </div>\r\n\r\n            <div className={classes.intervalRightSide}>\r\n\r\n                <Checkbox checked={lastAccommodationEnabled} onChange={() => setLastAccommodationEnabled(state => !state)} />\r\n\r\n                <TimePicker\r\n                    margin=\"normal\"\r\n                    ampm={false}\r\n                    label=\"Last accommodation\"\r\n                    format=\"HH:mm\"\r\n                    disabled={!lastAccommodationEnabled}\r\n                    value={moment(lastAccommodationTime.toString(), \"HH:mm\")}\r\n                    onChange={(value) => setLastAccommodationTime(moment(value).format(\"HH:mm\").toString())}\r\n                    InputProps={{\r\n                        disableUnderline: true,\r\n                    }}\r\n                />\r\n\r\n                {largeScreen &&\r\n                    <Button color=\"primary\" onClick={handleDelete}>\r\n                    <DeleteOutlineIcon/>\r\n                    </Button>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nScheduleInterval.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    intervals: PropTypes.array.isRequired,\r\n    setIntervals: PropTypes.func.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ScheduleInterval)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ScheduleInterval from \"./ScheduleInterval\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst styles = theme => ({\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\"\r\n    },\r\n    root: {\r\n        margin: theme.spacing(0.5),\r\n        padding: theme.spacing(0.5)\r\n    }\r\n});\r\n\r\nfunction DayComponent({classes, scheduleData, setScheduleData, openDay, onChange, globalTime}){\r\n\r\n    let [intervals, setIntervals] = useState(scheduleData.periods.filter(item => item.openDay === openDay))\r\n    let [ignoreGlobalTime, setIgnoreGlobalTime] = useState({ignoreOpenTime: true, ignoreCloseTime: true})\r\n    useEffect(() => {\r\n        onChange(intervals, openDay)\r\n    }, [intervals])\r\n\r\n    useEffect(() => {\r\n        if(ignoreGlobalTime.ignoreOpenTime){\r\n            setIgnoreGlobalTime(data => {\r\n                return {...data, ignoreOpenTime: false}\r\n            })\r\n            return\r\n        }\r\n        setIntervals(oldIntervals => {\r\n            return oldIntervals.map(item => {\r\n                return {...item, openTime: globalTime.openTime}\r\n            })\r\n        })\r\n    }, [globalTime.openTime])\r\n\r\n    useEffect(() => {\r\n        if(ignoreGlobalTime.ignoreCloseTime){\r\n            setIgnoreGlobalTime(data => {\r\n                return {...data, ignoreCloseTime: false}\r\n            })\r\n            return\r\n        }\r\n        setIntervals(oldIntervals => {\r\n            return oldIntervals.map(item => {\r\n                return {...item, closeTime: globalTime.closeTime}\r\n            })\r\n        })\r\n    }, [globalTime.closeTime])\r\n\r\n    let weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\r\n\r\n    const handleAddPeriod = () => {\r\n        setIntervals(oldIntervals => {\r\n            return [\r\n                ...oldIntervals,\r\n                {openDay: openDay, closeDay: openDay, openTime: \"08:00\", closeTime: \"18:00\"}\r\n            ]\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n                <Typography variant=\"h6\" >\r\n                    {weekDays[openDay]}\r\n                </Typography>\r\n                <Button color=\"secondary\" onClick={handleAddPeriod}>\r\n                    <AddIcon/>\r\n                </Button>\r\n            </div>\r\n\r\n            {intervals.map((value, index) => {\r\n                return <React.Fragment>\r\n                    <Divider variant=\"middle\" />\r\n                    <ScheduleInterval index={index} intervals={intervals} setIntervals={setIntervals}/>\r\n                </React.Fragment>\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nDayComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    scheduleData: PropTypes.object.isRequired,\r\n    setScheduleData: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DayComponent)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {DatePicker, MuiPickersUtilsProvider, TimePicker} from '@material-ui/pickers';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport DayComponent from \"./DayComponent\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = theme => ({\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\"\r\n    },\r\n    root: {\r\n        padding: theme.spacing(2),\r\n        margin: theme.spacing(1)\r\n    },\r\n    pickerStyle: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    headerLeft: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"left\"\r\n    },\r\n    globalTimeEditLayout: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\",\r\n        margin: theme.spacing(0.5),\r\n        alignItems: \"center\",\r\n        flexFlow: \"row wrap\"\r\n    },\r\n    globalTimeEditLeft: {\r\n\r\n    },\r\n    globalTimePicker: {\r\n        margin: theme.spacing(0.5),\r\n        width: \"30%\"\r\n    }\r\n});\r\n\r\nfunction Schedule({classes, data, setData, index}){\r\n\r\n    const[periods, setPeriods] = useState([...data.periods])\r\n    const[globalTime, setGlobalTime] = useState({openTime: \"07:00\", closeTime: \"19:00\"})\r\n\r\n    const handleIntervalChange = (newIntervals, openDay) => {\r\n        setPeriods(oldPeriods => {\r\n            let filtered = oldPeriods.filter(item => item.openDay !== openDay)\r\n            if(newIntervals.length === 0)\r\n                return [...filtered]\r\n            return [\r\n                ...filtered,\r\n                ...newIntervals\r\n            ]\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setData(oldData => {\r\n            return oldData.map((schedule, i) => {\r\n                if( i === index){\r\n                    return {...schedule, periods: periods}\r\n                }else return schedule\r\n            })\r\n        })\r\n    }, [periods])\r\n\r\n    const generateWeekdayViews = () => {\r\n        let views = []\r\n        for(let i =0; i < 7; i++){\r\n            views.push(<DayComponent globalTime={globalTime} scheduleData={data} onChange={handleIntervalChange} setScheduleData={setData} openDay={i} key={i}/>)\r\n        }\r\n        return views\r\n    }\r\n\r\n    const updateFromTime = (value) => {\r\n        setData(oldData => {\r\n            return oldData.map((schedule, i) => {\r\n                if( i === index){\r\n                    return {...schedule, from: moment(value).format('MM-DD').toString()}\r\n                }else return schedule\r\n            })\r\n        })\r\n    }\r\n    const updateToTime = (value) => {\r\n        setData(oldData => {\r\n            return oldData.map((schedule, i) => {\r\n                if( i === index){\r\n                    return {...schedule, to: moment(value).format('MM-DD').toString()}\r\n                }else return schedule\r\n            })\r\n        })\r\n    }\r\n    const removeSchedule = () => {\r\n        setData(oldData => {\r\n            return oldData.filter((item, i) => index !== i)\r\n        })\r\n    }\r\n\r\n    const handleUpdateGlobalOpenTime = (value) => {\r\n        setGlobalTime(data => {\r\n            return {...data, openTime: moment(value).format(\"HH:mm\").toString()}\r\n        })\r\n    }\r\n    const handleUpdateGlobalCloseTime = (value) => {\r\n        setGlobalTime(data => {\r\n            return {...data, closeTime: moment(value).format(\"HH:mm\").toString()}\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Paper className={classes.root}>\r\n            <div className={classes.header}>\r\n                <div className={classes.headerLeft}>\r\n                    {data.scheduleDefault &&\r\n                    <Typography variant=\"h6\" >\r\n                        Date: Year round\r\n                    </Typography>}\r\n                    {!data.scheduleDefault &&\r\n                        <React.Fragment>\r\n                            <DatePicker\r\n                                className={classes.pickerStyle}\r\n                                views={[\"month\", \"date\"]}\r\n                                label=\"From\"\r\n                                value={moment(data.from, \"MM-DD\")}\r\n                                onChange={updateFromTime}\r\n                            />\r\n                            <DatePicker\r\n                                className={classes.pickerStyle}\r\n                                views={[\"month\", \"day\"]}\r\n                                label=\"To\"\r\n                                value={moment(data.to, \"MM-DD\")}\r\n                                onChange={updateToTime}\r\n                            />\r\n                        </React.Fragment>\r\n                    }\r\n                </div>\r\n                {!data.scheduleDefault &&\r\n                <Button color=\"secondary\" onClick = {removeSchedule}>\r\n                    <RemoveIcon/>\r\n                </Button>}\r\n\r\n            </div>\r\n            <br/>\r\n            <div className={classes.globalTimeEditLayout}>\r\n                <div className={classes.globalTimeEditLeft}>\r\n                    <TimePicker\r\n                        margin=\"normal\"\r\n                        ampm={false}\r\n                        label=\"Opens\"\r\n                        className={classes.globalTimePicker}\r\n                        format=\"HH:mm\"\r\n                        value={moment(globalTime.openTime, \"HH:mm\")}\r\n                        onChange={handleUpdateGlobalOpenTime}\r\n                        InputProps={{\r\n                            disableUnderline: true,\r\n                        }}\r\n                    />\r\n                    <TimePicker\r\n                        margin=\"normal\"\r\n                        ampm={false}\r\n                        className={classes.globalTimePicker}\r\n                        label=\"Closes\"\r\n                        format=\"HH:mm\"\r\n                        value={moment(globalTime.closeTime, \"HH:mm\")}\r\n                        onChange={handleUpdateGlobalCloseTime}\r\n                        InputProps={{\r\n                            disableUnderline: true,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {generateWeekdayViews()}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nSchedule.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    setData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Schedule)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Schedule from \"../Schedule\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = theme => ({\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\",\r\n        flexWrap: \"wrap\"\r\n    }\r\n});\r\n\r\nfunction SchedulesWrapper({classes, scheduleData, setScheduleData, isScheduleEnabled, setIsScheduleEnabled}){\r\n\r\n    const addSchedule = () => {\r\n        setScheduleData(oldData => {\r\n            return [\r\n                ...oldData,\r\n                {scheduleDefault: false, from: \"01-01\", to: \"01-02\", periods : []}\r\n            ]\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className={classes.header}>\r\n                <Typography variant=\"h6\" >\r\n                    Working schedule\r\n                </Typography>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={isScheduleEnabled}\r\n                            onChange={() => setIsScheduleEnabled(state => !state)}\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                    label=\"Enable schedule for this place?\"\r\n                />\r\n            </div>\r\n            <br/>\r\n            {isScheduleEnabled &&\r\n                <React.Fragment>\r\n                    {scheduleData.map((value, index) => {\r\n                        return <Schedule data={value} index={index} setData={setScheduleData}/>\r\n                    })}\r\n                    <Button style={{float: \"right\"}}color=\"secondary\" onClick={addSchedule}>\r\n                        <AddIcon/>\r\n                    </Button>\r\n                </React.Fragment>}\r\n        </div>\r\n    )\r\n}\r\n\r\nSchedulesWrapper.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    scheduleData: PropTypes.array.isRequired,\r\n    setScheduleData: PropTypes.func.isRequired,\r\n    isScheduleEnabled: PropTypes.object.isRequired,\r\n    setIsScheduleEnabled: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SchedulesWrapper)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PropTypes, {func} from \"prop-types\";\r\nimport {Paper} from '@material-ui/core';\r\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\r\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\r\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\r\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\r\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\r\nimport initialScheduleData from \"../components/add_place_components/initialScheduleData\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Reviews from \"../components/add_place_components/Reviews\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport SchedulesWrapper from \"../components/add_place_components/SchedulesWrapper\";\r\nimport MapToolbar from \"../components/maps/MapToolbar\";\r\nimport PlaceMap from \"../components/maps/PlaceMap\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paperContent: {\r\n        marginTop: theme.spacing(4),\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            width: \"95%\",\r\n            padding: theme.spacing(2),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"70%\",\r\n            padding: theme.spacing(4),\r\n        },\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            height: \"100%\",\r\n        },\r\n    },\r\n    loader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"100vw\",\r\n        height: \"100vh\"\r\n    },\r\n    content: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        height: `calc(93vh - 64px)`,\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            width: \"100%\",\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"auto\",\r\n            padding: theme.spacing(8),\r\n        },\r\n        overflowY: \"auto\"\r\n    },\r\n    bottom: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            position: \"fixed\",\r\n            height: \"7vh\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        width: \"100%\",\r\n        zIndex: 5,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-around\",\r\n        padding: theme.spacing(1),\r\n    }\r\n});\r\n\r\n\r\nfunction AddPlace({classes, match}) {\r\n    const [placeInfo, setPlaceInfo] = useState({\r\n        placeId: \"\",\r\n        name: \"\", description: \"\", website: \"\", phoneNumber: \"\",\r\n        hasSchedule: false, isPublic: false, isVerified: true, overallStarRating: 0, totalReviews: 0,\r\n        source: \"\", price: \"\", averageTimeSpent: \"0\"\r\n    });\r\n\r\n\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    const [photos, setPhotos] = useState([]);\r\n\r\n    const [locationData, setLocationData] = useState({\r\n        city: '',\r\n        address: '',\r\n        country: '',\r\n        latitude: 54.687157,\r\n        longitude: 25.279652,\r\n        county: '',\r\n        municipality: ''\r\n    });\r\n    const [parkingMarkerData, setParkingMarkerData] = useState({\r\n        city: '',\r\n        address: '',\r\n        country: '',\r\n        latitude: 54.687157,\r\n        longitude: 25.279652,\r\n        county: '',\r\n        municipality: ''\r\n    });\r\n    const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\r\n\r\n    const [sources, setSources] = useState([]);\r\n\r\n    const [scheduleData, setScheduleData] = useState(initialScheduleData);\r\n    const [isScheduleEnabled, setIsScheduleEnabled] = useState(false);\r\n\r\n    const [placeId, setPlaceId] = useState(match.params.placeId);\r\n\r\n    const [firstTimeLoading, setFirstTimeLoading] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [error, setError] = useState({name: false});\r\n    const [checkErrors, setCheckErrors] = useState(false);\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const {title, setTitle} = UseAppBarTitleContext();\r\n\r\n    const ColorButton = withStyles((theme) => ({\r\n        root: {\r\n            color: theme.palette.getContrastText(green[500]),\r\n            backgroundColor: green[500],\r\n            '&:hover': {\r\n                backgroundColor: green[700],\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n    useEffect(()=>{\r\n        if(placeId!==undefined){\r\n            console.log(\"Getting place location\");\r\n            getPlaceInfo()\r\n        }\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        //Loaded place for editing\r\n        if (placeId === undefined) {\r\n            setTitle(\"Add new place\");\r\n            console.log(\"Came here to add new place\");\r\n            setFirstTimeLoading(false) //Just loaded add place window\r\n        }\r\n        //New Place has been just inserted, thus inserting other place info\r\n        if (placeId !== undefined && firstTimeLoading === false) {\r\n            console.log(\"Just added new place\");\r\n            Promise.all([\r\n                updateTagsData(placeId),\r\n                updateParkingData(placeId),\r\n                updateCategoriesData(placeId),\r\n                updatePhotoData(placeId),\r\n                updateSchedule(placeId),\r\n                updateSources(placeId)\r\n            ]).then(responses => {\r\n                formFeedback(true, Strings.SNACKBAR_PLACE_INSERTED_SUCCESS)\r\n            }).catch(error => {\r\n                formFeedback(false)\r\n            })\r\n        }\r\n\r\n    }, [placeId]);\r\n\r\n    useEffect(() => {\r\n        if (firstTimeLoading === false) {\r\n            console.log(\"Making this place public\");\r\n            updateAll()\r\n        }\r\n    }, [placeInfo['isPublic']]);\r\n\r\n    function getPlaceInfo() {\r\n        API.Places.getPlaceById(\"?full=true&p=\" + placeId).then(response => {\r\n            setAllData(response)\r\n            setTitle(\"Editing place/\" + response.name);\r\n        }).catch(error => {\r\n            formFeedback(false)\r\n        })\r\n    }\r\n\r\n    function setAllData(place) {\r\n        setPlaceInfo({\r\n            placeId: place.placeId,\r\n            name: place.name,\r\n            description: place.description,\r\n            website: place.website,\r\n            phoneNumber: place.phoneNumber,\r\n            hasSchedule: place.hasSchedule,\r\n            isPublic: place.isPublic,\r\n            isVerified: place.isVerified,\r\n            overallStarRating: place.overallStarRating,\r\n            totalReviews: place.totalReviews,\r\n            price: place.price,\r\n            averageTimeSpent: place.averageTimeSpent\r\n        });\r\n\r\n        setLocationData({\r\n            city: place.city,\r\n            address: place.address,\r\n            country: place.country,\r\n            latitude: place.latitude,\r\n            longitude: place.longitude\r\n        });\r\n\r\n        setParkingMarkerData({\r\n            city: place.city,\r\n            address: place.address,\r\n            country: place.country,\r\n            latitude: place.latitude,\r\n            longitude: place.longitude\r\n        });\r\n\r\n        setSources(place.sources);\r\n        setSelectedTags(place.tags);\r\n        setSelectedCategories(place.categories);\r\n        if (place.schedule.length > 0) {\r\n            setScheduleData([...place.schedule]);\r\n            setIsScheduleEnabled(true)\r\n        } else setIsScheduleEnabled(false);\r\n\r\n        setAllSelectedParkingData(place.parking);\r\n        setPhotos(place.photos);\r\n        setFirstTimeLoading(false)\r\n    }\r\n\r\n    function formFeedback(success, message = Strings.SNACKBAR_ERROR) {\r\n        addConfig(success, message);\r\n        setIsLoading(false)\r\n    }\r\n\r\n    function saveChanges() {\r\n        if (placeId === undefined) {\r\n            addAlertConfig(Strings.DIALOG_PLACE_INSERT_TITLE, Strings.DIALOG_PLACE_INSERT, [{\r\n                name: \"Insert\", action: () => {\r\n                    setIsLoading(true);\r\n                    insertBasicPlaceInfo()\r\n                }\r\n            }])\r\n        } else {\r\n            addAlertConfig(Strings.DIALOG_PLACE_UPDATE_TITLE, Strings.DIALOG_PLACE_UPDATE, [{\r\n                name: \"save and publish\", action: () => {\r\n                    let plc = Object.assign({}, placeInfo, {});\r\n                    plc.isPublic = 1;\r\n                    setPlaceInfo(plc);\r\n                    setIsLoading(true);\r\n                    updateAll()\r\n                }\r\n            }, {\r\n                name: \"save\", action: () => {\r\n                    setIsLoading(true);\r\n                    updateAll()\r\n                }\r\n            }])\r\n        }\r\n    }\r\n\r\n    function updateAll() {\r\n        Promise.all([\r\n            updatePlaceInfo(),\r\n            updateTagsData(placeId),\r\n            updatePhotoData(placeId),\r\n            updateCategoriesData(placeId),\r\n            updateParkingData(placeId),\r\n            updateSchedule(placeId),\r\n            updateSources(placeId)\r\n        ]).then(response => {\r\n            formFeedback(true, Strings.SNACKBAR_CHANGES_SAVED);\r\n        }).catch(err => {\r\n            formFeedback(false)\r\n        })\r\n    }\r\n\r\n    function updatePlaceInfo() {\r\n        API.Places.updatePlace(formPlaceInfo()).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n\r\n    }\r\n\r\n    function insertBasicPlaceInfo() {\r\n        API.Places.insertPlace(formPlaceInfo()).then(placeId => {\r\n            setPlaceId(placeId)\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    function updateParkingData(id) {\r\n        API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\" + id).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    function updateTagsData(id) {\r\n        API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\" + id).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    function updateSources(id) {\r\n        API.SourcePlace.updateSourcesForPlace(sources, \"?p=\" + id).then(response => {\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n\r\n    function updateCategoriesData(id) {\r\n        API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\" + id).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    function updatePhotoData(id) {\r\n        API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\" + id).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n\r\n    function updateSchedule(id) {\r\n        API.Schedule.updateScheduleForPlace(isScheduleEnabled ? scheduleData : [], \"?id=\" + id).then(response => {\r\n        }).catch(er => {\r\n        })\r\n\r\n    }\r\n\r\n    function formPlaceInfo() {\r\n        let d = Object.assign(placeInfo, locationData);\r\n        return d\r\n    }\r\n\r\n\r\n    function publishPlace() {\r\n        addAlertConfig(Strings.DIALOG_PLACE_PUBLISH_TITLE, placeInfo['isPublic'] ? Strings.DIALOG_PLACE_UNPUBLISH_MESSAGE : Strings.DIALOG_PLACE_PUBLISH_MESSAGE,\r\n            [{\r\n                name: \"Agree\", action: () => {\r\n                    let obj = Object.assign({}, placeInfo, {});\r\n                    obj['isPublic'] = !obj['isPublic'];\r\n                    setPlaceInfo(obj);\r\n                }\r\n            }])\r\n\r\n    }\r\n\r\n    function verifyPlace() {\r\n        addAlertConfig(Strings.DIALOG_PLACE_VERIFY_TITLE, Strings.DIALOG_PLACE_VERIFY_MESSAGE, [{\r\n            name: \"agree\", action: () => {\r\n                let obj = Object.assign({}, placeInfo, {});\r\n                obj['isPublic'] = 1;\r\n                obj['isVerified'] = 1;\r\n                setPlaceInfo(obj);\r\n            }\r\n        }])\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            {firstTimeLoading ? <div className={classes.loader}><CircularProgress/></div> :\r\n                <div className={classes.content}>\r\n\r\n\r\n                    <Paper elevation={4} className={classes.paperContent}>\r\n                        <BasicPlaceInfo\r\n                            error={error}\r\n                            setError={setError}\r\n                            checkErrors={checkErrors}\r\n                            placeInfo={placeInfo}\r\n                            setPlaceInfo={setPlaceInfo}\r\n                            selectedSources={sources}\r\n                            setSelectedSources={setSources}\r\n                        />\r\n\r\n                    </Paper>\r\n\r\n                    {placeId !== undefined ?\r\n                        <Paper elevation={4} className={classes.paperContent}>\r\n                            <Reviews\r\n                                placeInfo={placeInfo}\r\n                            />\r\n                        </Paper>\r\n                        : null}\r\n\r\n\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <PhotosInfo\r\n                        photos={photos}\r\n                        setPhotos={setPhotos}\r\n                    />\r\n                </Paper>\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <PlaceLocation\r\n                        placeInfo={placeInfo}\r\n                        locationData={locationData}\r\n                        setLocationData={setLocationData}/>\r\n                </Paper>\r\n            <Paper elevation = {4} className={classes.paperContent}>\r\n                <ParkingLocation\r\n                    placeInfo={placeInfo}\r\n                    allSelectedParkingData={allSelectedParkingData}\r\n                    setAllSelectedParkingData={setAllSelectedParkingData}\r\n                    locationData={parkingMarkerData}\r\n                    setLocationData={setParkingMarkerData}/>\r\n            </Paper>\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <PlaceDiscovery\r\n                        selectedTags={selectedTags}\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedCategories={selectedCategories}\r\n                        setSelectedCategories={setSelectedCategories}/>\r\n                </Paper>\r\n\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <SchedulesWrapper isScheduleEnabled={isScheduleEnabled} setIsScheduleEnabled={setIsScheduleEnabled} setScheduleData={setScheduleData} scheduleData={scheduleData}/>\r\n                </Paper>\r\n            </div> }\r\n\r\n\r\n            {isLoading ? <LinearProgress/> : null}\r\n\r\n            <Paper elevation={1} className={classes.bottom}>\r\n\r\n                {\r\n                    placeInfo['isVerified'] === false && placeId !== undefined ?\r\n                        <ColorButton\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                                verifyPlace()\r\n                            }}\r\n                            className={classes.button}\r\n                        >\r\n                            Verify place\r\n                        </ColorButton>\r\n                        :\r\n                        <FormControlLabel\r\n                            control={<Switch checked={placeInfo['isPublic']} onChange={() => {\r\n                                publishPlace()\r\n                            }\r\n                            } name=\"isPublic\"/>}\r\n                            label=\"Make this place public\"\r\n                        />}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => saveChanges()}\r\n                    className={classes.button}>\r\n                    Save\r\n                </Button>\r\n\r\n\r\n            </Paper>\r\n        </div>)\r\n\r\n}\r\n\r\nAddPlace.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AddPlace)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {Fragment, useState} from \"react\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n\r\n    },\r\n    media: {\r\n        height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n})\r\n\r\nfunction CategoriesDisplay({categories}){\r\n    return(\r\n        categories != null &&\r\n        <Box component=\"ul\"  style={{\r\n            display: 'flex',\r\n            justifyContent: 'left',\r\n            flexWrap: 'wrap',\r\n            listStyle: 'none',\r\n            padding: '0px'\r\n        }}>\r\n            {categories.map((data, index) => {\r\n                return (\r\n                    <li key={index}>\r\n                        <Chip\r\n                            variant=\"outlined\"\r\n                            style={{margin: \"5px\"}}\r\n                            label={data.name}\r\n                        />\r\n                    </li>\r\n\r\n                );\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction SubheaderDisplay({city, address, priceRange, rating}){\r\n    return(\r\n        <div>\r\n            {rating != null &&\r\n            <Fragment><Rating\r\n                readOnly={true}\r\n                value={rating}\r\n            /><br/></Fragment>}\r\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ApiPlaceCard({classes, placeData, renderActionArea}){\r\n\r\n    function truncateText(text){\r\n        if(text == null)\r\n            return \"\"\r\n        if(text.length > 500){\r\n            return text.substring(0, 500) + \"...\";\r\n        }else{\r\n            return text\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                action={\r\n                    renderActionArea != null && renderActionArea()\r\n                }\r\n                title={placeData.name}\r\n                subheader={<SubheaderDisplay  city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\r\n\r\n            />\r\n            {placeData.photos != null && placeData.photos.length > 0 &&\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={placeData.photos[0].url}\r\n            />}\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {truncateText(placeData.description)}\r\n                </Typography>\r\n\r\n                <CategoriesDisplay categories={placeData.categories}/>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n                {placeData.website}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nApiPlaceCard.propTypes = {\r\n    placeData: PropTypes.object.isRequired,\r\n    renderActionArea: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(ApiPlaceCard)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport {debounce} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: theme.spacing(2)\r\n        // width: 400,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    divider: {\r\n        // height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function SearchInputComponent({hint, searchCallback}) {\r\n    const classes = useStyles();\r\n\r\n    const debouncedInput = (event) => {\r\n        searchCallback(event.target.value)\r\n    }\r\n\r\n    const debounceInput = debounce(event => debouncedInput(event), 500)\r\n\r\n    const handleInput = (event) => {\r\n        event.persist()\r\n        debounceInput(event)\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder={hint}\r\n                inputProps={{ 'aria-label': hint }}\r\n                onChange={handleInput}\r\n            />\r\n            <IconButton className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n        </Paper>\r\n    );\r\n}","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\"\r\nimport ApiPlaceCard from \"../components/ApiPlaceCard\";\r\nimport API from \"../Networking/API\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport debounce from 'lodash/debounce'\r\nimport Masonry from \"react-masonry-component\";\r\nimport SearchInputComponent from \"../components/SearchInputComponent\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        overflow: 'scroll',\r\n        width: \"100%\",\r\n        padding: theme.spacing(1),\r\n        height:`calc(100vh - 64px)`,\r\n        paddingTop: \"9vh\",\r\n    },\r\n    topBar: {\r\n        height: \"8vh\",\r\n        position: \"absolute\",\r\n        width: \"60%\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        left: 0,\r\n        right: 0,\r\n        justifyContent: \"center\",\r\n        zIndex: 1\r\n    },\r\n    searchBox: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    placeApiCard: {\r\n        [theme.breakpoints.down('lg')]: {\r\n            width: \"95%\",\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: \"28vw\",\r\n        },\r\n        // minWidth: \"400px\",\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nfunction ApiPlaces({classes}){\r\n\r\n    const [data, setData] = useState([]);\r\n    const [isLoadingData, setIsLoadingData] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const loadDataFunc = (query) => {\r\n        setData([])\r\n        setIsLoadingData(true)\r\n        API.Places.searchApiPlaces(\"?keyword=\" + encodeURI(query)).then(response => {\r\n            setData([...response])\r\n        }).catch(error => {\r\n            addConfig(false, \"The request did not go through.\")\r\n        }).finally(() => {\r\n            setIsLoadingData(false)\r\n        })\r\n    }\r\n\r\n    const handleSearch = (word) => {\r\n        if(word.length > 3)\r\n            loadDataFunc(word)\r\n    }\r\n\r\n    return(\r\n        <div style={{position: \"relative\"}}>\r\n            <div className = {classes.topBar}>\r\n                <SearchInputComponent searchCallback={handleSearch} hint=\"Search api places\" style={classes.searchBox} />\r\n            </div>\r\n\r\n            <div className={classes.root}>\r\n                <Masonry\r\n                    style={{margin: \"0 auto\"}}\r\n                    elementType={'div'} // default 'div'\r\n                    options={{\r\n                        isFitWidth: true\r\n                    }} // default {}\r\n                    disableImagesLoaded={false} // default false\r\n                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\r\n                >\r\n\r\n                    {data.map(item => {\r\n                        return <ApiPlaceCard classes ={{ root: classes.placeApiCard}} key={item.placeId} placeData = {item} style={{boxSizing: 'border-box'}}/>\r\n                    })}\r\n\r\n                    {\r\n                        data.length === 0 && !isLoadingData &&\r\n                        <Typography variant=\"subtitle1\">No results</Typography>\r\n                    }\r\n                    {\r\n                        isLoadingData &&\r\n                        <CircularProgress  />\r\n                    }\r\n\r\n                </Masonry>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ApiPlaces)","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {'Copyright © '}\r\n            Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: '100vh',\r\n    },\r\n    main: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: 'auto',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n    },\r\n}));\r\n\r\nexport default function NotFoundPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\r\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\r\n                    Page not found\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    {'Try something else'}\r\n                </Typography>\r\n            </Container>\r\n            <footer className={classes.footer}>\r\n                <Container maxWidth=\"sm\">\r\n                    <Copyright />\r\n                </Container>\r\n            </footer>\r\n        </div>\r\n    );\r\n}","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst styles = theme => ({\r\n    cardRoot: {\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            display: 'flex',\r\n            // alignItems: \"flex-start\"\r\n        },\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 5\r\n    },\r\n    content: {\r\n        flex: '1 0 auto',\r\n    },\r\n    cover: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            height: \"200px\",\r\n        },\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            flex: 1,\r\n            height: \"auto\",\r\n        },\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\"\r\n    },\r\n    addParkingWrapper: {\r\n        display: \"inline-block\"\r\n    }\r\n})\r\n\r\n\r\nfunction TourPlaceComponent({classes, elementData, removeCallback, addTransportCallback, displayNoTransportWarning}) {\r\n\r\n    function truncateText(text) {\r\n        if (text == null)\r\n            return \"\"\r\n        if (text.length > 500) {\r\n            return text.substring(0, 500) + \"...\";\r\n        } else {\r\n            return text\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card className={classes.cardRoot}>\r\n\r\n                {elementData.data.details.photos != null && elementData.data.details.photos.length > 0 &&\r\n                <CardMedia\r\n                    className={classes.cover}\r\n                    image={elementData.data.details.photos[0].url}\r\n\r\n                />\r\n                }\r\n\r\n                <div className={classes.details}>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                            {elementData.data.details.name}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                            {truncateText(elementData.data.details.description)}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </div>\r\n                <CardHeader\r\n                    action={\r\n                        <IconButton aria-label=\"remove\" onClick={() => removeCallback(elementData)}>\r\n                            <RemoveIcon/>\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </Card>\r\n\r\n            {displayNoTransportWarning &&\r\n            <Alert severity=\"error\">No transport from this place specified</Alert>}\r\n\r\n            <div className={classes.addParkingWrapper}>\r\n                <Button style={{display: \"inline\"}} color=\"secondary\" onClick={() => addTransportCallback(elementData)}>\r\n                    <AddIcon/>\r\n                </Button>\r\n                <Typography style={{display: \"inline\"}} variant=\"subtitle1\">\r\n                    Add transport from this place\r\n                </Typography>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nTourPlaceComponent.propTypes = {\r\n    elementData: PropTypes.object.isRequired,\r\n    removeCallback: PropTypes.func.isRequired,\r\n    addTransportCallback: PropTypes.func.isRequired,\r\n    displayNoTransportWarning: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles)(TourPlaceComponent)\r\n","import React, {createRef, useCallback, useEffect, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MetroIcon from '@material-ui/icons/DirectionsTransit';\r\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\r\nimport CarIcon from '@material-ui/icons/DriveEta';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\nimport FlightIcon from '@material-ui/icons/Flight';\r\nimport TramIcon from '@material-ui/icons/Tram';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\"\r\n    },\r\n    transportSelectWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    transportSelect: {\r\n        marginLeft: theme.spacing(1),\r\n        width: \"100px\"\r\n    }\r\n});\r\n\r\nconst transportTypes = [\r\n    {\r\n        icon: <DirectionsWalkIcon/>,\r\n        label: \"Walk\"\r\n    },\r\n    {\r\n        icon: <MetroIcon/>,\r\n        label: \"Metro\"\r\n    },\r\n    {\r\n        icon: <DirectionsBikeIcon/>,\r\n        label: \"Bike\"\r\n    },\r\n    {\r\n        icon: <DirectionsBusIcon/>,\r\n        label: \"Bus\"\r\n    },\r\n    {\r\n        icon: <CarIcon/>,\r\n        label: \"Car\"\r\n    },\r\n    {\r\n        icon: <TrainIcon/>,\r\n        label: \"Train\"\r\n    },\r\n    {\r\n        icon: <FlightIcon/>,\r\n        label: \"Plane\"\r\n    },\r\n    {\r\n        icon: <TramIcon/>,\r\n        label: \"Tram\"\r\n    }\r\n]\r\n\r\nfunction TransportItem({classes, transportId, transportChangeCallback, transportRemoveCallback}) {\r\n\r\n    const [currentTransport, setCurrentTransport] = useState(transportId == null ? 0 : transportId)\r\n\r\n    const handleTransportChange = (e) => {\r\n        setCurrentTransport(e.target.value)\r\n        transportChangeCallback({transport: parseInt(e.target.value)})\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MoreVertIcon/>\r\n            <div className={classes.transportSelectWrapper}>\r\n                {transportTypes[currentTransport].icon}\r\n                <FormControl className={classes.transportSelect} >\r\n                    <NativeSelect\r\n                        value={currentTransport}\r\n                        onChange={handleTransportChange}\r\n                    >\r\n                        {transportTypes.map((item, index) => {\r\n                            return <option key={index} value={index}> {item.label}</option>\r\n                        })}\r\n                    </NativeSelect>\r\n                </FormControl>\r\n                <IconButton aria-label=\"remove\" onClick={() => transportRemoveCallback()}>\r\n                    <RemoveIcon />\r\n                </IconButton>\r\n            </div>\r\n            <MoreVertIcon/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TransportItem)","import {withStyles} from \"@material-ui/core/styles\";\r\nimport TourPlaceComponent from \"./TourPlaceComponent\";\r\nimport React, {useEffect, useMemo} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ElementType} from \"./Tour\";\r\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport TransportItem from \"./TransportItem\";\r\nimport shortid from 'shortid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst styles = theme => ({\r\n    tourPlaceComponent: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\",\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst TourPlaceSortable = SortableElement(({displayNoTransportWarning, elementData, removePlaceCallback, classes, addTransportCallback}) => (\r\n    <div>\r\n        <TourPlaceComponent removeCallback={removePlaceCallback} classes={{root: classes.tourPlaceComponent}}\r\n                            addTransportCallback={addTransportCallback} elementData={elementData}\r\n                            displayNoTransportWarning={displayNoTransportWarning}/>\r\n    </div>\r\n));\r\nconst TransportItemSortable = SortableElement(({transportId, transportChangeCallback, transportRemoveCallback}) => (\r\n    <div>\r\n        <TransportItem transportId={transportId} transportRemoveCallback={transportRemoveCallback} transportChangeCallback={transportChangeCallback}/>\r\n    </div>\r\n));\r\n\r\nconst SortableList = SortableContainer(({currentDay, removeElementCallback, tourInfo, classes, addTransportCallback, transportChangeCallback}) => {\r\n\r\n    const shouldDisplayNoTransportWarning = (index) => {\r\n        let elements = tourInfo.days[currentDay].tour\r\n        return ((elements.length -1 ) > index) && elements[index + 1].type !== ElementType.transport\r\n    }\r\n\r\n    return (\r\n\r\n        <ul>\r\n            {tourInfo.days[currentDay].tour.map((item, index) => {\r\n\r\n                switch (item.type) {\r\n                    case ElementType.place:\r\n                        return <TourPlaceSortable key={item.data.details.placeId} index={index}\r\n                                                  addTransportCallback={addTransportCallback} elementData={item}\r\n                                                  classes={classes}\r\n                                                  displayNoTransportWarning={shouldDisplayNoTransportWarning(index)}\r\n                                                  removePlaceCallback={() => removeElementCallback(index)}/>\r\n                    case ElementType.transport:\r\n                        return <TransportItemSortable key={item.data.elementIdentifier} index={index}\r\n                                                      transportId={item.data.transport}\r\n                                                      transportRemoveCallback = {() => removeElementCallback(index)}\r\n                                                      transportChangeCallback={(transport) => transportChangeCallback(index, transport)}/>\r\n                }\r\n            })}\r\n        </ul>\r\n    )\r\n});\r\n\r\nfunction TourPlacesWrapper({classes, tourInfo, tourInfoReducer, currentDay, errorInfo, setErrorInfo}) {\r\n\r\n    const removeElementCallback = (index) => {\r\n        tourInfoReducer({\r\n            type: 'REMOVE_ELEMENT',\r\n            day: currentDay,\r\n            index: index\r\n        })\r\n    }\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        tourInfoReducer({\r\n            type: 'MOVE_ELEMENT',\r\n            day: currentDay,\r\n            oldIndex: oldIndex,\r\n            newIndex: newIndex\r\n        })\r\n    }\r\n\r\n    const handleTransportChange = (index, data) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_ELEMENT',\r\n            day: currentDay,\r\n            index: index,\r\n            data: data\r\n        })\r\n    }\r\n\r\n    const addTransportCallback = (details) => {\r\n        tourInfoReducer({\r\n            type: 'INSERT_TRANSPORT_FOR_PLACE',\r\n            placeId: details.data.details.placeId,\r\n            day: currentDay,\r\n            data: {type: ElementType.transport, data: {transport: 0, elementIdentifier: shortid.generate()}}\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(tourInfo.days[currentDay].tour)\r\n    }, [tourInfo])\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {tourInfo.days[currentDay].tour.length === 0 &&\r\n            <Alert severity=\"warning\">You have not added any places for the currently selected day.</Alert>}\r\n            <SortableList\r\n                pressDelay={200}\r\n                disableAutoscroll={false}\r\n                currentDay={currentDay}\r\n                tourInfo={tourInfo}\r\n                transportChangeCallback={handleTransportChange}\r\n                onSortEnd={onSortEnd}\r\n                classes={classes}\r\n                addTransportCallback={addTransportCallback}\r\n                removeElementCallback={removeElementCallback}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nTourPlacesWrapper.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourPlacesWrapper)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport SearchInputComponent from \"../SearchInputComponent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\nimport DnsIcon from \"@material-ui/icons/Dns\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport API from \"../../Networking/API\";\r\n\r\nconst styles = theme => ({\r\n    searchInputComponent: {\r\n\r\n    },\r\n    placeCard: {\r\n        margin: theme.spacing(1, 8, 1, 8),\r\n    },\r\n})\r\n\r\n\r\nfunction PlaceSearch({classes, addPlaceCallback, apiPlacesFound, setApiPlacesFound, localPlacesFound, setLocalPlacesFound}) {\r\n\r\n    const [apiPlacesLoading, setApiPlacesLoading] = useState(false)\r\n    const [localPlacesLoading, setLocalPlacesLoading] = useState(false)\r\n\r\n    const placeType = {\r\n        local: 0,\r\n        api: 1\r\n    }\r\n\r\n    const generatePlaceCards = () => {\r\n        let genProps = (placeInfo, type) => {\r\n            return {\r\n                classes: {root: classes.placeCard},\r\n                key: placeInfo.placeId,\r\n                renderActionArea: () => {\r\n                    return (\r\n                        <div>\r\n                            <Button color=\"primary\" onClick={() => addPlaceCallback(placeInfo, type)}>\r\n                                <AddIcon/>\r\n                            </Button>\r\n                            <Tooltip title={type === placeType.local ? \"This place is from our database\" : \"This place is from API\"} aria-label=\"add\">\r\n                                {type === placeType.local ? <LocalLibraryIcon/> : <DnsIcon/>}\r\n                            </Tooltip>\r\n                        </div>\r\n                    )\r\n                },\r\n                placeData : placeInfo\r\n            }\r\n        }\r\n\r\n        let mappedPlaces = []\r\n        localPlacesFound.forEach(item => {\r\n            mappedPlaces.push(<ApiPlaceCard {...genProps(item, placeType.local)}/>)\r\n        })\r\n        apiPlacesFound.forEach(item => {\r\n            mappedPlaces.push( <ApiPlaceCard {...genProps(item, placeType.api)}/>)\r\n        })\r\n        return mappedPlaces\r\n    }\r\n\r\n    const searchCallback = (keyword) => {\r\n        if(keyword.length < 3)\r\n            return;\r\n        setLocalPlacesFound([])\r\n        setApiPlacesFound([])\r\n        setApiPlacesLoading(true)\r\n        setLocalPlacesLoading(true)\r\n        API.Places.getAllPlacesAdmin(\"?keyword=\" + keyword).then(response=>{\r\n            setLocalPlacesFound(response.list)\r\n            setLocalPlacesLoading(false)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n\r\n        API.Places.searchApiPlaces(\"?keyword=\" + keyword).then(response => {\r\n            setApiPlacesFound(response)\r\n            setApiPlacesLoading(false)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <SearchInputComponent hint=\"Search for a place\" searchCallback={searchCallback} className={classes.searchInputComponent}/>\r\n            {(localPlacesLoading || apiPlacesLoading) ?\r\n                <CircularProgress  /> :\r\n                <React.Fragment>\r\n                    {generatePlaceCards()}\r\n                </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PlaceSearch)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    radioButtonArea: {\r\n    },\r\n    cardArea: {\r\n        flex: 1,\r\n        display: \"flex\"\r\n    },\r\n    content: {\r\n        flex: '1 1 auto',\r\n    },\r\n    descriptionInput: {\r\n        marginTop: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    },\r\n    headerWrap: {}\r\n})\r\n\r\nfunction DayCard({classes, onSelectCallback, index, currentDay, tourInfoReducer, description, handleRemoveDay}) {\r\n\r\n    const updateDescriptionGlobally = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_DAY',\r\n            day: index,\r\n            data: {\r\n                description: e\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.radioButtonArea}>\r\n                <Radio checked={index === currentDay} onChange={(e) => {\r\n                    onSelectCallback(index)\r\n                }}/>\r\n            </div>\r\n            <Card className={classes.cardArea}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        Day {index + 1}\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                        className={classes.descriptionInput}\r\n                        multiline\r\n                        label=\"Description\"\r\n                        value={description}\r\n                        variant=\"outlined\"\r\n                        onChange={(e) => {\r\n                            updateDescriptionGlobally(e.target.value)\r\n                        }}\r\n                    />\r\n                </CardContent>\r\n                <CardHeader\r\n                    action={\r\n                        <Button startIcon={<RemoveIcon/>} aria-label=\"remove\" onClick={() => handleRemoveDay(index)}/>\r\n                    }\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nDayCard.propTypes = {\r\n    onSelectCallback: PropTypes.func.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DayCard)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport DayCard from \"./DayCard\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport shortid from 'shortid';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    addDayButton: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    footerWrapper: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n})\r\n\r\nconst DayCardSortable = SortableElement(({dayInfo, day, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => (\r\n    <DayCard\r\n        description={dayInfo.description}\r\n        currentDay={currentDay}\r\n        index={day}\r\n        handleRemoveDay={removeDayCallback}\r\n        onSelectCallback={onSelectCallback}\r\n        tourInfoReducer={tourInfoReducer}/>\r\n));\r\n\r\nconst SortableList = SortableContainer(({elements, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => {\r\n\r\n    return (\r\n        <ul style={{padding: \"0px\"}}>\r\n            {elements.map((item, index) => {\r\n                return <DayCardSortable\r\n                    currentDay={currentDay}\r\n                    day={index}\r\n                    index={index}\r\n                    removeDayCallback={removeDayCallback}\r\n                    key={item.elementIdentifier}\r\n                    dayInfo={item}\r\n                    onSelectCallback={onSelectCallback}\r\n                    tourInfoReducer={tourInfoReducer}/>\r\n            })}\r\n        </ul>\r\n    );\r\n});\r\n\r\nfunction DaysWrapper({classes, currentDay, setCurrentDay, tourInfo, tourInfoReducer}) {\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    const handleSelect = (index) => {\r\n        setCurrentDay(index)\r\n    }\r\n\r\n    const addDayHandler = () => {\r\n        tourInfoReducer({\r\n            type: 'ADD_DAY',\r\n            data: {\r\n                description: \"\",\r\n                elementIdentifier: shortid.generate(),\r\n                tour: []\r\n            }\r\n        })\r\n    }\r\n\r\n    const removeDay = (day) => {\r\n        tourInfoReducer({\r\n                type: 'REMOVE_DAY',\r\n                day: day,\r\n            }\r\n        )\r\n        if(day === currentDay)\r\n            setCurrentDay(day - 1)\r\n    }\r\n\r\n    const removeDayCallback = (day) => {\r\n        if(tourInfo.days.length === 1){\r\n            addAlertConfig(\"Warning\", \"The tour has to have at least one day\", [])\r\n        }else{\r\n            if(tourInfo.days[day].tour.length > 0){ //This day has at least one place/transport added to it\r\n                addAlertConfig(\"Warning\", \"Are you sure you want to remove this day?\",[{name: \"yes\", action: ()=>{\r\n                    removeDay(day)\r\n                    }}],() => {\r\n                })\r\n            }else removeDay(day)\r\n        }\r\n    }\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        tourInfoReducer({\r\n            type: 'MOVE_DAY',\r\n            oldIndex: oldIndex,\r\n            newIndex: newIndex\r\n        })\r\n        setCurrentDay(newIndex)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <SortableList\r\n                pressDelay={200}\r\n                disableAutoscroll={false}\r\n                elements={tourInfo.days}\r\n                currentDay={currentDay}\r\n                onSortEnd={onSortEnd}\r\n                removeDayCallback={removeDayCallback}\r\n                onSelectCallback={handleSelect}\r\n                tourInfoReducer={tourInfoReducer}/>\r\n            <div className={classes.footerWrapper}>\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    className={classes.addDayButton}\r\n                    onClick={addDayHandler}\r\n                    startIcon={<AddIcon/>}>\r\n                    Add another day\r\n                </Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nDaysWrapper.propTypes = {\r\n    setCurrentDay: PropTypes.func.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    tourInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DaysWrapper)\r\n","import {arrayMove} from \"react-sortable-hoc\";\r\nimport {array} from \"prop-types\";\r\nimport {ElementType} from \"./Tour\";\r\n\r\nexport default function TourDataReducer(state, action) {\r\n\r\n    let days = []\r\n\r\n    switch (action.type) {\r\n        case 'ADD_ELEMENT':\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    days.push({\r\n                        ...item,\r\n                        tour: [\r\n                            ...item.tour,\r\n                            action.data\r\n                        ]\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'UPDATE_ELEMENT':\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    let tour = item.tour\r\n                    tour[action.index] = {...tour[action.index], data: {...tour[action.index].data, ...action.data}}\r\n                    days.push({\r\n                        ...item,\r\n                        tour: tour\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'INSERT_TRANSPORT_FOR_PLACE':\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    let tour = item.tour\r\n                    let index = tour.findIndex((item) => item.type === ElementType.place && item.data.details.placeId === action.placeId)\r\n                    tour.splice(index + 1, 0, action.data)\r\n                    days.push({\r\n                        ...item,\r\n                        tour: tour\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'ADD_DAY':\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...state.days,\r\n                    action.data\r\n                ]\r\n            }\r\n        case 'MOVE_DAY':\r\n            return {\r\n                ...state,\r\n                days: arrayMove(state.days, action.oldIndex, action.newIndex)\r\n            }\r\n        case 'MOVE_ELEMENT':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day)\r\n                    return {...item, tour: arrayMove(item.tour, action.oldIndex, action.newIndex)}\r\n                else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'UPDATE_DAY':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day) {\r\n                    return {...item, ...action.data}\r\n                } else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'REMOVE_ELEMENT':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day)\r\n                    return {...item, tour: item.tour.filter((value, index) => index !== action.index)}\r\n                else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'REMOVE_DAY':\r\n            days = state.days.filter((item, index) => index !== action.day)\r\n            return {\r\n                ...state,\r\n                days: days\r\n            }\r\n        case 'UPDATE_TOUR':\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case 'SET_ALL':\r\n            return action.data\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(4),\r\n    },\r\n    nameField: {\r\n        width: \"100%\"\r\n    },\r\n    descriptionField: {\r\n        marginTop: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    }\r\n});\r\n\r\nfunction TourInfoComponent({classes, tourInfo, tourInfoReducer, errorInfo, setErrorInfo}) {\r\n\r\n    const handleDescriptionChange = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data: {description: e.target.value}\r\n        })\r\n    }\r\n    const handleTitleChange = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {name: e.target.value}\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(tourInfo.name === \"\")\r\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: true}}})\r\n        else\r\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: false}}})\r\n    }, [tourInfo.name])\r\n\r\n    let shouldDisplayTitleMissingError = errorInfo.showErrors && errorInfo.errors.titleMissing\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField label=\"Tour name\"\r\n                       variant=\"outlined\"\r\n                       error={shouldDisplayTitleMissingError}\r\n                       helperText={shouldDisplayTitleMissingError ? \"Please provide a title for your tour\" : \"\"}\r\n                       value={tourInfo.name}\r\n                       onChange={handleTitleChange}\r\n                       defaultValue=\"My tour name\" className={classes.nameField}/>\r\n            <TextField\r\n                className={classes.descriptionField}\r\n                multiline\r\n                label=\"Description\"\r\n                value={tourInfo.description}\r\n                variant=\"outlined\"\r\n                onChange={handleDescriptionChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nTourInfoComponent.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourInfoComponent)","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer } from \"react-google-maps\"\r\nimport {ElementType} from \"./Tour\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(4),\r\n    },cover: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            height: \"200px\",\r\n        },\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            flex: 1,\r\n            height: \"auto\",\r\n        },\r\n    },\r\n});\r\n\r\n\r\n\r\n/*\r\nExample of getting 0th place and 0th day lat and lng\r\nlet lat = tourInfo.days[0].tour[0].details.latitude\r\nlet lng = tourInfo.days[0].tour[0].details.longitude\r\n\r\nKeep in mind, that you want to only look for elements, that are of place (not of transport) type.\r\nSo you'd do something like this to get current day's places:\r\nlet places = tourInfo.days[currentDay].tour.filter(item => item.type === ElementType.place)\r\nand then something like this\r\nplaces.forEach(item => {\r\n    let lat = item.details.latitude\r\n    let lng = item.details.longitude\r\n})\r\n*/\r\n\r\n\r\nconst google = window.google;\r\n\r\nconst MyMapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        defaultZoom={8}\r\n        defaultCenter={{lat: -34.397, lng: 150.644}}>\r\n\r\n        <DirectionsRenderer\r\n            options={{suppressMarkers: true, draggable: false}}\r\n            draggable={false}\r\n            directions={props.directions}/>\r\n\r\n        {props.places.map((marker, index) => {\r\n            const position = { lat: marker.latitude, lng: marker.longitude };\r\n            return <Marker key={index} position={position} label={`${index+1}`} onClick={\r\n                ()=>{\r\n                    let info = Object.assign({}, props.infoWindows, {});\r\n                    info[index] = true;\r\n                    props.setInfoWindows(info);\r\n                }\r\n            }>\r\n                {props.infoWindows[index] && (\r\n                <InfoWindow onCloseClick={()=>{\r\n                    let info = Object.assign({}, props.infoWindows, {});\r\n                    info[index] = false;\r\n                    props.setInfoWindows(info);\r\n                }}>\r\n                    <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                        <Card>\r\n                            <Typography>\r\n                                {marker.name}\r\n                            </Typography>\r\n                            {marker.photo ? <CardMedia\r\n                                style={{\"height\": \"150px\"}}\r\n                                image={marker.photo}\r\n                            />: null}\r\n                        </Card>\r\n                    </div>\r\n                </InfoWindow>\r\n                )}\r\n            </Marker>\r\n        })}\r\n    </GoogleMap>\r\n);\r\n\r\nfunction TourMap({classes, tourInfo, currentDay}) {\r\n\r\n    const [directions, setDirection ] = useState();\r\n    const [infoWindows, setInfoWindows] = useState([]);\r\n    const [places, setPlaces] = useState([]);\r\n\r\n    const constructPlaceData = () =>{\r\n        let p = tourInfo.days[currentDay].tour.filter(item => item.type === ElementType.place);\r\n        let places = [];\r\n        let markersInfo = [];\r\n        p.forEach(item => {\r\n            let lat = item.data.details.latitude;\r\n            let lng = item.data.details.longitude;\r\n            let name = item.data.details.name;\r\n            let photos = item.data.details.photos;\r\n            places.push({latitude: lat, longitude: lng,name: name, photo: photos.length > 0 ? photos[0].url : null});\r\n            markersInfo.push(false);\r\n        });\r\n        setInfoWindows(markersInfo);\r\n        setPlaces(places);\r\n        return places\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const places = constructPlaceData();\r\n        if(places.length>0){\r\n            const waypoints = places.map(p =>({\r\n                location: {lat: p.latitude, lng:p.longitude},\r\n                stopover: true\r\n            }));\r\n            const origin = waypoints.shift().location;\r\n            let destination = null\r\n            if(waypoints.length > 0)\r\n                destination = waypoints.pop().location;\r\n            else\r\n                destination = origin\r\n\r\n            const directionsService = new google.maps.DirectionsService();\r\n\r\n            directionsService.route(\r\n                {\r\n                    origin: origin,\r\n                    destination: destination,\r\n                    travelMode: google.maps.TravelMode.DRIVING,\r\n                    waypoints: waypoints\r\n                },\r\n                (result, status) => {\r\n                    if (status === google.maps.DirectionsStatus.OK) {\r\n                        setDirection(result)\r\n                    } else {\r\n                        alert(status);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    },[currentDay, tourInfo.days]);\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MyMapComponent\r\n                    loadingElement={<div style={{ height: `100%` }} />}\r\n                    containerElement={<div style={{ height: `400px` }} />}\r\n                    mapElement={<div style={{ height: `100%` }} />}\r\n                    directions={directions}\r\n                    places={places}\r\n                    infoWindows={infoWindows}\r\n                    setInfoWindows={setInfoWindows}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTourMap.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourMap)\r\n\r\n\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {createRef, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport TourPlaceComponent from \"./TourPlaceComponent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TourPlacesWrapper from \"./TourPlacesWrapper\";\r\nimport PlaceSearch from \"./PlaceSearch\";\r\nimport DaysWrapper from \"./DaysWrapper\";\r\nimport TourReducer from \"./TourReducer\";\r\nimport TourDataReducer from \"./TourReducer\";\r\nimport TourInfoComponent from \"./TourInfoComponent\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TourMap from \"./TourMap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../Networking/API\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport shortid from 'shortid';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\n\r\nexport const ElementType = {\r\n    place: 0,\r\n    transport: 1\r\n}\r\nexport const PlaceType = {\r\n    api: 1,\r\n    local: 0\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            overflow: \"scroll\",\r\n        },\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            overflow: \"initial\",\r\n            display: \"flex\",\r\n        },\r\n        height: `calc(100% - 64px)`,\r\n        width: \"100%\",\r\n        '&::-webkit-scrollbar': {\r\n            display: \"none\"\r\n        },\r\n    },\r\n    loader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"100vw\",\r\n        height: \"100vh\"\r\n    },\r\n    rightLayout: {\r\n        flex: 2,\r\n        '&::-webkit-scrollbar': {\r\n            display: \"none\"\r\n        },\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            height: \"100%\",\r\n            overflowY: \"scroll\",\r\n\r\n        },\r\n    },\r\n    leftLayout: {\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            height: \"100%\",\r\n        },\r\n        overflowY: \"scroll\",\r\n\r\n        flex: 1,\r\n        '&::-webkit-scrollbar': {\r\n            display: \"none\"\r\n        },\r\n    },\r\n    actionsArea: {\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n\r\n})\r\n\r\nconst sampleTourData = {\r\n    name: \"\",\r\n    description: \"\",\r\n    days: [\r\n        {\r\n            description: \"\",\r\n            elementIdentifier: \"jkasfbjkdsbjk\",\r\n            tour: []\r\n        }\r\n    ]\r\n}\r\n\r\nfunction Tour({classes, match}) {\r\n\r\n    const [localPlacesFound, setLocalPlacesFound] = useState([])\r\n    const [apiPlacesFound, setApiPlacesFound] = useState([])\r\n    const [currentDay, setCurrentDay] = useState(0)\r\n    const [tourId, setTourId] = useState(match.params.tourId)\r\n    const [isLoading, setIsLoading] = useState(match.params.tourId !== undefined);\r\n\r\n    const [errorInfo, setErrorInfo] = useState({\r\n            errors: {\r\n                titleMissing: false,\r\n                /* Any client-side verification errors may by added here, and handled in individual components */\r\n            },\r\n            showErrors: false\r\n        }\r\n    )\r\n\r\n    const [tourInfo, dispatchTourInfo] = React.useReducer(TourDataReducer, sampleTourData)\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    const handleAddPlaceClick = (placeInfo, type) => {\r\n        dispatchTourInfo({\r\n            type: 'ADD_ELEMENT',\r\n            day: currentDay,\r\n            data: {\r\n                type: ElementType.place,\r\n                data: {\r\n                    type: type,\r\n                    details: {...placeInfo}\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (tourId !== undefined) {\r\n            // setIsLoading(true)\r\n            loadData()\r\n        }\r\n    }, [])\r\n\r\n    const loadData = () => {\r\n        API.Tour.getTour(\"?id=\" + tourId).then((response) => {\r\n            let aggregatedDays = [];\r\n            response.days.forEach(day => {\r\n                let aggregatedElements = [];\r\n                day.data.forEach(place => {\r\n                    let aggregatedPlace = {\r\n                        type: ElementType.place,\r\n                        data: {details: place.place, type: place.place.type}\r\n                    }\r\n                    delete aggregatedPlace.data.details.type\r\n                    aggregatedElements.push(aggregatedPlace)\r\n                    place.transport.forEach(transport => {\r\n                        aggregatedElements.push({\r\n                            type: ElementType.transport,\r\n                            data: {transport: transport.fk_transportId - 1, elementIdentifier: shortid.generate()}\r\n                        })\r\n                    })\r\n                })\r\n                let aggregatedDay = {...day, tour: aggregatedElements, elementIdentifier: shortid.generate()}\r\n                delete aggregatedDay.data\r\n                aggregatedDays.push(aggregatedDay)\r\n            })\r\n            let aggregatedTour = {...response, days: aggregatedDays}\r\n            dispatchTourInfo({type: 'SET_ALL', data: aggregatedTour})\r\n        }).catch((error) => {\r\n            addConfig(false, \"Tour has failed to load\")\r\n            setTourId(undefined)\r\n        }).finally(() => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleSave = () => {\r\n        let containsErrors = false;\r\n        Object.keys(errorInfo.errors).map(function(keyName, keyIndex) {\r\n            if(errorInfo.errors[keyName]){\r\n                setErrorInfo(state => {return {...state, showErrors: true}})\r\n                containsErrors = true;\r\n            }\r\n        })\r\n        if(containsErrors) return\r\n        setErrorInfo(state => {return {...state, showErrors: false}})\r\n\r\n        const aggregatedDays = []\r\n        tourInfo.days.forEach(day => {\r\n            let aggregatedDay = {...day, data: []}\r\n            delete aggregatedDay.tour\r\n            delete aggregatedDay.elementIdentifier\r\n            for (let i = 0; i < day.tour.length; i++) {\r\n                let element = day.tour[i]\r\n                if (element.type !== ElementType.place)\r\n                    continue;\r\n                let transport = []\r\n                for (let j = i + 1; j < day.tour.length && day.tour[j].type === ElementType.transport; j++) {\r\n                    transport.push({fk_transportId: day.tour[j].data.transport + 1})\r\n                }\r\n                let aggregatedPlace = {\r\n                    place: {\r\n                        type: element.data.type,\r\n                        placeId: element.data.details.placeId\r\n                    },\r\n                    transport: transport\r\n                }\r\n                aggregatedDay.data.push(aggregatedPlace)\r\n            }\r\n            aggregatedDays.push(aggregatedDay)\r\n        })\r\n        let aggregatedTour = {...tourInfo, days: aggregatedDays}\r\n\r\n        if (tourId === undefined) {\r\n            API.Tour.insertTour(aggregatedTour).then((response) => {\r\n                addConfig(true, \"Tour has been inserted successfully!\")\r\n                setTourId(response)\r\n            }).catch((error) => {\r\n                addConfig(false, \"Something went wrong while saving this tour.\")\r\n            })\r\n        } else {\r\n            API.Tour.updateTour(aggregatedTour, \"?id=\" + tourId).then((response) => {\r\n                addConfig(true, \"Tour has been updated successfully!\")\r\n            }).catch((error) => {\r\n                addConfig(false, \"Something went wrong while saving this tour.\")\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const leftLayout = useMemo(() => (\r\n        <div className={classes.leftLayout}>\r\n            <PlaceSearch addPlaceCallback={handleAddPlaceClick} localPlacesFound={localPlacesFound}\r\n                         setLocalPlacesFound={setLocalPlacesFound} apiPlacesFound={apiPlacesFound}\r\n                         setApiPlacesFound={setApiPlacesFound}/>\r\n        </div>\r\n    ), [localPlacesFound, apiPlacesFound, currentDay])\r\n\r\n\r\n    const tourDaysComponents = useMemo(() => (\r\n        <div>\r\n            <DaysWrapper currentDay={currentDay} setCurrentDay={setCurrentDay} tourInfo={tourInfo}\r\n                         tourInfoReducer={dispatchTourInfo}/>\r\n            <Divider variant=\"middle\"/>\r\n            <TourPlacesWrapper errorInfo={errorInfo} setErrorInfo={setErrorInfo}\r\n                               currentDay={currentDay} tourInfoReducer={dispatchTourInfo} tourInfo={tourInfo}/>\r\n            <TourMap tourInfo={tourInfo} currentDay={currentDay}/>\r\n        </div>\r\n    ), [tourInfo.days, currentDay, errorInfo]);\r\n\r\n    const rightLayout = useMemo(() => (\r\n        <Paper className={classes.rightLayout} >\r\n            <TourInfoComponent tourInfo={tourInfo} tourInfoReducer={dispatchTourInfo} errorInfo={errorInfo} setErrorInfo={setErrorInfo}/>\r\n            <Divider variant=\"middle\"/>\r\n            {tourDaysComponents}\r\n            <div className={classes.actionsArea}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n                    Save this tour\r\n                </Button>\r\n            </div>\r\n        </Paper>\r\n    ), [tourInfo, currentDay, errorInfo]);\r\n\r\n    const theme = useTheme();\r\n    const largeScreen = useMediaQuery(theme.breakpoints.only('lg'));\r\n\r\n    const content = (\r\n        <React.Fragment>\r\n            {largeScreen ?\r\n                <React.Fragment>\r\n                    {leftLayout}\r\n                    {rightLayout}\r\n                </React.Fragment> :\r\n                <React.Fragment>\r\n                    {rightLayout}\r\n                    {leftLayout}\r\n                </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {isLoading ? <div className={classes.loader}><CircularProgress/></div> : content}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Tour)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n\r\n    sortingButtons: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n\r\n    },\r\n    root:{\r\n        height:\"100vh\",\r\n        width:\"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content:{\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Tour name', isId: true},\r\n    { id: 'description', numeric: false, disablePadding: false, label: 'Tour description',isId: false},\r\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\r\n];\r\n\r\nfunction Tours(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { classes } = props;\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [filterQuery, setFilterQuery] = useState(\"\");\r\n\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    useEffect(()=>{\r\n        if(!isLoading){\r\n            getAllTours(\"?o=\"+filterQuery);\r\n        }\r\n    },[filterQuery]);\r\n\r\n    function parseData(data){\r\n        console.log(\"deita\", data.list)\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updateTourCallback(id){\r\n        history.push(\"/app/addtour/\"+id)\r\n    }\r\n    function removePlaceCallback(id){\r\n        console.log(\"tour id\", id)\r\n\r\n        addAlertConfig(Strings.DIALOG_TOUR_DELETE_TITLE, Strings.DIALOG_TOUR_DELETE_MESSAGE, [{name: \"Delete\", action: () => {\r\n                setIsLoading(true);\r\n                API.Tour.removeTour(\"?id=\"+id).then(response=>{\r\n                    let tmp = [];\r\n                    data.map(row=>{\r\n                        if(row[\"tourId\"] !== id){\r\n                            tmp.push(row)\r\n                        }\r\n                    });\r\n                    setData(tmp);\r\n                    addConfig(true, Strings.SNACKBAR_TOUR_REMOVE_SUCCESS)\r\n                    setIsLoading(false)\r\n                }).catch(error=>{\r\n                    setIsLoading(false);\r\n                    addConfig(false, Strings.SNACKBAR_ERROR)\r\n                })\r\n            }}],  ()=>{setIsLoading(false)})\r\n    }\r\n\r\n    const changePageCallback = (p=0, keyword=\"\") => {\r\n        setIsLoading(true);\r\n        getAllTours(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword+\"&o=\"+filterQuery)\r\n    };\r\n\r\n\r\n    //Sorting stuff\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let filters = [];\r\n        let fq = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n            if(row.filter){\r\n                fq.push(row.filterName)\r\n            }\r\n            filters.push(row)\r\n        });\r\n\r\n        setFilterQuery(fq.join(\",\"));\r\n        setFilterOptions(filters)\r\n    };\r\n\r\n    const customToolbarElements = () =>{\r\n        return <div>\r\n            <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                    <FilterListIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={()=>{setAnchorEl(null)}}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.sortingButtons}>\r\n                    {filterOptions.map(row=>{\r\n                        return <FormControlLabel\r\n                            control={<Checkbox checked={row.filter} onChange={()=>filterOptionsChanged(row.filterName)} name={row.filterName} />}\r\n                            label={row.filterLabel}\r\n                        />\r\n                    })}\r\n                </div>\r\n\r\n            </Popover>\r\n        </div>\r\n    };\r\n    /*------------------------------------------------------------------------------------------------------*/\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content} >\r\n                <TableComponent\r\n                    title={\"Tours\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updateTourCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    id={\"tourId\"}\r\n                    isLoading={isLoading}\r\n                    customToolbarElements={customToolbarElements()}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={()=>{history.push(\"/app/addtour\")}}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon />}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n    function getAllTours(urlParams=\"\") {\r\n        API.Tour.getAllToursAdmin(urlParams).then(response=>{\r\n            console.log(response);\r\n            parseData(response)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nTours.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Tours);","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport TableComponent from \"./TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddDialog from \"./AddDialog\";\r\nimport UseEditDialogContext from \"../contexts/UseEditDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\",\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    buttonWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        width: \"100%\",\r\n    }\r\n})\r\n\r\nconst categoriesHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Category name', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n]\r\nconst tagsHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Tag name', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n]\r\n\r\nfunction Resources({classes}) {\r\n\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addEditDialogConfig} = UseEditDialogContext();\r\n\r\n    const [loading, setIsLoading] = useState({\r\n        categories: false,\r\n        tags: false\r\n    })\r\n\r\n    const [categories, setCategories] = useState([])\r\n    const [tags, setTags] = useState([])\r\n\r\n    useEffect(() => {\r\n        setIsLoading({categories: true, tags: true})\r\n        Promise.all([\r\n                API.Categories.getAllCategories(),\r\n                API.Tags.getAllTags()\r\n            ]\r\n        ).then(response => {\r\n            setCategories(response[0])\r\n            setTags(response[1])\r\n        }).catch(() => {\r\n            addConfig(false, \"Could not retrieve data!\")\r\n        }).finally(() => {\r\n            setIsLoading(oldData => {return{ ...oldData, categories: false, tags: false}})\r\n        })\r\n    }, [])\r\n\r\n    const handleAddCategory = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add category\",\r\n            explanation: \"Type the category name\",\r\n            onDoneCallback: (text) => {\r\n               API.Categories.addCategory([{name: text}]).then((response)=>{\r\n                   addConfig(true, \"Category inserted successfully\")\r\n                   setCategories(oldData => [...oldData, {name: text, categoryId: response[0]}])\r\n                }).catch(error=>{\r\n                   addConfig(false, \"Failed to add category.\")\r\n               })\r\n            },\r\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\r\n            textFieldLabel: \"Restaurants, hiking, etc...\"\r\n        })\r\n    }\r\n\r\n    const removeCategoryCallback = (categoryId) => {\r\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\r\n        addAlertConfig(\"Warning\", \"Are you sure you want the category, named '\" + categoryName + \"'?\", [{\r\n            name: \"yes\", action: () => {\r\n                setIsLoading(oldData => {\r\n                    return {...oldData, categories: true}\r\n                })\r\n                API.Categories.removeCategory([{categoryId: categoryId}]).then(() => {\r\n                    addConfig(true, \"Category successfully removed.\")\r\n                    setCategories(oldData => oldData.filter(item => item.categoryId !== categoryId))\r\n                }).catch(() => {\r\n                    addConfig(false, \"An error has occurred while removing category.\")\r\n                }).finally(() => {\r\n                    setIsLoading(oldData => {\r\n                        return {...oldData, categories: false}\r\n                    })\r\n                })\r\n            }\r\n        }], () => {\r\n        })\r\n    }\r\n\r\n    const updateCategoryHandler = (categoryId) => {\r\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\r\n        addEditDialogConfig({\r\n            title: \"Edit category\",\r\n            explanation: \"Type the category name\",\r\n            defaultText: categoryName,\r\n            onDoneCallback: (text) => {\r\n                API.Categories.updateCategory([{name: text, categoryId: categoryId}]).then(()=>{\r\n                    addConfig(true, \"Category updated successfully\")\r\n                    setCategories(oldData => {return oldData.map(item => {\r\n                        if(item.categoryId === categoryId)\r\n                            return {...item, name: text}\r\n                        else return item\r\n                    })})\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to update category.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\r\n            textFieldLabel: \"Restaurants, hiking, etc...\"\r\n        })\r\n    }\r\n\r\n    const updateTagHandler = (id) => {\r\n        let tagName = tags.filter(item => item.tagId === id)[0].name\r\n        addEditDialogConfig({\r\n            title: \"Edit tag\",\r\n            explanation: \"Type the tag name\",\r\n            defaultText: tagName,\r\n            onDoneCallback: (text) => {\r\n                API.Tags.updateTags([{name: text, tagId: id}]).then(()=>{\r\n                    addConfig(true, \"Tag updated successfully\")\r\n                    setTags(oldData => {return oldData.map(item => {\r\n                        if(item.tagId === id)\r\n                            return {...item, name: text}\r\n                        else return item\r\n                    })})\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to update tag.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const removeTagHandler = (id) => {\r\n        let tagName = tags.filter(item => item.tagId === id)[0].name\r\n        addAlertConfig(\"Warning\", \"Are you sure you want the tag, named '\" + tagName + \"'?\", [{\r\n            name: \"yes\", action: () => {\r\n                setIsLoading(oldData => {\r\n                    return {...oldData, tags: true}\r\n                })\r\n                API.Tags.removeTags([{tagId: id}]).then(() => {\r\n                    addConfig(true, \"Tag successfully removed.\")\r\n                    setTags(oldData => oldData.filter(item => item.tagId !== id))\r\n                }).catch(() => {\r\n                    addConfig(false, \"An error has occurred while removing tag.\")\r\n                }).finally(() => {\r\n                    setIsLoading(oldData => {\r\n                        return {...oldData, tags: false}\r\n                    })\r\n                })\r\n            }\r\n        }], () => {\r\n        })\r\n    }\r\n\r\n    const handleAddTag = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add tag\",\r\n            explanation: \"Type the tag name\",\r\n            onDoneCallback: (text) => {\r\n                API.Tags.addTag([{name: text}]).then((response)=>{\r\n                    addConfig(true, \"Tag inserted successfully\")\r\n                    setTags(oldData => [...oldData, {name: text, tagId: response[0]}])\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to add tag.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const searchFunction = (keyword, item) => {\r\n        if(keyword.length < 3) return true\r\n        return item.name.includes(keyword)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n\r\n                <TableComponent\r\n                    title={\"Categories\"}\r\n                    headCells={categoriesHeadCells}\r\n                    data={categories}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateCategoryHandler}\r\n                    removeCallback={removeCategoryCallback}\r\n                    id={\"categoryId\"}\r\n                    isLoading={loading.categories}\r\n                />\r\n\r\n                <Box className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleAddCategory}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add a new category\r\n                    </Button>\r\n                </Box>\r\n\r\n                <br/>\r\n\r\n                <TableComponent\r\n                    title={\"Tags\"}\r\n                    headCells={tagsHeadCells}\r\n                    data={tags}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateTagHandler}\r\n                    removeCallback={removeTagHandler}\r\n                    id={\"tagId\"}\r\n                    isLoading={loading.tags}\r\n                />\r\n\r\n                <Box className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleAddTag}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add a new tag\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nResources.propTypes = {\r\n};\r\n\r\nexport default withStyles(styles)(Resources)\r\n","import React, {Fragment, useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Home from \"../pages/Home\";\r\nimport Places from \"../pages/Places\";\r\nimport AddPlace from \"../pages/AddPlace\";\r\nimport history from \"../helpers/history\";\r\nimport ApiPlaces from \"../pages/ApiPlaces\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport NotFoundPage from \"../pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nimport Tour from \"./tour_components/Tour\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport Tours from \"../pages/Tours\";\r\nimport Resources from \"./Resources\";\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root1: {\r\n        overflow: \"hidden\",\r\n        display: 'flex',\r\n        height: \"100vh\",\r\n        background: \"#F1F1F1\"\r\n    },\r\n    appBar: {\r\n        height: \"64px\",\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        //padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0\r\n    },\r\n}));\r\n\r\n\r\nexport default function Appbar(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const { title, setTitle } = UseAppBarTitleContext();\r\n    let location = useLocation();\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleListItemClick = (url,title) =>{\r\n        handleDrawerClose();\r\n        setTitle(title);\r\n\r\n        // console.log(\"Current url\",location.pathname);\r\n        // console.log(\"Requested new url\", url);\r\n        let re = new RegExp(url+'([0-9]*)?');\r\n        // console.log(re);\r\n\r\n        if(re.test(location.pathname)){\r\n            history.go(0)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root1}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button component={Link} to=\"/app/\" onClick={()=>handleListItemClick(\"/app/\",\"Home\")}>\r\n                        <ListItemText>Home</ListItemText>\r\n                    </ListItem>\r\n                    <Divider light />\r\n                    <ListItem button component={Link} to=\"/app/places\" onClick={()=>handleListItemClick(\"/app/places\",\"Places\")} >\r\n                        <ListItemText>Places</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/tours\" onClick={()=>handleListItemClick(\"/app/tours\",\"Tours\")} >\r\n                        <ListItemText>Tours</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/apiplaces\" onClick={()=>handleListItemClick(\"/app/apiplaces\",\"Api places\")} >\r\n                        <ListItemText>Explore API places</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/addplace\" onClick={()=>handleListItemClick(\"/app/addplace\",\"Add Place\")} >\r\n                        <ListItemText>Add place</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/addtour\" onClick={()=>setTitle(\"Add tour\")} >\r\n                        <ListItemText>Add tour</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/resources\" onClick={()=>setTitle(\"Manage resources\")} >\r\n                        <ListItemText>Resources</ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                <Switch>\r\n                    <Route exact path=\"/app\" component={Home} />\r\n                    <Route path=\"/app/places\" component={Places} />\r\n                    <Route path=\"/app/tours\" component={Tours} />\r\n                    <Route path=\"/app/addplace/:placeId?\" component={AddPlace} />\r\n                    <Route path=\"/app/apiplaces\" component={ApiPlaces} />\r\n                    <Route path=\"/app/addtour/:tourId?\" component={Tour} />\r\n                    <Route path=\"/app/resources\" component={Resources} />\r\n                    <Redirect from=\"*\" to=\"/404\"/>\r\n                </Switch>\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport Appbar from './components/Appbar.js';\r\nimport AppBarTitleProvider from \"./contexts/AppBarTitleContext\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <AppBarTitleProvider>\r\n                        <Appbar />\r\n                    </AppBarTitleProvider>\r\n                    </MuiPickersUtilsProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default App;","import React, {useEffect, useState} from \"react\";\r\nimport app from \"../helpers/firebaseInit\"\r\nimport Cookies from \"js-cookie\"\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        app.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                setCurrentUser(user);\r\n                app.auth().currentUser.getIdToken(true).then(function (idToken) {\r\n                    Cookies.set(\"access_token\", idToken);\r\n                }).catch(function (error) {\r\n\r\n                });\r\n            }\r\n            setIsLoading(false)\r\n        });\r\n    },[]);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser,\r\n                isLoading\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};","import React, {useContext, useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Cookies from 'js-cookie'\r\nimport * as firebase from \"firebase\";\r\nimport history from \"../helpers/history\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport app from \"../helpers/firebaseInit\";\r\nimport {AuthContext} from \"../contexts/AuthContext\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {isAuthenticated} from \"../helpers/tokens\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n                Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    loaderMain: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        alignItems:\"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"red\"\r\n    }\r\n}));\r\n\r\n\r\nexport default function LoginPage() {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setIsLoading] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n    const { currentUser, isLoading } = useContext(AuthContext);\r\n\r\n\r\n    const handleLogin = () =>{\r\n        setIsLoading(true);\r\n        app.auth().signInWithEmailAndPassword(email , password)\r\n            .then(function(user) {\r\n                setIsLoading(false)\r\n                app.auth().currentUser.getIdToken(true).then(function (idToken) {\r\n                    console.log(\"Getting new access token\");\r\n                    Cookies.set(\"access_token\", idToken);\r\n                    history.push(\"/app\");\r\n                }).catch(function (error) {\r\n                    addConfig(false, \"Error receiving access token\")\r\n                });\r\n            })\r\n            .catch(function(error) {\r\n                setIsLoading(false);\r\n                addConfig(false, error.message)\r\n            });\r\n    };\r\n\r\n\r\n    if (isAuthenticated()) {\r\n        return <Redirect to=\"/app\" />;\r\n    }\r\n\r\n    const handleKeyPress = (event) =>{\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            handleLogin();\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    return <Container component=\"main\" maxWidth=\"xs\" onKeyPress={(e)=>handleKeyPress(e)}>\r\n\r\n                            {loading && <LinearProgress />}\r\n                            <CssBaseline />\r\n                            <div className={classes.paper}>\r\n                                <Avatar className={classes.avatar}>\r\n                                    <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <Typography component=\"h1\" variant=\"h5\">\r\n                                    Sign in\r\n                                </Typography>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={email}\r\n                                    onChange={(e)=>{setEmail(e.target.value)}}\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    autoFocus\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    value={password}\r\n                                    onChange={(e)=>{setPassword(e.target.value)}}\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                                <Button\r\n                                    onClick={()=>{handleLogin()}}\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    Sign In\r\n                                </Button>\r\n                            </div>\r\n                            <Box mt={8}>\r\n                                <Copyright />\r\n                            </Box>\r\n                        </Container>\r\n\r\n}","import Route from \"react-router-dom/es/Route\";\r\nimport React, {useContext} from \"react\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {isAuthenticated} from \"../helpers/tokens\";\r\n\r\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                isAuthenticated() === true ? (\r\n                    <Component {...routeProps} />\r\n                ) : (\r\n                    <Redirect to={\"/login\"} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};","import React, {useState} from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\n\r\nexport default function SnackbarFeedback(props){\r\n\r\n    const { config, removeConfig } = UseSnackbarContext();\r\n\r\n    return(\r\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\r\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"error\") : \"\"}>\r\n                {!!config && config.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\"\r\n\r\nconst AlertDialogFeedback = () => {\r\n\r\n    const {alertConfig, removeAlertConfig} = UseAlertDialogContext();\r\n\r\n    function remove() {\r\n        if(alertConfig.onClose !== undefined){\r\n            alertConfig.onClose()\r\n        }\r\n        removeAlertConfig()\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={!!alertConfig}\r\n            onClose={remove}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{!!alertConfig ? alertConfig.title : \"\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {!!alertConfig ? alertConfig.message : \"\"}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={remove}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                {!!alertConfig && alertConfig.actions.map(row=>{\r\n                    return <Button onClick={()=>{\r\n                        remove();\r\n                        row.action();\r\n                    }}\r\n                    color=\"primary\"\r\n                    >\r\n                            {row.name}\r\n                    </Button>\r\n                })}\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\n\r\nexport default AlertDialogFeedback\r\n","import Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\r\n\r\n\r\nexport const TextInputDialog = () => {\r\n\r\n    const {dialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen} = UseEditDialogContext();\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [error, setError] = useState(0)\r\n\r\n    const deInit = () => {\r\n        setError(0)\r\n        setDialogOpen(false)\r\n        setInputText(\"\")\r\n    }\r\n\r\n    const handleClose = () => {\r\n        deInit()\r\n    }\r\n\r\n    const handleDone = () => {\r\n        let errorCode = dialogConfig.validateInput(inputText)\r\n        setError(errorCode)\r\n        if(errorCode !== 0) return\r\n\r\n        if(dialogConfig.onDoneCallback !== undefined)\r\n            dialogConfig.onDoneCallback(inputText)\r\n        deInit()\r\n    }\r\n    const handleInput = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={dialogOpen} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n                <DialogTitle id=\"form-dialog-title\">{dialogConfig.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {dialogConfig.explanation}\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        helperText={error !== 0 && dialogConfig.errorMessages[error] !== null ? dialogConfig.errorMessages[error] : \"\"}\r\n                        error={error !== 0}\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        onInput={handleInput}\r\n                        label={dialogConfig.textFieldLabel}\r\n                        defaultValue={dialogConfig.defaultText}\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleDone} color=\"primary\">\r\n                        Done\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport history from \"./helpers/history\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport {Router, Route, Link, Switch} from \"react-router-dom\";\r\nimport {AuthenticatedRoute} from \"./components/AuthenticatedRoute\";\r\nimport NotFoundPage from \"./pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\r\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\r\nimport AlertDialogProvider from \"./contexts/AlertDialogContext\";\r\nimport AlertDialogFeedback from \"./components/feedback/AlertDialogFeedback\";\r\nimport {AuthProvider} from \"./contexts/AuthContext\";\r\nimport {PlacesFilterProvider} from \"./contexts/PlacesFilterContext\";\r\nimport EditDialogProvider from \"./contexts/EditDialogContext\";\r\nimport {TextInputDialog} from \"./components/feedback/TextInputDialog\";\r\n\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(\r\n    <AuthProvider>\r\n        <Router history={history}>\r\n            <PlacesFilterProvider>\r\n            <SnackbarProvider>\r\n                <AlertDialogProvider>\r\n                    <EditDialogProvider>\r\n                        <SnackbarFeedback/>\r\n                        <AlertDialogFeedback/>\r\n                        <TextInputDialog/>\r\n                        <Switch>\r\n                            <Redirect exact from=\"/\" to=\"/app\"/>\r\n                            <AuthenticatedRoute path=\"/app\" component={App}/>\r\n                            <Route path=\"/login\" component={LoginPage}/>\r\n                            <Route path=\"*\" component={NotFoundPage}/>\r\n                            <Redirect from=\"*\" to=\"/404\"/>\r\n                        </Switch>\r\n                    </EditDialogProvider>\r\n                </AlertDialogProvider>\r\n            </SnackbarProvider>\r\n            </PlacesFilterProvider>\r\n        </Router>\r\n    </AuthProvider>\r\n    , document.getElementById('root'));\r\n"],"sourceRoot":""}