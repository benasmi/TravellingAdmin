{"version":3,"sources":["pages/Home.js","components/TableComponent.js","helpers/debounce.js","Networking/NetworkLayerCentral.js","Networking/API.js","helpers/history.js","contexts/AlertDialogContext.js","contexts/UseAlertDialogContext.js","helpers/stringResources.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","pages/Places.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/CustomMap.js","components/add_place_components/PlaceLocation.js","components/add_place_components/ParkingLocation.js","components/AutocompleteChip.js","components/AddDialog.js","components/add_place_components/PlaceDiscovery.js","components/add_place_components/initialScheduleData.js","components/Schedule.js","components/add_place_components/WorkingSchedule.js","pages/AddPlace.js","components/ApiPlaceCard.js","components/SearchInputComponent.js","pages/ApiPlaces.js","components/Appbar.js","components/feedback/SnackbarFeedback.js","components/feedback/AlertDialogFeedback.js","App.js","index.js"],"names":["withStyles","theme","button","margin","spacing","input","display","props","classes","descendingComparator","a","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","checkable","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","TextField","target","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","centerCell","textAlign","rowNotPublished","rowNotVerified","rowBasic","TableComponent","pagingInfo","data","updateCallback","removeCallback","isLoading","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","rowStyle","undefined","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckboxChange","header","isId","scope","fontSize","style","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","pageNum","onChangePage","newPage","onChangeRowsPerPage","parseInt","console","log","request","options","contentType","client","axios","create","baseURL","headers","onSuccess","response","debug","onError","error","config","status","message","Promise","reject","then","catch","RequestType","getRequest","path","urlData","url","method","postRequest","postMultipartRequest","formData","API","Places","getAllPlaces","urlParams","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","removePlace","Tags","getAllTags","addTag","params","Categories","addCategory","getAllCategories","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","history","AlertDialogContext","createContext","alertConfig","addAlertConfig","removeAlertConfig","AlertDialogProvider","children","setAlertConfig","contextValue","func","onClose","onCloseFunc","Provider","UseAlertDialogContext","useContext","Strings","DIALOG_PLACE_PUBLISH_TITLE","DIALOG_PLACE_PUBLISH_MESSAGE","DIALOG_PLACE_UNPUBLISH_MESSAGE","DIALOG_PLACE_INSERT_TITLE","DIALOG_PLACE_INSERT","DIALOG_PLACE_UPDATE_TITLE","DIALOG_PLACE_UPDATE","DIALOG_PLACE_VERIFY_TITLE","DIALOG_PLACE_VERIFY_MESSAGE","DIALOG_PLACE_DELETE_TITLE","DIALOG_PLACE_DELETE_MESSAGE","SNACKBAR_PLACE_INSERTED_SUCCESS","SNACKBAR_PLACE_REMOVE_SUCCESS","SNACKBAR_ERROR","SNACKBAR_CHANGES_SAVED","SnackbarContext","addConfig","removeConfig","SnackbarProvider","setConfig","success","UseSnackbarContext","buttonsDiv","justifyContent","content","flexDirection","alignItems","breakpoints","down","up","setData","pageData","setPageData","setIsLoading","parseData","placesData","list","push","p","tmp","placeId","Box","Button","startIcon","placeInfo","setPlaceInfo","updatePlaceInfo","place","Object","assign","placeholder","fullWidth","e","InputLabelProps","shrink","multiline","rows","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","item","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","distance","onSortEnd","oldIndex","newIndex","arrayMove","axis","filter","acceptedFileFormats","onCloseCallback","open","onFinishCallback","loading","Dialog","DialogTitle","DialogContent","dividers","acceptedFiles","dropzoneProps","disabled","filesLimit","onDrop","files","imagefile","FormData","append","err","finally","handleFileUpload","DialogActions","outline","addImageDialogOpen","setAddImageDialogOpen","file","handleAddPhoto","autocomplete","borderBottom","locationData","setLocationData","mapHeight","selectedParkingCallback","changedParkingMarkerCallback","addParkingCallback","useFunction","callback","ref","useRef","current","useCallback","apply","this","arguments","Geocode","setApiKey","enableDebug","selectParkingHandler","addNewParkingHandler","changeLocationData","city","country","address","latitude","longitude","onParkingDataChanged","getCity","addressArray","i","types","long_name","getCountry","MyMapComponent","compose","withProps","containerElement","mapElement","withStateHandlers","infoWindow","show","toggleDraggableInfoWindow","draggableMarkerLocation","withGoogleMap","defaultZoom","center","lat","markerLocation","lng","defaultCenter","visible","draggable","onDragEnd","onMarkerLocationChanged","newLat","latLng","newLng","fromLatLng","results","formatted_address","address_components","onMarkerDragEnd","markerChanger","onParkingDataChange","onCloseClick","onToggleOpen","infoWindows","parkingData","location","parseFloat","parkingId","icon","showInfo","FullMap","parking","iw","onPlaceSelected","latitudeValue","geometry","longitudeValue","navigator","geolocation","getCurrentPosition","coords","useMemo","marginTop","parkingMarkerData","setParkingMarkerData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","getClosestParking","parkingDataChanged","SortableItem","elevation","SortableList","oldArray","autoComplete","chip","flexWrap","listStyle","autoCompleteChipContainer","selectedOptions","setSelectedOptions","getCurrentVal","setCurrentVal","viableOptions","setViableOptions","includes","option","Chip","onDelete","Autocomplete","disableClearable","getOptionLabel","renderInput","closeButton","right","grey","textFieldLabel","description","action","setText","setError","ev","autoFocus","validateInput","selectedTags","setSelectedTags","selectedCategories","setSelectedCategories","dialogAddTagOpen","setDialogAddTagOpen","dialogAddCategoryOpen","setDialogAddCategoryOpen","availableCategories","setAvailableCategories","availableTags","setAvailableTags","AutocompleteChip","newTag","tagId","newCat","categoryId","initialScheduleData","dayOfWeek","openTime","closeTime","isClosed","ScheduleCard","setOpenTime","setCloseTime","setIsClosed","oldData","scheduleCard","Fragment","step","state","only","scheduleData","setScheduleData","workingScheduleEnabled","setWorkingScheduleEnabled","FormControlLabel","control","Switch","obj","paperContent","loader","bottom","match","website","phoneNumber","hasSchedule","isPublic","isVerified","setPlaceId","firstTimeLoading","setFirstTimeLoading","ColorButton","getContrastText","green","formFeedback","saveChanges","formPlaceInfo","updateAll","all","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","er","d","tags","categories","schedule","responses","CircularProgress","CategoriesDisplay","SubheaderDisplay","priceRange","rating","Rating","readOnly","media","expand","transform","marginLeft","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","CardHeader","subheader","overallStarRating","CardContent","substring","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debounce","debouncedInput","InputBase","persist","Divider","orientation","topBar","marginRight","zIndex","searchBox","isLoadingData","setIsLoadingData","after","setAfter","searchQuery","setSearchQuery","loadDataFunc","query","encodeURI","currentData","debounceScroll","round","scrollHeight","scrollTop","clientHeight","handleScrollDebounced","onScroll","handleScroll","elementType","isFitWidth","disableImagesLoaded","updateOnEachImageLoad","boxSizing","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","Appbar","useTheme","setOpen","setTitle","CssBaseline","AppBar","edge","Drawer","anchor","List","ListItem","Link","to","ListItemText","exact","Home","AddPlace","ApiPlaces","SnackbarFeedback","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","AlertDialogFeedback","remove","aria-describedby","DialogContentText","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c84ab495.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(1)\n    },\n    input: {\n        display: \"none\"\n    }\n});\n\nconst Home = props => {\n    const { classes } = props;\n    return (\n        <div>\n           Home\n        </div>\n    );\n};\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit'\nimport TextField from \"@material-ui/core/TextField\"\nimport useDebounce from \"../helpers/debounce\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, checkable} = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n\n                {checkable ? <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell> : null}\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right'  : 'left' }\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n    headCells: PropTypes.object.isRequired,\n    checkable: PropTypes.bool.isRequired\n};\n\n\n\n\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, title, changePageCallback, keyword, setKeyword} = props;\n\n\n    const debouncedSearch = useDebounce(keyword, 300);\n\n\n\n    useEffect( () => {\n            changePageCallback(1,keyword)\n        },\n        [debouncedSearch]\n    );\n\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    {title}\n                </Typography>\n            )}\n\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : <TextField id=\"standard-basic\" label=\"Search\" onChange={ event =>{setKeyword(event.target.value)}}/>}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired\n};\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    centerCell: {\n        textAlign: \"center\",\n        width: '100%'\n    },\n    rowNotPublished:{\n        backgroundColor: \"#ffcdd2\"\n    },\n    rowNotVerified:{\n        backgroundColor: \"#fff9c4\"\n    },\n    rowBasic: {\n        backgroundColor: \"#FFFFFF\"\n    }\n\n}));\n\nexport default function TableComponent({title, headCells, pagingInfo, data, checkable, changePageCallback, updateCallback, removeCallback, id, isLoading}) {\n\n    TableComponent.propTypes = {\n        title: PropTypes.string.isRequired,\n        headCells: PropTypes.object.isRequired,\n        pagingInfo: PropTypes.object,\n        data: PropTypes.object.isRequired,\n        checkable: PropTypes.bool.isRequired,\n        changePageCallback: PropTypes.func,\n        updateCallback: PropTypes.func,\n        removeCallback: PropTypes.func,\n        id: PropTypes.string.isRequired,\n        isLoading: PropTypes.bool\n    };\n\n\n\n\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [keyword, setKeyword] = useState('');\n\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = data.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleCheckboxChange = (event, name) =>{\n\n            const selectedIndex = selected.indexOf(name);\n            let newSelected = [];\n\n            if (selectedIndex === -1) {\n                newSelected = newSelected.concat(selected, name);\n            } else if (selectedIndex === 0) {\n                newSelected = newSelected.concat(selected.slice(1));\n            } else if (selectedIndex === selected.length - 1) {\n                newSelected = newSelected.concat(selected.slice(0, -1));\n            } else if (selectedIndex > 0) {\n                newSelected = newSelected.concat(\n                    selected.slice(0, selectedIndex),\n                    selected.slice(selectedIndex + 1),\n                );\n            }\n\n            setSelected(newSelected);\n\n    };\n\n    const handleClick = (event, name) => {\n\n    };\n\n\n    const handleChangePage = (event, newPage) => {\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n        console.log(\"handleChangeRowsPerPage\")\n\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                {isLoading ? <LinearProgress/> : null }\n                <EnhancedTableToolbar\n                    title={title}\n                    numSelected={selected.length}\n                    changePageCallback={changePageCallback}\n                    keyword={keyword}\n                    setKeyword={setKeyword}\n                />\n                 <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={data.length}\n                            headCells={headCells}\n                            checkable={checkable}\n                        />\n\n\n                        <TableBody>\n                            {stableSort(data, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    const rowStyle = row['isVerified'] !== undefined  && row['isVerified'] === false ? classes.rowNotVerified :\n                                        row['isPublic'] !== undefined && row['isPublic'] === false ? classes.rowNotPublished :  classes.rowBasic;\n\n                                    return (\n                                        <TableRow\n                                            className={rowStyle}\n                                            hover\n                                            onClick={(event) => handleClick(event, row.name)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            {checkable ? <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    onChange={(event)=>handleCheckboxChange(event, row.name)}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell> : null}\n\n                                            {headCells.map(header=>{\n                                                if(header.isId){\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\n                                                            {row[header.id]}\n                                                        </TableCell>\n                                                }else if(header.id === 'actions' ){\n                                                        return <TableCell >\n                                                            <div>\n                                                                <IconButton onClick={()=>updateCallback(row[id])} size=\"small\" aria-label=\"edit\" >\n                                                                    <EditIcon fontSize=\"small\" />\n                                                                </IconButton>\n\n                                                                <IconButton size=\"small\" aria-label=\"delete\" >\n                                                                    <DeleteIcon onClick={()=>removeCallback(row[id])} fontSize=\"small\" />\n                                                                </IconButton>\n                                                            </div>\n                                                            </TableCell>\n                                                }else{\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\n                                                }\n\n                                            })}\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows}}>\n\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\n                                        <TableCell colSpan={6} className={classes.centerCell}>\n                                            <Typography variant=\"h6\" noWrap>\n                                                No results\n                                            </Typography>\n                                        </TableCell>}\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10]}\n                    component=\"div\"\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\n\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\nexport default function useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n\n        [value]\n    );\n\n    return debouncedValue;\n}","import React from \"react\";\nimport axios from \"axios\"\n\nconst request = async function(options, contentType) {\n\n    const client = axios.create({\n        baseURL: false ? \"http://localhost:8080/\" : \"http://izbg.l.dedikuoti.lt:8080/\",\n        headers: {\n            'Content-Type': (contentType == null) ? 'application/json': contentType,\n            'Accept':  'application/json',\n            'Access-Control-Allow-Origin': '*'\n        },\n    });\n\n    const onSuccess = function (response) {\n        console.debug('Request Successful!', response);\n        return response.data;\n    };\n\n\n\n    const onError = function (error) {\n        console.debug('Request Failed:', error.config);\n        if (error.response) {\n            console.debug('Status:', error.response.status);\n            console.debug('Data:', error.response.data);\n            console.debug('Headers:', error.response.headers);\n        } else {\n            console.debug('Error Message:', error.message);\n        }\n        return Promise.reject(error.response || error.message);\n    };\n\n    return client(options)\n        .then(onSuccess)\n        .catch(onError);\n};\n\nconst getRequest = function (path, urlData= \"\") {\n    return request({\n        url:path+urlData,\n        method: 'GET'\n    });\n};\n\nconst postRequest = function (path, data, urlData = \"\") {\n    return request({\n        url:    path+urlData,\n        method: 'POST',\n        data: data\n    });\n};\n\nconst postMultipartRequest = function (path, formData) {\n    return request({\n        url: path,\n        method: 'POST',\n        data: formData\n    }, 'multipart/form-data' /*'application/x-www-form-urlencoded'*/);\n};\n\nconst RequestType = {\n    getRequest, postRequest, postMultipartRequest\n};\n\nexport default RequestType\n\n\n","import RequestType from '../Networking/NetworkLayerCentral'\n\n//Places\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\nconst removePlace = (urlParams) => RequestType.getRequest(\"api/v1/place/delete\", urlParams);\n\nconst Places = {getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces, removePlace};\n\n\n//Tags\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\nconst Tags = {getAllTags, addTag};\n\n//Category\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\nconst getAllCategories = () => RequestType.getRequest(\"api/v1/categories/all\");\nconst Categories = {addCategory, getAllCategories};\n\n//Photo\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\nconst Photos = {addPhoto, uploadPhoto};\n\n\n//Parking\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\nconst Parking = {getParkingByLocation, insertNewParking};\n\n\n//TagsPlace\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\nconst TagsPlace = {updateTagsForPlace};\n\n\n//CategoriesPlace\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\nconst CategoriesPlace = {updateCategoriesForPlace};\n\n//PhotoPlace\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\nconst ParkingPlace = {updateParkingForPlace};\n\n//PhotoPlace\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\nconst PhotoPlace = {updatePhotoForPlace};\n\n//Schedule\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\nconst Schedule = {updateScheduleForPlace};\n\nconst API = {Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule};\n\nexport default API\n\n","import { createBrowserHistory as history} from 'history';\n\nexport default history();","// src/common/providers/APIErrorProvider/index.js\nimport React, { useState, useCallback } from 'react';\n\nexport const AlertDialogContext = React.createContext({\n    alertConfig: null,\n    addAlertConfig: () => {},\n    removeAlertConfig: () => {}\n});\n\nexport default function AlertDialogProvider({ children }) {\n    const [alertConfig, setAlertConfig] = useState(null);\n\n    const contextValue = {\n        alertConfig,\n        addAlertConfig: (title, message, func, onClose=undefined) => setAlertConfig({ title, message, func,onClose}),\n        removeAlertConfig: (onCloseFunc) => setAlertConfig(null)\n    };\n\n    return (\n        <AlertDialogContext.Provider value={contextValue}>\n            {children}\n        </AlertDialogContext.Provider>\n    );\n}","import React, {useContext} from \"react\";\nimport {AlertDialogContext} from \"./AlertDialogContext\";\n\nexport default function UseAlertDialogContext() {\n    const { alertConfig, addAlertConfig, removeAlertConfig } = useContext(AlertDialogContext);\n    return { alertConfig, addAlertConfig, removeAlertConfig };\n}\n","const Strings = {\n    DIALOG_PLACE_PUBLISH_TITLE : 'Place publicity',\n    DIALOG_PLACE_PUBLISH_MESSAGE: \"This place will be visible for all users. Are you sure?\",\n    DIALOG_PLACE_UNPUBLISH_MESSAGE :\"This place will not be visible anymore. Are you sure?\",\n\n    DIALOG_PLACE_INSERT_TITLE: \"Insert place\",\n    DIALOG_PLACE_INSERT: \"Are you sure you want to insert this place?\",\n\n    DIALOG_PLACE_UPDATE_TITLE: \"Update place\",\n    DIALOG_PLACE_UPDATE: \"Are you sure you want to make changes to this place?\",\n\n    DIALOG_PLACE_VERIFY_TITLE: \"Place verification\",\n    DIALOG_PLACE_VERIFY_MESSAGE: \"This is a user's suggested place. Are you sure you want to verify this place and make it visible to others?\",\n\n    DIALOG_PLACE_DELETE_TITLE: \"Delete place\",\n    DIALOG_PLACE_DELETE_MESSAGE: \"This action will remove this place permanently. Are you sure you want to proceed?\",\n\n    SNACKBAR_PLACE_INSERTED_SUCCESS: \"Place inserted successfully\",\n    SNACKBAR_PLACE_REMOVE_SUCCESS: \"Place was removed successfully\",\n    SNACKBAR_ERROR: \"Something went wrong!\",\n    SNACKBAR_CHANGES_SAVED: \"All changes saved!\"\n};\n\nexport default Strings;","import React, { useState, useCallback } from 'react';\nimport { useContext } from 'react';\n\nexport const SnackbarContext = React.createContext({\n    config: null,\n    addConfig: () => {},\n    removeConfig: () => {}\n});\n\nexport function UseSnackbarContext() {\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\n    return { config, addConfig, removeConfig };\n}\n\n\nexport default function SnackbarProvider({ children }) {\n    const [config, setConfig] = useState(null);\n\n    const removeConfig = () => setConfig(null);\n    const addConfig = (success, message) => setConfig({ success, message });\n\n    const contextValue = {\n        config,\n        addConfig: (success, message) => addConfig(success, message),\n        removeConfig: () => removeConfig()\n    };\n\n    return (\n        <SnackbarContext.Provider value={contextValue}>\n            {children}\n        </SnackbarContext.Provider>\n    );\n}","import { useContext } from 'react';\nimport {SnackbarContext} from \"./SnackbarContext\";\n\nexport default function UseSnackbarContext() {\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\n    return { config, addConfig, removeConfig };\n}\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TableComponent from \"../components/TableComponent\";\nimport API from \"../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Box from \"@material-ui/core/Box\";\nimport history from \"../helpers/history\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\n\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    input: {\n        display: \"none\"\n    },\n\n    root:{\n        height:\"100vh\",\n        width:\"100%\",\n        overflow: \"auto\"\n    },\n    buttonsDiv: {\n        backgroundColor: \"red\",\n        justifyContent: \"flex-end\"\n    },\n    content:{\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    }\n});\n\n\nconst headCells = [\n    { id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\n    { id: 'address', numeric: false, disablePadding: false, label: 'Address',isId: false},\n    { id: 'city', numeric: false, disablePadding: false, label: 'City',isId: false },\n    { id: 'country', numeric: false, disablePadding: false, label: 'Country',isId: false },\n    { id: 'phoneNumber', numeric: false, disablePadding: false, label: 'Phone Number',isId: false },\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\n];\n\nfunction Places(props) {\n\n    const [data, setData] = useState([]);\n    const [pageData, setPageData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { classes } = props;\n\n    const { addAlertConfig } = UseAlertDialogContext();\n    const { addConfig } = UseSnackbarContext();\n\n    useEffect(()=>{\n        getAllPlaces()\n    },[]);\n\n    function parseData(data){\n        setIsLoading(false);\n        let placesData = [];\n        data.list.map(row => {\n            placesData.push(row)\n        });\n\n        delete data.list;\n        setData(placesData);\n        setPageData(data);\n    }\n\n    function updatePlaceCallback(id){\n        history.push(\"/addplace/\"+id)\n    }\n    function removePlaceCallback(id){\n        setIsLoading(true);\n        addAlertConfig(Strings.DIALOG_PLACE_DELETE_TITLE, Strings.DIALOG_PLACE_DELETE_MESSAGE, function () {\n            API.Places.removePlace(\"?p=\"+id).then(response=>{\n                let tmp = [];\n                data.map(row=>{\n                    console.log(row);\n                    if(row.placeId !== id){\n                        tmp.push(row)\n                    }\n                });\n                setData(tmp);\n                addConfig(true, Strings.SNACKBAR_PLACE_REMOVE_SUCCESS)\n                setIsLoading(false)\n            }).catch(error=>{\n                setIsLoading(false);\n                addConfig(false, Strings.SNACKBAR_ERROR)\n            })\n        }, ()=>{setIsLoading(false)})\n    }\n\n    const changePageCallback = (p=0, keyword=\"\") => {\n        setIsLoading(true);\n        getAllPlaces(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword)\n    };\n\n\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content} >\n                <TableComponent\n                    title={\"Places\"}\n                    headCells={headCells}\n                    data={data}\n                    pagingInfo={pageData}\n                    checkable={false}\n                    changePageCallback={changePageCallback}\n                    updateCallback={updatePlaceCallback}\n                    removeCallback={removePlaceCallback}\n                    id={\"placeId\"}\n                    isLoading={isLoading}\n                />\n\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <Button\n                        onClick={()=>{history.push(\"/addplace\")}}\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        startIcon={<AddIcon />}>\n                        Add\n                    </Button>\n                </Box>\n            </div>\n\n        </div>\n    );\n\n    function getAllPlaces(urlParams=\"\") {\n        API.Places.getAllPlacesAdmin(urlParams).then(response=>{\n            parseData(response)\n        }).catch(error=>{\n            console.log(error)\n        })\n    }\n}\n\nPlaces.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Places);","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {withStyles} from \"@material-ui/core\";\n\n\nconst styles = theme => ({\n\n});\n\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo}) {\n\n    const updatePlaceInfo = (event) =>{\n      const {name, value} = event.target\n        let place = Object.assign({}, placeInfo, {})\n        place[name] = value;\n       setPlaceInfo(place)\n    };\n\n\n    return <div>\n            <Typography variant=\"h6\" >\n                Basic place information\n            </Typography>\n            <br/>\n            <TextField\n                label=\"Place name\"\n                style={{ margin: 8 }}\n                placeholder=\"Enter the place name\"\n                fullWidth\n                value={placeInfo['name']}\n                name=\"name\"\n                onChange={e=>updatePlaceInfo(e)}\n                variant=\"outlined\"\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                label=\"Place description\"\n                style={{ margin: 8 }}\n                placeholder=\"Describe the place thoroughly\"\n                fullWidth\n                multiline\n                name=\"description\"\n                value={placeInfo['description']}\n                onChange={e=>updatePlaceInfo(e)}\n                variant=\"outlined\"\n                rows={4}\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                label=\"Phone number\"\n                style={{ margin: 8 }}\n                placeholder=\"Enter phone number\"\n                fullWidth\n                name=\"phoneNumber\"\n                value={placeInfo['phoneNumber']}\n                onChange={e=>updatePlaceInfo(e)}\n                variant=\"outlined\"\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                label=\"Website\"\n                style={{ margin: 8 }}\n                placeholder=\"Enter website\"\n                fullWidth\n                name=\"website\"\n                value={placeInfo['website']}\n                onChange={e=>updatePlaceInfo(e)}\n                variant=\"outlined\"\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n        </div>\n}\n\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport React, {useMemo, useState} from \"react\"\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Gallery from \"react-photo-gallery\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Delete from \"@material-ui/icons/Delete\"\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst imgWithClick = { cursor: \"pointer\" };\n\nconst Photo = ({ index, onItemDelete, photo, margin, direction, top, left }) => {\n\n    const styles = {\n        imgContainer: {\n            margin: margin,\n            display: 'inline',\n            position: 'relative',\n            width: '300px',\n            height: '300px',\n        }\n    }\n    if (direction === \"column\") {\n        styles.imgContainer.position = \"absolute\";\n        styles.imgContainer.imgStyle.left = left;\n        styles.imgContainer.imgStyle.top = top;\n    }\n\n    const handleDelete = event => {\n        onItemDelete(photo);\n    }\n\n        return (\n\n            <Card style={styles.imgContainer}>\n                <CardMedia\n                    style={{height: 0, paddingTop: '80%'}}\n                    image={photo.src}\n                />\n                <CardActions disableSpacing>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        startIcon={<DeleteIcon />}\n                        onClick = {(event) => {handleDelete(event)}}\n                    >\n                        Delete\n                    </Button>\n                </CardActions>\n\n            </Card>\n        )\n\n};\n\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\nconst SortableGallery = SortableContainer(({ items, onItemDelete}) => (\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>} />\n));\n\nfunction ReorderablePhotos(props){\n    let {setPhotos, photos, srcName, keyName} = props\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\n    };\n    function handleItemDelete(photo){\n        setPhotos(photos.filter(item => {return item[keyName].toString() !== photo.key}))\n    }\n\n    let modifiedData = photos.map(item =>  {\n        return(\n    {\n        key: item[keyName].toString(),\n        src: item[srcName],\n        width: 1,\n        height: 1\n    })\n\n})\n        return (\n            <div >\n                <SortableGallery distance={10} items={modifiedData} onSortEnd={onSortEnd} axis={\"xy\"} onItemDelete = {handleItemDelete} />\n            </div>\n        );\n\n}\n\n\nexport default  ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport {Card} from \"@material-ui/core\";\nimport {DropzoneArea} from \"material-ui-dropzone\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport PropTypes from \"prop-types\";\nimport API from \"../Networking/API\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n});\n\nconst acceptedFileFormats = ['image/jpeg', 'image/png', 'image/bmp', 'image/jpg']\n\nfunction AddImageDialog(props){\n\n    const {onCloseCallback, open, onFinishCallback} = props\n    const [loading, setIsLoading] = useState(false)\n\n    function handleFileUpload(files) {\n        setIsLoading(true)\n\n        var imagefile = files[0]\n        let formData = new FormData()\n        formData.append(\"image\", imagefile)\n\n        API.Photos.uploadPhoto(formData).then(response => {\n            onFinishCallback(response)\n        }).catch(err => {\n            onFinishCallback()\n        }).finally(() => {\n            setIsLoading(false)\n        })\n    }\n\n    return(\n        <div>\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\" >\n                    Photo upload\n                </DialogTitle>\n                {loading && <LinearProgress variant=\"query\" />}\n                <DialogContent dividers>\n                    <DropzoneArea\n                        acceptedFiles={acceptedFileFormats}\n                        dropzoneProps = {{disabled: loading}} filesLimit={1} onDrop={(files) => handleFileUpload(files)}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCallback} color=\"primary\">\n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\nAddImageDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onFinishCallback: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(AddImageDialog)\n","import React, {useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ReorderablePhotos from \"../ReorderablePhotos\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddImageDialog from \"../AddImageDialog\";\nimport {Card} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n});\n\nfunction PhotosInfo({classes, setPhotos, photos}) {\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\n\n    function handleAddPhoto(file) {\n        setAddImageDialogOpen(false);\n        if(file == null)\n            return;\n        setPhotos([\n            ...photos,\n            file]\n        )\n    }\n\n    return(\n        <div>\n            <Typography variant=\"h6\" >\n                Photos\n            </Typography>\n            <Card variant={\"outlined\"} className={classes.outline}>\n\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\n\n\n                <Button\n                    variant=\"text\"\n                    color=\"primary\"\n                    size=\"small\"\n                    style={{width: '15%'}}\n                    className={classes.button}\n                    onClick={() => setAddImageDialogOpen(true)}\n                    startIcon={<AddIcon />}>\n                    Add photo\n                </Button>\n\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(file) => handleAddPhoto(file)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\n\n\n            </Card>\n        </div>\n\n    )\n}\n\nexport default withStyles(styles)(PhotosInfo)\n\n\n","import React, {memo, useEffect, useMemo, useState} from 'react'\nimport Autocomplete from 'react-google-autocomplete';\nimport Geocode from \"react-geocode\";\nimport {compose, withProps, withStateHandlers} from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {map} from \"react-bootstrap/cjs/ElementChildren\";\nimport PropTypes, {func} from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../helpers/history\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport IconButton from \"@material-ui/core/IconButton\";\n\n\n//\n\n//Geocoding API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\n//Places API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\n//Maps API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\n\nconst styles = theme => ({\n    content: {\n        margin: theme.spacing(1)\n    },\n    autocomplete:{\n        width: '200px',\n        height: '40px',\n        fontSize: \"14px\",\n        border: \"0\",\n        borderBottom: \"2px solid grey\",\n        outline:\"0\",\n        marginBottom: \"4px\"\n    }\n});\n\nvar markerData = {};\nfunction CustomMap({classes, locationData, setLocationData, mapHeight, selectedParkingCallback, changedParkingMarkerCallback, addParkingCallback}){\n\n\n    CustomMap.propTypes = {\n        locationData: PropTypes.object,\n        setLocationData: PropTypes.func,\n        mapHeight: PropTypes.number\n    };\n\n\n\n    var parkingIcon = 'https://developers.google.com/maps/documentation/javascript/examples/full/images/parking_lot_maps.png';\n\n    Geocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\n    Geocode.enableDebug();\n\n\n    function useFunction(callback) {\n        const ref = React.useRef();\n        ref.current = callback;\n\n        return React.useCallback(function() {\n            const callback = ref.current;\n            if (typeof callback === \"function\") {\n                return callback.apply(this, arguments);\n            }\n        }, []);\n    }\n    const selectParkingHandler = useFunction(selectedParkingCallback);\n    const addNewParkingHandler = useFunction(addParkingCallback);\n\n\n    const onPlaceSelected = (place, onMarkerLocationChanged, onParkingDataChanged) => {\n\n        const address = place.formatted_address\n        const addressArray =  place.address_components\n        if(addressArray !== undefined){\n            const city = getCity( addressArray ),\n                country = getCountry(addressArray),\n                latitudeValue = place.geometry.location.lat(),\n                longitudeValue = place.geometry.location.lng();\n\n            onMarkerLocationChanged(latitudeValue, longitudeValue, address, city, country);\n            changeLocationData(city,country,address,latitudeValue,longitudeValue, onParkingDataChanged);\n        }\n    };\n\n    const onMarkerDragEnd = ( event, onMarkerLocationChanged, onParkingDataChanged) => {\n        let newLat = event.latLng.lat(),\n            newLng = event.latLng.lng();\n\n\n        Geocode.fromLatLng( newLat , newLng ).then(\n            response => {\n                const address = response.results[0].formatted_address\n                const addressArray =  response.results[0].address_components\n                if(addressArray!==undefined){\n                    const city = getCity( addressArray ),\n                        country = getCountry( addressArray );\n\n                    onMarkerLocationChanged(newLat, newLng, address, city, country);\n\n                    changeLocationData(city,country,address,newLat,newLng, onParkingDataChanged);\n                }\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    };\n\n    function changeLocationData(city,country,address,latitude,longitude, onParkingDataChanged) {\n        let data = Object.assign({}, locationData, {});\n        data['city'] = city;\n        data['country'] = country;\n        data['address'] = address;\n        data['latitude'] = latitude;\n        data['longitude'] = longitude;\n        setLocationData(data);\n        markerData = data;\n        if (changedParkingMarkerCallback !== undefined){\n            changedParkingMarkerCallback(city,address,country, latitude,longitude, onParkingDataChanged);\n        }\n    }\n\n    /**\n     * Get the city and set the city input value to the one selected\n     *\n     * @param addressArray\n     * @return {string}\n     */\n    const getCity = ( addressArray ) => {\n        if(addressArray !== undefined){\n            let city = '';\n            for( let i = 0; i < addressArray.length; i++ ) {\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\n                    city = addressArray[ i ].long_name;\n                    return city;\n                }\n            }\n        }\n    };\n\n    function getCurrentPosition(onMarkerLocationChanged, onParkingDataChanged){\n        navigator.geolocation.getCurrentPosition(function(position) {\n\n            let newLat = position.coords.latitude,\n                newLng = position.coords.longitude;\n\n            Geocode.fromLatLng( newLat , newLng ).then(\n                response => {\n                    const address = response.results[0].formatted_address\n                    const addressArray =  response.results[0].address_components\n                    if(addressArray!==undefined){\n                        const city = getCity( addressArray ),\n                            country = getCountry( addressArray );\n\n                        onMarkerLocationChanged(newLat, newLng, address, city, country);\n\n                        changeLocationData(city,country,address,newLat,newLng, onParkingDataChanged);\n                    }\n                },\n                error => {\n                    console.error(error);\n                }\n            );\n            console.log(\"Latitude is :\", position.coords.latitude);\n            console.log(\"Longitude is :\", position.coords.longitude);\n        });\n    }\n\n    const getCountry = (addressArray) =>{\n        //getCurrentPosition()\n        if(addressArray!=undefined){\n        let country = '';\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\n                country = addressArray[ i ].long_name;\n                return country;\n            }\n        }\n        }\n    };\n    /**\n     *\n     * Renders parking data markers\n     *\n     * @param onToggleOpen Method to open marker's info window\n     * @param infoWindows Marker info window\n     * @param parking data\n     * @returns {*}\n     */\n    const markers = (onToggleOpen, infoWindows, parking) =>{\n        return parking.map((location, i) => {\n\n            const latitude = parseFloat(location.latitude);\n            const longitude = parseFloat(location.longitude);\n\n            return (\n                <Marker\n                    key={location.parkingId}\n                    position={{ lat: latitude, lng: longitude}}\n                    options={{icon: parkingIcon}}\n                    onClick={()=>onToggleOpen(location.parkingId)}\n                >\n\n                    {infoWindows[i].showInfo && (\n                        <InfoWindow >\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                                {location.address}\n                                <Button\n                                    onClick={()=>{selectParkingHandler(location)}}\n                                    variant=\"text\"\n                                    color=\"secondary\"\n                                    size=\"large\"\n                                    className={classes.button}\n                                    startIcon={<AddIcon />}>\n                                    Add parking\n                                </Button>\n                            </div>\n                        </InfoWindow>\n                    )}\n\n                </Marker>\n            )\n        })\n    };\n\n\n    /**\n     * Map component that renders parking data and has draggable marker\n     */\n    const MyMapComponent = compose(\n        withProps({\n            containerElement: <div style={{ height: mapHeight }} />,\n            mapElement: <div style={{ height: `100%` }} />,\n        }),\n        withStateHandlers({\n                infoWindow: {show: false}\n            },{\n            toggleDraggableInfoWindow: ({draggableMarkerLocation}) => (show) => ({\n                infoWindow: {show: show}\n            })\n            }\n        ),\n        withGoogleMap\n    )(props =>\n\n        <GoogleMap\n            defaultZoom={12}\n            center={{lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }}\n            defaultCenter={{ lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }}\n        >\n\n\n\n            <Marker\n                name={'Dolores park'}\n                visible={true}\n                draggable={true}\n                onClick={()=>props.toggleDraggableInfoWindow(true)}\n                onDragEnd={e=>onMarkerDragEnd(e, props.markerChanger, props.onParkingDataChange)}\n                position={{ lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }} >\n\n                {props.infoWindow.show && addParkingCallback && (\n                    <InfoWindow onCloseClick={()=>{props.toggleDraggableInfoWindow(false)}}>\n                        <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                            {props.markerLocation.address}\n                            <Button\n                                onClick={()=>{\n\n                                    addNewParkingHandler(props.markerLocation)\n\n                                }}\n                                variant=\"text\"\n                                color=\"secondary\"\n                                size=\"large\"\n                                className={classes.button}\n                                startIcon={<AddIcon />}>\n                                Add new parking\n                            </Button>\n                        </div>\n                    </InfoWindow>\n                )}\n            </Marker>\n\n            {markers(props.onToggleOpen, props.infoWindows, props.parkingData)}\n        </GoogleMap>\n    );\n\n    /**\n     * Places autocomplete and map. This component holds it's inner states like draggableMarkerLocation, parkingData etc.\n     */\n    const FullMap = compose(\n        withProps(),\n        withStateHandlers({\n            draggableMarkerLocation: {\n                latitude: locationData.latitude,\n                longitude: locationData.longitude,\n                address:  locationData.address\n            },parkingData: [], infoWindows: []\n        },{\n            onMarkerLocationChanged: ({draggableMarkerLocation}) => (newLat, newLng, address, city, country) => ({\n                draggableMarkerLocation: {\n                    latitude: newLat,\n                    longitude: newLng,\n                    address: address,\n                    city: city,\n                    country: country\n                }\n            }),\n                onParkingDataChange: ({parkingData}) => (parking) => ({\n                    parkingData: parking.map(row=>{\n                        return row\n                    }),\n                    infoWindows: parking.map(p => {\n                        return { parkingId: p.parkingId, showInfo: false };\n                    })\n                }),\n                onToggleOpen: ({ infoWindows }) => selectedIndex => ({\n                    infoWindows: infoWindows.map((iw, i) => {\n                        iw.showInfo = selectedIndex === iw.parkingId;\n                        return iw;\n                    })\n                })\n            }\n            )\n    )(props=>\n        <div className={classes.content}>\n            <Autocomplete\n                className={classes.autocomplete}\n                onPlaceSelected={(place)=>{onPlaceSelected(place, props.onMarkerLocationChanged, props.onParkingDataChange)} }\n                types={['(regions)']}\n            />\n            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\">\n                <MyLocationIcon\n                    fontSize=\"large\"\n                    color=\"primary\"\n                    onClick={()=>{\n                        getCurrentPosition(props.onMarkerLocationChanged, props.onParkingDataChange)\n                    }}\n\n                />\n            </IconButton>\n\n            <MyMapComponent markerChanger={props.onMarkerLocationChanged}\n                            markerLocation={props.draggableMarkerLocation}\n                            onParkingDataChange={props.onParkingDataChange}\n                            parkingData={props.parkingData}\n                            onToggleOpen={props.onToggleOpen}\n                            infoWindows={props.infoWindows}\n            />\n\n\n        </div>\n    );\n\n    /**\n     * Memoization of a component.\n     */\n    return useMemo(() => {\n        return <FullMap/>;\n    }, [])\n\n    //\n\n}\n\nexport default withStyles(styles)(CustomMap);","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomMap from \"../CustomMap\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n});\n\nfunction PlaceLocation({locationData, setLocationData}) {\n\n    function changeLocationData(event){\n        const {name, value} = event.target;\n        let data = Object.assign({}, locationData, {});\n        data[name] = value;\n        setLocationData(data)\n    }\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Place location\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select place location from map\n        </Typography>\n        <br/>\n        <CustomMap mapHeight={200}\n                   locationData={locationData}\n                   setLocationData={setLocationData}\n        />\n        <br/>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Place location\n        </Typography>\n        <br/>\n        <TextField\n            label=\"Address\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter place address\"\n            fullWidth\n            disabled\n            value={locationData['address']}\n            name='address'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"City\"\n            disabled\n            style={{ margin: 8 }}\n            placeholder=\"Enter place city\"\n            fullWidth\n            value={locationData['city']}\n            name='city'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Country\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter place country\"\n            fullWidth\n            disabled\n            value={locationData['country']}\n            name='country'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            rows={4}\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n    </div>\n}\n\nexport default withStyles(styles)(PlaceLocation)","import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomMap from \"../CustomMap\";\nimport API from \"../../Networking/API\";\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction ParkingLocation({classes, parkingMarkerData, setParkingMarkerData, allSelectedParkingData, setAllSelectedParkingData}) {\n    const { addConfig } = UseSnackbarContext();\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\n    };\n\n    function changedParkingMarkerCallback(city,address,country,lat,lng, parkingDataChanged) {\n        getClosestParking(parseFloat(lat),parseFloat(lng), parkingDataChanged);\n    }\n\n\n\n    function addNewParking(markerData){\n        if(!parkingExists(markerData)){\n            API.Parking.insertNewParking([markerData]).then(response=>{\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\n                addConfig(true)\n            }).catch(error=>{\n                addConfig(false)\n            })\n        }\n    }\n\n    function parkingExists(markerData){\n        for(let i = 0; i<allSelectedParkingData.length; i++){\n            if(allSelectedParkingData[i].address === markerData.address) return true;\n        }\n        return false\n    }\n\n    const getClosestParking = (lat, lng, parkingDataChanged)=>{\n        API.Parking.getParkingByLocation(\"?lat=\"+lat+\"&lng=\"+lng).then(response=>{\n            let placesData = [];\n            console.log(\"ParkingData\", response)\n            response.map(row => {\n                placesData.push(row)\n            });\n            parkingDataChanged(response);\n        }).catch(error=>{\n        })\n    };\n\n    const SortableItem = SortableElement(({value}) => (\n        <Paper className={classes.paper} elevation={3}>\n            <Typography>\n                {value.address}\n            </Typography>\n            <IconButton aria-label=\"delete\" className={classes.margin}\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\n                <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n        </Paper>\n    ));\n\n    useEffect(()=>{\n        getClosestParking(parkingMarkerData.lat, parkingMarkerData.lng)\n    },[]);\n\n    const SortableList = SortableContainer(({items}) => {\n        return (\n            <ul>\n                {items.map((value, index) => (\n                <SortableItem key={index} index={index} value={value} />\n                ))}\n            </ul>\n        );\n    });\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Add parking\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select parking\n        </Typography>\n        <CustomMap mapHeight={350}\n                   locationData={parkingMarkerData}\n                   setLocationData={setParkingMarkerData}\n                   selectedParkingCallback={(location)=>{\n                       if(!parkingExists(location))\n                           setAllSelectedParkingData(oldArray=> [...oldArray, location])\n                       }}\n                   changedParkingMarkerCallback={changedParkingMarkerCallback}\n                   addParkingCallback={addNewParking}\n\n        />\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Selected parking locations\n        </Typography>\n\n        <SortableList distance={10} items={allSelectedParkingData} onSortEnd={onSortEnd} />\n\n    </div>\n}\n\nexport default withStyles(styles)(ParkingLocation)","\nimport React, {useEffect, useState} from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Paper from \"@material-ui/core/Paper\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = theme => ({\n    autoComplete: {\n        margin: theme.spacing(1)\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'left',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(1),\n        margin: 0,\n    },\n    autoCompleteChipContainer: {\n        padding: theme.spacing(1)\n    }\n})\n\nfunction AutoCompleteChip(props){\n\n    const {options, selectedOptions, setSelectedOptions, classes, label, id} = props;\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\n    const [viableOptions, setViableOptions] = useState([]);\n\n\n    function handleDelete(data) {\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\n        setViableOptions(\n            [\n                ...viableOptions,\n                data\n            ]\n        )\n    }\n\n    useEffect(() => {\n        setViableOptions(options.filter(item => !selectedOptions.includes(item)))\n    }, [options, selectedOptions]);\n\n    function handleInput(event, value){\n        setCurrentVal({\"name\": \"\"});\n        setSelectedOptions(\n            [\n                ...selectedOptions,\n                value\n            ]\n        );\n        setViableOptions(viableOptions.filter(item => item !== value))\n    }\n\n    return(\n        <div>\n            <Box  className={classes.autoCompleteChipContainer}>\n                {selectedOptions.length !== 0 &&\n                <Box component=\"ul\" className={classes.root}>\n                    {\n                        selectedOptions.map(option => {\n                            return(\n                                <li key={option[id]}>\n                                    <Chip\n                                        variant=\"outlined\"\n                                        label={option.name}\n                                        onDelete={() => handleDelete(option)}\n                                        className={classes.chip}\n                                    />\n                                </li>\n                            )\n                        })\n                    }\n                </Box>\n                }\n\n                <Autocomplete\n                    className={classes.autoComplete}\n                    value={getCurrentVal}\n                    options={viableOptions}\n                    onChange={handleInput}\n                    disableClearable\n                    getOptionLabel={(option) =>  option.name}\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n                />\n            </Box>\n        </div>\n    )\n}\n\nAutoCompleteChip.propTypes = {\n    setSelectedOptions: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired,\n    selectedOptions: PropTypes.array.isRequired,\n    classes: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(AutoCompleteChip)","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nfunction AddDialog(props){\n\n    function validateInput(){\n        var error = false;\n        if(text.length <= 3)\n            error = true\n        setError(error)\n        return error\n    }\n\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\n    const [text, setText] = useState(\"\")\n    const [error, setError] = useState(false)\n    return(\n        <div>\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\n                    {header}\n                </DialogTitle>\n                <DialogContent dividers>\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCallback} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button autoFocus color=\"primary\" onClick={() => {\n                        !validateInput() && action(text)\n                    }}>\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nAddDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    action: PropTypes.func.isRequired,\n    onCloseCallback: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(AddDialog)\n","import React, {useEffect, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AutocompleteChip from \"../AutocompleteChip\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddDialog from \"../AddDialog\";\nimport API from \"../../Networking/API\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories}) {\n\n    const [dialogAddTagOpen, setDialogAddTagOpen] = useState(false);\n    const [dialogAddCategoryOpen, setDialogAddCategoryOpen] = useState(false);\n\n    const [availableCategories, setAvailableCategories] = useState([]);\n    const [availableTags, setAvailableTags] = useState([]);\n\n\n    const updateTags = () => {\n        API.Tags.getAllTags().then(response=>{\n            setAvailableTags(response);\n            console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n    const updateCategories = () => {\n        API.Categories.getAllCategories().then(response=>{\n            setAvailableCategories(response)\n            console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        });\n    };\n\n    useEffect(()=>{\n        console.log(\"ParsiunciaasdasdkasfkjlasdnfoasdFJasdfn;FN;\")\n        updateTags();\n        updateCategories();\n    },[]);\n\n    const handleAddCategory = (value) => {\n        API.Categories.addCategory([{name: value}]).then(response=>{\n            let newCat = {categoryId: response[0], name: value};\n            setAvailableCategories(\n                [\n                    ...availableCategories,\n                    newCat\n                ]\n            );\n            setSelectedCategories([\n                ...selectedCategories,\n                newCat\n            ]);\n            setDialogAddCategoryOpen(false)\n\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n\n\n\n    const handleAddTag = (value) => {\n        API.Tags.addTag([{name: value}]).then(response=>{\n            let newTag = {tagId: response[0], name: value}\n            setAvailableTags(\n                [\n                    ...availableTags,\n                    newTag\n                ]\n            );\n            setSelectedTags([\n                ...selectedTags,\n                newTag\n            ]);\n            setDialogAddTagOpen(false)\n\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Place discovery settings\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select tags\n        </Typography>\n        <AutocompleteChip label=\"Select tags\" id=\"tagId\" options={availableTags} selectedOptions={selectedTags} setSelectedOptions ={setSelectedTags}/>\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => setDialogAddTagOpen(true)}\n            startIcon={<AddIcon />}>\n            Add missing tag\n        </Button>\n        <AddDialog action={handleAddTag} textFieldLabel=\"Name\" open={dialogAddTagOpen} onCloseCallback={() => setDialogAddTagOpen(false)} header = \"Add a new tag\" />\n\n        <br/>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select categories\n        </Typography>\n        <AutocompleteChip label=\"Select categories\" id=\"categoryId\" options={availableCategories} selectedOptions={selectedCategories} setSelectedOptions={setSelectedCategories}/>\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => setDialogAddCategoryOpen(true)}\n            startIcon={<AddIcon />}>\n            Add missing category\n        </Button>\n        <AddDialog action={handleAddCategory} textFieldLabel=\"Name\" open={dialogAddCategoryOpen} onCloseCallback={() => setDialogAddCategoryOpen(false)} header = \"Add a new category\" />\n\n    </div>\n}\n\nexport default withStyles(styles)(PlaceDiscovery)","const initialScheduleData = [\n    {\n        dayOfWeek: 0,\n        openTime: \"08:00:00\",\n        closeTime: \"18:00:00\",\n        isClosed: false\n    },\n    {\n        dayOfWeek: 1,\n        openTime: \"08:00:00\",\n        closeTime: \"18:00:00\",\n        isClosed: false\n    },\n    {\n        dayOfWeek: 2,\n        openTime: \"08:00:00\",\n        closeTime: \"18:00:00\",\n        isClosed: false\n    },\n    {\n        dayOfWeek: 3,\n        openTime: \"08:00:00\",\n        closeTime: \"18:00:00\",\n        isClosed: false\n    },\n    {\n        dayOfWeek: 4,\n        openTime: \"08:00:00\",\n        closeTime: \"18:00:00\",\n        isClosed: false\n    },\n    {\n        dayOfWeek: 5,\n        openTime: \"08:00:00\",\n        closeTime: \"18:00:00\",\n        isClosed: false\n    },\n    {\n        dayOfWeek: 6,\n        openTime: \"08:00:00\",\n        closeTime: \"18:00:00\",\n        isClosed: false\n    }\n]\n\nexport default initialScheduleData","import {withStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst styles = theme => ({\n    scheduleCard: {\n        [theme.breakpoints.down(\"lg\")]: {\n            margin: theme.spacing(0),\n            padding: theme.spacing(0),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            margin: theme.spacing(1),\n            padding: theme.spacing(1),\n        },\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n        //width: '100%'\n    },\n    text : {\n\n        [theme.breakpoints.down(\"lg\")]: {\n            fontSize: '0.8rem'\n\n        },\n        [theme.breakpoints.only(\"lg\")]: {\n            fontSize: '1rem'\n\n        },\n    }\n})\n\nfunction ScheduleCard({dayOfWeek, setData, data, classes}){\n\n    const weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\n    const [openTime, setOpenTime] = useState(data.openTime);\n    const [closeTime, setCloseTime] = useState(data.closeTime);\n    const [isClosed, setIsClosed] = useState(data.isClosed);\n\n    React.useEffect(() => {\n        setData(oldData => {\n            return oldData.map(item => {\n                if(item.dayOfWeek === dayOfWeek)\n                    return {dayOfWeek: dayOfWeek, openTime: openTime, closeTime: closeTime, isClosed: isClosed}\n                else return item\n            })\n        })\n    }, [openTime, isClosed, closeTime])\n\n    return(\n    <Card elevation={1} className={classes.scheduleCard}  >\n\n        <Typography variant=\"subtitle1\" className={classes.text}>\n            {weekDays[dayOfWeek]}\n        </Typography>\n\n        <div >\n\n            {!isClosed &&\n                <React.Fragment>\n                <TextField\n                    label=\"Opens\"\n                    type=\"time\"\n                    value={openTime}\n                    onChange={(e) => setOpenTime(e.target.value)}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    inputProps={{\n                        step: 300, // 5 min\n                    }}\n                />\n                <TextField\n                    label=\"Closes\"\n                    type=\"time\"\n                    onChange={(e) => setCloseTime(e.target.value)}\n                    value={closeTime}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    inputProps={{\n                        step: 300, // 5 min\n                    }}\n                />\n                </React.Fragment>\n            }\n            <Checkbox\n                name=\"checkedB\"\n                color=\"primary\"\n                onChange={() => setIsClosed(state => !state)}\n                checked={!isClosed}\n            />\n\n        </div>\n\n    </Card>\n    )\n}\nScheduleCard.propTypes = {\n    dayOfWeek: PropTypes.number.isRequired,\n    setData: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n};\n\nfunction Schedule({scheduleData, setScheduleData, classes}) {\n    return(\n        <div>\n            {scheduleData.map((item, index) => {\n                return <ScheduleCard key={index} dayOfWeek={index} classes={classes} data = {scheduleData.filter(item => item.dayOfWeek === index)[0]}  setData={setScheduleData}/>\n            })}\n        </div>\n    )\n}\n\nSchedule.propTypes = {\n    setScheduleData: PropTypes.func.isRequired,\n    scheduleData: PropTypes.array.isRequired,\n    classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(Schedule)","import React, {useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport {Card} from \"@material-ui/core\";\nimport Schedule from \"../Schedule\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction WorkingSchedule({classes, scheduleData, setScheduleData,workingScheduleEnabled, setWorkingScheduleEnabled}) {\n\n    return <div>\n        <Typography variant=\"subtitle1\" >\n            Working schedule\n        </Typography>\n        <FormControlLabel\n            control={\n                <Switch\n                    checked={workingScheduleEnabled['hasSchedule']}\n                    onChange={() => {\n                        var obj = Object.assign({}, workingScheduleEnabled,{});\n                        obj['hasSchedule'] = !obj['hasSchedule'];\n                        console.log(obj);\n                        setWorkingScheduleEnabled(obj)}}\n                    color=\"primary\"\n                />\n            }\n            label=\"Enable working schedule for this place\"\n        />\n        <br/>\n        {workingScheduleEnabled['hasSchedule'] &&\n            <Schedule scheduleData={scheduleData} setScheduleData={setScheduleData}/>\n        }\n    </div>\n}\n\nexport default withStyles(styles)(WorkingSchedule)","import React, {useEffect, useState} from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes, {func} from \"prop-types\";\nimport {Paper} from '@material-ui/core';\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\nimport initialScheduleData from \"../components/add_place_components/initialScheduleData\";\nimport WorkingSchedule from \"../components/add_place_components/WorkingSchedule\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport API from \"../Networking/API\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Strings from \"../helpers/stringResources\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport green from \"@material-ui/core/colors/green\";\nimport ThemeProvider from \"react-bootstrap/ThemeProvider\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    paperContent: {\n        marginTop: theme.spacing(4),\n        [theme.breakpoints.down(\"lg\")]: {\n            width: \"95%\",\n            padding: theme.spacing(2),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            width: \"70%\",\n            padding: theme.spacing(4),\n        },\n    },\n    root:{\n        height:\"100vh\"\n    },\n    loader:{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100vw\",\n        height: \"100vh\"\n    },\n    content:{\n        display:\"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        height:`calc(93vh - 64px)`,\n        [theme.breakpoints.down(\"lg\")]: {\n            width: \"100%\",\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            width: \"auto\",\n            padding: theme.spacing(8),\n        },\n        overflowY: \"auto\"\n    },\n    bottom:{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        padding: theme.spacing(1),\n        height: \"7vh\"\n    }\n});\n\n\nfunction AddPlace({classes, match}){\n    const [placeInfo, setPlaceInfo] = useState({placeId: \"\", name: \"\", description: \"\",website: \"\", phoneNumber: \"\", hasSchedule: false, isPublic: false, isVerified: true});\n\n    const [selectedTags, setSelectedTags] = useState([]);\n    const [selectedCategories, setSelectedCategories] = useState([]);\n\n    const [photos, setPhotos] = useState([]);\n\n    const [locationData, setLocationData] = useState({city: '', address: '', country: '', latitude: 54.687157, longitude: 25.279652});\n    const [parkingMarkerData, setParkingMarkerData] = useState({city: '', address: '', country: '', latitude: 54.687157, longitude: 25.279652});\n    const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\n\n    const [scheduleData, setScheduleData] = useState(initialScheduleData);\n\n    const [placeId, setPlaceId] = useState(match.params.placeId);\n\n    const [firstTimeLoading, setFirstTimeLoading] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n\n\n\n\n    const { addConfig } = UseSnackbarContext();\n    const { addAlertConfig } = UseAlertDialogContext();\n\n\n    const ColorButton = withStyles((theme) => ({\n        root: {\n            color: theme.palette.getContrastText(green[500]),\n            backgroundColor: green[500],\n            '&:hover': {\n                backgroundColor: green[700],\n            },\n        },\n    }))(Button);\n\n    useEffect(()=>{\n        //Loaded place for editing\n        if(placeId!==undefined){\n            console.log(\"Getting place location\");\n            getPlaceInfo()\n        }else{\n            console.log(\"Came here to add new place\");\n            setFirstTimeLoading(false) //Just loaded add place window\n        }\n\n        //New Place has been just inserted, thus inserting other place info\n        if(placeId!==undefined && firstTimeLoading===false){\n            console.log(\"Just added new place\");\n            Promise.all([\n                updateTagsData(placeId),\n                updateParkingData(placeId),\n                updateCategoriesData(placeId),\n                updatePhotoData(placeId),\n                updateSchedule(placeId)\n            ]).then(responses=>{\n                formFeedback(true, Strings.SNACKBAR_PLACE_INSERTED_SUCCESS)\n            }).catch(error=>{\n                formFeedback(false)\n            })\n        }\n\n    },[placeId]);\n\n    useEffect(()=>{\n        if(firstTimeLoading === false){\n            console.log(\"Making this place public\");\n            updateAll()\n        }\n    },[placeInfo['isPublic']]);\n\n    function getPlaceInfo() {\n        API.Places.getPlaceById(\"?full=true&p=\"+placeId).then(response=>{\n            setAllData(response)\n\n        }).catch(error=>{\n            formFeedback(false)\n        })\n    }\n\n    function setAllData(place){\n        console.log(place)\n        setPlaceInfo({\n            placeId: place.placeId,\n            name: place.name,\n            description: place.description,\n            website: place.website,\n            phoneNumber: place.phoneNumber,\n            hasSchedule: place.hasSchedule,\n            isPublic: place.isPublic,\n            isVerified: place.isVerified\n        });\n\n        setLocationData({city: place.city,\n            address: place.address,\n            country: place.country,\n            latitude: place.latitude,\n            longitude: place.longitude});\n\n        setSelectedTags(place.tags);\n        setSelectedCategories(place.categories);\n        if(place.schedule.length > 0)\n            setScheduleData(place.schedule);\n        setAllSelectedParkingData(place.parking);\n        setPhotos(place.photos)\n\n        setFirstTimeLoading(false);\n\n    }\n\n    function formFeedback(success, message=Strings.SNACKBAR_ERROR){\n        addConfig(success, message);\n        setIsLoading(false)\n    }\n\n    function saveChanges(){\n        if(placeId === undefined){\n            addAlertConfig(Strings.DIALOG_PLACE_INSERT_TITLE,Strings.DIALOG_PLACE_INSERT,function () {\n                setIsLoading(true);\n                insertBasicPlaceInfo()\n            });\n        }else{\n            addAlertConfig(Strings.DIALOG_PLACE_UPDATE_TITLE, Strings.DIALOG_PLACE_UPDATE, function () {\n                setIsLoading(true)\n                updateAll()\n            })\n        }\n    }\n\n    function updateAll(){\n        Promise.all([\n            updatePlaceInfo(),\n            updateTagsData(placeId),\n            updatePhotoData(placeId),\n            updateCategoriesData(placeId),\n            updateParkingData(placeId),\n            updateSchedule(placeId)\n        ]).then(response=>{\n            formFeedback(true, Strings.SNACKBAR_CHANGES_SAVED);\n        }).catch(err=>{\n            formFeedback(false)\n        })\n    }\n\n    function updatePlaceInfo() {\n        API.Places.updatePlace(formPlaceInfo()).then(response=>{\n\n        }).catch(error=>{\n\n        })\n\n    }\n\n    function insertBasicPlaceInfo(){\n            API.Places.insertPlace(formPlaceInfo()).then(placeId=>{\n                setPlaceId(placeId)\n            }).catch(error=>{\n\n            })\n    }\n\n    function updateParkingData(id) {\n        API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n    function updateTagsData(id) {\n        API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n    function updateCategoriesData(id) {\n        API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n    function updatePhotoData(id) {\n        API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n    function updateSchedule(id){\n        console.log(scheduleData);\n        if(placeInfo['hasSchedule'])\n            API.Schedule.updateScheduleForPlace(scheduleData, \"?p=\"+id).then(response=>{}).catch(er=>{})\n    }\n\n    function formPlaceInfo(){\n        let d = Object.assign(placeInfo, locationData)\n        console.log(d);\n        return d\n    }\n\n\n    function publishPlace(){\n        addAlertConfig(Strings.DIALOG_PLACE_PUBLISH_TITLE, placeInfo['isPublic'] ? Strings.DIALOG_PLACE_UNPUBLISH_MESSAGE : Strings.DIALOG_PLACE_PUBLISH_MESSAGE, function(){\n            let obj = Object.assign({}, placeInfo, {});\n            obj['isPublic'] = !obj['isPublic'];\n            setPlaceInfo(obj);\n        })\n    }\n\n    function verifyPlace(){\n        addAlertConfig(Strings.DIALOG_PLACE_VERIFY_TITLE, Strings.DIALOG_PLACE_VERIFY_MESSAGE, function(){\n            let obj = Object.assign({}, placeInfo, {});\n            obj['isPublic'] = 1;\n            obj['isVerified'] = 1;\n            setPlaceInfo(obj);\n        })\n    }\n\n    return(\n        <div className={classes.root}>\n            {firstTimeLoading ? <div className={classes.loader}><CircularProgress /></div> : <div className={classes.content}>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <BasicPlaceInfo\n                        placeInfo={placeInfo}\n                        setPlaceInfo={setPlaceInfo}\n                    />\n                </Paper>\n\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PhotosInfo\n                        photos={photos}\n                        setPhotos={setPhotos}\n                    />\n                </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PlaceLocation\n                        locationData={locationData}\n                        setLocationData={setLocationData}/>\n                </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <ParkingLocation\n                        allSelectedParkingData={allSelectedParkingData}\n                        setAllSelectedParkingData={setAllSelectedParkingData}\n                        parkingMarkerData={parkingMarkerData}\n                        setParkingMarkerData={setParkingMarkerData}/>\n                </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PlaceDiscovery\n                        selectedTags={selectedTags}\n                        setSelectedTags={setSelectedTags}\n                        selectedCategories={selectedCategories}\n                        setSelectedCategories={setSelectedCategories}/>\n                </Paper>\n\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <WorkingSchedule\n                        workingScheduleEnabled={placeInfo}\n                        setWorkingScheduleEnabled={setPlaceInfo}\n                        scheduleData={scheduleData}\n                        setScheduleData={setScheduleData}/>\n                </Paper>\n            </div> }\n\n            {isLoading ? <LinearProgress/> : null}\n\n            <Paper elevation={1} className={classes.bottom}>\n\n                {\n\n                    placeInfo['isVerified'] === false && placeId !== undefined ?\n                        <ColorButton\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={()=>{verifyPlace()}}\n                            className={classes.button}\n                        >\n                            Verify place\n                        </ColorButton>\n                    :\n                    <FormControlLabel\n                    control={<Switch checked={placeInfo['isPublic']} onChange={()=> {\n                        publishPlace()\n                    }\n                    } name=\"isPublic\" />}\n                    label=\"Make this place public\"\n                />}\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={()=>saveChanges()}\n                    className={classes.button}>\n                    Save\n                </Button>\n\n\n            </Paper>\n        </div>)\n\n}\n\nAddPlace.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AddPlace)\n\n\n","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {Fragment, useState} from \"react\"\nimport Typography from \"@material-ui/core/Typography\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Card from \"@material-ui/core/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport red from \"@material-ui/core/colors/red\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = theme => ({\n    root: {\n        [theme.breakpoints.down('lg')]: {\n            width: \"95%\",\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: \"28vw\",\n        },\n        margin: theme.spacing(1)\n    },\n    media: {\n        height: 0,\n            paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n})\n\nfunction CategoriesDisplay({categories}){\n    return(\n        categories != null &&\n        <Box component=\"ul\"  style={{\n            display: 'flex',\n            justifyContent: 'left',\n            flexWrap: 'wrap',\n            listStyle: 'none',\n            padding: '0px'\n        }}>\n            {categories.map((data, index) => {\n                return (\n                    <li key={index}>\n                        <Chip\n                            variant=\"outlined\"\n                            style={{margin: \"5px\"}}\n                            label={data.name}\n                        />\n                    </li>\n\n                );\n            })}\n        </Box>\n    )\n}\n\nfunction SubheaderDisplay({city, address, priceRange, rating}){\n    return(\n        <div>\n\n            {rating != null &&\n            <Fragment><Rating\n                readOnly={true}\n                value={rating}\n            /><br/></Fragment>}\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\n\n        </div>\n    )\n}\n\nfunction ApiPlaceCard({classes, placeData}){\n\n    function truncateText(text){\n        if(text == null)\n            return \"\"\n        if(text.length > 500){\n            return text.substring(0, 500) + \"...\";\n        }else{\n            return text\n        }\n    }\n\n    return(\n        <Card className={classes.root}>\n            <CardHeader\n                action={\n                    <IconButton aria-label=\"settings\">\n                        <InfoIcon />\n                    </IconButton>\n                }\n                title={placeData.name}\n                subheader={<SubheaderDisplay city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\n\n            />\n            {placeData.photos != null &&\n            <CardMedia\n                className={classes.media}\n                image={placeData.photos[0].url}\n            />}\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {truncateText(placeData.description)}\n                </Typography>\n\n                <CategoriesDisplay categories={placeData.categories}/>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\n                {placeData.website}\n                </Typography>\n\n            </CardContent>\n            <CardActions disableSpacing>\n            </CardActions>\n        </Card>\n    )\n}\n\nApiPlaceCard.propTypes = {\n    placeData: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ApiPlaceCard)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport {debounce} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        margin: theme.spacing(2)\n        // width: 400,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    divider: {\n        // height: 28,\n        margin: 4,\n    },\n}));\n\nexport default function SearchInputComponent({hint, searchCallback}) {\n    const classes = useStyles();\n\n    const debouncedInput = (event) => {\n        searchCallback(event.target.value)\n    }\n\n    const debounceInput = debounce(event => debouncedInput(event), 300)\n\n    const handleInput = (event) => {\n        event.persist()\n        debounceInput(event)\n    }\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <InputBase\n                className={classes.input}\n                placeholder={hint}\n                inputProps={{ 'aria-label': hint }}\n                onChange={handleInput}\n            />\n            <IconButton className={classes.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n            <Divider className={classes.divider} orientation=\"vertical\" />\n        </Paper>\n    );\n}","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {useState} from \"react\"\nimport ApiPlaceCard from \"../components/ApiPlaceCard\";\nimport API from \"../Networking/API\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport debounce from 'lodash/debounce'\nimport Masonry from \"react-masonry-component\";\nimport SearchInputComponent from \"../components/SearchInputComponent\";\nimport Strings from \"../helpers/stringResources\";\n\n\n\nconst styles = theme => ({\n    root:{\n        overflow: 'scroll',\n        width: \"100%\",\n        padding: theme.spacing(1),\n        height:`calc(100vh - 64px)`,\n        paddingTop: \"9vh\",\n    },\n    topBar: {\n        height: \"8vh\",\n        position: \"absolute\",\n        width: \"60%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        justifyContent: \"center\",\n        zIndex: 1\n    },\n    searchBox: {\n        margin: theme.spacing(1)\n    }\n})\n\nfunction ApiPlaces({classes}){\n\n    const [data, setData] = useState([]);\n    const [isLoadingData, setIsLoadingData] = useState(false);\n    const [after, setAfter] = useState(null);\n    const [searchQuery, setSearchQuery] = useState(\"Kaunas\");\n\n    const loadDataFunc = (query, after) => {\n        // console.log(data)\n        setIsLoadingData(true)\n        API.Places.searchApiPlaces(\"?keyword=\" + encodeURI(query) + (after != null ? \"&after=\" + after : \"\")).then(response => {\n            setData(currentData => [...currentData, ...(response.data)])\n            setAfter(response.after)\n        }).catch(error => {\n        }).finally(() => {\n            setIsLoadingData(false)\n        })\n    }\n\n    const handleScrollDebounced = (e) => {\n        const scrollOffset = 250//px\n        const bottom = Math.round(e.target.scrollHeight - e.target.scrollTop - scrollOffset)  <= e.target.clientHeight;\n        if (bottom && !isLoadingData) {\n            loadDataFunc(\n                searchQuery, after)\n        }\n    }\n\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200)\n\n    const handleScroll = (e) => {\n        e.persist()\n        debounceScroll(e)\n    }\n\n    const handleSearch = (query) => {\n        setData([])\n        loadDataFunc(searchQuery, null)\n        setSearchQuery(query)\n    }\n\n    return(\n        <div style={{position: \"relative\"}}>\n            <div className = {classes.topBar}>\n                <SearchInputComponent searchCallback={handleSearch} hint=\"Search api places\" style={classes.searchBox} />\n            </div>\n\n            <div className={classes.root} onScroll={(e) => handleScroll(e)}>\n                <Masonry\n                    // className={'my-gallery-class'} // default ''\n                    style={{margin: \"0 auto\"}}\n                    elementType={'div'} // default 'div'\n                    options={{\n                        isFitWidth: true\n                    }} // default {}\n                    disableImagesLoaded={false} // default false\n                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n                    // imagesLoadedOptions={} // default {}\n                >\n\n                    {data.map(item => {\n                        return <ApiPlaceCard key={item.placeId} placeData = {item} style={{boxSizing: 'border-box'}}/>\n                    })}\n                </Masonry>\n                {\n                    isLoadingData &&\n                    <CircularProgress  />\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(ApiPlaces)","import React, {Fragment, useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Router, Route, Link } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Places from \"../pages/Places\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AddPlace from \"../pages/AddPlace\";\nimport history from \"../helpers/history\";\nimport ApiPlaces from \"../pages/ApiPlaces\";\n\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles((theme) => ({\n    root1: {\n        overflow: \"hidden\",\n        display: 'flex',\n        height: \"100vh\",\n        background: \"#F1F1F1\"\n    },\n    appBar: {\n        height: \"64px\",\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        width: \"100vw\",\n        height: \"100%\",\n        //padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        width: \"100vw\",\n        height: \"100%\",\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0\n    },\n}));\n\n\nexport default function Appbar() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n    const [title, setTitle] = useState(\"Home\");\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root1}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n\n            <Router history={history}>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n\n                <Divider />\n                <List>\n                    <ListItem button component={Link} to=\"/\" onClick={()=>setTitle(\"Home\")}>\n                        <ListItemText>Home</ListItemText>\n                    </ListItem>\n                    <Divider light />\n                    <ListItem button component={Link} to=\"/places\" onClick={()=>setTitle(\"Place\")} >\n                        <ListItemText>Places</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/apiplaces\" onClick={()=>setTitle(\"Api places\")} >\n                        <ListItemText>Explore API places</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/addplace\" onClick={()=>setTitle(\"Add Place\")} >\n                        <ListItemText>Add place</ListItemText>\n                    </ListItem>\n                </List>\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/places\" component={Places} />\n                <Route path=\"/addplace/:placeId?\" component={AddPlace} />\n                <Route path=\"/apiplaces\" component={ApiPlaces} />\n                <Route path=\"/addplace\" component={AddPlace} />\n            </main>\n            </Router>\n        </div>\n    );\n}\n","import React, {useState} from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\n\n\nexport default function SnackbarFeedback(props){\n\n    const { config, removeConfig } = UseSnackbarContext();\n\n    return(\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"error\") : \"\"}>\n                {!!config && config.message}\n            </Alert>\n        </Snackbar>\n    )\n}\n","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\"\n\nconst AlertDialogFeedback = () => {\n\n    const {alertConfig, removeAlertConfig} = UseAlertDialogContext();\n\n    function remove() {\n        if(alertConfig.onClose !== undefined)\n            alertConfig.onClose()\n        removeAlertConfig()\n    }\n\n    return(\n        <Dialog\n            open={!!alertConfig}\n            onClose={remove}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{!!alertConfig ? alertConfig.title : \"\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {!!alertConfig ? alertConfig.message : \"\"}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={remove}\n                        color=\"primary\">\n                    Close\n                </Button>\n                <Button onClick={!!alertConfig ? ()=>{\n                    removeAlertConfig();\n                    alertConfig.func()} : {}\n                } color=\"primary\" autoFocus>\n                    Agree\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n};\n\n\nexport default AlertDialogFeedback\n","import React, { Component } from 'react';\nimport Appbar from './components/Appbar.js';\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\nimport AlertDialogProvider from \"./contexts/AlertDialogContext\";\nimport AlertDialogFeedback from \"./components/feedback/AlertDialogFeedback\";\n\nclass App extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <AlertDialogProvider>\n                <SnackbarProvider>\n                    <Appbar />\n                    <SnackbarFeedback/>\n                    <AlertDialogFeedback/>\n                </SnackbarProvider>\n                </AlertDialogProvider>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}