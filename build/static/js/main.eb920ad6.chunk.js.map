{"version":3,"sources":["res/selectedTourIcon.svg","res/selectedParking.svg","res/availableParking.svg","helpers/firebaseInit.js","pages/Home.js","components/TableComponent.js","helpers/debounce.js","helpers/history.js","helpers/tokens.js","Networking/NetworkLayerCentral.js","Networking/API.js","contexts/AlertDialogContext.js","contexts/UseAlertDialogContext.js","helpers/stringResources.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","components/AutocompleteChip.js","contexts/PlacesFilterContext.js","components/add_place_components/FilterBlock.js","pages/Places.js","helpers/priceRange.js","helpers/averageTimeSpent.js","components/AddSourceDialog.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/maps/MapGeolocation.js","components/maps/MapToolbar.js","components/maps/MapLock.js","components/maps/CustomControlsManager.js","components/maps/PlaceMap.js","components/add_place_components/PlaceLocation.js","components/maps/ParkingMap.js","components/add_place_components/ParkingLocation.js","components/AddDialog.js","contexts/EditDialogContext.js","contexts/UseEditDialogContext.js","components/add_place_components/PlaceDiscovery.js","components/add_place_components/initialScheduleData.js","components/ReviewCard.js","components/add_place_components/Reviews.js","contexts/AppBarTitleContext.js","contexts/UseAppBarTitleContext.js","components/ScheduleInterval.js","components/DayComponent.js","components/Schedule.js","components/add_place_components/SchedulesWrapper.js","pages/AddPlace.js","components/ApiPlaceCard.js","components/SearchInputComponent.js","pages/ApiPlaces.js","pages/NotFoundPage.js","components/tour_components/TourPlaceComponent.js","components/tour_components/TransportItem.js","components/tour_components/TourPlacesWrapper.js","components/tour_components/PlaceSearch.js","components/tour_components/DayCard.js","components/tour_components/DaysWrapper.js","components/tour_components/TourReducer.js","components/tour_components/TourInfoComponent.js","components/tour_components/TourMap.js","components/tour_components/Tour.js","pages/Tours.js","components/Resources.js","components/Appbar.js","App.js","contexts/AuthContext.js","pages/LoginPage.js","components/AuthenticatedRoute.js","components/feedback/SnackbarFeedback.js","components/feedback/AlertDialogFeedback.js","components/feedback/TextInputDialog.js","index.js"],"names":["module","exports","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","withStyles","theme","button","margin","spacing","input","display","props","classes","descendingComparator","a","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","checkable","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","customToolbarElements","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","style","alignItems","TextField","target","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","centerCell","textAlign","rowNotPublished","rowNotVerified","rowBasic","TableComponent","searchFunction","pagingInfo","data","updateCallback","removeCallback","isLoading","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","filter","item","undefined","slice","row","isItemSelected","indexOf","labelId","rowStyle","hover","rowId","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckboxChange","header","isId","scope","fontSize","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","pageNum","onChangePage","newPage","onChangeRowsPerPage","parseInt","console","log","history","getAccessToken","Cookies","get","isAuthenticated","request","options","contentType","client","axios","create","baseURL","headers","interceptors","response","use","error","originalRequest","config","status","auth","currentUser","_retry","Promise","reject","getIdToken","then","token","Authorization","set","onSuccess","onError","debug","push","message","catch","RequestType","getRequest","path","urlData","url","method","postRequest","postMultipartRequest","formData","API","Tour","insertTour","getTour","urlParams","updateTour","getAllToursAdmin","removeTour","getTourTags","updateTourTags","SourcePlace","updateSourcesForPlace","Source","getSources","addSource","Places","getClosesPlacesAdmin","getAllCities","getAllCounties","getAllCountries","getAllMunicipalities","getAllPlaces","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","removePlace","Tags","getAllTags","addTag","params","removeTags","updateTags","Categories","addCategory","getAllCategories","removeCategory","updateCategory","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","Reviews","getPlaceReviews","AlertDialogContext","createContext","alertConfig","addAlertConfig","removeAlertConfig","AlertDialogProvider","children","setAlertConfig","contextValue","actions","onClose","Provider","UseAlertDialogContext","useContext","Strings","DIALOG_PLACE_PUBLISH_TITLE","DIALOG_PLACE_PUBLISH_MESSAGE","DIALOG_PLACE_UNPUBLISH_MESSAGE","DIALOG_PLACE_INSERT_TITLE","DIALOG_PLACE_INSERT","DIALOG_PLACE_UPDATE_TITLE","DIALOG_PLACE_UPDATE","DIALOG_PLACE_VERIFY_TITLE","DIALOG_PLACE_VERIFY_MESSAGE","DIALOG_PLACE_DELETE_TITLE","DIALOG_PLACE_DELETE_MESSAGE","DIALOG_TOUR_DELETE_TITLE","DIALOG_TOUR_DELETE_MESSAGE","SNACKBAR_PLACE_INSERTED_SUCCESS","SNACKBAR_PLACE_REMOVE_SUCCESS","SNACKBAR_TOUR_INSERTED_SUCCESS","SNACKBAR_TOUR_REMOVE_SUCCESS","SNACKBAR_ERROR","SNACKBAR_CHANGES_SAVED","SnackbarContext","addConfig","removeConfig","SnackbarProvider","setConfig","success","UseSnackbarContext","autoComplete","chip","justifyContent","flexWrap","listStyle","autoCompleteChipContainer","setOptions","selectedOptions","setSelectedOptions","initialData","setInitialData","getCurrentVal","setCurrentVal","firstLoad","setFirstLoad","handleDelete","found","row1","JSON","stringify","Box","option","Chip","onDelete","Autocomplete","disableClearable","getOptionLabel","renderInput","PlacesFilterContext","buildUrl","require","initialDates","insertionStart","moment","Date","format","insertionEnd","add","modificationStart","modificationEnd","PlacesFilterProvider","categories","setCategories","selectedCategories","setSelectedCategories","cities","setCities","selectedCities","setSelectedCities","countries","setCountries","selectedCountries","setSelectedCountries","municipalities","setMunicipalities","selectedMunicipalities","setSelectedMunicipalities","counties","setCounties","selectedCounties","setSelectedCounties","initialLoading","setInitialLoading","resetFilterOptions","setResetFilterOptions","filterLabel","filterName","filterOptions","setFilterOptions","dates","setDates","queryParams","di","dm","parseFilterOptions","parseCategories","filterQuery","setFilterQuery","getCategories","restrictions","res","err","cats","countryRestrictions","munRestrictions","all","filterOptionsCleared","areFiltersCleared","o","c","filterDiv","flexDirection","sortingButtons","rightLayout","boxShadow","datesLayout","flexGrow","setOpen","filterDateChange","date","cDate","Object","assign","Grid","container","xs","sm","FormControlLabel","control","generalOptions","filterOptionsChanged","AutocompleteChip","justify","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","Button","marginTop","filters","clearFilters","buttonsDiv","content","breakpoints","down","up","autocomplete","borderBottom","outline","setData","pageData","setPageData","setIsLoading","getPlaceNameById","i","placeId","requestAllPlaces","p","parseData","placesData","list","anchorEl","setAnchorEl","Boolean","action","tmp","startIcon","priceRange","averageTimeSpent","closeButton","right","grey","open","setDialogOpen","setText","setUrl","setError","Dialog","fullWidth","DialogTitle","DialogContent","dividers","ev","DialogActions","autoFocus","validateInput","placeInfo","setPlaceInfo","selectedSources","setSelectedSources","updatePlaceInfo","newValue","place","valuetext","setAvailableSources","dialogOpen","availableSources","val","required","placeholder","e","InputLabelProps","shrink","multiline","rows","Slider","marginLeft","defaultValue","getAriaValueText","step","max","marks","FormControl","InputLabel","Select","native","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","pressDelay","disableAutoscroll","onSortEnd","oldIndex","newIndex","arrayMove","axis","acceptedFileFormats","dropzoneArea","onCloseCallback","onFinishCallback","loading","selectedFiles","setSelectedFiles","acceptedFiles","maxFileSize","dropzoneProps","disabled","filesLimit","onDrop","files","existingFiles","file","existingFile","imagefile","FormData","append","finally","addImageDialogOpen","setAddImageDialogOpen","handleAddPhoto","Geocode","setApiKey","enableDebug","geocodeFromLatLng","newLat","newLng","fromLatLng","address","results","formatted_address","addressArray","address_components","city","types","long_name","getCity","country","getCountry","county","getCounty","municipality","getMunicipality","latitude","longitude","isLocked","locationCallback","errorParsingLocation","handleKeyPress","which","keyCode","test","fromAddress","geometry","location","lat","lng","loc","split","parseFloat","onKeyPress","onPlaceSelected","navigator","geolocation","getCurrentPosition","coords","alert","setIsLocked","Switch","old","Alert","severity","CustomControlsManager","context","window","google","maps","ControlPosition","TOP_LEFT","MAP","controlDiv","document","createElement","controls","removeAt","createPortal","contextTypes","PropTypes","object","MapComponent","withGoogleMap","defaultZoom","ref","refInstance","center","defaultCenter","largeIcon","locationMarker","setLocationMarker","setParkingLocationMarker","otherPlacesData","setOtherPlacesData","infoWindows","setInfoWindows","refMap","useRef","s","range","l","Fragment","loadingElement","containerElement","mapElement","icon","scaledSize","Size","origin","Point","markers","onCloseClick","Avatar","alt","visible","draggable","onDragEnd","latLng","BOTTOM_CENTER","mapCenter","current","getCenter","locationData","setLocationData","setParkingLocation","changeLocationData","setMainInfoWindow","onMarkerDragEnd","setPosition","mainInfoWindow","parking","parkingData","calcCrow","nearestParkingCount","addNewParking","parkingIsAttached","selectedParkingData","parkingId","anchor","parkingInfoWindows","setParkingInfoWindows","addExistingParking","lat1","lon1","lat2","lon2","dLat","toRad","dLon","sin","cos","atan2","sqrt","Value","PI","ParkingMap","setParkingData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","SortableItem","elevation","SortableList","oldArray","textFieldLabel","description","EditDialogContext","dialogConfig","addEditDialogConfig","removeEditDialogConfig","defaultOptions","errorMessages","explanation","onDoneCallback","defaultText","EditDialogProvider","setDialogConfig","UseEditDialogContext","selectedTags","setSelectedTags","availableCategories","setAvailableCategories","availableTags","setAvailableTags","tagName","newTag","tagId","1","2","categoryName","newCat","categoryId","initialScheduleData","openDay","closeDay","openTime","closeTime","marginRight","ReviewCard","review","CardContent","photoUrl","surname","Rating","rating","readOnly","upvotes","timeAdded","reviewsInfo","reviews","overflowX","setReviews","filterBy","setFilterBy","getReviewsForPlace","debounceScroll","debounce","round","scrollWidth","scrollLeft","clientWidth","totalReviews","handleScrollDebounced","handleClose","overallStarRating","precision","aria-describedby","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","RadioGroup","Radio","onScroll","persist","handleScroll","AppBarTitleContext","setTitle","AppBarTitleProvider","UseAppBarTitleContext","flexFlow","picker","intervalRightSide","intervalLeftSide","intervals","setIntervals","currentInterval","lastAccommodation","lastAccommodationEnabled","setLastAccommodationEnabled","lastAccommodationTime","setLastAccommodationTime","getCloseDay","currentPeriod","isBefore","oldIntervals","useTheme","largeScreen","useMediaQuery","only","TimePicker","ampm","InputProps","disableUnderline","state","scheduleData","setScheduleData","globalTime","periods","ignoreOpenTime","ignoreCloseTime","ignoreGlobalTime","setIgnoreGlobalTime","Divider","pickerStyle","headerLeft","globalTimeEditLayout","globalTimeEditLeft","globalTimePicker","setPeriods","setGlobalTime","handleIntervalChange","newIntervals","oldPeriods","filtered","oldData","schedule","scheduleDefault","DatePicker","views","from","to","generateWeekdayViews","isScheduleEnabled","setIsScheduleEnabled","float","paperContent","loader","bottom","match","website","phoneNumber","hasSchedule","isPublic","isVerified","source","price","parkingMarkerData","setParkingMarkerData","sources","setSources","setPlaceId","firstTimeLoading","setFirstTimeLoading","checkErrors","ColorButton","green","formFeedback","saveChanges","formPlaceInfo","plc","updateAll","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","updateSources","er","tags","responses","CircularProgress","obj","CategoriesDisplay","SubheaderDisplay","media","expand","transform","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","renderActionArea","CardHeader","subheader","substring","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debouncedInput","InputBase","orientation","topBar","zIndex","searchBox","placeApiCard","isLoadingData","setIsLoadingData","word","query","encodeURI","elementType","isFitWidth","disableImagesLoaded","updateOnEachImageLoad","boxSizing","Copyright","getFullYear","minHeight","footer","cardRoot","details","cover","addParkingWrapper","elementData","addTransportCallback","displayNoTransportWarning","transportTypes","transportSelectWrapper","transportSelect","transportId","transportChangeCallback","transportRemoveCallback","currentTransport","setCurrentTransport","NativeSelect","transport","TourPlaceSortable","removePlaceCallback","tourPlaceComponent","TransportItemSortable","currentDay","removeElementCallback","tourInfo","shouldDisplayNoTransportWarning","elements","days","tour","ElementType","elementIdentifier","tourInfoReducer","errorInfo","setErrorInfo","day","shortid","generate","searchInputComponent","placeCard","addPlaceCallback","apiPlacesFound","setApiPlacesFound","localPlacesFound","setLocalPlacesFound","apiPlacesLoading","setApiPlacesLoading","localPlacesLoading","setLocalPlacesLoading","placeType","genProps","mappedPlaces","forEach","generatePlaceCards","radioButtonArea","cardArea","descriptionInput","headerWrap","onSelectCallback","handleRemoveDay","updateDescriptionGlobally","DayCardSortable","dayInfo","removeDayCallback","addDayButton","footerWrapper","setCurrentDay","removeDay","TourDataReducer","some","findIndex","splice","nameField","descriptionField","publicityDiv","tourId","errors","titleMissing","shouldDisplayTitleMissingError","showErrors","helperText","isPublished","MyMapComponent","addPlace","setCenter","circleCenter","setCircleCenter","directions","setDirection","directionPlaces","setDirectionPlaces","places","setPlaces","placesInfoWindows","setPlacesInfoWindows","loadingArea","setLoadingArea","removeSelectedPlaces","j","PlacesMarkers","Array","fill","constructPlaceData","waypoints","stopover","shift","destination","pop","directionsService","DirectionsService","route","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","locations","searchAreaComponent","useMemo","TOP_CENTER","suppressMarkers","marker","labelOrigin","info","sampleTourData","overflowY","leftLayout","actionsArea","setTourId","useReducer","dispatchTourInfo","handleAddPlaceClick","loadData","aggregatedDays","aggregatedElements","aggregatedPlace","fk_transportId","aggregatedDay","aggregatedTour","parseTourInfoResponse","handleSave","containsErrors","keys","keyIndex","element","dayInfoWithoutDesc","dayCopy","mapComponent","tourDaysComponents","getAllTours","handleClick","fq","join","categoriesHeadCells","tagsHeadCells","buttonWrapper","setTags","includes","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","PlacesWithContext","TourWithContext","Appbar","useLocation","handleDrawerClose","handleListItemClick","re","RegExp","pathname","go","CssBaseline","AppBar","edge","Drawer","List","ListItem","Link","ListItemText","exact","Home","Tours","AddPlace","ApiPlaces","Resources","Redirect","App","Component","AuthContext","AuthProvider","setCurrentUser","onAuthStateChanged","user","idToken","form","submit","loaderMain","AuthenticatedRoute","rest","Route","render","routeProps","SnackbarFeedback","Snackbar","autoHideDuration","AlertDialogFeedback","remove","DialogContentText","TextInputDialog","inputText","setInputText","deInit","onInput","errorCode","ReactDOM","email","setEmail","password","setPassword","handleLogin","signInWithEmailAndPassword","Container","maxWidth","mt","gutterBottom","getElementById"],"mappings":"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","file":"static/js/main.eb920ad6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/selectedTourIcon.127fd3ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/selectedParking.102bdd14.svg\";","module.exports = __webpack_public_path__ + \"static/media/availableParking.6ac3f9ec.svg\";","import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n});\r\n\r\nexport default app;","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport app from \"../helpers/firebaseInit\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Home = props => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport useDebounce from \"../helpers/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, checkable} = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n\r\n                {checkable ? <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell> : null}\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right'  : 'left' }\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    headCells: PropTypes.object.isRequired,\r\n    checkable: PropTypes.bool.isRequired\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected, title, changePageCallback, keyword, setKeyword, customToolbarElements} = props;\r\n\r\n\r\n    const debouncedSearch = useDebounce(keyword, 300);\r\n\r\n\r\n    useEffect( () => {\r\n            changePageCallback(1,keyword)\r\n        },\r\n        [debouncedSearch]\r\n    );\r\n\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n            )}\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"delete\">\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : <div style={{display: \"flex\", alignItems: \"center\"}}>\r\n                <TextField id=\"standard-basic\" label=\"Search\" onChange={ event =>{setKeyword(event.target.value)}}/>\r\n                {!!customToolbarElements ? customToolbarElements : null}\r\n            </div>}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    centerCell: {\r\n        textAlign: \"center\",\r\n        width: '100%'\r\n    },\r\n    rowNotPublished:{\r\n        backgroundColor: \"#ffcdd2\"\r\n    },\r\n    rowNotVerified:{\r\n        backgroundColor: \"#fff9c4\"\r\n    },\r\n    rowBasic: {\r\n        backgroundColor: \"#FFFFFF\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function TableComponent({title, searchFunction, headCells, pagingInfo, data, checkable, changePageCallback, updateCallback, removeCallback, id, isLoading, customToolbarElements}) {\r\n\r\n    TableComponent.propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        headCells: PropTypes.object.isRequired,\r\n        pagingInfo: PropTypes.object,\r\n        data: PropTypes.object.isRequired,\r\n        checkable: PropTypes.bool.isRequired,\r\n        changePageCallback: PropTypes.func,\r\n        updateCallback: PropTypes.func,\r\n        removeCallback: PropTypes.func,\r\n        id: PropTypes.string.isRequired,\r\n        isLoading: PropTypes.bool,\r\n        customToolbarElements: PropTypes.object\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = data.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleCheckboxChange = (event, name) =>{\r\n\r\n            const selectedIndex = selected.indexOf(name);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(selected, name);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(selected.slice(1));\r\n            } else if (selectedIndex === selected.length - 1) {\r\n                newSelected = newSelected.concat(selected.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    selected.slice(0, selectedIndex),\r\n                    selected.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelected(newSelected);\r\n\r\n    };\r\n\r\n    const handleClick = (event, rowId) => {\r\n        if(updateCallback !== undefined){\r\n            updateCallback(rowId)\r\n        }\r\n    };\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n        console.log(\"handleChangeRowsPerPage\")\r\n\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                {isLoading ? <LinearProgress/> : null }\r\n                <EnhancedTableToolbar\r\n                    title={title}\r\n                    numSelected={selected.length}\r\n                    changePageCallback={changePageCallback}\r\n                    keyword={keyword}\r\n                    setKeyword={setKeyword}\r\n                    customToolbarElements={customToolbarElements}\r\n                />\r\n                 <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={data.length}\r\n                            headCells={headCells}\r\n                            checkable={checkable}\r\n                        />\r\n\r\n\r\n                        <TableBody>\r\n                            {stableSort(data, getComparator(order, orderBy))\r\n                                .filter(item => searchFunction === undefined ? true : searchFunction(keyword, item))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n\r\n                                    const isItemSelected = isSelected(row.name);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    const rowStyle = row['isVerified'] !== undefined  && row['isVerified'] === false ? classes.rowNotVerified :\r\n                                        row['isPublic'] !== undefined && row['isPublic'] === false ? classes.rowNotPublished :  classes.rowBasic;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            className={rowStyle}\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row[id])}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row[id]}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            {checkable ? <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    onChange={(event)=>handleCheckboxChange(event, row.name)}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell> : null}\r\n\r\n                                            {headCells.map(header=>{\r\n                                                if(header.isId){\r\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\r\n                                                            {row[header.id]}\r\n                                                        </TableCell>\r\n                                                }else if(header.id === 'actions' ){\r\n                                                        return <TableCell >\r\n                                                            <div>\r\n                                                                <IconButton onClick={()=>updateCallback(row[id])} size=\"small\" aria-label=\"edit\" >\r\n                                                                    <EditIcon fontSize=\"small\" />\r\n                                                                </IconButton>\r\n\r\n                                                                <IconButton size=\"small\" aria-label=\"delete\" >\r\n                                                                    <DeleteIcon onClick={()=>removeCallback(row[id])} fontSize=\"small\" />\r\n                                                                </IconButton>\r\n                                                            </div>\r\n                                                            </TableCell>\r\n                                                }else{\r\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\r\n                                                }\r\n\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows}}>\r\n\r\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\r\n                                        <TableCell colSpan={6} className={classes.centerCell}>\r\n                                            <Typography variant=\"h6\" noWrap>\r\n                                                No results\r\n                                            </Typography>\r\n                                        </TableCell>}\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10]}\r\n                    component=\"div\"\r\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\r\nexport default function useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(\r\n        () => {\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n\r\n        [value]\r\n    );\r\n\r\n    return debouncedValue;\r\n}","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import Cookies from 'js-cookie'\r\n\r\nexport const getAccessToken = () => Cookies.get('access_token');\r\nexport const isAuthenticated = () => !!getAccessToken();","import React from \"react\";\r\nimport axios from \"axios\"\r\nimport history from \"../helpers/history\";\r\nimport {getAccessToken} from \"../helpers/tokens\";\r\nimport Cookies from \"js-cookie\";\r\nimport app from \"../helpers/firebaseInit\";\r\n\r\nconst request = async function (options, contentType) {\r\n\r\n    const client = axios.create({\r\n        baseURL: false ? \"http://localhost:8080/\" : \"https://www.traveldirection.ax.lt:8080/\",\r\n        headers: {\r\n            'Content-Type': (contentType == null) ? 'application/json' : contentType,\r\n            'Accept': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            \"Authorization\": getAccessToken()\r\n        },\r\n    });\r\n\r\n    // Add a response interceptor\r\n    client.interceptors.response.use(function (response) {\r\n        return response;\r\n    }, function (error) {\r\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n        // Do something with response error\r\n        const originalRequest = error.config;\r\n        const status = error.response.status;\r\n        if (!!app.auth().currentUser  &&\r\n            (status === 401 || status === 403) &&\r\n            originalRequest._retry === undefined\r\n        ) {\r\n            //console.log(\"Users token has expired!\");\r\n            return app.auth().currentUser.getIdToken(true).then(token => {\r\n                //console.log(\"Retrieving new token and making the same request!\");\r\n                originalRequest._retry = true;\r\n                originalRequest.headers.Authorization = token;\r\n                Cookies.set(\"access_token\", token);\r\n                return axios(originalRequest)\r\n            });\r\n        }\r\n        return Promise.reject(error);\r\n    });\r\n\r\n    const onSuccess = function (response) {\r\n        console.log('Request Successful!', response);\r\n        return response.data;\r\n    };\r\n\r\n    const onError = function (error) {\r\n        console.debug('Request Failed:', error.config);\r\n        if (error.response) {\r\n            console.debug('Status:', error.response.status);\r\n            if (error.response.status === 403) {\r\n                history.push(\"/login\")\r\n            }\r\n            console.debug('Data:', error.response.data);\r\n            console.debug('Headers:', error.response.headers);\r\n        } else {\r\n            console.debug('Error Message:', error.message);\r\n        }\r\n        return Promise.reject(error.response || error.message);\r\n    };\r\n\r\n    return client(options)\r\n        .then(onSuccess)\r\n        .catch(onError);\r\n};\r\n\r\nconst getRequest = function (path, urlData = \"\") {\r\n    return request({\r\n        url: path + urlData,\r\n        method: 'GET'\r\n    });\r\n};\r\n\r\nconst postRequest = function (path, data, urlData = \"\") {\r\n    return request({\r\n        url: path + urlData,\r\n        method: 'POST',\r\n        data: data\r\n    });\r\n};\r\n\r\nconst postMultipartRequest = function (path, formData) {\r\n    return request({\r\n        url: path,\r\n        method: 'POST',\r\n        data: formData\r\n    }, 'multipart/form-data' /*'application/x-www-form-urlencoded'*/);\r\n};\r\n\r\nconst RequestType = {\r\n    getRequest, postRequest, postMultipartRequest\r\n};\r\n\r\nexport default RequestType\r\n\r\n\r\n","import RequestType from '../Networking/NetworkLayerCentral'\r\n\r\n//Places\r\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\r\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\r\nconst getClosesPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin/closest\", urlParams);\r\n\r\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\r\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\r\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\r\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\r\nconst removePlace = (urlParams) => RequestType.getRequest(\"api/v1/place/delete\", urlParams);\r\n\r\nconst getAllCities = (urlParams) =>RequestType.getRequest(\"api/v1/place/city/all\",urlParams);\r\nconst getAllCounties = (urlParams) =>RequestType.getRequest(\"api/v1/place/county/all\",urlParams);\r\nconst getAllCountries = (urlParams) =>RequestType.getRequest(\"api/v1/place/country/all\",urlParams);\r\nconst getAllMunicipalities = (urlParams) =>RequestType.getRequest(\"api/v1/place/municipality/all\",urlParams);\r\n\r\nconst Places = {getClosesPlacesAdmin,getAllCities,getAllCounties, getAllCountries, getAllMunicipalities, getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces, removePlace};\r\n\r\n//Tags\r\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\r\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\r\nconst removeTags = (params) => RequestType.postRequest(\"api/v1/tags/delete\", params);\r\nconst updateTags = (params) => RequestType.postRequest(\"api/v1/tags/update\", params);\r\nconst Tags = {getAllTags, addTag, removeTags, updateTags};\r\n\r\n//Category\r\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\r\nconst removeCategory = (params) => RequestType.postRequest(\"api/v1/categories/delete\", params);\r\nconst updateCategory = (params) => RequestType.postRequest(\"api/v1/categories/update\", params);\r\nconst getAllCategories = (params) => RequestType.getRequest(\"api/v1/categories/all\", params);\r\nconst Categories = {addCategory, getAllCategories, removeCategory, updateCategory};\r\n\r\n//Photo\r\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\r\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\r\nconst Photos = {addPhoto, uploadPhoto};\r\n\r\n\r\n//Parking\r\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\r\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\r\nconst Parking = {getParkingByLocation, insertNewParking};\r\n\r\n\r\n//TagsPlace\r\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\r\nconst TagsPlace = {updateTagsForPlace};\r\n\r\n//CategoriesPlace\r\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\r\nconst CategoriesPlace = {updateCategoriesForPlace};\r\n\r\n//PhotoPlace\r\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\r\nconst ParkingPlace = {updateParkingForPlace};\r\n\r\n//PhotoPlace\r\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\r\nconst PhotoPlace = {updatePhotoForPlace};\r\n\r\n//Schedule\r\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\r\nconst Schedule = {updateScheduleForPlace};\r\n\r\n//ReviewsPlace\r\nconst getPlaceReviews = (urlParams) => RequestType.getRequest(\"api/v1/reviews/all\", urlParams);\r\nconst Reviews = {getPlaceReviews};\r\n\r\n//Sources\r\nconst getSources = () => RequestType.getRequest(\"api/v1/source/all\");\r\nconst addSource = (data) => RequestType.postRequest(\"api/v1/source/insert\",data);\r\nconst Source = {getSources, addSource};\r\n\r\n//SourcePlace\r\nconst updateSourcesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/sourceplace/update\", data, urlParams);\r\nconst SourcePlace = {updateSourcesForPlace};\r\n\r\n//Tours\r\nconst insertTour = (data) => RequestType.postRequest(\"api/v1/tour/insert\",data)\r\nconst updateTour = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/update\",data, urlParams)\r\nconst updateTourTags = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/tags/update\",data, urlParams)\r\nconst getTour = (urlParams) => RequestType.getRequest(\"api/v1/tour\",urlParams)\r\nconst getTourTags = (urlParams) => RequestType.getRequest(\"api/v1/tour/tags\",urlParams)\r\nconst removeTour = (urlParams) => RequestType.getRequest(\"api/v1/tour/delete\", urlParams);\r\nconst getAllToursAdmin = (urlParams) => RequestType.getRequest(\"api/v1/tour/searchadmin\", urlParams);\r\nconst Tour = {insertTour, getTour, updateTour, getAllToursAdmin, removeTour, getTourTags, updateTourTags}\r\n\r\nconst API = {Tour, SourcePlace, Source,Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule, Reviews};\r\n\r\nexport default API\r\n\r\n","// src/common/providers/APIErrorProvider/index.js\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nexport const AlertDialogContext = React.createContext({\r\n    alertConfig: null,\r\n    addAlertConfig: () => {},\r\n    removeAlertConfig: () => {}\r\n});\r\n\r\nexport default function AlertDialogProvider({ children }) {\r\n    const [alertConfig, setAlertConfig] = useState(null);\r\n    const contextValue = {\r\n        alertConfig,\r\n        addAlertConfig: (title, message, actions, onClose = undefined) => setAlertConfig({ title, message, actions, onClose}),\r\n        removeAlertConfig: () => setAlertConfig(null)\r\n    };\r\n\r\n    return (\r\n        <AlertDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </AlertDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AlertDialogContext} from \"./AlertDialogContext\";\r\n\r\nexport default function UseAlertDialogContext() {\r\n    const { alertConfig, addAlertConfig, removeAlertConfig } = useContext(AlertDialogContext);\r\n    return { alertConfig, addAlertConfig, removeAlertConfig };\r\n}\r\n","const Strings = {\r\n    DIALOG_PLACE_PUBLISH_TITLE : 'Place publicity',\r\n    DIALOG_PLACE_PUBLISH_MESSAGE: \"This place will be visible for all users. Are you sure?\",\r\n    DIALOG_PLACE_UNPUBLISH_MESSAGE :\"This place will not be visible anymore. Are you sure?\",\r\n\r\n    DIALOG_PLACE_INSERT_TITLE: \"Insert place\",\r\n    DIALOG_PLACE_INSERT: \"Are you sure you want to insert this place?\",\r\n\r\n    DIALOG_PLACE_UPDATE_TITLE: \"Update place\",\r\n    DIALOG_PLACE_UPDATE: \"Are you sure you want to make changes to this place?\",\r\n\r\n    DIALOG_PLACE_VERIFY_TITLE: \"Place verification\",\r\n    DIALOG_PLACE_VERIFY_MESSAGE: \"This is a user's suggested place. Are you sure you want to verify this place and make it visible to others?\",\r\n\r\n    DIALOG_PLACE_DELETE_TITLE: \"Delete place\",\r\n    DIALOG_PLACE_DELETE_MESSAGE: \"This action will remove this place permanently. Are you sure you want to proceed?\",\r\n\r\n    DIALOG_TOUR_DELETE_TITLE: \"Delete tour\",\r\n    DIALOG_TOUR_DELETE_MESSAGE: \"This action will remove this tour permanently. Are you sure you want to proceed?\",\r\n\r\n    SNACKBAR_PLACE_INSERTED_SUCCESS: \"Place inserted successfully\",\r\n    SNACKBAR_PLACE_REMOVE_SUCCESS: \"Place was removed successfully\",\r\n\r\n    SNACKBAR_TOUR_INSERTED_SUCCESS: \"Tour inserted successfully\",\r\n    SNACKBAR_TOUR_REMOVE_SUCCESS: \"Tour was removed successfully\",\r\n\r\n    SNACKBAR_ERROR: \"Something went wrong!\",\r\n    SNACKBAR_CHANGES_SAVED: \"All changes saved!\"\r\n};\r\n\r\nexport default Strings;","import React, { useState, useCallback } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nexport const SnackbarContext = React.createContext({\r\n    config: null,\r\n    addConfig: () => {},\r\n    removeConfig: () => {}\r\n});\r\n\r\n\r\nexport default function SnackbarProvider({ children }) {\r\n    const [config, setConfig] = useState(null);\r\n\r\n    const removeConfig = () => setConfig(null);\r\n    const addConfig = (success, message) => setConfig({ success, message });\r\n\r\n    const contextValue = {\r\n        config,\r\n        addConfig: (success, message) => addConfig(success, message),\r\n        removeConfig: () => removeConfig()\r\n    };\r\n\r\n    return (\r\n        <SnackbarContext.Provider value={contextValue}>\r\n            {children}\r\n        </SnackbarContext.Provider>\r\n    );\r\n}","import { useContext } from 'react';\r\nimport {SnackbarContext} from \"./SnackbarContext\";\r\n\r\nexport default function UseSnackbarContext() {\r\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\r\n    return { config, addConfig, removeConfig };\r\n}\r\n","\r\nimport React, {useEffect, useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    autoComplete: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(1),\r\n        margin: 0,\r\n    },\r\n    autoCompleteChipContainer: {\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction AutoCompleteChip(props){\r\n\r\n    const {options, setOptions, selectedOptions, setSelectedOptions, classes, label, id} = props;\r\n    const [initialData, setInitialData] = useState([]);\r\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\r\n    const [firstLoad, setFirstLoad] = useState(true);\r\n\r\n    function handleDelete(data) {\r\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\r\n        setOptions(\r\n            [\r\n                ...options,\r\n                data\r\n            ]\r\n        )\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(selectedOptions.length===0){\r\n\r\n            setOptions(\r\n                initialData\r\n            )\r\n        }\r\n    },[selectedOptions]);\r\n\r\n    useEffect(()=>{\r\n        if(firstLoad && options.length>0){\r\n            let data = [];\r\n            options.map(row=>{\r\n                let found = false;\r\n                selectedOptions.map(row1=>{\r\n                    if(JSON.stringify(row) === JSON.stringify(row1)){\r\n                        found = true\r\n                    }\r\n                });\r\n                if(!found){\r\n                   data.push(row)\r\n                }\r\n            });\r\n            setOptions(data);\r\n            setInitialData(data);\r\n            setFirstLoad(false)\r\n        }\r\n    },[options]);\r\n\r\n    function handleInput(event, value){\r\n        setCurrentVal({\"name\": \"\"});\r\n        setSelectedOptions(\r\n            [\r\n                ...selectedOptions,\r\n                value\r\n            ]\r\n        );\r\n        setOptions(options.filter(item => item !== value))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Box  className={classes.autoCompleteChipContainer}>\r\n                {selectedOptions.length !== 0 &&\r\n                <Box component=\"ul\" className={classes.root}>\r\n                    {\r\n                        selectedOptions.map(option => {\r\n                            return id !== undefined ?\r\n                                <li key={option[id]}>\r\n                                    <Chip\r\n                                        variant=\"outlined\"\r\n                                        label={option.name}\r\n                                        onDelete={() => handleDelete(option)}\r\n                                        className={classes.chip}\r\n                                    />\r\n                                </li>\r\n                                :\r\n                                <li key={option}>\r\n                                        <Chip\r\n                                            variant=\"outlined\"\r\n                                            label={option}\r\n                                            onDelete={() => handleDelete(option)}\r\n                                            className={classes.chip}\r\n                                        />\r\n                                </li>\r\n                                }\r\n\r\n                            )\r\n                    }\r\n                </Box>\r\n                }\r\n\r\n                <Autocomplete\r\n                    className={classes.autoComplete}\r\n                    value={getCurrentVal}\r\n                    options={options}\r\n                    onChange={handleInput}\r\n                    disableClearable\r\n                    getOptionLabel={(option) =>  id!==undefined ? option.name : option}\r\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\r\n                />\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nAutoCompleteChip.propTypes = {\r\n    setSelectedOptions: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    setOptions: PropTypes.func.isRequired,\r\n    selectedOptions: PropTypes.array.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    label: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AutoCompleteChip)","import React, {useEffect, useState} from \"react\";\r\nimport API from \"../Networking/API\";\r\nimport * as moment from \"moment\";\r\nimport {func} from \"prop-types\";\r\nexport const PlacesFilterContext = React.createContext();\r\nvar buildUrl = require('build-url');\r\n\r\n\r\nconst initialDates = {\r\n    insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n    insertionEnd: moment(new Date()).add(1,'day').format(),\r\n    modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n    modificationEnd: moment(new Date()).add(1,'day').format()\r\n};\r\n\r\nexport const PlacesFilterProvider = ({children}) => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    const [cities, setCities] = useState([]);\r\n    const [selectedCities, setSelectedCities] = useState([]);\r\n\r\n    const [countries, setCountries] = useState([]);\r\n    const [selectedCountries, setSelectedCountries] = useState([]);\r\n\r\n    const [municipalities, setMunicipalities] = useState([]);\r\n    const [selectedMunicipalities, setSelectedMunicipalities] = useState([]);\r\n\r\n    const [counties, setCounties] = useState([]);\r\n    const [selectedCounties, setSelectedCounties] = useState([]);\r\n\r\n    const [initialLoading, setInitialLoading] = useState(true);\r\n    const [resetFilterOptions, setResetFilterOptions] = useState(false);\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [dates, setDates] = useState(initialDates);\r\n\r\n    const [filterQuery, setFilterQuery] = useState( buildUrl(null, {\r\n        queryParams: {\r\n            di: [dates.insertionStart, dates.insertionEnd],\r\n            dm: [dates.modificationStart, dates.modificationEnd],\r\n            filterOptions: parseFilterOptions(),\r\n            categories: parseCategories(),\r\n            countries: selectedCountries,\r\n            cities: selectedCities,\r\n            municipalities: selectedMunicipalities\r\n        }\r\n    }));\r\n\r\n    const getCategories = (params=\"\") => {\r\n        API.Categories.getAllCategories().then(response=>{\r\n            setCategories(response);\r\n            console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        });\r\n    };\r\n\r\n    const getAllCities = (restrictions=\"\") =>{\r\n        API.Places.getAllCities(restrictions).then(res=>{\r\n            setCities(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllCounties = () =>{\r\n        API.Places.getAllCounties().then(res=>{\r\n            setCounties(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllCountries = () =>{\r\n        API.Places.getAllCountries().then(res=>{\r\n            setCountries(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllMunicipalities = (restrictions=\"\") =>{\r\n        API.Places.getAllMunicipalities(restrictions).then(res=>{\r\n\r\n            // console.log(\"Fetched municipalities\", res);\r\n            // console.log(\"Selected municipalities\", selectedMunicipalities);\r\n            // let correctMunicipalities = [];\r\n            // for(var i = 0; i<selectedMunicipalities.length; i++){\r\n            //     var found = false;\r\n            //     for(var j = 0; j<res; j++){\r\n            //         if(selectedMunicipalities[i] === res[j]){\r\n            //             found = true;\r\n            //             break;\r\n            //         }\r\n            //     }\r\n            //     if(found){\r\n            //         console.log(\"Found correctly selected municipality\");\r\n            //         correctMunicipalities.push(selectedMunicipalities[i])\r\n            //     }\r\n            // }\r\n            // setSelectedMunicipalities(correctMunicipalities)\r\n            setMunicipalities(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        getAllMunicipalities(buildUrl(null, {\r\n            queryParams: {\r\n                countryRestrictions: selectedCountries\r\n            }\r\n        }));\r\n        getAllCities(buildUrl(null, {\r\n            queryParams: {\r\n                munRestrictions: selectedMunicipalities,\r\n                countryRestrictions: selectedCountries\r\n            }\r\n        }))\r\n    },[selectedCountries]);\r\n\r\n\r\n    useEffect(()=>{\r\n        getAllCities(buildUrl(null, {\r\n            queryParams: {\r\n                munRestrictions: selectedMunicipalities,\r\n                countryRestrictions: selectedCountries\r\n            }\r\n        }))\r\n    }, [selectedMunicipalities]);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Fetching...\");\r\n        Promise.all([\r\n            getCategories(),\r\n            getAllCities(),\r\n            getAllCountries(),\r\n            getAllCounties(),\r\n            getAllMunicipalities()\r\n        ]).then(response => {\r\n            setInitialLoading(false);\r\n            console.log(\"All data received!\")\r\n        }).catch(err => {\r\n        })\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            if(!resetFilterOptions){\r\n                setFilterQuery(buildUrl(null, {\r\n                    queryParams: {\r\n                        di: [dates.insertionStart, dates.insertionEnd],\r\n                        dm: [dates.modificationStart, dates.modificationEnd],\r\n                        o: parseFilterOptions(),\r\n                        c: parseCategories(),\r\n                        countries: selectedCountries,\r\n                        cities: selectedCities,\r\n                        municipalities: selectedMunicipalities\r\n                    }\r\n                }))\r\n            }else{\r\n                if(areFiltersCleared()){\r\n                    setResetFilterOptions(false)\r\n                }\r\n            }\r\n        }\r\n    },[selectedCategories, selectedCities,selectedCountries,selectedMunicipalities,dates,filterOptions,resetFilterOptions]);\r\n\r\n    function areFiltersCleared() {\r\n        let filterOptionsCleared = true;\r\n        filterOptions.map(row=>{\r\n            if(row.filter){\r\n                filterOptionsCleared = false\r\n            }\r\n        });\r\n        return filterOptionsCleared &&\r\n            selectedCategories.length === 0 &&\r\n            selectedCities.length === 0 &&\r\n            selectedCountries.length ===0 &&\r\n            dates.insertionStart === initialDates.insertionStart &&\r\n            dates.modificationStart === initialDates.modificationStart\r\n    }\r\n\r\n    function parseCategories(){\r\n        let cats = [];\r\n        selectedCategories.map(row=>{\r\n            cats.push(row.name)\r\n        });\r\n        return cats\r\n    }\r\n\r\n    function parseFilterOptions(){\r\n        let options = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filter === true)\r\n                options.push(row.filterName)\r\n        });\r\n        return options\r\n    }\r\n\r\n    const contextValue = {\r\n        filterQuery,\r\n        setResetFilterOptions,\r\n\r\n        dates,\r\n        setDates,\r\n\r\n        filterOptions,\r\n        setFilterOptions,\r\n\r\n        categories,\r\n        setCategories,\r\n        selectedCategories,\r\n        setSelectedCategories,\r\n\r\n        counties,\r\n        setCounties,\r\n        selectedCounties,\r\n        setSelectedCounties,\r\n\r\n        cities,\r\n        setCities,\r\n        selectedCities,\r\n        setSelectedCities,\r\n\r\n        countries,\r\n        setCountries,\r\n        selectedCountries,\r\n        setSelectedCountries,\r\n\r\n        municipalities,\r\n        setMunicipalities,\r\n        selectedMunicipalities,\r\n        setSelectedMunicipalities\r\n    };\r\n\r\n    return (\r\n        <PlacesFilterContext.Provider value={contextValue}>\r\n            {children}\r\n        </PlacesFilterContext.Provider>\r\n    );\r\n};","import React, {useContext, useEffect, useState} from \"react\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport moment from \"moment\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport MuiPickersUtilsProvider from \"@material-ui/pickers/MuiPickersUtilsProvider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst style = theme =>({\r\n    filterDiv: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    sortingButtons: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(1),\r\n        height: \"100%\"\r\n\r\n    },\r\n    rightLayout: {\r\n        boxShadow: \"0 0 1px 0 #666\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(1)\r\n    },\r\n    datesLayout:{\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n        marginBottom: \"8px\",\r\n        boxShadow: \"0 0 1px 0 #666\",\r\n        padding: theme.spacing(1)\r\n    },\r\n    paper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center'\r\n\r\n    }\r\n});\r\n\r\n\r\n\r\nfunction FilterBlock({classes, setOpen}) {\r\n    const {\r\n        categories, setCategories, selectedCategories, setSelectedCategories,\r\n        cities, setCities, selectedCities, setSelectedCities,\r\n        countries, setCountries, selectedCountries, setSelectedCountries,\r\n        municipalities, setMunicipalities, selectedMunicipalities, setSelectedMunicipalities,\r\n        filterOptions, setFilterOptions, setResetFilterOptions,\r\n        dates, setDates} = useContext(PlacesFilterContext);\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let generalOptions = Object.assign([], filterOptions);\r\n        generalOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n        });\r\n        setFilterOptions(generalOptions)\r\n    };\r\n\r\n    function filterDateChange(date, id) {\r\n        let cDate = Object.assign( {}, dates);\r\n        cDate[id] = moment(date).format('YYYY-MM-DD');\r\n        setDates(cDate)\r\n    }\r\n\r\n    function clearFilters() {\r\n        setResetFilterOptions(true);\r\n\r\n        setSelectedCities([]);\r\n        setSelectedCountries([]);\r\n        setSelectedCategories([]);\r\n        setSelectedMunicipalities([]);\r\n\r\n        let filters = Object.assign(filterOptions, []);\r\n        filters.map(row=>{\r\n            row.filter = false\r\n        });\r\n        setFilterOptions(filters);\r\n\r\n        setDates({\r\n            insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n            insertionEnd: moment(new Date()).add(1,'day').format(),\r\n            modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n            modificationEnd: moment(new Date()).add(1,'day').format()\r\n        })\r\n    }\r\n\r\n    return <Paper className={classes.root}>\r\n        <Grid container direction=\"row\" spacing={3}>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\">\r\n                        General options\r\n                    </Typography>\r\n                    <div className={classes.sortingButtons}>\r\n                        {filterOptions.map(row=>{\r\n                            return <FormControlLabel\r\n                                control={<Checkbox\r\n                                    checked={row.filter}\r\n                                    onChange={()=>filterOptionsChanged(row.filterName)}\r\n                                    name={row.filterName} />}\r\n                                label={row.filterLabel}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                    <Typography variant=\"h6\">\r\n                        Filter by categories\r\n                    </Typography>\r\n                    <AutocompleteChip label=\"Select categories\"\r\n                                      id=\"categoryId\"\r\n                                      options={categories}\r\n                                      setOptions={setCategories}\r\n                                      selectedOptions={selectedCategories}\r\n                                      setSelectedOptions={setSelectedCategories}/>\r\n\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by dates\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Insertion dates\r\n                            </Typography>\r\n                    <Grid container justify=\"space-around\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"insertionStart\"\r\n                            onChange={(date)=>filterDateChange(date,\"insertionStart\")}\r\n                            value={dates.insertionStart}\r\n                            label=\"Date start\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.insertionEnd}\r\n                            onChange={(date)=>filterDateChange(date,\"insertionEnd\")}\r\n                            id=\"insertionEnd\"\r\n                            label=\"Date end\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        </MuiPickersUtilsProvider>\r\n                    </Grid>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Modification dates\r\n                    </Typography>\r\n                    <Grid container justify=\"space-around\">\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.modificationStart}\r\n                            onChange={(date)=>filterDateChange(date,\"modificationStart\")}\r\n                            id=\"modificationStart\"\r\n                            label=\"Date start\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.modificationEnd}\r\n                            onChange={(date)=>filterDateChange(date,\"modificationEnd\")}\r\n                            id=\"modificationEnd\"\r\n                            label=\"Date end\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\">\r\n                        Filter by countries\r\n                    </Typography>\r\n                    <AutocompleteChip label=\"Select countries\"\r\n                                      options={countries}\r\n                                      setOptions={setCountries}\r\n                                      selectedOptions={selectedCountries}\r\n                                      setSelectedOptions={setSelectedCountries}/>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by municipalities\r\n                            </Typography>\r\n                            <AutocompleteChip label=\"Select municipalities\"\r\n                                              options={municipalities}\r\n                                              setOptions={setMunicipalities}\r\n                                              selectedOptions={selectedMunicipalities}\r\n                                              setSelectedOptions={setSelectedMunicipalities}/>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by cities\r\n                            </Typography>\r\n                            <AutocompleteChip label=\"Select cities\"\r\n                                              options={cities}\r\n                                              setOptions={setCities}\r\n                                              selectedOptions={selectedCities}\r\n                                              setSelectedOptions={setSelectedCities}/>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n        <Button\r\n            style={{marginTop: 8}}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => clearFilters()}>\r\n            Clear filters\r\n        </Button>\r\n    </Paper>\r\n}\r\n\r\nexport default withStyles(style)(FilterBlock)","import React, {useContext, useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport FilterBlock from \"../components/add_place_components/FilterBlock\";\r\nimport * as moment from \"moment\";\r\nimport {PlacesFilterContext, PlacesFilterProvider} from \"../contexts/PlacesFilterContext\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    autocomplete: {\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline: \"0\",\r\n        marginBottom: \"4px\"\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\r\n    {id: 'address', numeric: false, disablePadding: false, label: 'Address', isId: false},\r\n    {id: 'city', numeric: false, disablePadding: false, label: 'City', isId: false},\r\n    {id: 'country', numeric: false, disablePadding: false, label: 'Country', isId: false},\r\n    {id: 'dateModified', numeric: false, disablePadding: false, label: 'Date modified', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n];\r\n\r\nfunction Places(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const {classes} = props;\r\n\r\n\r\n    const {filterQuery} = useContext(PlacesFilterContext);\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        requestAllPlaces();\r\n    }, [filterQuery]);\r\n\r\n\r\n    function getPlaceNameById(id) {\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i].placeId === id)\r\n                return data[i].name\r\n        }\r\n    }\r\n\r\n    function requestAllPlaces(p = 1, keyword = \"\") {\r\n        console.log(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n        getAllPlaces(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n    }\r\n\r\n    function parseData(data) {\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        console.log(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updatePlaceCallback(id) {\r\n        history.push(\"/app/addplace/\" + id)\r\n    }\r\n\r\n    function removePlaceCallback(id) {\r\n        console.log(\"Name\", getPlaceNameById(id));\r\n        setIsLoading(true);\r\n        addAlertConfig(Strings.DIALOG_PLACE_DELETE_TITLE + \" - \" + getPlaceNameById(id), Strings.DIALOG_PLACE_DELETE_MESSAGE, [{\r\n            name: \"Remove\",\r\n            action: () => {\r\n                API.Places.removePlace(\"?p=\" + id).then(response => {\r\n                    let tmp = [];\r\n                    data.map(row => {\r\n                        if (row.placeId !== id) {\r\n                            tmp.push(row)\r\n                        }\r\n                    });\r\n                    setData(tmp);\r\n                    addConfig(true, Strings.SNACKBAR_PLACE_REMOVE_SUCCESS)\r\n                    setIsLoading(false)\r\n                }).catch(error => {\r\n                    setIsLoading(false);\r\n                    addConfig(false, Strings.SNACKBAR_ERROR)\r\n                })\r\n            }\r\n        }], () => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const changePageCallback = (p = 0, keyword = \"\") => {\r\n        setIsLoading(true);\r\n        requestAllPlaces(p, keyword)\r\n    };\r\n\r\n    //Sorting stuff\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n\r\n    const customToolbarElements = () => {\r\n        return <div>\r\n\r\n            {/*<Tooltip aria-describedby={id} title=\"Filter list\">*/}\r\n            {/*    <IconButton aria-label=\"filter list\" onClick={handleClick}>*/}\r\n            {/*        <FilterListIcon/>*/}\r\n            {/*    </IconButton>*/}\r\n            {/*</Tooltip>*/}\r\n            {/*<Popover*/}\r\n            {/*    id={id}*/}\r\n            {/*    open={open}*/}\r\n            {/*    anchorEl={anchorEl}*/}\r\n            {/*    onClose={() => {*/}\r\n            {/*        setAnchorEl(null)*/}\r\n            {/*    }}*/}\r\n            {/*    anchorOrigin={{*/}\r\n            {/*        vertical: 'bottom',*/}\r\n            {/*        horizontal: 'center',*/}\r\n            {/*    }}*/}\r\n            {/*    transformOrigin={{*/}\r\n            {/*        vertical: 'top',*/}\r\n            {/*        horizontal: 'center',*/}\r\n            {/*    }}*/}\r\n            {/*>*/}\r\n\r\n\r\n            {/*</Popover>*/}\r\n        </div>\r\n    };\r\n    /*------------------------------------------------------------------------------------------------------*/\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                <FilterBlock setOpen={setAnchorEl}/>\r\n\r\n                <TableComponent\r\n                    title={\"Places\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updatePlaceCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    id={\"placeId\"}\r\n                    isLoading={isLoading}\r\n                    customToolbarElements={customToolbarElements()}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={() => {\r\n                            history.push(\"/app/addplace\")\r\n                        }}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n            <Button>\r\n                Clear filters\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    function getAllPlaces(urlParams = \"\") {\r\n        API.Places.getAllPlacesAdmin(urlParams).then(response => {\r\n            setIsLoading(false);\r\n            parseData(response)\r\n        }).catch(error => {\r\n            setIsLoading(false);\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nPlaces.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Places);","export const priceRange = [\r\n    {\r\n        value: 0,\r\n        label: \"FREE\",\r\n    },\r\n    {\r\n        value: 25,\r\n        label: \"$\",\r\n    },\r\n    {\r\n        value: 50,\r\n        label: \"$$\",\r\n    },\r\n    {\r\n        value: 75,\r\n        label: \"$$$\",\r\n    },\r\n    {\r\n        value: 100,\r\n        label: \"$$$$\",\r\n    },\r\n    {\r\n        value: 125,\r\n        label: \"$$$$$\",\r\n    }\r\n];\r\n","export const averageTimeSpent = [\r\n    {\r\n        value: 5,\r\n        label: 5,\r\n    },\r\n    {\r\n        value: 10,\r\n        label: 10,\r\n    },\r\n    {\r\n        value: 15,\r\n        label: 15,\r\n    },\r\n    {\r\n        value: 30,\r\n        label: 30,\r\n    },\r\n    {\r\n        value: 45,\r\n        label: 45,\r\n    },\r\n    {\r\n        value: 60,\r\n        label: 60,\r\n    },\r\n    {\r\n        value: 90,\r\n        label: 90,\r\n    },\r\n    {\r\n        value: 120,\r\n        label: 120,\r\n    },\r\n    {\r\n        value: 150,\r\n        label: 150,\r\n    },\r\n    {\r\n        value: 180,\r\n        label: 180,\r\n    },\r\n    {\r\n        value: 210,\r\n        label: 210,\r\n    },\r\n    {\r\n        value: 240,\r\n        label: 240,\r\n    },\r\n    {\r\n        value: 270,\r\n        label: 270,\r\n    },\r\n];","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    }\r\n});\r\n\r\nfunction AddSourceDialog(props){\r\n\r\n    function validateInput(){\r\n        let error = false;\r\n        if(text.length <= 3 || url.length <=3)\r\n            error = true;\r\n        setError(error);\r\n        return error\r\n    }\r\n\r\n    let {classes, open, action, setDialogOpen} = props;\r\n    const [text, setText] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    return(\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Insert source\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                        <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}\r\n                                   label=\"Source name\" variant=\"outlined\" fullWidth />\r\n                        <TextField style={{marginTop:\"16px\"}} error={error} onChange = {(ev) => {setUrl(ev.target.value)}}\r\n                                   label=\"Source url\" variant=\"outlined\" fullWidth />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={()=>setDialogOpen(false)} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text, url);\r\n                        setDialogOpen(false)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\nexport default withStyles(styles)(AddSourceDialog)","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {priceRange} from \"../../helpers/priceRange\";\r\nimport {averageTimeSpent} from \"../../helpers/averageTimeSpent\"\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport API from \"../../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddSourceDialog from \"../AddSourceDialog\";\r\n\r\n\r\nconst styles = theme => ({});\r\nlet previousPrice = \"\";\r\n\r\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo, selectedSources, setSelectedSources}) {\r\n\r\n    const updatePlaceInfo = (event, newValue) => {\r\n        const {name, value, id} = event.target;\r\n        let place = Object.assign({}, placeInfo, {});\r\n        if (id !== \"\") {\r\n            place[id] = valuetext(newValue[0]);\r\n        } else {\r\n            place[name] = value\r\n        }\r\n        console.log(\"Updated place\", place);\r\n        setPlaceInfo(place)\r\n    };\r\n\r\n    const getSources = () =>{\r\n        API.Source.getSources().then(response=>{\r\n            setAvailableSources(response)\r\n        }).catch(error=>{\r\n\r\n        })\r\n    };\r\n\r\n    const handleAddSource = (name, url) =>{\r\n        API.Source.addSource({name: name, url: url}).then(response=>{\r\n            setAvailableSources(\r\n                [\r\n                    ...availableSources,\r\n                    response\r\n                ]\r\n            );\r\n            setSelectedSources([\r\n                ...selectedSources,\r\n                response\r\n            ]);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getSources()\r\n    },[]);\r\n\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [availableSources, setAvailableSources] = useState([]);\r\n\r\n    function valuetext(value) {\r\n        let val = \"\";\r\n        priceRange.map(row => {\r\n            if (row.value === value)\r\n                val = row.label\r\n        });\r\n        return val\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\">\r\n            Basic place information\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Place name\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter the place name\"\r\n            fullWidth\r\n            value={placeInfo['name']}\r\n            name=\"name\"\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Place description\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Describe the place thoroughly\"\r\n            fullWidth\r\n            multiline\r\n            name=\"description\"\r\n            value={placeInfo['description']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            rows={4}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Phone number\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter phone number\"\r\n            fullWidth\r\n            name=\"phoneNumber\"\r\n            value={placeInfo['phoneNumber']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Website\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter website\"\r\n            fullWidth\r\n            name=\"website\"\r\n            value={placeInfo['website']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n       <AutoCompleteChip\r\n                id=\"source\"\r\n                label=\"Select sources\"\r\n                options={availableSources}\r\n                setOptions={setAvailableSources}\r\n                setSelectedOptions={setSelectedSources}\r\n                selectedOptions={selectedSources}\r\n       />\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={() => setDialogOpen(true)}\r\n            startIcon={<AddIcon />}>\r\n            Add missing source\r\n        </Button>\r\n        <AddSourceDialog\r\n            action={handleAddSource}\r\n            open={dialogOpen}\r\n            setDialogOpen={setDialogOpen}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Typography>\r\n                Price\r\n            </Typography>\r\n            <Slider\r\n                id=\"price\"\r\n                onChange={updatePlaceInfo}\r\n                value={priceRange.map(row => {\r\n                    if (row.label === placeInfo['price']) return row.value\r\n                })}\r\n                style={{width: \"60%\", marginLeft: \"48px\"}}\r\n                defaultValue={0}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider-always\"\r\n                step={25}\r\n                max={125}\r\n                marks={priceRange}\r\n            />\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Typography>\r\n                Average time spent\r\n            </Typography>\r\n            <FormControl variant=\"outlined\" style={{width: \"60%\", marginLeft: \"48px\"}}>\r\n                <InputLabel>Minutes</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={parseInt(placeInfo['averageTimeSpent'], 10)}\r\n                    onChange={updatePlaceInfo}\r\n                    label=\"Average Time spent\"\r\n                    inputProps={{\r\n                        name: 'averageTimeSpent'\r\n                    }}\r\n                >\r\n                    <option value=\"-1\">None</option>\r\n                    {\r\n                        averageTimeSpent.map(row=>{\r\n                            return <option value={parseInt(row.value, 10)}> {row.value}</option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport React, {useMemo, useState} from \"react\"\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Delete from \"@material-ui/icons/Delete\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst imgWithClick = {cursor: \"pointer\"};\r\n\r\nconst Photo = ({index, onItemDelete, photo, margin, direction, top, left}) => {\r\n\r\n    const styles = {\r\n        imgContainer: {\r\n            margin: margin,\r\n            display: 'inline',\r\n            position: 'relative',\r\n            width: '300px',\r\n            height: '300px',\r\n        }\r\n    }\r\n    if (direction === \"column\") {\r\n        styles.imgContainer.position = \"absolute\";\r\n        styles.imgContainer.imgStyle.left = left;\r\n        styles.imgContainer.imgStyle.top = top;\r\n    }\r\n\r\n    const handleDelete = event => {\r\n        onItemDelete(photo);\r\n    }\r\n\r\n    return (\r\n\r\n        <Card style={styles.imgContainer}>\r\n            <CardMedia\r\n                style={{height: 0, paddingTop: '80%'}}\r\n                image={photo.src}\r\n            />\r\n            <CardActions disableSpacing>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon/>}\r\n                    onClick={(event) => {\r\n                        handleDelete(event)\r\n                    }}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n\r\n        </Card>\r\n    )\r\n\r\n};\r\n\r\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\r\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\r\nconst SortableGallery = SortableContainer(({items, onItemDelete}) => (\r\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>}/>\r\n));\r\n\r\nfunction ReorderablePhotos(props) {\r\n    let {setPhotos, photos, srcName, keyName} = props\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\r\n    };\r\n\r\n    function handleItemDelete(photo) {\r\n        setPhotos(photos.filter(item => {\r\n            return item[keyName].toString() !== photo.key\r\n        }))\r\n    }\r\n\r\n    let modifiedData = photos.map(item => {\r\n        return (\r\n            {\r\n                key: item[keyName].toString(),\r\n                src: item[srcName],\r\n                width: 1,\r\n                height: 1\r\n            })\r\n\r\n    })\r\n    return (\r\n        <div>\r\n            <SortableGallery pressDelay={200}\r\n                             disableAutoscroll={false} items={modifiedData} onSortEnd={onSortEnd}\r\n                             axis={\"xy\"} onItemDelete={handleItemDelete}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {DropzoneArea} from \"material-ui-dropzone\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../Networking/API\";\r\n\r\nconst styles = theme => ({\r\n    dropzoneArea: {\r\n        overflow: \"hidden\"\r\n    }\r\n});\r\n\r\nconst acceptedFileFormats = ['image/jpeg', 'image/png', 'image/bmp', 'image/jpg']\r\n\r\nfunction AddImageDialog(props) {\r\n\r\n    const {onCloseCallback, open, onFinishCallback, classes} = props\r\n    const [loading, setIsLoading] = useState(false)\r\n    const [selectedFiles, setSelectedFiles] = useState([])\r\n\r\n    const submitCallback = () => {\r\n        setIsLoading(true)\r\n\r\n        Promise.all(selectedFiles.map(imagefile => {\r\n            let formData = new FormData()\r\n            formData.append(\"image\", imagefile)\r\n            return API.Photos.uploadPhoto(formData)\r\n        })).then(response => {\r\n            console.log(response)\r\n            onFinishCallback(response)\r\n        }).catch(error => {\r\n            onFinishCallback()\r\n        }).finally(() => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleDrop = (files )=> {\r\n        setSelectedFiles(existingFiles => [...existingFiles, ...files])\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(selectedFiles)\r\n\r\n    }, [selectedFiles])\r\n\r\n    const handleDelete = (file) => {\r\n        console.log(file.name)\r\n        setSelectedFiles(files => {return files.filter(existingFile => existingFile !== file)})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Photo upload\r\n                </DialogTitle>\r\n                {loading && <LinearProgress variant=\"query\"/>}\r\n                <DialogContent dividers>\r\n                    <DropzoneArea\r\n                        className={classes.dropzoneArea}\r\n                        acceptedFiles={acceptedFileFormats}\r\n                        maxFileSize={25000000}\r\n                        dropzoneProps={{disabled: loading}} filesLimit={5} onDrop={handleDrop}\r\n                    onDelete={handleDelete}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={submitCallback} color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddImageDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onFinishCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddImageDialog)\r\n","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ReorderablePhotos from \"../ReorderablePhotos\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddImageDialog from \"../AddImageDialog\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PhotosInfo({classes, setPhotos, photos}) {\r\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\r\n\r\n    function handleAddPhoto(files) {\r\n        setAddImageDialogOpen(false);\r\n        if(files == null)\r\n            return;\r\n\r\n        setPhotos([\r\n            ...photos,\r\n            ...files]\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h6\" >\r\n                Photos\r\n            </Typography>\r\n            <Card variant={\"outlined\"} className={classes.outline}>\r\n\r\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\r\n\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{width: '15%'}}\r\n                    className={classes.button}\r\n                    onClick={() => setAddImageDialogOpen(true)}\r\n                    startIcon={<AddIcon />}>\r\n                    Add photo\r\n                </Button>\r\n\r\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(files) => handleAddPhoto(files)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\r\n\r\n\r\n            </Card>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PhotosInfo)\r\n\r\n\r\n","import React from \"react\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nGeocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\r\nGeocode.enableDebug();\r\n\r\n/**\r\n * Get country from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCountry = (addressArray) =>{\r\n    if(addressArray!==undefined){\r\n        let country = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\r\n                country = addressArray[ i ].long_name;\r\n                return country;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get country from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCity = ( addressArray ) => {\r\n    if(addressArray !== undefined){\r\n        let city = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'locality' === addressArray[ i ].types[0] ) {\r\n                city = addressArray[ i ].long_name;\r\n                return city;\r\n            }\r\n        }\r\n        return city;\r\n    }\r\n};\r\n\r\n/**\r\n * Get district from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCounty = ( addressArray ) => {\r\n        if(addressArray !== undefined){\r\n            let county = '';\r\n            for( let i = 0; i < addressArray.length; i++ ) {\r\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n                    county = addressArray[ i ].long_name;\r\n                    return county;\r\n                }\r\n            }\r\n            return county\r\n        }\r\n    };\r\n/**\r\n * Get district from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getMunicipality = ( addressArray ) => {\r\n    if(addressArray !== undefined){\r\n        let municipality = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\r\n                municipality = addressArray[ i ].long_name;\r\n                return municipality;\r\n            }\r\n        }\r\n        return municipality;\r\n    }\r\n};\r\n\r\n/**\r\n * Geocode location from address\r\n * @param address\r\n * @type string\r\n * @return location object\r\n */\r\nexport function geocodeFromAddress(address){\r\n    return Geocode.fromAddress( address ).then(\r\n        response => {\r\n            const { lat, lng } = response.results[0].geometry.location;\r\n            if(lat !== undefined && lng !== undefined){\r\n                return geocodeFromLatLng(lat, lng).then(loc=>{\r\n                    return loc\r\n                })\r\n            }else{\r\n                return null\r\n            }\r\n        },\r\n        err=>{\r\n            return null\r\n        }\r\n    )\r\n}\r\n\r\n/**\r\n * Geocode location from latitude and longitude\r\n * @param newLat\r\n * @param newLng\r\n * @return location object\r\n */\r\n\r\n\r\nexport function geocodeFromLatLng(newLat, newLng){\r\n    return Geocode.fromLatLng( newLat , newLng ).then(\r\n        response => {\r\n            const address = response.results[0].formatted_address\r\n            const addressArray =  response.results[0].address_components\r\n            if(addressArray!==undefined){\r\n                const city = getCity( addressArray ),\r\n                    country = getCountry( addressArray ),\r\n                    county = getCounty(addressArray),\r\n                    municipality = getMunicipality(addressArray);\r\n                let loc = {address: address, city: city, country: country, latitude: newLat, longitude: newLng, county: county, municipality: municipality};\r\n                return loc;\r\n            }\r\n            return null\r\n        },\r\n        error => {\r\n            return null\r\n        }\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\r\nimport PropTypes, {func} from \"prop-types\";\r\nimport {geocodeFromAddress, geocodeFromLatLng, getCity, getCountry, getCounty, getMunicipality} from \"./MapGeolocation\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    autocomplete:{\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline:\"0\",\r\n        marginBottom: \"4px\"\r\n    },\r\n    root: {\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"8px\",\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction MapToolbar({classes, isLocked, locationCallback}) {\r\n\r\n    const [loading, setIsLoading] = useState(false);\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    /**\r\n     * Handle manual address and coordinates filling with key presses and return location\r\n     * @param event\r\n     * @return {boolean}\r\n     */\r\n\r\n    function errorParsingLocation(){\r\n        addAlertConfig(\"Error parsing location!\", \"Make sure that address you provided is correct!\",[])\r\n    }\r\n\r\n    function handleKeyPress(event){\r\n        const value = event.target.value;\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            setIsLoading(true);\r\n            if (/[a-zA-Z]+/.test(value)){\r\n                geocodeFromAddress(value).then(location=>{\r\n                    location!==null ? locationCallback(location) : errorParsingLocation();\r\n                    setIsLoading(false)\r\n                })\r\n            }else{\r\n                let position = value.split(/[ ,]+/);\r\n                if(position.length === 2){\r\n                    geocodeFromLatLng(parseFloat(position[0]), parseFloat(position[1])).then(location=>{\r\n                        location!==null ? locationCallback(location) : errorParsingLocation();\r\n                        setIsLoading(false)\r\n                    })\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Handle place selection from google maps autocomplete\r\n     * @param place\r\n     * @return {{country: (*|string), address: *, city: (*|string), latitude: *, longitude: *}|null}\r\n     */\r\n    const onPlaceSelected = (place) => {\r\n        setIsLoading(true);\r\n        const addressArray = place.address_components;\r\n        if (addressArray !== undefined) {\r\n            const lat = place.geometry.location.lat(),\r\n                lng = place.geometry.location.lng();\r\n            geocodeFromLatLng(lat, lng).then(location => {\r\n                location !== null ? locationCallback(location) : errorParsingLocation();\r\n                setIsLoading(false)\r\n            });\r\n        }\r\n        return null\r\n    };\r\n\r\n    /**\r\n     * Get current location\r\n     */\r\n    function getCurrentPosition(){\r\n        setIsLoading(true)\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n            let newLat = position.coords.latitude,\r\n                newLng = position.coords.longitude;\r\n            geocodeFromLatLng(newLat, newLng).then(location=>{\r\n                location!==null ? locationCallback(location) : errorParsingLocation();\r\n\r\n                setIsLoading(false)\r\n            });\r\n        }, error=>{\r\n            setIsLoading(false)\r\n            alert(error.message + \"\\n\" + JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    return <div className={classes.root}>\r\n        <div className={classes.content}>\r\n            <Autocomplete\r\n                onKeyPress={(event)=>{if(!isLocked)handleKeyPress(event)}}\r\n                onPlaceSelected={(place)=>{if(!isLocked)onPlaceSelected(place)} }\r\n                className={classes.autocomplete}\r\n                types={['(regions)']}\r\n            />\r\n            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\">\r\n                <MyLocationIcon\r\n                    onClick={()=>{if(!isLocked)getCurrentPosition()}}\r\n                    fontSize=\"large\"\r\n                    color=\"primary\"\r\n                />\r\n            </IconButton>\r\n        </div>\r\n        {loading ? <LinearProgress /> : null}\r\n\r\n    </div>\r\n\r\n\r\n}\r\n\r\nMapToolbar.propTypes = {\r\n    isLocked: PropTypes.bool.isRequired,\r\n    locationCallback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(MapToolbar)","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"8px\",\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction MapLock({classes, isLocked, setIsLocked}) {\r\n    return <div className={classes.root}>\r\n        <FormControlLabel\r\n            control={<Switch />}\r\n            label=\"Lock\"\r\n            checked={isLocked}\r\n            onChange={()=>{\r\n               setIsLocked(old=>!old)\r\n            }}\r\n        />\r\n        {isLocked ?\r\n            <Alert  severity=\"error\">Map is currently locked. If you want to do any changes unlock it.</Alert> : null}\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(MapLock)","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { MAP } from 'react-google-maps/lib/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CustomControlsManager(\r\n    { position = window.google.maps.ControlPosition.TOP_LEFT, children },\r\n    context\r\n) {\r\n    const map = context[MAP];\r\n\r\n    const controlDiv = document.createElement('div');\r\n\r\n    useEffect(() => {\r\n        const controls = map.controls[position];\r\n        const index = controls.length;\r\n        controls.push(controlDiv);\r\n        return () => {\r\n            controls.removeAt(index);\r\n        };\r\n    });\r\n\r\n    return createPortal(\r\n        <div style={{ marginBottom: 8, marginTop: 8 }}>{children}</div>,\r\n        controlDiv\r\n    );\r\n}\r\n\r\nCustomControlsManager.contextTypes = {\r\n    [MAP]: PropTypes.object,\r\n};","import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer} from \"react-google-maps\"\r\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport MapToolbar from \"./MapToolbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport MapLock from \"./MapLock\";\r\nimport CustomControlsManager from \"./CustomControlsManager\";\r\nimport ExploreIcon from '@material-ui/icons/Explore';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport API from \"../../Networking/API\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Card from \"@material-ui/core/Card\";\r\nvar buildUrl = require('build-url');\r\nconst styles = theme => ({ largeIcon: {\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n    }});\r\n\r\nconst MapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        defaultZoom={12}\r\n        ref={props.refInstance}\r\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\r\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n        {props.children}\r\n\r\n    </GoogleMap>\r\n\r\n);\r\n\r\n\r\n\r\nfunction PlaceMap({classes, placeInfo,locationMarker,setLocationMarker,setParkingLocationMarker}) {\r\n\r\n    const [otherPlacesData, setOtherPlacesData] = useState([]);\r\n    const [infoWindows, setInfoWindows] = useState([]);\r\n\r\n    const [isLocked, setIsLocked] = useState(placeInfo.placeId !== \"\");\r\n    const refMap = useRef(null);\r\n\r\n    function mapToolbarCallback(location) {\r\n        setParkingLocationMarker(location);\r\n        setLocationMarker(location)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getClosestPlaces()\r\n    },[locationMarker]);\r\n\r\n    function getClosestPlaces(){\r\n        API.Places.getAllPlacesAdmin(buildUrl(null, {\r\n            queryParams: {\r\n                p: \"0\",\r\n                s: \"10\",\r\n                range: 3,\r\n                l: [locationMarker.latitude, locationMarker.longitude]\r\n            }\r\n        })).then(response=>{\r\n            setOtherPlacesData(response.list);\r\n        }).catch(error=>{\r\n\r\n        })\r\n    }\r\n\r\n    function onMarkerDragEnd(event) {\r\n        let newLat = event.latLng.lat(),\r\n            newLng = event.latLng.lng();\r\n        geocodeFromLatLng(newLat, newLng).then(location => {\r\n            setLocationMarker(location);\r\n            setParkingLocationMarker(location)\r\n        })\r\n    }\r\n    \r\n    return <React.Fragment>\r\n        <MapToolbar\r\n            isLocked={isLocked}\r\n            locationCallback={mapToolbarCallback}/>\r\n\r\n        <MapComponent\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            refInstance={refMap}\r\n            position={locationMarker}\r\n        >\r\n            {\r\n                otherPlacesData.map((location, i) =>{\r\n                    const latitude = parseFloat(location.latitude);\r\n                    const longitude = parseFloat(location.longitude);\r\n                        return placeInfo.placeId === \"\" ? <Marker\r\n                            key={location.placeId}\r\n                            position={{lat: latitude, lng: longitude}}\r\n                            icon={{\r\n                                url: require('../../res/selectedTourIcon.svg'),\r\n                                scaledSize: new window.google.maps.Size(32, 32),\r\n                                origin: new window.google.maps.Point(0, 0)\r\n                            }}\r\n                            onClick={() => {\r\n                                if (!isLocked) {\r\n                                    let markers = Object.assign([], infoWindows);\r\n                                    markers[i] = true;\r\n                                    setInfoWindows(markers)\r\n                                }\r\n                            }}\r\n                        >\r\n                            {infoWindows[i] && (\r\n                                <InfoWindow onCloseClick={() => {\r\n                                    let markers = Object.assign([], infoWindows);\r\n                                    markers[i] = false;\r\n                                    setInfoWindows(markers)\r\n                                }\r\n                                }>\r\n\r\n                                    <Card style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                                        {location.photos.length > 0 ? <Avatar alt=\"Remy Sharp\" src={location.photos[0].url}\r\n                                                                          className={classes.largeIcon}/> : null}\r\n                                        <Typography variant=\"h6\">\r\n                                            {location.name}\r\n                                        </Typography>\r\n\r\n                                    </Card>\r\n                                </InfoWindow>\r\n                            )}\r\n                        </Marker> : null\r\n\r\n                })\r\n            }\r\n\r\n            <Marker\r\n                name={'Dolores park'}\r\n                visible={true}\r\n                draggable={!isLocked}\r\n                onDragEnd={e => onMarkerDragEnd(e)}\r\n                position={{lat: locationMarker.latitude, lng: locationMarker.longitude}}>\r\n            </Marker>\r\n\r\n            <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\r\n                <div>\r\n                    <IconButton aria-label=\"delete\" onClick={()=>{\r\n                        if(!isLocked){\r\n                            const mapCenter = refMap.current.getCenter();\r\n                            geocodeFromLatLng(mapCenter.lat(), mapCenter.lng()).then(location=>{\r\n                                setLocationMarker(location)\r\n                                setParkingLocationMarker(location)\r\n                            });\r\n                        }\r\n                    }}>\r\n                        <ExploreIcon fontSize={\"large\"}/>\r\n                    </IconButton>\r\n                </div>\r\n            </CustomControlsManager>\r\n        </MapComponent>\r\n\r\n\r\n\r\n        <MapLock\r\n            isLocked={isLocked}\r\n            setIsLocked={setIsLocked}\r\n        />\r\n    </React.Fragment>\r\n\r\n\r\n}\r\n\r\nPlaceMap.propTypes = {\r\n    locationMarker: PropTypes.object.isRequired,\r\n    setLocationMarker: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PlaceMap)","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PlaceMap from \"../maps/PlaceMap\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PlaceLocation({locationData, setLocationData, setParkingLocation, placeInfo}) {\r\n\r\n    function changeLocationData(event){\r\n        const {name, value} = event.target;\r\n        let data = Object.assign({}, locationData, {});\r\n        data[name] = value;\r\n\r\n        setParkingLocation(data);\r\n        setLocationData(data)\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select place location from map\r\n        </Typography>\r\n        <br/>\r\n        <PlaceMap\r\n            placeInfo={placeInfo}\r\n            locationMarker={locationData}\r\n            setParkingLocationMarker={setParkingLocation}\r\n            setLocationMarker={setLocationData}\r\n        />\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Address\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place address\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['address']}\r\n            name='address'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"City\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place city\"\r\n            fullWidth\r\n            value={locationData['city']}\r\n            name='city'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"County\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place county\"\r\n            fullWidth\r\n            value={locationData['county']}\r\n            name='county'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Municipality\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place municipality\"\r\n            fullWidth\r\n            value={locationData['municipality']}\r\n            name='municipality'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Country\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place country\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['country']}\r\n            name='country'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            rows={4}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceLocation)","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from \"react-google-maps\";\r\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport MapToolbar from \"./MapToolbar\";\r\nimport API from \"../../Networking/API\";\r\nimport PropTypes, {func} from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CustomControlsManager from \"./CustomControlsManager\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExploreIcon from \"@material-ui/icons/Explore\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\n\r\nconst MapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        ref={props.refInstance}\r\n        defaultZoom={12}\r\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\r\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n        <Marker\r\n            onClick={()=>{if(!props.isLocked)props.setMainInfoWindow(true)}}\r\n            name={'Dolores park'}\r\n            visible={true}\r\n            draggable={!props.isLocked}\r\n            onDragEnd={e => onMarkerDragEnd(e, props.setPosition)}\r\n            position={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n            {props.mainInfoWindow && (\r\n                <InfoWindow onCloseClick={()=>{props.setMainInfoWindow(false)}}>\r\n                    <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                        {props.position.address}\r\n                        <Button\r\n                            onClick={()=>{\r\n                                let c = nearestParkingCount(props.position, props.parkingData);\r\n                                if(c>0){\r\n                                    props.addAlertConfig(\"Parkings nearby already exist!\", c+\" parking(-s) within 150 meter already exist(-s).\" +\r\n                                        \" Are you sure you don't want to use already existings parking locations?\",[{name:\"ADD NEW PARKING!\", action: ()=>{\r\n                                            props.addNewParking(props.position)\r\n                                        }}])\r\n                                }else{\r\n                                    props.addNewParking(props.position)\r\n                                }\r\n                            }}\r\n                            variant=\"text\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            startIcon={<AddIcon />}>\r\n                            Add new parking\r\n                        </Button>\r\n                    </div>\r\n                </InfoWindow>\r\n            )}\r\n        </Marker>\r\n\r\n        <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\r\n            <div>\r\n                <IconButton aria-label=\"delete\" onClick={()=>{\r\n                    if(!props.isLocked){\r\n                        let loc = Object.assign({},props.position, {});\r\n                        const mapCenter = props.refInstance.current.getCenter();\r\n                        loc.latitude = mapCenter.lat();\r\n                        loc.longitude = mapCenter.lng();\r\n                        props.setPosition(loc)\r\n                    }\r\n                }}>\r\n                    <ExploreIcon fontSize={\"large\"}/>\r\n                </IconButton>\r\n            </div>\r\n        </CustomControlsManager>\r\n\r\n        {\r\n            props.parkingData.map((location, i) =>{\r\n                const latitude = parseFloat(location.latitude);\r\n                const longitude = parseFloat(location.longitude);\r\n                console.log(parkingIsAttached(location, props.selectedParkingData));\r\n                return <Marker\r\n                    key={location.parkingId}\r\n                    position={{ lat: latitude, lng: longitude}}\r\n                    icon={{\r\n                        url: parkingIsAttached(location, props.selectedParkingData) ? require('../../res/selectedParking.svg') :\r\n                            require('../../res/availableParking.svg'),\r\n                        scaledSize: new window.google.maps.Size(20, 48),\r\n                        origin: new window.google.maps.Point(0, 0),\r\n                        anchor: new window.google.maps.Point(10, 35)\r\n                    }}\r\n                    onClick={()=>{\r\n                        if(!props.isLocked){\r\n                            let markers = Object.assign({},props.parkingInfoWindows, {});\r\n                            markers[i] = true;\r\n                            props.setParkingInfoWindows(markers)\r\n                        }\r\n                    }}\r\n                >\r\n                    {props.parkingInfoWindows[i] && (\r\n                        <InfoWindow onCloseClick={()=>{\r\n                                let markers = Object.assign({},props.parkingInfoWindows, {});\r\n                                markers[i] = false;\r\n                                props.setParkingInfoWindows(markers)\r\n                            }\r\n                        }>\r\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                                <Typography variant=\"h6\">\r\n                                    {location.address}\r\n                                </Typography>\r\n                                {parkingIsAttached(location, props.selectedParkingData) ? <div>\r\n                                        <Alert severity=\"success\">This parking location is already attached! See below in \"Selected parking locations\" section.</Alert>\r\n                                </div> :\r\n                                <Button\r\n                                    onClick={()=>{props.addExistingParking(location)}}\r\n                                    variant=\"text\"\r\n                                    color=\"secondary\"\r\n                                    size=\"large\"\r\n                                    startIcon={<AddIcon />}>\r\n                                    Add parking\r\n                                </Button>\r\n                                }\r\n                            </div>\r\n                        </InfoWindow>\r\n                    )}\r\n\r\n                </Marker>\r\n\r\n            })\r\n        }\r\n\r\n    </GoogleMap>\r\n);\r\n\r\nfunction parkingIsAttached(parking, selectedParkingData) {\r\n    for(let i = 0; i<selectedParkingData.length; i++){\r\n        if(selectedParkingData[i].address === parking.address)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction calcCrow(lat1, lon1, lat2, lon2)\r\n{\r\n    var R = 6371; // km\r\n    var dLat = toRad(lat2-lat1);\r\n    var dLon = toRad(lon2-lon1);\r\n    var lat1 = toRad(lat1);\r\n    var lat2 = toRad(lat2);\r\n\r\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    var d = R * c;\r\n    return d;\r\n}\r\nfunction toRad(Value) {return Value * Math.PI / 180}\r\n\r\nfunction nearestParkingCount(parking, parkingData){\r\n    let count = 0;\r\n    for(let i = 0; i<parkingData.length; i++){\r\n        let distance = calcCrow(parking.latitude, parking.longitude, parkingData[i].latitude, parkingData[i].longitude);\r\n        if(distance<=0.15){\r\n            count++;\r\n        }\r\n    }\r\n    return count\r\n}\r\n\r\n\r\nfunction onMarkerDragEnd(event, setLocationMarker) {\r\n    let newLat = event.latLng.lat(),\r\n        newLng = event.latLng.lng();\r\n    geocodeFromLatLng(newLat, newLng).then(location => {\r\n        setLocationMarker(location)\r\n    })\r\n}\r\n\r\nfunction ParkingMap({placeInfo,\r\n                        locationMarker,\r\n                        setLocationMarker,\r\n                        addNewParking,\r\n                        addExistingParking,\r\n                        selectedParkingData\r\n                    }) {\r\n\r\n    const [parkingData, setParkingData] = useState([]);\r\n    const [mainInfoWindow, setMainInfoWindow] = useState(false);\r\n    const [parkingInfoWindows, setParkingInfoWindows] = useState(false);\r\n    const [isLocked, setIsLocked] = useState(false);\r\n    const refMap = useRef(null);\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    function getClosestParking(){\r\n        API.Parking.getParkingByLocation(\"?lat=\"+locationMarker.latitude+\"&lng=\"+locationMarker.longitude).then(response=>{\r\n            setParkingData(response);\r\n        }).catch(error=>{\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getClosestParking()\r\n    },[locationMarker]);\r\n\r\n    function mapToolbarCallback(location) {\r\n        setMainInfoWindow(true);\r\n        setLocationMarker(location)\r\n    }\r\n\r\n    return <React.Fragment>\r\n        <MapToolbar\r\n            isLocked={isLocked}\r\n            locationCallback={mapToolbarCallback}/>\r\n\r\n        <MapComponent\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            mainInfoWindow={mainInfoWindow}\r\n            setMainInfoWindow={setMainInfoWindow}\r\n            addNewParking={addNewParking}\r\n            addExistingParking={addExistingParking}\r\n            parkingInfoWindows={parkingInfoWindows}\r\n            setParkingInfoWindows={setParkingInfoWindows}\r\n            parkingData={parkingData}\r\n            position={locationMarker}\r\n            setPosition={setLocationMarker}\r\n            isLocked={isLocked}\r\n            refInstance={refMap}\r\n            selectedParkingData={selectedParkingData}\r\n            addAlertConfig={addAlertConfig}\r\n        />\r\n\r\n    </React.Fragment>\r\n}\r\n\r\n\r\nParkingMap.propTypes = {\r\n    placeInfo: PropTypes.object.isRequired,\r\n    locationMarker: PropTypes.object.isRequired,\r\n    setLocationMarker: PropTypes.func.isRequired,\r\n    addNewParking: PropTypes.func.isRequired,\r\n    addExistingParking: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ParkingMap","import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../../Networking/API\";\r\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport ParkingMap from \"../maps/ParkingMap\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction ParkingLocation({classes, locationData, setLocationData, allSelectedParkingData, setAllSelectedParkingData, placeInfo}) {\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\r\n    };\r\n\r\n    function addNewParking(markerData){\r\n        if(!parkingExists(markerData)){\r\n            API.Parking.insertNewParking([markerData]).then(response=>{\r\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\r\n                addConfig(true)\r\n            }).catch(error=>{\r\n                addConfig(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    function addExistingParking(location) {\r\n        if(!parkingExists(location)){\r\n            setAllSelectedParkingData(oldArray=> [...oldArray, location])\r\n        }\r\n    }\r\n\r\n    function parkingExists(markerData){\r\n        for(let i = 0; i<allSelectedParkingData.length; i++){\r\n            if(allSelectedParkingData[i].address === markerData.address){\r\n                addConfig(false, \"This parking is already attached!\");\r\n                return true;\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    const SortableItem = SortableElement(({value}) => (\r\n        <Paper className={classes.paper} elevation={3}>\r\n            <Typography>\r\n                {value.address}\r\n            </Typography>\r\n            <IconButton aria-label=\"delete\" className={classes.margin}\r\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </Paper>\r\n    ));\r\n\r\n\r\n    const SortableList = SortableContainer(({items}) => {\r\n        return (\r\n            <ul>\r\n                {items.map((value, index) => (\r\n                <SortableItem key={index} index={index} value={value} />\r\n                ))}\r\n            </ul>\r\n        );\r\n    });\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Add parking\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select parking\r\n        </Typography>\r\n\r\n        <ParkingMap\r\n            selectedParkingData={allSelectedParkingData}\r\n            placeInfo={placeInfo}\r\n            locationMarker={locationData}\r\n            setLocationMarker={setLocationData}\r\n            addNewParking={addNewParking}\r\n            addExistingParking={addExistingParking}\r\n        />\r\n\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Selected parking locations\r\n        </Typography>\r\n        {allSelectedParkingData.length === 0 ? <Alert severity=\"error\">\r\n            This place has no selected parking! To select parking for this place do the following:\r\n            <br/>\r\n            1. Select your current location or any other location\r\n            <br/>\r\n            2. Select already existing nearby parking locations and click add\r\n            <br/>\r\n            3. If none of the location is valid, click on the orange marker and add new parking\r\n            </Alert> :\r\n            <SortableList pressDelay={200} disableAutoscroll={false} items={allSelectedParkingData} onSortEnd={onSortEnd} />\r\n        }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(ParkingLocation)","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nfunction AddDialog(props){\r\n\r\n    function validateInput(){\r\n        var error = false;\r\n        if(text.length <= 3)\r\n            error = true\r\n        setError(error)\r\n        return error\r\n    }\r\n\r\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\r\n    const [text, setText] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    return(\r\n        <div>\r\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\r\n                    {header}\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    action: PropTypes.func.isRequired,\r\n    onCloseCallback: PropTypes.func.isRequired\r\n};\r\nexport default withStyles(styles)(AddDialog)\r\n","import React, { useState, useCallback } from 'react';\r\n\r\nexport const EditDialogContext = React.createContext({\r\n    dialogConfig: null,\r\n    dialogOpen: null,\r\n    setDialogOpen: null,\r\n    addEditDialogConfig: () => {},\r\n    removeEditDialogConfig: () => {}\r\n});\r\n\r\nconst defaultOptions = {\r\n\r\n    /**\r\n     * The dialog's title.\r\n     */\r\n    title: \"Sample title\",\r\n\r\n    /**\r\n     * Object, that defines an error message for each error returned by validateInput function.\r\n     * Should follow this structure: {errorCode: \"message\", differentErrorCode: \"Message\"}\r\n     * Keys of this object are integers (that represent the error code)\r\n     */\r\n    errorMessages: {},\r\n\r\n    /**\r\n     * Explanation text for this dialog.\r\n     */\r\n    explanation: \"Sample explanation\",\r\n\r\n    /**\r\n     * A callback for when user presses cancel.\r\n     */\r\n    onCloseCallback: () => {},\r\n\r\n    /**\r\n     * A callback for when the user input passes error checks and done button is pressed\r\n     * @param input is the input text\r\n     */\r\n    onDoneCallback: (input) => {},\r\n\r\n    /**\r\n     * The label text to be displayed above textfield\r\n     */\r\n    textFieldLabel: \"Type here\",\r\n\r\n    /**\r\n     * Should return 0 if input is valid.\r\n     * If the input is not valid, it should return an error code.\r\n     * Any returned code, that is not 0 is considered to be an error.\r\n     * The error code returned may have a message in errorMessages prop.\r\n     * @param input\r\n     * @returns {number}\r\n     */\r\n    validateInput: (input) => 0,\r\n\r\n    /**\r\n     * The default text to be displayed in TextField\r\n     */\r\n    defaultText: \"\"\r\n}\r\n\r\nexport default function EditDialogProvider({ children }) {\r\n    const [dialogConfig, setDialogConfig] = useState(defaultOptions);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const contextValue = {\r\n        dialogConfig,\r\n        dialogOpen: dialogOpen,\r\n        setDialogOpen: setDialogOpen,\r\n        addEditDialogConfig: (options) => {\r\n            setDialogConfig({\r\n                ...defaultOptions,\r\n                ...options\r\n            })\r\n            setDialogOpen(true)\r\n        },\r\n        removeEditDialogConfig: () => setDialogConfig(null)\r\n    };\r\n\r\n    return (\r\n        <EditDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </EditDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {EditDialogContext} from \"./EditDialogContext\";\r\n\r\nexport default function UseEditDialogContext() {\r\n    const { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen } = useContext(EditDialogContext);\r\n    return { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen};\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddDialog from \"../AddDialog\";\r\nimport API from \"../../Networking/API\";\r\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories}) {\r\n\r\n    const [availableCategories, setAvailableCategories] = useState([]);\r\n    const [availableTags, setAvailableTags] = useState([]);\r\n\r\n    const {addEditDialogConfig} = UseEditDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    const updateTags = () => {\r\n        API.Tags.getAllTags().then(response=>{\r\n            setAvailableTags(response);\r\n            console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n    const updateCategories = () => {\r\n        API.Categories.getAllCategories().then(response=>{\r\n            setAvailableCategories(response)\r\n            console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        });\r\n    };\r\n\r\n    useEffect(()=>{\r\n        updateTags();\r\n        updateCategories();\r\n    },[]);\r\n\r\n\r\n    const promptAddTag = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add tag\",\r\n            explanation: \"Type the tag name\",\r\n            onDoneCallback: (tagName) => {\r\n                API.Tags.addTag([{name: tagName}]).then(response=>{\r\n                    let newTag = {tagId: response[0], name: tagName}\r\n                    setAvailableTags(\r\n                        [\r\n                            ...availableTags,\r\n                            newTag\r\n                        ]\r\n                    );\r\n                    setSelectedTags([\r\n                        ...selectedTags,\r\n                        newTag\r\n                    ]);\r\n\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to add tag.\")\r\n                })\r\n            },\r\n            errorMessages: {\r\n                1: \"The tag name is too short\",\r\n                2: \"A tag with identical name already exists. You should choose the existing tag instead\"\r\n            },\r\n            validateInput: (input) => {\r\n                if(input.length < 4){\r\n                    return 1 //Input too short\r\n                }else if(availableTags.filter(item => item.name === input).length !== 0){\r\n                    return 2 //Identical tag already exists\r\n                }\r\n                return 0\r\n            },\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const promptAddCategory = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add category\",\r\n            explanation: \"Type the category name\",\r\n            onDoneCallback: (categoryName) => {\r\n                API.Categories.addCategory([{name: categoryName}]).then(response=>{\r\n                    let newCat = {categoryId: response[0], name: categoryName};\r\n                    setAvailableCategories(\r\n                        [\r\n                            ...availableCategories,\r\n                            newCat\r\n                        ]\r\n                    );\r\n                    setSelectedCategories([\r\n                        ...selectedCategories,\r\n                        newCat\r\n                    ]);\r\n                }).catch(error=>{\r\n                    addConfig(false, \"Failed to add category.\")\r\n                })\r\n            },\r\n            errorMessages: {\r\n                1: \"The category name is too short\",\r\n                2: \"A category with identical name already exists. You should choose the existing category instead\"\r\n            },\r\n            validateInput: (input) => {\r\n                if(input.length < 4){\r\n                    return 1 //Input too short\r\n                }else if(availableCategories.filter(item => item.name === input).length !== 0){\r\n                    return 2 //Identical category already exists\r\n                }\r\n                return 0\r\n            },\r\n            textFieldLabel: \"Restaurant, hotel, hiking...\"\r\n        })\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place discovery settings\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select tags\r\n        </Typography>\r\n        <AutocompleteChip label=\"Select tags\"\r\n                          id=\"tagId\"\r\n                          options={availableTags}\r\n                          setOptions={setAvailableTags}\r\n                          selectedOptions={selectedTags}\r\n                          setSelectedOptions ={setSelectedTags}/>\r\n\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={promptAddTag}\r\n            startIcon={<AddIcon />}>\r\n            Add missing tag\r\n        </Button>\r\n\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select categories\r\n        </Typography>\r\n        <AutocompleteChip label=\"Select categories\"\r\n                          id=\"categoryId\"\r\n                          options={availableCategories}\r\n                          setOptions={setAvailableCategories}\r\n                          selectedOptions={selectedCategories} \r\n                          setSelectedOptions={setSelectedCategories}/>\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={promptAddCategory}\r\n            startIcon={<AddIcon />}>\r\n            Add missing category\r\n        </Button>\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceDiscovery)","const initialScheduleData = [\r\n    {\r\n        \"scheduleDefault\": true,\r\n        \"periods\": [\r\n            {\r\n                openDay: 0,\r\n                closeDay: 0,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            },\r\n            {\r\n                openDay: 1,\r\n                closeDay: 1,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            },\r\n            {\r\n                openDay: 2,\r\n                closeDay: 2,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            },\r\n            {\r\n                openDay: 3,\r\n                closeDay: 3,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            },\r\n            {\r\n                openDay: 4,\r\n                closeDay: 4,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default initialScheduleData","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        width: \"20%\",\r\n        padding: \"2px\",\r\n        marginRight: \"16px\"\r\n    },\r\n\r\n});\r\nexport default function ReviewCard({review}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <div style={{display: \"flex\"}} >\r\n                    <Avatar alt=\"Cindy Baker\" src={!!review.photoUrl ? review.photoUrl : \"/broken-image.jpg\"} />\r\n                    <div style={{display: \"flex\", flexDirection: \"column\", marginLeft:\"8px\"}}>\r\n                        <Typography title=\"subtitle1\">\r\n                            {review.name} {review.surname}\r\n                        </Typography>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <Rating size=\"small\" name=\"read-only\" value={review.rating} readOnly />\r\n                            <Typography title=\"subtitle1\">\r\n                                {\"+\" + review.upvotes}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                    {moment(review.timeAdded).format('LL')}\r\n                </Typography>\r\n                <div style={{marginTop: \"16px\"}}>\r\n                    {review.title}\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                        {review.review}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ReviewCard from \"../ReviewCard\";\r\nimport API from \"../../Networking/API\";\r\nimport debounce from \"lodash/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nconst styles = theme => ({\r\n    reviewsInfo:{\r\n        display: \"flex\",\r\n    },\r\n    reviews:{\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        margin: theme.spacing(2),\r\n        overflowX: \"scroll\"\r\n    },\r\n    sortingButtons: {\r\n        padding: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction Reviews({classes, placeInfo}) {\r\n\r\n    const [reviews, setReviews] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    const [filterBy, setFilterBy] = useState('mostRated');\r\n\r\n    function getReviewsForPlace(urlParams = \"?p=\"+placeInfo.placeId) {\r\n        API.Reviews.getPlaceReviews(urlParams).then(response=>{\r\n            setReviews(old=>[...old, ...response.list]);\r\n            setIsLoading(false)\r\n        }).catch(error=>{\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    //Get ordered by new filter\r\n    useEffect(()=>{\r\n            getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=1&o=\"+filterBy)\r\n    },[filterBy]);\r\n\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollWidth - e.target.scrollLeft - scrollOffset)  <= e.target.clientWidth;\r\n        if (bottom && !isLoading && reviews.length>0 && reviews.length<placeInfo.totalReviews) {\r\n            setIsLoading(true);\r\n            setPage(old=>{\r\n                getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=\"+(old+1)+\"&o=\"+filterBy);\r\n                return old+1\r\n            });\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    function changeSorting(e){\r\n        const {name, value} = e.target;\r\n        setFilterBy(value);\r\n        setReviews([]);\r\n        setPage(1);\r\n        handleClose()\r\n    }\r\n\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Reviews\r\n            <br/>\r\n            {\r\n               reviews.length > 0 ?\r\n                   <React.Fragment>\r\n                       <div style={{display:\"flex\", justifyContent: \"space-between\"}}>\r\n                           <div className={classes.reviewsInfo}>\r\n                               <Rating name=\"read-only\" value={placeInfo.overallStarRating} precision={0.2} readOnly />\r\n                               <Typography style={{marginLeft:\"8px\"}} variant=\"subtitle1\">\r\n                                   {placeInfo.totalReviews} reviews\r\n                               </Typography>\r\n                           </div>\r\n                           <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                               <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                                   <FilterListIcon />\r\n                               </IconButton>\r\n                           </Tooltip>\r\n                           <Popover\r\n                               id={id}\r\n                               open={open}\r\n                               anchorEl={anchorEl}\r\n                               onClose={handleClose}\r\n                               anchorOrigin={{\r\n                                   vertical: 'bottom',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                               transformOrigin={{\r\n                                   vertical: 'top',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                           >\r\n                               <RadioGroup className={classes.sortingButtons} aria-label=\"gender\" value={filterBy} name=\"gender1\"  onChange={changeSorting}>\r\n                                   <FormControlLabel value=\"mostRated\" control={<Radio />} label=\"Most rated\" />\r\n                                   <FormControlLabel value=\"newest\" control={<Radio />} label=\"Newest\" />\r\n                               </RadioGroup>\r\n                           </Popover>\r\n                       </div>\r\n\r\n                       <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                           <Typography>\r\n                               Showing: {reviews.length} out of {placeInfo.totalReviews}\r\n                           </Typography>\r\n                           <Typography>\r\n                               Sorting by: {filterBy}\r\n                           </Typography>\r\n                       </div>\r\n                       <div className={classes.reviews} onScroll={e=>handleScroll(e)}>\r\n                           {reviews.map(row=>{\r\n                               return <ReviewCard review={row}/>\r\n                           })}\r\n                       </div>\r\n                   </React.Fragment> : <Typography> No reviews for this place</Typography>\r\n            }\r\n\r\n        </Typography>\r\n        <br/>\r\n        {isLoading ? <LinearProgress/> : null }\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(Reviews)","import React, { useState } from 'react';\r\n\r\nexport const AppBarTitleContext = React.createContext({\r\n    title: \"\",\r\n    setTitle: () => {},\r\n});\r\n\r\nexport default function AppBarTitleProvider({ children }) {\r\n    const [title, setTitle] = useState(\"Home\");\r\n\r\n    const contextValue = {\r\n        title,\r\n        setTitle: (title) => setTitle(title)\r\n    };\r\n\r\n    return (\r\n        <AppBarTitleContext.Provider value={contextValue}>\r\n            {children}\r\n        </AppBarTitleContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AppBarTitleContext} from \"./AppBarTitleContext\";\r\n\r\nexport default function UseAppBarTitleContext() {\r\n    const { title, setTitle } = useContext(AppBarTitleContext);\r\n    return { title, setTitle };\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { TimePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport Moment from \"react-moment\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\",\r\n        margin: theme.spacing(0.5),\r\n        alignItems: \"center\",\r\n        flexFlow: \"row wrap\"\r\n    },\r\n    picker: {\r\n        margin: theme.spacing(0.5),\r\n        width: \"30%\"\r\n    },\r\n    intervalRightSide: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    intervalLeftSide: {\r\n    }\r\n});\r\n\r\nfunction ScheduleInterval({classes, intervals, index, setIntervals}){\r\n\r\n    let currentInterval = intervals[index]\r\n\r\n    const [lastAccommodationEnabled, setLastAccommodationEnabled] = useState(currentInterval.lastAccommodation != null)\r\n    const [lastAccommodationTime, setLastAccommodationTime] = useState(currentInterval.lastAccommodation == null ? currentInterval.closeTime : currentInterval.lastAccommodation)\r\n\r\n    const getCloseDay = (closeTime, openTime) => {\r\n        let currentPeriod = intervals[index]\r\n        if(moment(closeTime, \"HH:mm\").isBefore(moment(openTime, \"HH:mm\")))\r\n            return (currentPeriod.openDay + 1) > 6 ? 0 : (currentPeriod.openDay +1)\r\n        else return currentPeriod.openDay\r\n    }\r\n\r\n    let handleUpdateOpenTime = (value) => {\r\n        setIntervals((oldIntervals) => {\r\n            return oldIntervals.map((item, i) => {\r\n                if(index === i){\r\n                    return {\r\n                        ...item,\r\n                        openTime: moment(value).format(\"HH:mm\").toString(),\r\n                        closeDay: getCloseDay(item.closeTime, value)\r\n                    }\r\n                }else return item\r\n            })\r\n        })\r\n    }\r\n    let handleUpdateCloseTime = (value) => {\r\n        setIntervals((oldIntervals) => {\r\n            return oldIntervals.map((item, i) => {\r\n                if(index === i){\r\n                    return {\r\n                        ...item,\r\n                        closeTime: moment(value).format(\"HH:mm\").toString(),\r\n                        closeDay: getCloseDay(value, item.openTime)\r\n                    }\r\n                }else return item\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setIntervals(oldIntervals => {\r\n            return oldIntervals.filter((item, i) => i !== index)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIntervals((oldIntervals) => {\r\n            return oldIntervals.map((item, i) => {\r\n                if(index === i){\r\n                    return {\r\n                        ...item,\r\n                        lastAccommodation: lastAccommodationEnabled ? lastAccommodationTime.toString() : null\r\n                    }\r\n                }else return item\r\n            })\r\n\r\n        })\r\n    }, [lastAccommodationTime, lastAccommodationEnabled])\r\n\r\n    const theme = useTheme();\r\n    const largeScreen = useMediaQuery(theme.breakpoints.only('lg'));\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.intervalLeftSide}>\r\n                <TimePicker\r\n                    margin=\"normal\"\r\n                    ampm={false}\r\n                    label=\"Opens\"\r\n                    className={classes.picker}\r\n                    format=\"HH:mm\"\r\n                    value={moment(currentInterval.openTime, \"HH:mm\")}\r\n                    onChange={handleUpdateOpenTime}\r\n                    InputProps={{\r\n                        disableUnderline: true,\r\n                    }}\r\n                />\r\n                <TimePicker\r\n                    margin=\"normal\"\r\n                    ampm={false}\r\n                    className={classes.picker}\r\n                    label=\"Closes\"\r\n                    format=\"HH:mm\"\r\n                    value={moment(currentInterval.closeTime, \"HH:mm\")}\r\n                    onChange={handleUpdateCloseTime}\r\n                    InputProps={{\r\n                        disableUnderline: true,\r\n                    }}\r\n                />\r\n\r\n                {intervals[index].closeDay !== intervals[index].openDay &&\r\n                    <React.Fragment>\r\n                        <Typography variant=\"subtitle1\">\r\n                            <WarningIcon style={{marginRight: \"10px\"}}/>\r\n                            Closes the next day\r\n                        </Typography>\r\n                    </React.Fragment>}\r\n\r\n                {!largeScreen &&\r\n                <Button color=\"primary\" onClick={handleDelete}>\r\n                    <DeleteOutlineIcon/>\r\n                </Button>\r\n                }\r\n            </div>\r\n\r\n            <div className={classes.intervalRightSide}>\r\n\r\n                <Checkbox checked={lastAccommodationEnabled} onChange={() => setLastAccommodationEnabled(state => !state)} />\r\n\r\n                <TimePicker\r\n                    margin=\"normal\"\r\n                    ampm={false}\r\n                    label=\"Last accommodation\"\r\n                    format=\"HH:mm\"\r\n                    disabled={!lastAccommodationEnabled}\r\n                    value={moment(lastAccommodationTime.toString(), \"HH:mm\")}\r\n                    onChange={(value) => setLastAccommodationTime(moment(value).format(\"HH:mm\").toString())}\r\n                    InputProps={{\r\n                        disableUnderline: true,\r\n                    }}\r\n                />\r\n\r\n                {largeScreen &&\r\n                    <Button color=\"primary\" onClick={handleDelete}>\r\n                    <DeleteOutlineIcon/>\r\n                    </Button>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nScheduleInterval.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    intervals: PropTypes.array.isRequired,\r\n    setIntervals: PropTypes.func.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ScheduleInterval)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ScheduleInterval from \"./ScheduleInterval\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst styles = theme => ({\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\"\r\n    },\r\n    root: {\r\n        margin: theme.spacing(0.5),\r\n        padding: theme.spacing(0.5)\r\n    }\r\n});\r\n\r\nfunction DayComponent({classes, scheduleData, setScheduleData, openDay, onChange, globalTime}){\r\n\r\n    let [intervals, setIntervals] = useState(scheduleData.periods.filter(item => item.openDay === openDay))\r\n    let [ignoreGlobalTime, setIgnoreGlobalTime] = useState({ignoreOpenTime: true, ignoreCloseTime: true})\r\n    useEffect(() => {\r\n        onChange(intervals, openDay)\r\n    }, [intervals])\r\n\r\n    useEffect(() => {\r\n        if(ignoreGlobalTime.ignoreOpenTime){\r\n            setIgnoreGlobalTime(data => {\r\n                return {...data, ignoreOpenTime: false}\r\n            })\r\n            return\r\n        }\r\n        setIntervals(oldIntervals => {\r\n            return oldIntervals.map(item => {\r\n                return {...item, openTime: globalTime.openTime}\r\n            })\r\n        })\r\n    }, [globalTime.openTime])\r\n\r\n    useEffect(() => {\r\n        if(ignoreGlobalTime.ignoreCloseTime){\r\n            setIgnoreGlobalTime(data => {\r\n                return {...data, ignoreCloseTime: false}\r\n            })\r\n            return\r\n        }\r\n        setIntervals(oldIntervals => {\r\n            return oldIntervals.map(item => {\r\n                return {...item, closeTime: globalTime.closeTime}\r\n            })\r\n        })\r\n    }, [globalTime.closeTime])\r\n\r\n    let weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\r\n\r\n    const handleAddPeriod = () => {\r\n        setIntervals(oldIntervals => {\r\n            return [\r\n                ...oldIntervals,\r\n                {openDay: openDay, closeDay: openDay, openTime: \"08:00\", closeTime: \"18:00\"}\r\n            ]\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n                <Typography variant=\"h6\" >\r\n                    {weekDays[openDay]}\r\n                </Typography>\r\n                <Button color=\"secondary\" onClick={handleAddPeriod}>\r\n                    <AddIcon/>\r\n                </Button>\r\n            </div>\r\n\r\n            {intervals.map((value, index) => {\r\n                return <React.Fragment>\r\n                    <Divider variant=\"middle\" />\r\n                    <ScheduleInterval index={index} intervals={intervals} setIntervals={setIntervals}/>\r\n                </React.Fragment>\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nDayComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    scheduleData: PropTypes.object.isRequired,\r\n    setScheduleData: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DayComponent)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {DatePicker, MuiPickersUtilsProvider, TimePicker} from '@material-ui/pickers';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport DayComponent from \"./DayComponent\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = theme => ({\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\"\r\n    },\r\n    root: {\r\n        padding: theme.spacing(2),\r\n        margin: theme.spacing(1)\r\n    },\r\n    pickerStyle: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    headerLeft: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"left\"\r\n    },\r\n    globalTimeEditLayout: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\",\r\n        margin: theme.spacing(0.5),\r\n        alignItems: \"center\",\r\n        flexFlow: \"row wrap\"\r\n    },\r\n    globalTimeEditLeft: {\r\n\r\n    },\r\n    globalTimePicker: {\r\n        margin: theme.spacing(0.5),\r\n        width: \"30%\"\r\n    }\r\n});\r\n\r\nfunction Schedule({classes, data, setData, index}){\r\n\r\n    const[periods, setPeriods] = useState([...data.periods])\r\n    const[globalTime, setGlobalTime] = useState({openTime: \"08:00\", closeTime: \"17:00\"})\r\n\r\n    const handleIntervalChange = (newIntervals, openDay) => {\r\n        setPeriods(oldPeriods => {\r\n            let filtered = oldPeriods.filter(item => item.openDay !== openDay)\r\n            if(newIntervals.length === 0)\r\n                return [...filtered]\r\n            return [\r\n                ...filtered,\r\n                ...newIntervals\r\n            ]\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setData(oldData => {\r\n            return oldData.map((schedule, i) => {\r\n                if( i === index){\r\n                    return {...schedule, periods: periods}\r\n                }else return schedule\r\n            })\r\n        })\r\n    }, [periods])\r\n\r\n    const generateWeekdayViews = () => {\r\n        let views = []\r\n        for(let i =0; i < 7; i++){\r\n            views.push(<DayComponent globalTime={globalTime} scheduleData={data} onChange={handleIntervalChange} setScheduleData={setData} openDay={i} key={i}/>)\r\n        }\r\n        return views\r\n    }\r\n\r\n    const updateFromTime = (value) => {\r\n        setData(oldData => {\r\n            return oldData.map((schedule, i) => {\r\n                if( i === index){\r\n                    return {...schedule, from: moment(value).format('MM-DD').toString()}\r\n                }else return schedule\r\n            })\r\n        })\r\n    }\r\n    const updateToTime = (value) => {\r\n        setData(oldData => {\r\n            return oldData.map((schedule, i) => {\r\n                if( i === index){\r\n                    return {...schedule, to: moment(value).format('MM-DD').toString()}\r\n                }else return schedule\r\n            })\r\n        })\r\n    }\r\n    const removeSchedule = () => {\r\n        setData(oldData => {\r\n            return oldData.filter((item, i) => index !== i)\r\n        })\r\n    }\r\n\r\n    const handleUpdateGlobalOpenTime = (value) => {\r\n        setGlobalTime(data => {\r\n            return {...data, openTime: moment(value).format(\"HH:mm\").toString()}\r\n        })\r\n    }\r\n    const handleUpdateGlobalCloseTime = (value) => {\r\n        setGlobalTime(data => {\r\n            return {...data, closeTime: moment(value).format(\"HH:mm\").toString()}\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Paper className={classes.root}>\r\n            <div className={classes.header}>\r\n                <div className={classes.headerLeft}>\r\n                    {data.scheduleDefault &&\r\n                    <Typography variant=\"h6\" >\r\n                        Date: Year round\r\n                    </Typography>}\r\n                    {!data.scheduleDefault &&\r\n                        <React.Fragment>\r\n                            <DatePicker\r\n                                className={classes.pickerStyle}\r\n                                views={[\"month\", \"date\"]}\r\n                                label=\"From\"\r\n                                value={moment(data.from, \"MM-DD\")}\r\n                                onChange={updateFromTime}\r\n                            />\r\n                            <DatePicker\r\n                                className={classes.pickerStyle}\r\n                                views={[\"month\", \"day\"]}\r\n                                label=\"To\"\r\n                                value={moment(data.to, \"MM-DD\")}\r\n                                onChange={updateToTime}\r\n                            />\r\n                        </React.Fragment>\r\n                    }\r\n                </div>\r\n                {!data.scheduleDefault &&\r\n                <Button color=\"secondary\" onClick = {removeSchedule}>\r\n                    <RemoveIcon/>\r\n                </Button>}\r\n\r\n            </div>\r\n            <br/>\r\n            <div className={classes.globalTimeEditLayout}>\r\n                <div className={classes.globalTimeEditLeft}>\r\n                    <TimePicker\r\n                        margin=\"normal\"\r\n                        ampm={false}\r\n                        label=\"Opens\"\r\n                        className={classes.globalTimePicker}\r\n                        format=\"HH:mm\"\r\n                        value={moment(globalTime.openTime, \"HH:mm\")}\r\n                        onChange={handleUpdateGlobalOpenTime}\r\n                        InputProps={{\r\n                            disableUnderline: true,\r\n                        }}\r\n                    />\r\n                    <TimePicker\r\n                        margin=\"normal\"\r\n                        ampm={false}\r\n                        className={classes.globalTimePicker}\r\n                        label=\"Closes\"\r\n                        format=\"HH:mm\"\r\n                        value={moment(globalTime.closeTime, \"HH:mm\")}\r\n                        onChange={handleUpdateGlobalCloseTime}\r\n                        InputProps={{\r\n                            disableUnderline: true,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {generateWeekdayViews()}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nSchedule.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    setData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Schedule)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Schedule from \"../Schedule\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = theme => ({\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\",\r\n        flexWrap: \"wrap\"\r\n    }\r\n});\r\n\r\nfunction SchedulesWrapper({classes, scheduleData, setScheduleData, isScheduleEnabled, setIsScheduleEnabled}){\r\n\r\n    const addSchedule = () => {\r\n        setScheduleData(oldData => {\r\n            return [\r\n                ...oldData,\r\n                {scheduleDefault: false, from: \"01-01\", to: \"01-02\", periods : []}\r\n            ]\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className={classes.header}>\r\n                <Typography variant=\"h6\" >\r\n                    Working schedule\r\n                </Typography>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={isScheduleEnabled}\r\n                            onChange={() => setIsScheduleEnabled(state => !state)}\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                    label=\"Enable schedule for this place?\"\r\n                />\r\n            </div>\r\n            <br/>\r\n            {isScheduleEnabled &&\r\n                <React.Fragment>\r\n                    {scheduleData.map((value, index) => {\r\n                        return <Schedule data={value} index={index} setData={setScheduleData}/>\r\n                    })}\r\n                    <Button style={{float: \"right\"}}color=\"secondary\" onClick={addSchedule}>\r\n                        <AddIcon/>\r\n                    </Button>\r\n                </React.Fragment>}\r\n        </div>\r\n    )\r\n}\r\n\r\nSchedulesWrapper.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    scheduleData: PropTypes.array.isRequired,\r\n    setScheduleData: PropTypes.func.isRequired,\r\n    isScheduleEnabled: PropTypes.object.isRequired,\r\n    setIsScheduleEnabled: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SchedulesWrapper)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PropTypes, {func} from \"prop-types\";\r\nimport {Paper} from '@material-ui/core';\r\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\r\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\r\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\r\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\r\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\r\nimport initialScheduleData from \"../components/add_place_components/initialScheduleData\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Reviews from \"../components/add_place_components/Reviews\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport SchedulesWrapper from \"../components/add_place_components/SchedulesWrapper\";\r\nimport MapToolbar from \"../components/maps/MapToolbar\";\r\nimport PlaceMap from \"../components/maps/PlaceMap\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paperContent: {\r\n        marginTop: theme.spacing(4),\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            width: \"95%\",\r\n            padding: theme.spacing(2),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"70%\",\r\n            padding: theme.spacing(4),\r\n        },\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            height: \"100%\",\r\n        },\r\n    },\r\n    loader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"100vw\",\r\n        height: \"100vh\"\r\n    },\r\n    content: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        height: `calc(93vh - 64px)`,\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            width: \"100%\",\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"auto\",\r\n            padding: theme.spacing(8),\r\n        },\r\n        overflowY: \"auto\"\r\n    },\r\n    bottom: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            position: \"fixed\",\r\n            height: \"7vh\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        width: \"100%\",\r\n        zIndex: 5,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-around\",\r\n        padding: theme.spacing(1),\r\n    }\r\n});\r\n\r\n\r\nfunction AddPlace({classes, match}) {\r\n    const [placeInfo, setPlaceInfo] = useState({\r\n        placeId: \"\",\r\n        name: \"\", description: \"\", website: \"\", phoneNumber: \"\",\r\n        hasSchedule: false, isPublic: false, isVerified: true, overallStarRating: 0, totalReviews: 0,\r\n        source: \"\", price: \"\", averageTimeSpent: \"0\"\r\n    });\r\n\r\n\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    const [photos, setPhotos] = useState([]);\r\n\r\n    const [locationData, setLocationData] = useState({\r\n        city: '',\r\n        address: '',\r\n        country: '',\r\n        latitude: 54.687157,\r\n        longitude: 25.279652,\r\n        county: '',\r\n        municipality: ''\r\n    });\r\n    const [parkingMarkerData, setParkingMarkerData] = useState({\r\n        city: '',\r\n        address: '',\r\n        country: '',\r\n        latitude: 54.687157,\r\n        longitude: 25.279652,\r\n        county: '',\r\n        municipality: ''\r\n    });\r\n    const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\r\n\r\n    const [sources, setSources] = useState([]);\r\n\r\n    const [scheduleData, setScheduleData] = useState(initialScheduleData);\r\n    const [isScheduleEnabled, setIsScheduleEnabled] = useState(false);\r\n\r\n    const [placeId, setPlaceId] = useState(match.params.placeId);\r\n\r\n    const [firstTimeLoading, setFirstTimeLoading] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [error, setError] = useState({name: false});\r\n    const [checkErrors, setCheckErrors] = useState(false);\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const {title, setTitle} = UseAppBarTitleContext();\r\n\r\n    const ColorButton = withStyles((theme) => ({\r\n        root: {\r\n            color: \"white\",\r\n            backgroundColor: green[500],\r\n            '&:hover': {\r\n                backgroundColor: green[700],\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n    useEffect(()=>{\r\n        if(placeId!==undefined){\r\n            console.log(\"Getting place location\");\r\n            getPlaceInfo()\r\n        }\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        //Loaded place for editing\r\n        if (placeId === undefined) {\r\n            setTitle(\"Add new place\");\r\n            console.log(\"Came here to add new place\");\r\n            setFirstTimeLoading(false) //Just loaded add place window\r\n        }\r\n        //New Place has been just inserted, thus inserting other place info\r\n        if (placeId !== undefined && firstTimeLoading === false) {\r\n            console.log(\"Just added new place\");\r\n            Promise.all([\r\n                updateTagsData(placeId),\r\n                updateParkingData(placeId),\r\n                updateCategoriesData(placeId),\r\n                updatePhotoData(placeId),\r\n                updateSchedule(placeId),\r\n                updateSources(placeId)\r\n            ]).then(responses => {\r\n                formFeedback(true, Strings.SNACKBAR_PLACE_INSERTED_SUCCESS)\r\n            }).catch(error => {\r\n                formFeedback(false)\r\n            })\r\n        }\r\n\r\n    }, [placeId]);\r\n\r\n    useEffect(() => {\r\n        if (firstTimeLoading === false) {\r\n            console.log(\"Making this place public\");\r\n            updateAll()\r\n        }\r\n    }, [placeInfo['isPublic']]);\r\n\r\n    function getPlaceInfo() {\r\n        API.Places.getPlaceById(\"?full=true&p=\" + placeId).then(response => {\r\n            setAllData(response)\r\n            setTitle(\"Editing place/\" + response.name);\r\n        }).catch(error => {\r\n            formFeedback(false)\r\n        })\r\n    }\r\n\r\n    function setAllData(place) {\r\n        setPlaceInfo({\r\n            placeId: place.placeId,\r\n            name: place.name,\r\n            description: place.description,\r\n            website: place.website,\r\n            phoneNumber: place.phoneNumber,\r\n            hasSchedule: place.hasSchedule,\r\n            isPublic: place.isPublic,\r\n            isVerified: place.isVerified,\r\n            overallStarRating: place.overallStarRating,\r\n            totalReviews: place.totalReviews,\r\n            price: place.price,\r\n            averageTimeSpent: place.averageTimeSpent,\r\n        });\r\n\r\n        setLocationData({\r\n            city: place.city,\r\n            address: place.address,\r\n            country: place.country,\r\n            latitude: place.latitude,\r\n            longitude: place.longitude,\r\n            county: place.county,\r\n            municipality: place.municipality,\r\n        });\r\n\r\n        setParkingMarkerData({\r\n            city: place.city,\r\n            address: place.address,\r\n            country: place.country,\r\n            latitude: place.latitude,\r\n            longitude: place.longitude,\r\n            county: place.county,\r\n            municipality: place.municipality,\r\n        });\r\n\r\n        setSources(place.sources);\r\n        setSelectedTags(place.tags);\r\n        setSelectedCategories(place.categories);\r\n        if (place.schedule.length > 0) {\r\n            setScheduleData([...place.schedule]);\r\n            setIsScheduleEnabled(true)\r\n        } else setIsScheduleEnabled(false);\r\n\r\n        setAllSelectedParkingData(place.parking);\r\n        setPhotos(place.photos);\r\n        setFirstTimeLoading(false)\r\n    }\r\n\r\n    function formFeedback(success, message = Strings.SNACKBAR_ERROR) {\r\n        addConfig(success, message);\r\n        setIsLoading(false)\r\n    }\r\n\r\n    function saveChanges() {\r\n        if (placeId === undefined) {\r\n            addAlertConfig(Strings.DIALOG_PLACE_INSERT_TITLE, Strings.DIALOG_PLACE_INSERT, [{\r\n                name: \"Insert\", action: () => {\r\n                    setIsLoading(true);\r\n                    insertBasicPlaceInfo()\r\n                }\r\n            }])\r\n        } else {\r\n            addAlertConfig(Strings.DIALOG_PLACE_UPDATE_TITLE, Strings.DIALOG_PLACE_UPDATE, [{\r\n                name: \"save and publish\", action: () => {\r\n                    let plc = Object.assign({}, placeInfo, {});\r\n                    plc.isPublic = 1;\r\n                    setPlaceInfo(plc);\r\n                    setIsLoading(true);\r\n                    updateAll()\r\n                }\r\n            }, {\r\n                name: \"save\", action: () => {\r\n                    setIsLoading(true);\r\n                    updateAll()\r\n                }\r\n            }])\r\n        }\r\n    }\r\n\r\n    function updateAll() {\r\n        Promise.all([\r\n            updatePlaceInfo(),\r\n            updateTagsData(placeId),\r\n            updatePhotoData(placeId),\r\n            updateCategoriesData(placeId),\r\n            updateParkingData(placeId),\r\n            updateSchedule(placeId),\r\n            updateSources(placeId)\r\n        ]).then(response => {\r\n            formFeedback(true, Strings.SNACKBAR_CHANGES_SAVED);\r\n        }).catch(err => {\r\n            formFeedback(false)\r\n        })\r\n    }\r\n\r\n    function updatePlaceInfo() {\r\n        API.Places.updatePlace(formPlaceInfo()).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n\r\n    }\r\n\r\n    function insertBasicPlaceInfo() {\r\n        API.Places.insertPlace(formPlaceInfo()).then(placeId => {\r\n            setPlaceId(placeId)\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    function updateParkingData(id) {\r\n        API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\" + id).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    function updateTagsData(id) {\r\n        API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\" + id).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    function updateSources(id) {\r\n        API.SourcePlace.updateSourcesForPlace(sources, \"?p=\" + id).then(response => {\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n\r\n    function updateCategoriesData(id) {\r\n        API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\" + id).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    function updatePhotoData(id) {\r\n        API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\" + id).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n\r\n    function updateSchedule(id) {\r\n        API.Schedule.updateScheduleForPlace(isScheduleEnabled ? scheduleData : [], \"?id=\" + id).then(response => {\r\n        }).catch(er => {\r\n        })\r\n\r\n    }\r\n\r\n    function formPlaceInfo() {\r\n        let d = Object.assign(placeInfo, locationData);\r\n        return d\r\n    }\r\n\r\n\r\n    function publishPlace() {\r\n        addAlertConfig(Strings.DIALOG_PLACE_PUBLISH_TITLE, placeInfo['isPublic'] ? Strings.DIALOG_PLACE_UNPUBLISH_MESSAGE : Strings.DIALOG_PLACE_PUBLISH_MESSAGE,\r\n            [{\r\n                name: \"Agree\", action: () => {\r\n                    let obj = Object.assign({}, placeInfo, {});\r\n                    obj['isPublic'] = !obj['isPublic'];\r\n                    setPlaceInfo(obj);\r\n                }\r\n            }])\r\n\r\n    }\r\n\r\n    function verifyPlace() {\r\n        addAlertConfig(Strings.DIALOG_PLACE_VERIFY_TITLE, Strings.DIALOG_PLACE_VERIFY_MESSAGE, [{\r\n            name: \"agree\", action: () => {\r\n                let obj = Object.assign({}, placeInfo, {});\r\n                obj['isPublic'] = 1;\r\n                obj['isVerified'] = 1;\r\n                setPlaceInfo(obj);\r\n            }\r\n        }])\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            {firstTimeLoading ? <div className={classes.loader}><CircularProgress/></div> :\r\n                <div className={classes.content}>\r\n\r\n\r\n                    <Paper elevation={4} className={classes.paperContent}>\r\n                        <BasicPlaceInfo\r\n                            error={error}\r\n                            setError={setError}\r\n                            checkErrors={checkErrors}\r\n                            placeInfo={placeInfo}\r\n                            setPlaceInfo={setPlaceInfo}\r\n                            selectedSources={sources}\r\n                            setSelectedSources={setSources}\r\n                        />\r\n\r\n                    </Paper>\r\n\r\n                    {placeId !== undefined ?\r\n                        <Paper elevation={4} className={classes.paperContent}>\r\n                            <Reviews\r\n                                placeInfo={placeInfo}\r\n                            />\r\n                        </Paper>\r\n                        : null}\r\n\r\n\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <PhotosInfo\r\n                        photos={photos}\r\n                        setPhotos={setPhotos}\r\n                    />\r\n                </Paper>\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <PlaceLocation\r\n                        placeInfo={placeInfo}\r\n                        locationData={locationData}\r\n                        setParkingLocation={setParkingMarkerData}\r\n                        setLocationData={setLocationData}/>\r\n                </Paper>\r\n            <Paper elevation = {4} className={classes.paperContent}>\r\n                <ParkingLocation\r\n                    placeInfo={placeInfo}\r\n                    allSelectedParkingData={allSelectedParkingData}\r\n                    setAllSelectedParkingData={setAllSelectedParkingData}\r\n                    locationData={parkingMarkerData}\r\n                    setLocationData={setParkingMarkerData}/>\r\n            </Paper>\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <PlaceDiscovery\r\n                        selectedTags={selectedTags}\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedCategories={selectedCategories}\r\n                        setSelectedCategories={setSelectedCategories}/>\r\n                </Paper>\r\n\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <SchedulesWrapper isScheduleEnabled={isScheduleEnabled} setIsScheduleEnabled={setIsScheduleEnabled} setScheduleData={setScheduleData} scheduleData={scheduleData}/>\r\n                </Paper>\r\n            </div> }\r\n\r\n\r\n            {isLoading ? <LinearProgress/> : null}\r\n\r\n            <Paper elevation={1} className={classes.bottom}>\r\n\r\n                {\r\n                    placeInfo['isVerified'] === false && placeId !== undefined ?\r\n                        <ColorButton\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                                verifyPlace()\r\n                            }}\r\n                            className={classes.button}\r\n                        >\r\n                            Verify place\r\n                        </ColorButton>\r\n                        :\r\n                        <FormControlLabel\r\n                            control={<Switch checked={placeInfo['isPublic']} onChange={() => {\r\n                                publishPlace()\r\n                            }\r\n                            } name=\"isPublic\"/>}\r\n                            label=\"Make this place public\"\r\n                        />}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => saveChanges()}\r\n                    className={classes.button}>\r\n                    Save\r\n                </Button>\r\n\r\n\r\n            </Paper>\r\n        </div>)\r\n\r\n}\r\n\r\nAddPlace.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AddPlace)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {Fragment, useState} from \"react\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n\r\n    },\r\n    media: {\r\n        height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n})\r\n\r\nfunction CategoriesDisplay({categories}){\r\n    return(\r\n        categories != null &&\r\n        <Box component=\"ul\"  style={{\r\n            display: 'flex',\r\n            justifyContent: 'left',\r\n            flexWrap: 'wrap',\r\n            listStyle: 'none',\r\n            padding: '0px'\r\n        }}>\r\n            {categories.map((data, index) => {\r\n                return (\r\n                    <li key={index}>\r\n                        <Chip\r\n                            variant=\"outlined\"\r\n                            style={{margin: \"5px\"}}\r\n                            label={data.name}\r\n                        />\r\n                    </li>\r\n\r\n                );\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction SubheaderDisplay({city, address, priceRange, rating}){\r\n    return(\r\n        <div>\r\n            {rating != null &&\r\n            <Fragment><Rating\r\n                readOnly={true}\r\n                value={rating}\r\n            /><br/></Fragment>}\r\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ApiPlaceCard({classes, placeData, renderActionArea}){\r\n\r\n    function truncateText(text){\r\n        if(text == null)\r\n            return \"\"\r\n        if(text.length > 500){\r\n            return text.substring(0, 500) + \"...\";\r\n        }else{\r\n            return text\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                action={\r\n                    renderActionArea != null && renderActionArea()\r\n                }\r\n                title={placeData.name}\r\n                subheader={<SubheaderDisplay  city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\r\n\r\n            />\r\n            {placeData.photos != null && placeData.photos.length > 0 &&\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={placeData.photos[0].url}\r\n            />}\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {truncateText(placeData.description)}\r\n                </Typography>\r\n\r\n                <CategoriesDisplay categories={placeData.categories}/>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n                {placeData.website}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nApiPlaceCard.propTypes = {\r\n    placeData: PropTypes.object.isRequired,\r\n    renderActionArea: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(ApiPlaceCard)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport {debounce} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: theme.spacing(2)\r\n        // width: 400,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    divider: {\r\n        // height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function SearchInputComponent({hint, searchCallback}) {\r\n    const classes = useStyles();\r\n\r\n    const debouncedInput = (event) => {\r\n        searchCallback(event.target.value)\r\n    }\r\n\r\n    const debounceInput = debounce(event => debouncedInput(event), 500)\r\n\r\n    const handleInput = (event) => {\r\n        event.persist()\r\n        debounceInput(event)\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder={hint}\r\n                inputProps={{ 'aria-label': hint }}\r\n                onChange={handleInput}\r\n            />\r\n            <IconButton className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n        </Paper>\r\n    );\r\n}","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\"\r\nimport ApiPlaceCard from \"../components/ApiPlaceCard\";\r\nimport API from \"../Networking/API\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport debounce from 'lodash/debounce'\r\nimport Masonry from \"react-masonry-component\";\r\nimport SearchInputComponent from \"../components/SearchInputComponent\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        overflow: 'scroll',\r\n        width: \"100%\",\r\n        padding: theme.spacing(1),\r\n        height:`calc(100vh - 64px)`,\r\n        paddingTop: \"9vh\",\r\n    },\r\n    topBar: {\r\n        height: \"8vh\",\r\n        position: \"absolute\",\r\n        width: \"60%\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        left: 0,\r\n        right: 0,\r\n        justifyContent: \"center\",\r\n        zIndex: 1\r\n    },\r\n    searchBox: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    placeApiCard: {\r\n        [theme.breakpoints.down('lg')]: {\r\n            width: \"95%\",\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: \"28vw\",\r\n        },\r\n        // minWidth: \"400px\",\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nfunction ApiPlaces({classes}){\r\n\r\n    const [data, setData] = useState([]);\r\n    const [isLoadingData, setIsLoadingData] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const loadDataFunc = (query) => {\r\n        setData([])\r\n        setIsLoadingData(true)\r\n        API.Places.searchApiPlaces(\"?keyword=\" + encodeURI(query)).then(response => {\r\n            setData([...response])\r\n        }).catch(error => {\r\n            addConfig(false, \"The request did not go through.\")\r\n        }).finally(() => {\r\n            setIsLoadingData(false)\r\n        })\r\n    }\r\n\r\n    const handleSearch = (word) => {\r\n        if(word.length > 3)\r\n            loadDataFunc(word)\r\n    }\r\n\r\n    return(\r\n        <div style={{position: \"relative\"}}>\r\n            <div className = {classes.topBar}>\r\n                <SearchInputComponent searchCallback={handleSearch} hint=\"Search api places\" style={classes.searchBox} />\r\n            </div>\r\n\r\n            <div className={classes.root}>\r\n                <Masonry\r\n                    style={{margin: \"0 auto\"}}\r\n                    elementType={'div'} // default 'div'\r\n                    options={{\r\n                        isFitWidth: true\r\n                    }} // default {}\r\n                    disableImagesLoaded={false} // default false\r\n                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\r\n                >\r\n\r\n                    {data.map(item => {\r\n                        return <ApiPlaceCard classes ={{ root: classes.placeApiCard}} key={item.placeId} placeData = {item} style={{boxSizing: 'border-box'}}/>\r\n                    })}\r\n\r\n                    {\r\n                        data.length === 0 && !isLoadingData &&\r\n                        <Typography variant=\"subtitle1\">No results</Typography>\r\n                    }\r\n                    {\r\n                        isLoadingData &&\r\n                        <CircularProgress  />\r\n                    }\r\n\r\n                </Masonry>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ApiPlaces)","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {'Copyright © '}\r\n            Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: '100vh',\r\n    },\r\n    main: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: 'auto',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n    },\r\n}));\r\n\r\nexport default function NotFoundPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\r\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\r\n                    Page not found\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    {'Try something else'}\r\n                </Typography>\r\n            </Container>\r\n            <footer className={classes.footer}>\r\n                <Container maxWidth=\"sm\">\r\n                    <Copyright />\r\n                </Container>\r\n            </footer>\r\n        </div>\r\n    );\r\n}","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst styles = theme => ({\r\n    cardRoot: {\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            display: 'flex',\r\n            // alignItems: \"flex-start\"\r\n        },\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 5\r\n    },\r\n    content: {\r\n        flex: '1 0 auto',\r\n    },\r\n    cover: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            height: \"200px\",\r\n        },\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            flex: 1,\r\n            height: \"auto\",\r\n        },\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\"\r\n    },\r\n    addParkingWrapper: {\r\n        display: \"inline-block\"\r\n    }\r\n})\r\n\r\n\r\nfunction TourPlaceComponent({classes, elementData, removeCallback, addTransportCallback, displayNoTransportWarning}) {\r\n\r\n    function truncateText(text) {\r\n        if (text == null)\r\n            return \"\"\r\n        if (text.length > 500) {\r\n            return text.substring(0, 500) + \"...\";\r\n        } else {\r\n            return text\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card className={classes.cardRoot}>\r\n\r\n                {elementData.data.details.photos != null && elementData.data.details.photos.length > 0 &&\r\n                <CardMedia\r\n                    className={classes.cover}\r\n                    image={elementData.data.details.photos[0].url}\r\n\r\n                />\r\n                }\r\n\r\n                <div className={classes.details}>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                            {elementData.data.details.name}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                            {truncateText(elementData.data.details.description)}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </div>\r\n                <CardHeader\r\n                    action={\r\n                        <IconButton aria-label=\"remove\" onClick={() => removeCallback(elementData)}>\r\n                            <RemoveIcon/>\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </Card>\r\n\r\n            {displayNoTransportWarning &&\r\n            <Alert severity=\"error\">No transport from this place specified</Alert>}\r\n\r\n            <div className={classes.addParkingWrapper}>\r\n                <Button style={{display: \"inline\"}} color=\"secondary\" onClick={() => addTransportCallback(elementData)}>\r\n                    <AddIcon/>\r\n                </Button>\r\n                <Typography style={{display: \"inline\"}} variant=\"subtitle1\">\r\n                    Add transport from this place\r\n                </Typography>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nTourPlaceComponent.propTypes = {\r\n    elementData: PropTypes.object.isRequired,\r\n    removeCallback: PropTypes.func.isRequired,\r\n    addTransportCallback: PropTypes.func.isRequired,\r\n    displayNoTransportWarning: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles)(TourPlaceComponent)\r\n","import React, {createRef, useCallback, useEffect, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MetroIcon from '@material-ui/icons/DirectionsTransit';\r\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\r\nimport CarIcon from '@material-ui/icons/DriveEta';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\nimport FlightIcon from '@material-ui/icons/Flight';\r\nimport TramIcon from '@material-ui/icons/Tram';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\"\r\n    },\r\n    transportSelectWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    transportSelect: {\r\n        marginLeft: theme.spacing(1),\r\n        width: \"100px\"\r\n    }\r\n});\r\n\r\nconst transportTypes = [\r\n    {\r\n        icon: <DirectionsWalkIcon/>,\r\n        label: \"Walk\"\r\n    },\r\n    {\r\n        icon: <MetroIcon/>,\r\n        label: \"Metro\"\r\n    },\r\n    {\r\n        icon: <DirectionsBikeIcon/>,\r\n        label: \"Bike\"\r\n    },\r\n    {\r\n        icon: <DirectionsBusIcon/>,\r\n        label: \"Bus\"\r\n    },\r\n    {\r\n        icon: <CarIcon/>,\r\n        label: \"Car\"\r\n    },\r\n    {\r\n        icon: <TrainIcon/>,\r\n        label: \"Train\"\r\n    },\r\n    {\r\n        icon: <FlightIcon/>,\r\n        label: \"Plane\"\r\n    },\r\n    {\r\n        icon: <TramIcon/>,\r\n        label: \"Tram\"\r\n    }\r\n]\r\n\r\nfunction TransportItem({classes, transportId, transportChangeCallback, transportRemoveCallback}) {\r\n\r\n    const [currentTransport, setCurrentTransport] = useState(transportId == null ? 0 : transportId)\r\n\r\n    const handleTransportChange = (e) => {\r\n        setCurrentTransport(e.target.value)\r\n        transportChangeCallback({transport: parseInt(e.target.value)})\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MoreVertIcon/>\r\n            <div className={classes.transportSelectWrapper}>\r\n                {transportTypes[currentTransport].icon}\r\n                <FormControl className={classes.transportSelect} >\r\n                    <NativeSelect\r\n                        value={currentTransport}\r\n                        onChange={handleTransportChange}\r\n                    >\r\n                        {transportTypes.map((item, index) => {\r\n                            return <option key={index} value={index}> {item.label}</option>\r\n                        })}\r\n                    </NativeSelect>\r\n                </FormControl>\r\n                <IconButton aria-label=\"remove\" onClick={() => transportRemoveCallback()}>\r\n                    <RemoveIcon />\r\n                </IconButton>\r\n            </div>\r\n            <MoreVertIcon/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TransportItem)","import {withStyles} from \"@material-ui/core/styles\";\r\nimport TourPlaceComponent from \"./TourPlaceComponent\";\r\nimport React, {useEffect, useMemo} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ElementType} from \"./Tour\";\r\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport TransportItem from \"./TransportItem\";\r\nimport shortid from 'shortid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst styles = theme => ({\r\n    tourPlaceComponent: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\",\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst TourPlaceSortable = SortableElement(({displayNoTransportWarning, elementData, removePlaceCallback, classes, addTransportCallback}) => (\r\n    <div>\r\n        <TourPlaceComponent removeCallback={removePlaceCallback} classes={{root: classes.tourPlaceComponent}}\r\n                            addTransportCallback={addTransportCallback} elementData={elementData}\r\n                            displayNoTransportWarning={displayNoTransportWarning}/>\r\n    </div>\r\n));\r\nconst TransportItemSortable = SortableElement(({transportId, transportChangeCallback, transportRemoveCallback}) => (\r\n    <div>\r\n        <TransportItem transportId={transportId} transportRemoveCallback={transportRemoveCallback} transportChangeCallback={transportChangeCallback}/>\r\n    </div>\r\n));\r\n\r\nconst SortableList = SortableContainer(({currentDay, removeElementCallback, tourInfo, classes, addTransportCallback, transportChangeCallback}) => {\r\n\r\n    const shouldDisplayNoTransportWarning = (index) => {\r\n        let elements = tourInfo.days[currentDay].tour\r\n        return ((elements.length -1 ) > index) && elements[index + 1].type !== ElementType.transport\r\n    }\r\n\r\n    return (\r\n\r\n        <ul>\r\n            {tourInfo.days[currentDay].tour.map((item, index) => {\r\n\r\n                switch (item.type) {\r\n                    case ElementType.place:\r\n                        return <TourPlaceSortable key={item.data.details.placeId} index={index}\r\n                                                  addTransportCallback={addTransportCallback} elementData={item}\r\n                                                  classes={classes}\r\n                                                  displayNoTransportWarning={shouldDisplayNoTransportWarning(index)}\r\n                                                  removePlaceCallback={() => removeElementCallback(index)}/>\r\n                    case ElementType.transport:\r\n                        return <TransportItemSortable key={item.data.elementIdentifier} index={index}\r\n                                                      transportId={item.data.transport}\r\n                                                      transportRemoveCallback = {() => removeElementCallback(index)}\r\n                                                      transportChangeCallback={(transport) => transportChangeCallback(index, transport)}/>\r\n                }\r\n            })}\r\n        </ul>\r\n    )\r\n});\r\n\r\nfunction TourPlacesWrapper({classes, tourInfo, tourInfoReducer, currentDay, errorInfo, setErrorInfo}) {\r\n\r\n    const removeElementCallback = (index) => {\r\n        tourInfoReducer({\r\n            type: 'REMOVE_ELEMENT',\r\n            day: currentDay,\r\n            index: index\r\n        })\r\n    };\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        tourInfoReducer({\r\n            type: 'MOVE_ELEMENT',\r\n            day: currentDay,\r\n            oldIndex: oldIndex,\r\n            newIndex: newIndex\r\n        })\r\n    }\r\n\r\n    const handleTransportChange = (index, data) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_ELEMENT',\r\n            day: currentDay,\r\n            index: index,\r\n            data: data\r\n        })\r\n    }\r\n\r\n    const addTransportCallback = (details) => {\r\n        tourInfoReducer({\r\n            type: 'INSERT_TRANSPORT_FOR_PLACE',\r\n            placeId: details.data.details.placeId,\r\n            day: currentDay,\r\n            data: {type: ElementType.transport, data: {transport: 0, elementIdentifier: shortid.generate()}}\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(tourInfo.days[currentDay].tour)\r\n    }, [tourInfo])\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {tourInfo.days[currentDay].tour.length === 0 &&\r\n            <Alert severity=\"warning\">You have not added any places for the currently selected day.</Alert>}\r\n            <SortableList\r\n                pressDelay={200}\r\n                disableAutoscroll={false}\r\n                currentDay={currentDay}\r\n                tourInfo={tourInfo}\r\n                transportChangeCallback={handleTransportChange}\r\n                onSortEnd={onSortEnd}\r\n                classes={classes}\r\n                addTransportCallback={addTransportCallback}\r\n                removeElementCallback={removeElementCallback}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nTourPlacesWrapper.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourPlacesWrapper)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport SearchInputComponent from \"../SearchInputComponent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\nimport DnsIcon from \"@material-ui/icons/Dns\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport API from \"../../Networking/API\";\r\n\r\nconst styles = theme => ({\r\n    searchInputComponent: {\r\n\r\n    },\r\n    placeCard: {\r\n        margin: theme.spacing(1, 8, 1, 8),\r\n    },\r\n})\r\n\r\n\r\nfunction PlaceSearch({classes, addPlaceCallback, apiPlacesFound, setApiPlacesFound, localPlacesFound, setLocalPlacesFound}) {\r\n\r\n    const [apiPlacesLoading, setApiPlacesLoading] = useState(false)\r\n    const [localPlacesLoading, setLocalPlacesLoading] = useState(false)\r\n\r\n    const placeType = {\r\n        local: 0,\r\n        api: 1\r\n    }\r\n\r\n    const generatePlaceCards = () => {\r\n        let genProps = (placeInfo, type) => {\r\n            return {\r\n                classes: {root: classes.placeCard},\r\n                key: placeInfo.placeId,\r\n                renderActionArea: () => {\r\n                    return (\r\n                        <div>\r\n                            <Button color=\"primary\" onClick={() => addPlaceCallback(placeInfo, type)}>\r\n                                <AddIcon/>\r\n                            </Button>\r\n                            <Tooltip title={type === placeType.local ? \"This place is from our database\" : \"This place is from API\"} aria-label=\"add\">\r\n                                {type === placeType.local ? <LocalLibraryIcon/> : <DnsIcon/>}\r\n                            </Tooltip>\r\n                        </div>\r\n                    )\r\n                },\r\n                placeData : placeInfo\r\n            }\r\n        }\r\n\r\n        let mappedPlaces = []\r\n        localPlacesFound.forEach(item => {\r\n            mappedPlaces.push(<ApiPlaceCard {...genProps(item, placeType.local)}/>)\r\n        })\r\n        apiPlacesFound.forEach(item => {\r\n            mappedPlaces.push( <ApiPlaceCard {...genProps(item, placeType.api)}/>)\r\n        })\r\n        return mappedPlaces\r\n    }\r\n\r\n    const searchCallback = (keyword) => {\r\n        if(keyword.length < 3)\r\n            return;\r\n        setLocalPlacesFound([])\r\n        setApiPlacesFound([])\r\n        setApiPlacesLoading(true)\r\n        setLocalPlacesLoading(true)\r\n        API.Places.getAllPlacesAdmin(\"?keyword=\" + keyword).then(response=>{\r\n            setLocalPlacesFound(response.list)\r\n            setLocalPlacesLoading(false)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n\r\n        API.Places.searchApiPlaces(\"?keyword=\" + keyword).then(response => {\r\n            setApiPlacesFound(response)\r\n            setApiPlacesLoading(false)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <SearchInputComponent hint=\"Search for a place\" searchCallback={searchCallback} className={classes.searchInputComponent}/>\r\n            {(localPlacesLoading || apiPlacesLoading) ?\r\n                <CircularProgress  /> :\r\n                <React.Fragment>\r\n                    {generatePlaceCards()}\r\n                </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PlaceSearch)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    radioButtonArea: {\r\n    },\r\n    cardArea: {\r\n        flex: 1,\r\n        display: \"flex\"\r\n    },\r\n    content: {\r\n        flex: '1 1 auto',\r\n    },\r\n    descriptionInput: {\r\n        marginTop: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    },\r\n    headerWrap: {}\r\n})\r\n\r\nfunction DayCard({classes, onSelectCallback, index, currentDay, tourInfoReducer, description, handleRemoveDay}) {\r\n\r\n    const updateDescriptionGlobally = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_DAY',\r\n            day: index,\r\n            data: {\r\n                description: e\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.radioButtonArea}>\r\n                <Radio checked={index === currentDay} onChange={(e) => {\r\n                    onSelectCallback(index)\r\n                }}/>\r\n            </div>\r\n            <Card className={classes.cardArea}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        Day {index + 1}\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                        className={classes.descriptionInput}\r\n                        multiline\r\n                        label=\"Description\"\r\n                        value={description}\r\n                        variant=\"outlined\"\r\n                        onChange={(e) => {\r\n                            updateDescriptionGlobally(e.target.value)\r\n                        }}\r\n                    />\r\n                </CardContent>\r\n                <CardHeader\r\n                    action={\r\n                        <Button startIcon={<RemoveIcon/>} aria-label=\"remove\" onClick={() => handleRemoveDay(index)}/>\r\n                    }\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nDayCard.propTypes = {\r\n    onSelectCallback: PropTypes.func.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DayCard)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport DayCard from \"./DayCard\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport shortid from 'shortid';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    addDayButton: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    footerWrapper: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n})\r\n\r\nconst DayCardSortable = SortableElement(({dayInfo, day, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => (\r\n    <DayCard\r\n        description={dayInfo.description}\r\n        currentDay={currentDay}\r\n        index={day}\r\n        handleRemoveDay={removeDayCallback}\r\n        onSelectCallback={onSelectCallback}\r\n        tourInfoReducer={tourInfoReducer}/>\r\n));\r\n\r\nconst SortableList = SortableContainer(({elements, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => {\r\n\r\n    return (\r\n        <ul style={{padding: \"0px\"}}>\r\n            {elements.map((item, index) => {\r\n                return <DayCardSortable\r\n                    currentDay={currentDay}\r\n                    day={index}\r\n                    index={index}\r\n                    removeDayCallback={removeDayCallback}\r\n                    key={item.elementIdentifier}\r\n                    dayInfo={item}\r\n                    onSelectCallback={onSelectCallback}\r\n                    tourInfoReducer={tourInfoReducer}/>\r\n            })}\r\n        </ul>\r\n    );\r\n});\r\n\r\nfunction DaysWrapper({classes, currentDay, setCurrentDay, tourInfo, tourInfoReducer}) {\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    const handleSelect = (index) => {\r\n        setCurrentDay(index)\r\n    }\r\n\r\n    const addDayHandler = () => {\r\n        tourInfoReducer({\r\n            type: 'ADD_DAY',\r\n            data: {\r\n                description: \"\",\r\n                elementIdentifier: shortid.generate(),\r\n                tour: []\r\n            }\r\n        })\r\n    }\r\n\r\n    const removeDay = (day) => {\r\n        tourInfoReducer({\r\n                type: 'REMOVE_DAY',\r\n                day: day,\r\n            }\r\n        )\r\n        if(day === currentDay)\r\n            setCurrentDay(day - 1)\r\n    }\r\n\r\n    const removeDayCallback = (day) => {\r\n        if(tourInfo.days.length === 1){\r\n            addAlertConfig(\"Warning\", \"The tour has to have at least one day\", [])\r\n        }else{\r\n            if(tourInfo.days[day].tour.length > 0){ //This day has at least one place/transport added to it\r\n                addAlertConfig(\"Warning\", \"Are you sure you want to remove this day?\",[{name: \"yes\", action: ()=>{\r\n                    removeDay(day)\r\n                    }}],() => {\r\n                })\r\n            }else removeDay(day)\r\n        }\r\n    }\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        tourInfoReducer({\r\n            type: 'MOVE_DAY',\r\n            oldIndex: oldIndex,\r\n            newIndex: newIndex\r\n        })\r\n        setCurrentDay(newIndex)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <SortableList\r\n                pressDelay={200}\r\n                disableAutoscroll={false}\r\n                elements={tourInfo.days}\r\n                currentDay={currentDay}\r\n                onSortEnd={onSortEnd}\r\n                removeDayCallback={removeDayCallback}\r\n                onSelectCallback={handleSelect}\r\n                tourInfoReducer={tourInfoReducer}/>\r\n            <div className={classes.footerWrapper}>\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    className={classes.addDayButton}\r\n                    onClick={addDayHandler}\r\n                    startIcon={<AddIcon/>}>\r\n                    Add another day\r\n                </Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nDaysWrapper.propTypes = {\r\n    setCurrentDay: PropTypes.func.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    tourInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DaysWrapper)\r\n","import {arrayMove} from \"react-sortable-hoc\";\r\nimport {array} from \"prop-types\";\r\nimport {ElementType} from \"./Tour\";\r\n\r\nexport default function TourDataReducer(state, action) {\r\n\r\n    let days = []\r\n\r\n    switch (action.type) {\r\n        case 'ADD_ELEMENT':\r\n            if(state.days !== null && action.data.type === ElementType.place && state.days.some(day => day.tour !== null && day.tour.some(place => place.type === ElementType.place && place.data.details.placeId === action.data.data.details.placeId))){\r\n                if(action.onError !== null && action.onError !== undefined){\r\n                    action.onError()\r\n                }\r\n                return state\r\n            }\r\n\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    days.push({\r\n                        ...item,\r\n                        tour: [\r\n                            ...item.tour,\r\n                            action.data\r\n                        ]\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'UPDATE_ELEMENT':\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    let tour = item.tour\r\n                    tour[action.index] = {...tour[action.index], data: {...tour[action.index].data, ...action.data}}\r\n                    days.push({\r\n                        ...item,\r\n                        tour: tour\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'INSERT_TRANSPORT_FOR_PLACE':\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    let tour = item.tour\r\n                    let index = tour.findIndex((item) => item.type === ElementType.place && item.data.details.placeId === action.placeId)\r\n                    tour.splice(index + 1, 0, action.data)\r\n                    days.push({\r\n                        ...item,\r\n                        tour: tour\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'ADD_DAY':\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...state.days,\r\n                    action.data\r\n                ]\r\n            }\r\n        case 'MOVE_DAY':\r\n            return {\r\n                ...state,\r\n                days: arrayMove(state.days, action.oldIndex, action.newIndex)\r\n            }\r\n        case 'MOVE_ELEMENT':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day)\r\n                    return {...item, tour: arrayMove(item.tour, action.oldIndex, action.newIndex)}\r\n                else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'UPDATE_DAY':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day) {\r\n                    return {...item, ...action.data}\r\n                } else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'REMOVE_ELEMENT':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day)\r\n                    return {...item, tour: item.tour.filter((value, index) => index !== action.index)}\r\n                else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'REMOVE_DAY':\r\n            days = state.days.filter((item, index) => index !== action.day)\r\n            return {\r\n                ...state,\r\n                days: days\r\n            }\r\n        case 'UPDATE_TOUR':\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case 'SET_ALL':\r\n            return action.data\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport PropTypes from \"prop-types\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(4),\r\n    },\r\n    nameField: {\r\n        width: \"100%\"\r\n    },\r\n    descriptionField: {\r\n        marginTop: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    },\r\n    publicityDiv: {\r\n        width: \"100%\",\r\n\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2),\r\n        color: \"#ffffff\"\r\n    },\r\n});\r\n\r\nfunction TourInfoComponent({classes, tourInfo, tourInfoReducer, errorInfo, setErrorInfo, availableTags, selectedTags, setSelectedTags, setAvailableTags, tourId}) {\r\n\r\n    const handleDescriptionChange = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data: {description: e.target.value}\r\n        })\r\n    }\r\n    const handleTitleChange = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {name: e.target.value}\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(tourInfo.name === \"\")\r\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: true}}})\r\n        else\r\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: false}}})\r\n    }, [tourInfo.name])\r\n\r\n    let shouldDisplayTitleMissingError = errorInfo.showErrors && errorInfo.errors.titleMissing\r\n\r\n    const verifyTour = () => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {isVerified: true}\r\n        })\r\n    }\r\n\r\n    const publishTour = () => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {isPublished: !tourInfo.isPublished}\r\n        })\r\n\r\n    }\r\n\r\n    const ColorButton = withStyles((theme) => ({\r\n        root: {\r\n            color: \"white\",\r\n            backgroundColor: green[500],\r\n            '&:hover': {\r\n                backgroundColor: green[700],\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField label=\"Tour name\"\r\n                       variant=\"outlined\"\r\n                       error={shouldDisplayTitleMissingError}\r\n                       helperText={shouldDisplayTitleMissingError ? \"Please provide a title for your tour\" : \"\"}\r\n                       value={tourInfo.name}\r\n                       onChange={handleTitleChange}\r\n                       defaultValue=\"My tour name\" className={classes.nameField}/>\r\n            <TextField\r\n                className={classes.descriptionField}\r\n                multiline\r\n                label=\"Description\"\r\n                value={tourInfo.description}\r\n                variant=\"outlined\"\r\n                onChange={handleDescriptionChange}\r\n            />\r\n            <br/><br/>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n                Tags for this tour\r\n            </Typography>\r\n            <AutoCompleteChip\r\n                options={availableTags}\r\n                id=\"tagId\"\r\n                setOptions={setAvailableTags}\r\n                setSelectedOptions={setSelectedTags}\r\n                selectedOptions={selectedTags}\r\n            />\r\n\r\n            {tourId !== undefined &&\r\n                <div className={classes.publicityDiv}>\r\n                    {tourInfo.isVerified ?\r\n                        <div>\r\n                            <FormControlLabel\r\n                                control={<Switch checked={tourInfo.isPublished} onChange={publishTour} name=\"isPublic\"/>}\r\n                                label=\"Make this tour public?\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                    <ColorButton\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={verifyTour}\r\n                        className={classes.button}\r\n                    >\r\n                        Verify tour\r\n                    </ColorButton>\r\n                    }\r\n\r\n\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTourInfoComponent.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    availableTags: PropTypes.array.isRequired,\r\n    setAvailableTags: PropTypes.func.isRequired,\r\n    selectedTags: PropTypes.array.isRequired,\r\n    setSelectedTags: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourInfoComponent)","import React, {useContext, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes, {func} from \"prop-types\";\r\nimport {withGoogleMap, GoogleMap, Marker, Circle, InfoWindow, DirectionsRenderer} from \"react-google-maps\"\r\nimport {ElementType} from \"./Tour\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FilterBlock from \"../add_place_components/FilterBlock\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport CustomControlsManager from \"../maps/CustomControlsManager\";\r\nimport API from \"../../Networking/API\";\r\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst google = window.google;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(4),\r\n    }, cover: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            height: \"200px\",\r\n        },\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            flex: 1,\r\n            height: \"auto\",\r\n        },\r\n    },\r\n    largeIcon: {\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n    },\r\n});\r\n\r\n\r\n/**\r\n * Tours map component\r\n * @type {React.ComponentClass<WithGoogleMapProps>}\r\n */\r\nconst MyMapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        ref={props.refMap}\r\n        defaultZoom={8}\r\n        defaultCenter={{lat: 55.2983804, lng: 23.9132164}}>\r\n        {props.children}\r\n    </GoogleMap>\r\n);\r\n\r\nfunction changeCirclePos(refMap, setCircleCenter){\r\n    setCircleCenter({\r\n        lat: refMap.current.getCenter().lat(),\r\n        lng: refMap.current.getCenter().lng()\r\n    })\r\n}\r\n\r\nfunction TourMap({classes, tourInfo, currentDay, addPlace, removePlace}) {\r\n\r\n    const [center, setCenter] = useState({lat: 55.2983804, lng: 23.9132164});\r\n    const [circleCenter, setCircleCenter] = useState({lat: 55.2983804, lng: 23.9132164});\r\n\r\n    const [directions, setDirection] = useState();\r\n    const [infoWindows, setInfoWindows] = useState([]);\r\n    const [directionPlaces, setDirectionPlaces] = useState([]);\r\n\r\n    const [places, setPlaces] = useState([]);\r\n    const [placesInfoWindows, setPlacesInfoWindows] = useState([]);\r\n\r\n    const [loadingArea, setLoadingArea] = useState(false);\r\n\r\n    const refMap = useRef(null);\r\n\r\n    const {filterQuery} = useContext(PlacesFilterContext);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const constructPlaceData = () => {\r\n        let p = tourInfo.days[currentDay].tour.filter(item => item.type === ElementType.place);\r\n        let places = [];\r\n        p.forEach(item => {\r\n            let placeId = item.data.details.placeId;\r\n            let lat = item.data.details.latitude;\r\n            let lng = item.data.details.longitude;\r\n            let name = item.data.details.name;\r\n            let photos = item.data.details.photos;\r\n            places.push({placeId: placeId, latitude: lat, longitude: lng, name: name, photo: photos.length > 0 ? photos[0].url : null});\r\n        });\r\n        setInfoWindows(Array(places.length).fill(false))\r\n        setDirectionPlaces(places);\r\n        return places\r\n    };\r\n\r\n    useEffect(() => {\r\n        const places = constructPlaceData();\r\n        if(places.length>1){\r\n            const waypoints = places.map(p =>({\r\n                location: {lat: p.latitude, lng:p.longitude},\r\n                stopover: true\r\n            }));\r\n\r\n            waypoints.map(row=>{\r\n                console.log(row);\r\n            })\r\n            const origin = waypoints.shift().location;\r\n            let destination = null;\r\n\r\n            if (waypoints.length > 0)\r\n                destination = waypoints.pop().location;\r\n            else\r\n                destination = origin;\r\n\r\n            const directionsService = new google.maps.DirectionsService();\r\n\r\n\r\n            console.log(\"Origin\", origin);\r\n            console.log(\"Waypoints\",waypoints);\r\n            console.log(\"Destination\", destination);\r\n\r\n            directionsService.route(\r\n                {\r\n                    origin: origin,\r\n                    destination: destination,\r\n                    travelMode: google.maps.TravelMode.DRIVING,\r\n                    waypoints: waypoints\r\n                },\r\n                (result, status) => {\r\n                    if (status === google.maps.DirectionsStatus.OK) {\r\n                        setDirection(result)\r\n                    } else {\r\n                        alert(status);\r\n                    }\r\n                }\r\n            );\r\n        } else {\r\n            setDirection(null)\r\n        }\r\n    }, [currentDay, tourInfo.days]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"Loading area\",loadingArea)\r\n        if(!loadingArea){\r\n            getAllPlaces(filterQuery + \"&p=\" + 0 + \"&s=\" + 100 + \"&l=\" + center.lat + \",\" + center.lng + \"range=\" + 50)\r\n        }\r\n    }, [filterQuery, center]);\r\n\r\n    useEffect(()=>{\r\n        removeSelectedPlaces(places)\r\n    },[directionPlaces]);\r\n\r\n    function removeSelectedPlaces(places) {\r\n        let plc = [];\r\n        for(var i = 0; i<places.length; i++){\r\n            var found = false;\r\n            for(var j = 0; j<directionPlaces.length; j++){\r\n                if(places[i].latitude === directionPlaces[j].latitude && places[i].longitude === directionPlaces[j].longitude){\r\n                    found = true\r\n                }\r\n            }\r\n            if(!found){\r\n                plc.push(places[i]);\r\n\r\n            }\r\n        }\r\n        setPlaces(plc)\r\n    }\r\n\r\n    function getAllPlaces(query) {\r\n        setLoadingArea(true);\r\n        API.Places.getAllPlacesAdmin(query).then(locations => {\r\n            setPlacesInfoWindows(Array(locations.list.length).fill(false));\r\n            removeSelectedPlaces(locations.list);\r\n            setLoadingArea(false)\r\n        }).catch(err => {\r\n            console.log(err);\r\n            setLoadingArea(false)\r\n        })\r\n    }\r\n\r\n    function addPlaceToTourDay(place) {\r\n        setPlacesInfoWindows(Array(places.length).fill(false));\r\n        addPlace(place, ElementType.place)\r\n    }\r\n\r\n    function removePlaceFromTourDay(place) {\r\n        tourInfo.days[currentDay].tour.map((row, index)=>{\r\n            if(row.type === ElementType.place){\r\n                if(row.data.details.placeId === place.placeId){\r\n                    removePlace(index)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Renders places markers on the map\r\n     * @return {*[]}\r\n     */\r\n    function PlacesMarkers() {\r\n        return places.map((location, i) => {\r\n            const latitude = parseFloat(location.latitude);\r\n            const longitude = parseFloat(location.longitude);\r\n            return <Marker\r\n                key={location.placeId}\r\n                position={{lat: latitude, lng: longitude}}\r\n                onClick={() => {\r\n                    let markers = Object.assign({}, placesInfoWindows);\r\n                    markers[i] = true;\r\n                    setPlacesInfoWindows(markers)\r\n                }}\r\n            >\r\n                {placesInfoWindows[i] && (\r\n                    <InfoWindow onCloseClick={() => {\r\n                        let markers = Object.assign({}, placesInfoWindows);\r\n                        markers[i] = false;\r\n                        setPlacesInfoWindows(markers)\r\n                    }\r\n                    }>\r\n                        <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                            <Typography variant=\"h6\">\r\n                                {location.name}\r\n                            </Typography>\r\n\r\n                            <Button\r\n                                onClick={()=>{addPlaceToTourDay(location)}}\r\n                                variant=\"text\"\r\n                                color=\"secondary\"\r\n                                size=\"large\"\r\n                                startIcon={<AddIcon/>}>\r\n                                Add this place to tour!\r\n                            </Button>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )}\r\n            </Marker>\r\n        })\r\n    }\r\n\r\n\r\n    const searchAreaComponent = useMemo(() => (\r\n        <CustomControlsManager position={window.google.maps.ControlPosition.TOP_CENTER}>\r\n            <div>\r\n                {loadingArea ?\r\n                    <CircularProgress />\r\n                    :\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                                setCenter({\r\n                                    lat: refMap.current.getCenter().lat(),\r\n                                    lng: refMap.current.getCenter().lng()\r\n                                })\r\n                            }}\r\n                    >\r\n                        Search area...\r\n                    </Button>\r\n                }\r\n\r\n            </div>\r\n        </CustomControlsManager>\r\n    ), [loadingArea]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FilterBlock setOpen={setAnchorEl}/>\r\n            <MyMapComponent\r\n                loadingElement={<div style={{height: `100%`}}/>}\r\n                containerElement={<div style={{height: `400px`}}/>}\r\n                mapElement={<div style={{height: `100%`}}/>}\r\n                directionPlaces={directionPlaces}\r\n                infoWindows={infoWindows}\r\n                setInfoWindows={setInfoWindows}\r\n                refMap={refMap}\r\n                center={center}\r\n                circleCenter={circleCenter}\r\n                setCircleCenter={setCircleCenter}>\r\n\r\n\r\n                {searchAreaComponent}\r\n                <PlacesMarkers/>\r\n\r\n\r\n                {directions ?\r\n                    <DirectionsRenderer\r\n                        options={{suppressMarkers: true, draggable: false}}\r\n                        draggable={false}\r\n                        directions={directions}/> : null}\r\n\r\n                {directionPlaces.map((marker, index) => {\r\n                    const position = { lat: marker.latitude, lng: marker.longitude };\r\n                    return <Marker\r\n                        icon={{\r\n                            url: require('../../res/selectedTourIcon.svg'),\r\n                            scaledSize: new window.google.maps.Size(48, 48),\r\n                            origin: new window.google.maps.Point(0, 0),\r\n                            labelOrigin: new window.google.maps.Point(24, 16),\r\n                        }}\r\n                        key={index}\r\n                        position={position}\r\n                        label={{text: `${index+1}`, color: \"white\"}}\r\n                        onClick={\r\n                        ()=>{\r\n                            let info = Object.assign({}, infoWindows);\r\n                            info[index] = true;\r\n                            setInfoWindows(info);\r\n                        }\r\n                    }>\r\n                        {infoWindows[index] && (\r\n                        <InfoWindow onCloseClick={()=>{\r\n                            let info = Object.assign({}, infoWindows);\r\n                            info[index] = false;\r\n                            setInfoWindows(info);\r\n                        }}>\r\n                                <Card style={{display:\"flex\", flexDirection: \"column\",alignItems:\"center\"}}>\r\n                                    {marker.photo ?<Avatar alt=\"Remy Sharp\" src={marker.photo} className={classes.largeIcon}/> : null}\r\n\r\n                                    <Typography>\r\n                                        {marker.name}\r\n                                    </Typography>\r\n                                    <Button\r\n                                        onClick={()=>removePlaceFromTourDay(marker)}\r\n                                        style={{marginTop: 12}}\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        startIcon={<DeleteIcon />}\r\n                                    >\r\n                                        Remove from tour\r\n                                    </Button>\r\n\r\n                                </Card>\r\n                        </InfoWindow>\r\n                        )}\r\n                    </Marker>\r\n                })}\r\n\r\n            </MyMapComponent>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTourMap.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourMap)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {createRef, useCallback, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport TourPlaceComponent from \"./TourPlaceComponent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TourPlacesWrapper from \"./TourPlacesWrapper\";\r\nimport PlaceSearch from \"./PlaceSearch\";\r\nimport DaysWrapper from \"./DaysWrapper\";\r\nimport TourReducer from \"./TourReducer\";\r\nimport TourDataReducer from \"./TourReducer\";\r\nimport TourInfoComponent from \"./TourInfoComponent\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TourMap from \"./TourMap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../Networking/API\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport shortid from 'shortid';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport const ElementType = {\r\n    place: 0,\r\n    transport: 1\r\n}\r\nexport const PlaceType = {\r\n    api: 1,\r\n    local: 0\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            overflow: \"scroll\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            overflow: \"initial\",\r\n            display: \"flex\",\r\n        },\r\n        height: `calc(100% - 64px)`,\r\n        width: \"100%\",\r\n        '&::-webkit-scrollbar': {\r\n            display: \"none\"\r\n        },\r\n    },\r\n    loader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"100vw\",\r\n        height: \"100vh\"\r\n    },\r\n    rightLayout: {\r\n        flex: 2,\r\n        '&::-webkit-scrollbar': {\r\n            display: \"none\"\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            height: \"100%\",\r\n            overflowY: \"scroll\",\r\n\r\n        },\r\n    },\r\n    leftLayout: {\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            height: \"100%\",\r\n        },\r\n        overflowY: \"scroll\",\r\n\r\n        flex: 1,\r\n        '&::-webkit-scrollbar': {\r\n            display: \"none\"\r\n        },\r\n    },\r\n    actionsArea: {\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n\r\n})\r\n\r\nconst sampleTourData = {\r\n    name: \"\",\r\n    description: \"\",\r\n    isVerified: true,\r\n    isPublished: false,\r\n    days: [\r\n        {\r\n            description: \"\",\r\n            elementIdentifier: \"jkasfbjkdsbjk\",\r\n            tour: []\r\n        }\r\n    ]\r\n}\r\n\r\nfunction Tour({classes, match}) {\r\n\r\n    const [localPlacesFound, setLocalPlacesFound] = useState([])\r\n    const [apiPlacesFound, setApiPlacesFound] = useState([])\r\n    const [currentDay, setCurrentDay] = useState(0)\r\n    const [tourId, setTourId] = useState(match.params.tourId)\r\n    const [isLoading, setIsLoading] = useState(match.params.tourId !== undefined);\r\n\r\n    const [selectedTags, setSelectedTags] = useState([])\r\n    const [availableTags, setAvailableTags] = useState([])\r\n\r\n    const [errorInfo, setErrorInfo] = useState({\r\n            errors: {\r\n                titleMissing: false,\r\n                /* Any client-side verification errors may by added here, and handled in individual components */\r\n            },\r\n            showErrors: false\r\n        }\r\n    )\r\n\r\n    const [tourInfo, dispatchTourInfo] = React.useReducer(TourDataReducer, sampleTourData)\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    const handleAddPlaceClick = (placeInfo, type) => {\r\n        dispatchTourInfo({\r\n            type: 'ADD_ELEMENT',\r\n            day: currentDay,\r\n            data: {\r\n                type: ElementType.place,\r\n                data: {\r\n                    type: type,\r\n                    details: {...placeInfo}\r\n                },\r\n            },\r\n            onError: () => {\r\n                addConfig(false, \"This place already exists in this tour.\")\r\n            }\r\n        })\r\n    }\r\n\r\n    const removeElementCallback = (index) => {\r\n        dispatchTourInfo({\r\n            type: 'REMOVE_ELEMENT',\r\n            day: currentDay,\r\n            index: index\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (tourId !== undefined) { //If user wants to edit a tour, we download all tour data. loadData also downloads tags\r\n            loadData()\r\n        }else{ //Otherwise, we just download tags instead.\r\n            API.Tags.getAllTags().then(response => {\r\n                setAvailableTags(response)\r\n            }).catch(() => {\r\n                addConfig(false, \"Tags failed to load\")\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const parseTourInfoResponse = (response) => {\r\n        let aggregatedDays = [];\r\n        response.days.forEach(day => {\r\n            let aggregatedElements = [];\r\n            day.data.forEach(place => {\r\n                let aggregatedPlace = {\r\n                    type: ElementType.place,\r\n                    data: {details: place.place, type: place.place.type}\r\n                }\r\n                delete aggregatedPlace.data.details.type\r\n                aggregatedElements.push(aggregatedPlace)\r\n                place.transport.forEach(transport => {\r\n                    aggregatedElements.push({\r\n                        type: ElementType.transport,\r\n                        data: {transport: transport.fk_transportId - 1, elementIdentifier: shortid.generate()}\r\n                    })\r\n                })\r\n            })\r\n            let aggregatedDay = {...day, tour: aggregatedElements, elementIdentifier: shortid.generate()}\r\n            delete aggregatedDay.data\r\n            aggregatedDays.push(aggregatedDay)\r\n        })\r\n        let aggregatedTour = {...response, days: aggregatedDays}\r\n        dispatchTourInfo({type: 'SET_ALL', data: aggregatedTour})\r\n    }\r\n\r\n    const loadData = () => {\r\n        Promise.all([\r\n            API.Tour.getTour(\"?id=\" + tourId),\r\n            API.Tags.getAllTags(),\r\n            API.Tour.getTourTags(\"?id=\" + tourId),\r\n            ]\r\n        ).catch(() => {\r\n            addConfig(false, \"Tour has failed to load\")\r\n            setTourId(undefined)\r\n        }).then((response) => {\r\n            parseTourInfoResponse(response[0])\r\n            setAvailableTags(response[1])\r\n            setSelectedTags(response[2])\r\n        }).finally(() => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleSave = () => {\r\n        let containsErrors = false;\r\n        Object.keys(errorInfo.errors).map(function (keyName, keyIndex) {\r\n            if (errorInfo.errors[keyName]) {\r\n                setErrorInfo(state => {\r\n                    return {...state, showErrors: true}\r\n                })\r\n                containsErrors = true;\r\n            }\r\n        })\r\n        if (containsErrors) return\r\n        setErrorInfo(state => {\r\n            return {...state, showErrors: false}\r\n        })\r\n\r\n        const aggregatedDays = []\r\n        tourInfo.days.forEach(day => {\r\n            let aggregatedDay = {...day, data: []}\r\n            delete aggregatedDay.tour\r\n            delete aggregatedDay.elementIdentifier\r\n            for (let i = 0; i < day.tour.length; i++) {\r\n                let element = day.tour[i]\r\n                if (element.type !== ElementType.place)\r\n                    continue;\r\n                let transport = []\r\n                for (let j = i + 1; j < day.tour.length && day.tour[j].type === ElementType.transport; j++) {\r\n                    transport.push({fk_transportId: day.tour[j].data.transport + 1})\r\n                }\r\n                let aggregatedPlace = {\r\n                    place: {\r\n                        type: element.data.type,\r\n                        placeId: element.data.details.placeId\r\n                    },\r\n                    transport: transport\r\n                }\r\n                aggregatedDay.data.push(aggregatedPlace)\r\n            }\r\n            aggregatedDays.push(aggregatedDay)\r\n        })\r\n        let aggregatedTour = {...tourInfo, days: aggregatedDays}\r\n\r\n        if (tourId === undefined) {\r\n            API.Tour.insertTour(aggregatedTour).then((response) => {\r\n                setTourId(response)\r\n                return response\r\n            }).then((response) => Promise.all(\r\n                [\r\n                    API.Tour.updateTourTags(selectedTags, \"?p=\" + response)\r\n                ]\r\n            )).then((() => {\r\n                addConfig(true, \"Tour has been inserted successfully!\")\r\n            })).catch((error) => {\r\n                addConfig(false, \"Something went wrong while saving this tour.\")\r\n            })\r\n        } else {\r\n            Promise.all([\r\n                API.Tour.updateTour(aggregatedTour, \"?id=\" + tourId),\r\n                API.Tour.updateTourTags(selectedTags, \"?p=\" + tourId)\r\n            ])\r\n            .then(() => {\r\n                addConfig(true, \"Tour has been updated successfully!\")\r\n            }).catch((error) => {\r\n                addConfig(false, \"Something went wrong while saving this tour.\")\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n    const leftLayout = useMemo(() => (\r\n        <div className={classes.leftLayout}>\r\n            <PlaceSearch addPlaceCallback={handleAddPlaceClick} localPlacesFound={localPlacesFound}\r\n                         setLocalPlacesFound={setLocalPlacesFound} apiPlacesFound={apiPlacesFound}\r\n                         setApiPlacesFound={setApiPlacesFound}/>\r\n        </div>\r\n    ), [localPlacesFound, apiPlacesFound, currentDay])\r\n\r\n\r\n    let dayInfoWithoutDesc = JSON.stringify(tourInfo.days.map(day => {\r\n        let dayCopy = {...day}\r\n        delete dayCopy.description\r\n        return dayCopy\r\n    }))\r\n\r\n    const mapComponent = useMemo(() => (\r\n        <React.Fragment>\r\n            <TourMap tourInfo={tourInfo}\r\n                     currentDay={currentDay}\r\n                     addPlace={handleAddPlaceClick}\r\n                     removePlace={removeElementCallback}\r\n            />\r\n            <TourPlacesWrapper errorInfo={errorInfo} setErrorInfo={setErrorInfo}\r\n                               currentDay={currentDay} tourInfoReducer={dispatchTourInfo} tourInfo={tourInfo}/>\r\n        </React.Fragment>\r\n    ), [dayInfoWithoutDesc, currentDay])\r\n\r\n    const tourDaysComponents = useMemo(() => (\r\n        <div>\r\n            <DaysWrapper currentDay={currentDay} setCurrentDay={setCurrentDay} tourInfo={tourInfo}\r\n                         tourInfoReducer={dispatchTourInfo}/>\r\n            <Divider variant=\"middle\"/>\r\n            {mapComponent}\r\n\r\n        </div>\r\n    ), [tourInfo.days, currentDay, errorInfo]);\r\n\r\n    const rightLayout = useMemo(() => (\r\n        <Paper className={classes.rightLayout}>\r\n            <TourInfoComponent tourInfo={tourInfo} tourInfoReducer={dispatchTourInfo} errorInfo={errorInfo}\r\n                               setErrorInfo={setErrorInfo}\r\n                               tourId={tourId}\r\n                               setSelectedTags={setSelectedTags} selectedTags={selectedTags} availableTags={availableTags} setAvailableTags={setAvailableTags}/>\r\n            <Divider variant=\"middle\"/>\r\n            {tourDaysComponents}\r\n            <div className={classes.actionsArea}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n                    Save this tour\r\n                </Button>\r\n            </div>\r\n        </Paper>\r\n    ), [tourInfo, currentDay, errorInfo, availableTags, selectedTags]);\r\n\r\n    const theme = useTheme();\r\n    const largeScreen = useMediaQuery(theme.breakpoints.up('lg'));\r\n\r\n    const content = (\r\n        <React.Fragment>\r\n            {largeScreen ?\r\n                <React.Fragment>\r\n                    {leftLayout}\r\n                    {rightLayout}\r\n                </React.Fragment> :\r\n                <React.Fragment>\r\n                    {rightLayout}\r\n                    {leftLayout}\r\n                </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {isLoading ? <div className={classes.loader}><CircularProgress/></div> : content}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Tour)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n\r\n    sortingButtons: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n\r\n    },\r\n    root:{\r\n        height:\"100vh\",\r\n        width:\"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content:{\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Tour name', isId: true},\r\n    { id: 'description', numeric: false, disablePadding: false, label: 'Tour description',isId: false},\r\n    { id: 'lastModified', numeric: false, disablePadding: false, label: 'Date modified',isId: false},\r\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\r\n];\r\n\r\nfunction Tours(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { classes } = props;\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [filterQuery, setFilterQuery] = useState(\"\");\r\n\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    useEffect(()=>{\r\n        if(!isLoading){\r\n            getAllTours(\"?o=\"+filterQuery);\r\n        }\r\n    },[filterQuery]);\r\n\r\n    function parseData(data){\r\n        console.log(\"deita\", data.list)\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updateTourCallback(id){\r\n        history.push(\"/app/addtour/\"+id)\r\n    }\r\n    function removePlaceCallback(id){\r\n        console.log(\"tour id\", id)\r\n\r\n        addAlertConfig(Strings.DIALOG_TOUR_DELETE_TITLE, Strings.DIALOG_TOUR_DELETE_MESSAGE, [{name: \"Delete\", action: () => {\r\n                setIsLoading(true);\r\n                API.Tour.removeTour(\"?id=\"+id).then(response=>{\r\n                    let tmp = [];\r\n                    data.map(row=>{\r\n                        if(row[\"tourId\"] !== id){\r\n                            tmp.push(row)\r\n                        }\r\n                    });\r\n                    setData(tmp);\r\n                    addConfig(true, Strings.SNACKBAR_TOUR_REMOVE_SUCCESS)\r\n                    setIsLoading(false)\r\n                }).catch(error=>{\r\n                    setIsLoading(false);\r\n                    addConfig(false, Strings.SNACKBAR_ERROR)\r\n                })\r\n            }}],  ()=>{setIsLoading(false)})\r\n    }\r\n\r\n    const changePageCallback = (p=0, keyword=\"\") => {\r\n        setIsLoading(true);\r\n        getAllTours(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword+\"&o=\"+filterQuery)\r\n    };\r\n\r\n\r\n    //Sorting stuff\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let filters = [];\r\n        let fq = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n            if(row.filter){\r\n                fq.push(row.filterName)\r\n            }\r\n            filters.push(row)\r\n        });\r\n\r\n        setFilterQuery(fq.join(\",\"));\r\n        setFilterOptions(filters)\r\n    };\r\n\r\n    const customToolbarElements = () =>{\r\n        return <div>\r\n            <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                    <FilterListIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={()=>{setAnchorEl(null)}}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.sortingButtons}>\r\n                    {filterOptions.map(row=>{\r\n                        return <FormControlLabel\r\n                            control={<Checkbox checked={row.filter} onChange={()=>filterOptionsChanged(row.filterName)} name={row.filterName} />}\r\n                            label={row.filterLabel}\r\n                        />\r\n                    })}\r\n                </div>\r\n\r\n            </Popover>\r\n        </div>\r\n    };\r\n    /*------------------------------------------------------------------------------------------------------*/\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content} >\r\n                <TableComponent\r\n                    title={\"Tours\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updateTourCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    id={\"tourId\"}\r\n                    isLoading={isLoading}\r\n                    customToolbarElements={customToolbarElements()}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={()=>{history.push(\"/app/addtour\")}}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon />}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n    function getAllTours(urlParams=\"\") {\r\n        API.Tour.getAllToursAdmin(urlParams).then(response=>{\r\n            console.log(response);\r\n            parseData(response)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nTours.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Tours);","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport TableComponent from \"./TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddDialog from \"./AddDialog\";\r\nimport UseEditDialogContext from \"../contexts/UseEditDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\",\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    buttonWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        width: \"100%\",\r\n    }\r\n})\r\n\r\nconst categoriesHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Category name', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n]\r\nconst tagsHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Tag name', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n]\r\n\r\nfunction Resources({classes}) {\r\n\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addEditDialogConfig} = UseEditDialogContext();\r\n\r\n    const [loading, setIsLoading] = useState({\r\n        categories: false,\r\n        tags: false\r\n    })\r\n\r\n    const [categories, setCategories] = useState([])\r\n    const [tags, setTags] = useState([])\r\n\r\n    useEffect(() => {\r\n        setIsLoading({categories: true, tags: true})\r\n        Promise.all([\r\n                API.Categories.getAllCategories(),\r\n                API.Tags.getAllTags()\r\n            ]\r\n        ).then(response => {\r\n            setCategories(response[0])\r\n            setTags(response[1])\r\n        }).catch(() => {\r\n            addConfig(false, \"Could not retrieve data!\")\r\n        }).finally(() => {\r\n            setIsLoading(oldData => {return{ ...oldData, categories: false, tags: false}})\r\n        })\r\n    }, [])\r\n\r\n    const handleAddCategory = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add category\",\r\n            explanation: \"Type the category name\",\r\n            onDoneCallback: (text) => {\r\n               API.Categories.addCategory([{name: text}]).then((response)=>{\r\n                   addConfig(true, \"Category inserted successfully\")\r\n                   setCategories(oldData => [...oldData, {name: text, categoryId: response[0]}])\r\n                }).catch(error=>{\r\n                   addConfig(false, \"Failed to add category.\")\r\n               })\r\n            },\r\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\r\n            textFieldLabel: \"Restaurants, hiking, etc...\"\r\n        })\r\n    }\r\n\r\n    const removeCategoryCallback = (categoryId) => {\r\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\r\n        addAlertConfig(\"Warning\", \"Are you sure you want the category, named '\" + categoryName + \"'?\", [{\r\n            name: \"yes\", action: () => {\r\n                setIsLoading(oldData => {\r\n                    return {...oldData, categories: true}\r\n                })\r\n                API.Categories.removeCategory([{categoryId: categoryId}]).then(() => {\r\n                    addConfig(true, \"Category successfully removed.\")\r\n                    setCategories(oldData => oldData.filter(item => item.categoryId !== categoryId))\r\n                }).catch(() => {\r\n                    addConfig(false, \"An error has occurred while removing category.\")\r\n                }).finally(() => {\r\n                    setIsLoading(oldData => {\r\n                        return {...oldData, categories: false}\r\n                    })\r\n                })\r\n            }\r\n        }], () => {\r\n        })\r\n    }\r\n\r\n    const updateCategoryHandler = (categoryId) => {\r\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\r\n        addEditDialogConfig({\r\n            title: \"Edit category\",\r\n            explanation: \"Type the category name\",\r\n            defaultText: categoryName,\r\n            onDoneCallback: (text) => {\r\n                API.Categories.updateCategory([{name: text, categoryId: categoryId}]).then(()=>{\r\n                    addConfig(true, \"Category updated successfully\")\r\n                    setCategories(oldData => {return oldData.map(item => {\r\n                        if(item.categoryId === categoryId)\r\n                            return {...item, name: text}\r\n                        else return item\r\n                    })})\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to update category.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\r\n            textFieldLabel: \"Restaurants, hiking, etc...\"\r\n        })\r\n    }\r\n\r\n    const updateTagHandler = (id) => {\r\n        let tagName = tags.filter(item => item.tagId === id)[0].name\r\n        addEditDialogConfig({\r\n            title: \"Edit tag\",\r\n            explanation: \"Type the tag name\",\r\n            defaultText: tagName,\r\n            onDoneCallback: (text) => {\r\n                API.Tags.updateTags([{name: text, tagId: id}]).then(()=>{\r\n                    addConfig(true, \"Tag updated successfully\")\r\n                    setTags(oldData => {return oldData.map(item => {\r\n                        if(item.tagId === id)\r\n                            return {...item, name: text}\r\n                        else return item\r\n                    })})\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to update tag.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const removeTagHandler = (id) => {\r\n        let tagName = tags.filter(item => item.tagId === id)[0].name\r\n        addAlertConfig(\"Warning\", \"Are you sure you want the tag, named '\" + tagName + \"'?\", [{\r\n            name: \"yes\", action: () => {\r\n                setIsLoading(oldData => {\r\n                    return {...oldData, tags: true}\r\n                })\r\n                API.Tags.removeTags([{tagId: id}]).then(() => {\r\n                    addConfig(true, \"Tag successfully removed.\")\r\n                    setTags(oldData => oldData.filter(item => item.tagId !== id))\r\n                }).catch(() => {\r\n                    addConfig(false, \"An error has occurred while removing tag.\")\r\n                }).finally(() => {\r\n                    setIsLoading(oldData => {\r\n                        return {...oldData, tags: false}\r\n                    })\r\n                })\r\n            }\r\n        }], () => {\r\n        })\r\n    }\r\n\r\n    const handleAddTag = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add tag\",\r\n            explanation: \"Type the tag name\",\r\n            onDoneCallback: (text) => {\r\n                API.Tags.addTag([{name: text}]).then((response)=>{\r\n                    addConfig(true, \"Tag inserted successfully\")\r\n                    setTags(oldData => [...oldData, {name: text, tagId: response[0]}])\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to add tag.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const searchFunction = (keyword, item) => {\r\n        if(keyword.length < 3) return true\r\n        return item.name.includes(keyword)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n\r\n                <TableComponent\r\n                    title={\"Categories\"}\r\n                    headCells={categoriesHeadCells}\r\n                    data={categories}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateCategoryHandler}\r\n                    removeCallback={removeCategoryCallback}\r\n                    id={\"categoryId\"}\r\n                    isLoading={loading.categories}\r\n                />\r\n\r\n                <Box className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleAddCategory}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add a new category\r\n                    </Button>\r\n                </Box>\r\n\r\n                <br/>\r\n\r\n                <TableComponent\r\n                    title={\"Tags\"}\r\n                    headCells={tagsHeadCells}\r\n                    data={tags}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateTagHandler}\r\n                    removeCallback={removeTagHandler}\r\n                    id={\"tagId\"}\r\n                    isLoading={loading.tags}\r\n                />\r\n\r\n                <Box className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleAddTag}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add a new tag\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nResources.propTypes = {\r\n};\r\n\r\nexport default withStyles(styles)(Resources)\r\n","import React, {Fragment, useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Home from \"../pages/Home\";\r\nimport Places from \"../pages/Places\";\r\nimport AddPlace from \"../pages/AddPlace\";\r\nimport history from \"../helpers/history\";\r\nimport ApiPlaces from \"../pages/ApiPlaces\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport NotFoundPage from \"../pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nimport Tour from \"./tour_components/Tour\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport Tours from \"../pages/Tours\";\r\nimport Resources from \"./Resources\";\r\nimport {PlacesFilterProvider} from \"../contexts/PlacesFilterContext\";\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root1: {\r\n        overflow: \"hidden\",\r\n        display: 'flex',\r\n        height: \"100vh\",\r\n        background: \"#F1F1F1\"\r\n    },\r\n    appBar: {\r\n        height: \"64px\",\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        //padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0\r\n    },\r\n}));\r\n\r\nconst PlacesWithContext = () =>  (\r\n    <PlacesFilterProvider>\r\n        <Places/>\r\n    </PlacesFilterProvider>\r\n);\r\nconst TourWithContext = (props) =>  (\r\n    <PlacesFilterProvider>\r\n        <Tour {...props}/>\r\n    </PlacesFilterProvider>\r\n);\r\n\r\nexport default function Appbar(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const { title, setTitle } = UseAppBarTitleContext();\r\n    let location = useLocation();\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleListItemClick = (url,title) =>{\r\n        handleDrawerClose();\r\n        setTitle(title);\r\n\r\n        let re = new RegExp(url+'([0-9]*)?');\r\n        if(re.test(location.pathname)){\r\n            history.push(url);\r\n            history.go(0);\r\n        console.log(\"Ar atitinka kriterijus\",re.test(location.pathname))\r\n\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root1}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button component={Link} to=\"/app\" onClick={()=>handleListItemClick(\"/app\",\"Home\")}>\r\n                        <ListItemText>Home</ListItemText>\r\n                    </ListItem>\r\n                    <Divider light />\r\n                    <ListItem button component={Link} to=\"/app/places\" onClick={()=>handleListItemClick(\"/app/places\",\"Places\")} >\r\n                        <ListItemText>Places</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/tours\" onClick={()=>handleListItemClick(\"/app/tours\",\"Tours\")} >\r\n                        <ListItemText>Tours</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/apiplaces\" onClick={()=>handleListItemClick(\"/app/apiplaces\",\"Api places\")} >\r\n                        <ListItemText>Explore API places</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/addplace\" onClick={()=>handleListItemClick(\"/app/addplace\",\"Add Place\")} >\r\n                        <ListItemText>Add place</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/addtour\" onClick={()=>handleListItemClick(\"/app/addtour\",\"Add tour\")} >\r\n                        <ListItemText>Add tour</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/resources\" onClick={()=>handleListItemClick(\"/app/resources\",\"Manage resources\")} >\r\n                        <ListItemText>Resources</ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                <Switch>\r\n                    <Route exact path=\"/app\" component={Home} />\r\n                    <Route path=\"/app/places\" component={PlacesWithContext} />\r\n                    <Route path=\"/app/tours\" component={Tours} />\r\n                    <Route path=\"/app/addplace/:placeId?\" component={AddPlace} />\r\n                    <Route path=\"/app/apiplaces\" component={ApiPlaces} />\r\n                    <Route path=\"/app/addtour/:tourId?\" component={TourWithContext} />\r\n                    <Route path=\"/app/resources\" component={Resources} />\r\n                    <Redirect from=\"*\" to=\"/404\"/>\r\n                </Switch>\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport Appbar from './components/Appbar.js';\r\nimport AppBarTitleProvider from \"./contexts/AppBarTitleContext\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <AppBarTitleProvider>\r\n                        <Appbar />\r\n                    </AppBarTitleProvider>\r\n                    </MuiPickersUtilsProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default App;","import React, {useEffect, useState} from \"react\";\r\nimport app from \"../helpers/firebaseInit\"\r\nimport Cookies from \"js-cookie\"\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        app.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                setCurrentUser(user);\r\n                app.auth().currentUser.getIdToken(true).then(function (idToken) {\r\n                    Cookies.set(\"access_token\", idToken);\r\n                }).catch(function (error) {\r\n\r\n                });\r\n            }\r\n            setIsLoading(false)\r\n        });\r\n    },[]);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser,\r\n                isLoading\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};","import React, {useContext, useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Cookies from 'js-cookie'\r\nimport history from \"../helpers/history\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport app from \"../helpers/firebaseInit\";\r\nimport {AuthContext} from \"../contexts/AuthContext\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {isAuthenticated} from \"../helpers/tokens\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n                Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    loaderMain: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        alignItems:\"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"red\"\r\n    }\r\n}));\r\n\r\n\r\nexport default function LoginPage() {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setIsLoading] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n    const { currentUser, isLoading } = useContext(AuthContext);\r\n\r\n\r\n    const handleLogin = () =>{\r\n        setIsLoading(true);\r\n        app.auth().signInWithEmailAndPassword(email , password)\r\n            .then(function(user) {\r\n                setIsLoading(false);\r\n                app.auth().currentUser.getIdToken(true).then(function (idToken) {\r\n                    console.log(\"Getting new access token\");\r\n                    Cookies.set(\"access_token\", idToken);\r\n                    history.push(\"/app\");\r\n                }).catch(function (error) {\r\n                    addConfig(false, \"Error receiving access token\")\r\n                });\r\n            })\r\n            .catch(function(error) {\r\n                setIsLoading(false);\r\n                addConfig(false, error.message)\r\n            });\r\n    };\r\n\r\n\r\n    if (isAuthenticated()) {\r\n        return <Redirect to=\"/app\" />;\r\n    }\r\n\r\n    const handleKeyPress = (event) =>{\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            handleLogin();\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    return <Container component=\"main\" maxWidth=\"xs\" onKeyPress={(e)=>handleKeyPress(e)}>\r\n\r\n                            {loading && <LinearProgress />}\r\n                            <CssBaseline />\r\n                            <div className={classes.paper}>\r\n                                <Avatar className={classes.avatar}>\r\n                                    <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <Typography component=\"h1\" variant=\"h5\">\r\n                                    Sign in\r\n                                </Typography>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={email}\r\n                                    onChange={(e)=>{setEmail(e.target.value)}}\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    autoFocus\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    value={password}\r\n                                    onChange={(e)=>{setPassword(e.target.value)}}\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                                <Button\r\n                                    onClick={()=>{handleLogin()}}\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    Sign In\r\n                                </Button>\r\n                            </div>\r\n                            <Box mt={8}>\r\n                                <Copyright />\r\n                            </Box>\r\n                        </Container>\r\n\r\n}","import Route from \"react-router-dom/es/Route\";\r\nimport React, {useContext} from \"react\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {isAuthenticated} from \"../helpers/tokens\";\r\n\r\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                isAuthenticated() === true ? (\r\n                    <Component {...routeProps} />\r\n                ) : (\r\n                    <Redirect to={\"/login\"} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};","import React, {useState} from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\n\r\nexport default function SnackbarFeedback(props){\r\n\r\n    const { config, removeConfig } = UseSnackbarContext();\r\n\r\n    return(\r\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\r\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"error\") : \"\"}>\r\n                {!!config && config.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\"\r\n\r\nconst AlertDialogFeedback = () => {\r\n\r\n    const {alertConfig, removeAlertConfig} = UseAlertDialogContext();\r\n\r\n    function remove() {\r\n        if(alertConfig.onClose !== undefined){\r\n            alertConfig.onClose()\r\n        }\r\n        removeAlertConfig()\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={!!alertConfig}\r\n            onClose={remove}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{!!alertConfig ? alertConfig.title : \"\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {!!alertConfig ? alertConfig.message : \"\"}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={remove}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                {!!alertConfig && alertConfig.actions.map(row=>{\r\n                    return <Button onClick={()=>{\r\n                        remove();\r\n                        row.action();\r\n                    }}\r\n                    color=\"primary\"\r\n                    >\r\n                            {row.name}\r\n                    </Button>\r\n                })}\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\n\r\nexport default AlertDialogFeedback\r\n","import Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\r\n\r\n\r\nexport const TextInputDialog = () => {\r\n\r\n    const {dialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen} = UseEditDialogContext();\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [error, setError] = useState(0)\r\n\r\n    const deInit = () => {\r\n        setError(0)\r\n        setDialogOpen(false)\r\n        setInputText(\"\")\r\n    }\r\n\r\n    const handleClose = () => {\r\n        deInit()\r\n    }\r\n\r\n    const handleDone = () => {\r\n        let errorCode = dialogConfig.validateInput(inputText)\r\n        setError(errorCode)\r\n        if(errorCode !== 0) return\r\n\r\n        if(dialogConfig.onDoneCallback !== undefined)\r\n            dialogConfig.onDoneCallback(inputText)\r\n        deInit()\r\n    }\r\n    const handleInput = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={dialogOpen} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n                <DialogTitle id=\"form-dialog-title\">{dialogConfig.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {dialogConfig.explanation}\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        helperText={error !== 0 && dialogConfig.errorMessages[error] !== null ? dialogConfig.errorMessages[error] : \"\"}\r\n                        error={error !== 0}\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        onInput={handleInput}\r\n                        label={dialogConfig.textFieldLabel}\r\n                        defaultValue={dialogConfig.defaultText}\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleDone} color=\"primary\">\r\n                        Done\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport history from \"./helpers/history\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport {Router, Route, Link, Switch} from \"react-router-dom\";\r\nimport {AuthenticatedRoute} from \"./components/AuthenticatedRoute\";\r\nimport NotFoundPage from \"./pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\r\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\r\nimport AlertDialogProvider from \"./contexts/AlertDialogContext\";\r\nimport AlertDialogFeedback from \"./components/feedback/AlertDialogFeedback\";\r\nimport {AuthProvider} from \"./contexts/AuthContext\";\r\nimport {PlacesFilterProvider} from \"./contexts/PlacesFilterContext\";\r\nimport EditDialogProvider from \"./contexts/EditDialogContext\";\r\nimport {TextInputDialog} from \"./components/feedback/TextInputDialog\";\r\n\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <AuthProvider>\r\n            <Router history={history}>\r\n                <SnackbarProvider>\r\n                    <AlertDialogProvider>\r\n                        <EditDialogProvider>\r\n                            <SnackbarFeedback/>\r\n                            <AlertDialogFeedback/>\r\n                            <TextInputDialog/>\r\n                            <Switch>\r\n                                <Redirect exact from=\"/\" to=\"/app\"/>\r\n                                <AuthenticatedRoute path=\"/app\" component={App}/>\r\n                                <Route path=\"/login\" component={LoginPage}/>\r\n                                <Route path=\"*\" component={NotFoundPage}/>\r\n                                <Redirect from=\"*\" to=\"/404\"/>\r\n                            </Switch>\r\n                        </EditDialogProvider>\r\n                    </AlertDialogProvider>\r\n                </SnackbarProvider>\r\n            </Router>\r\n        </AuthProvider>\r\n    </React.Fragment>\r\n    , document.getElementById('root'));\r\n"],"sourceRoot":""}