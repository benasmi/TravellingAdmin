{"version":3,"sources":["pages/Home.js","components/TableComponent.js","helpers/debounce.js","Networking/NetworkLayerCentral.js","Networking/API.js","helpers/history.js","pages/Places.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/CustomMap.js","components/add_place_components/PlaceLocation.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","components/add_place_components/ParkingLocation.js","components/AutocompleteChip.js","components/AddDialog.js","components/add_place_components/PlaceDiscovery.js","components/add_place_components/initialScheduleData.js","components/Schedule.js","components/add_place_components/WorkingSchedule.js","pages/AddPlace.js","components/ApiPlaceCard.js","components/SearchInputComponent.js","pages/ApiPlaces.js","components/Appbar.js","components/feedback/SnackbarFeedback.js","App.js","index.js"],"names":["withStyles","theme","button","margin","spacing","input","display","props","classes","descendingComparator","a","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","checkable","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","TextField","target","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","centerCell","textAlign","TableComponent","pagingInfo","data","updateCallback","removeCallback","isLoading","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckboxChange","header","isId","scope","fontSize","style","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","pageNum","onChangePage","newPage","onChangeRowsPerPage","parseInt","console","log","request","options","contentType","client","axios","create","baseURL","headers","onSuccess","response","debug","onError","error","config","status","message","Promise","reject","then","catch","RequestType","getRequest","path","urlData","url","method","postRequest","postMultipartRequest","formData","API","Places","getAllPlaces","urlParams","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","Tags","getAllTags","addTag","params","Categories","addCategory","getAllCategories","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","history","buttonsDiv","justifyContent","content","flexDirection","alignItems","setData","pageData","setPageData","setIsLoading","parseData","placesData","list","push","p","Box","Button","startIcon","placeInfo","setPlaceInfo","updatePlaceInfo","place","Object","assign","placeholder","fullWidth","e","InputLabelProps","shrink","multiline","rows","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","item","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","distance","onSortEnd","oldIndex","newIndex","arrayMove","axis","filter","acceptedFileFormats","onCloseCallback","open","onFinishCallback","loading","Dialog","DialogTitle","DialogContent","dividers","acceptedFiles","dropzoneProps","disabled","filesLimit","onDrop","files","imagefile","FormData","append","err","finally","handleFileUpload","DialogActions","outline","addImageDialogOpen","setAddImageDialogOpen","file","handleAddPhoto","autocomplete","borderBottom","locationData","setLocationData","mapHeight","selectedParkingCallback","changedParkingMarkerCallback","addParkingCallback","useFunction","callback","ref","useRef","current","useCallback","apply","this","arguments","Geocode","setApiKey","enableDebug","selectParkingHandler","addNewParkingHandler","changeLocationData","city","country","address","latitude","longitude","onParkingDataChanged","undefined","getCity","addressArray","i","types","long_name","getCountry","MyMapComponent","compose","withProps","containerElement","mapElement","withStateHandlers","infoWindow","show","toggleDraggableInfoWindow","draggableMarkerLocation","withGoogleMap","defaultZoom","center","lat","markerLocation","lng","defaultCenter","visible","draggable","onDragEnd","onMarkerLocationChanged","newLat","latLng","newLng","fromLatLng","results","formatted_address","address_components","onMarkerDragEnd","markerChanger","onParkingDataChange","onCloseClick","onToggleOpen","infoWindows","parkingData","location","parseFloat","parkingId","icon","showInfo","FullMap","parking","iw","onPlaceSelected","latitudeValue","geometry","longitudeValue","useMemo","SnackbarContext","createContext","addConfig","removeConfig","SnackbarProvider","children","setConfig","contextValue","success","Provider","UseSnackbarContext","useContext","marginTop","parkingMarkerData","setParkingMarkerData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","getClosestParking","parkingDataChanged","SortableItem","elevation","SortableList","oldArray","autoComplete","chip","flexWrap","listStyle","autoCompleteChipContainer","selectedOptions","setSelectedOptions","getCurrentVal","setCurrentVal","viableOptions","setViableOptions","includes","option","Chip","onDelete","Autocomplete","disableClearable","getOptionLabel","renderInput","closeButton","right","grey","textFieldLabel","description","action","setText","setError","ev","autoFocus","validateInput","selectedTags","setSelectedTags","selectedCategories","setSelectedCategories","dialogAddTagOpen","setDialogAddTagOpen","dialogAddCategoryOpen","setDialogAddCategoryOpen","availableCategories","setAvailableCategories","availableTags","setAvailableTags","AutocompleteChip","newTag","tagId","newCat","categoryId","initialScheduleData","dayOfWeek","openTime","closeTime","isClosed","ScheduleCard","setOpenTime","setCloseTime","setIsClosed","oldData","scheduleCard","Fragment","step","state","scheduleData","setScheduleData","workingScheduleEnabled","setWorkingScheduleEnabled","FormControlLabel","control","Switch","obj","paperContent","loader","overflowY","bottom","match","placeId","website","phoneNumber","hasSchedule","isPublic","setPlaceId","firstTimeLoading","setFirstTimeLoading","formFeedback","saveChanges","formPlaceInfo","all","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","er","tags","categories","schedule","responses","CircularProgress","CategoriesDisplay","SubheaderDisplay","priceRange","rating","Rating","readOnly","media","expand","transform","marginLeft","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","CardHeader","subheader","overallStarRating","CardContent","substring","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debounce","debouncedInput","InputBase","persist","Divider","orientation","topBar","marginRight","zIndex","searchBox","isLoadingData","setIsLoadingData","after","setAfter","searchQuery","setSearchQuery","loadDataFunc","query","encodeURI","currentData","debounceScroll","round","scrollHeight","scrollTop","clientHeight","handleScrollDebounced","onScroll","handleScroll","elementType","isFitWidth","disableImagesLoaded","updateOnEachImageLoad","boxSizing","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","Appbar","useTheme","setOpen","setTitle","CssBaseline","AppBar","edge","Drawer","anchor","List","ListItem","Link","to","ListItemText","exact","Home","AddPlace","ApiPlaces","SnackbarFeedback","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d45e0b85.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Icon from \"@material-ui/core/Icon\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(1)\n    },\n    input: {\n        display: \"none\"\n    }\n});\n\nconst Home = props => {\n    const { classes } = props;\n    return (\n        <div>\n           Home\n        </div>\n    );\n};\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport EditIcon from '@material-ui/icons/Edit'\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\"\nimport useDebounce from \"../helpers/debounce\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, checkable} = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n\n                {checkable ? <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell> : null}\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right'  : 'left' }\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n    headCells: PropTypes.object.isRequired,\n    checkable: PropTypes.bool.isRequired\n};\n\n\n\n\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, title, changePageCallback, keyword, setKeyword} = props;\n\n\n    const debouncedSearch = useDebounce(keyword, 300);\n\n\n\n    useEffect( () => {\n            changePageCallback(1,keyword)\n        },\n\n        [debouncedSearch]\n    );\n\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    {title}\n                </Typography>\n            )}\n\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : <TextField id=\"standard-basic\" label=\"Search\" onChange={ event =>{setKeyword(event.target.value)}}/>}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired\n};\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    centerCell: {\n        textAlign: \"center\",\n        width: '100%'\n    }\n}));\n\nexport default function TableComponent({title, headCells, pagingInfo, data, checkable, changePageCallback, updateCallback, removeCallback, id, isLoading}) {\n\n    TableComponent.propTypes = {\n        title: PropTypes.string.isRequired,\n        headCells: PropTypes.object.isRequired,\n        pagingInfo: PropTypes.object,\n        data: PropTypes.object.isRequired,\n        checkable: PropTypes.bool.isRequired,\n        changePageCallback: PropTypes.func,\n        updateCallback: PropTypes.func,\n        removeCallback: PropTypes.func,\n        id: PropTypes.string.isRequired,\n        isLoading: PropTypes.bool\n    };\n\n\n\n\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [keyword, setKeyword] = useState('');\n\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = data.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleCheckboxChange = (event, name) =>{\n\n            const selectedIndex = selected.indexOf(name);\n            let newSelected = [];\n\n            if (selectedIndex === -1) {\n                newSelected = newSelected.concat(selected, name);\n            } else if (selectedIndex === 0) {\n                newSelected = newSelected.concat(selected.slice(1));\n            } else if (selectedIndex === selected.length - 1) {\n                newSelected = newSelected.concat(selected.slice(0, -1));\n            } else if (selectedIndex > 0) {\n                newSelected = newSelected.concat(\n                    selected.slice(0, selectedIndex),\n                    selected.slice(selectedIndex + 1),\n                );\n            }\n\n            setSelected(newSelected);\n\n    };\n\n    const handleClick = (event, name) => {\n\n    };\n\n\n    const handleChangePage = (event, newPage) => {\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n        console.log(\"handleChangeRowsPerPage\")\n\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                {isLoading ? <LinearProgress/> : null }\n                <EnhancedTableToolbar\n                    title={title}\n                    numSelected={selected.length}\n                    changePageCallback={changePageCallback}\n                    keyword={keyword}\n                    setKeyword={setKeyword}\n                />\n                 <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={data.length}\n                            headCells={headCells}\n                            checkable={checkable}\n                        />\n\n                        <TableBody>\n                            {stableSort(data, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) => handleClick(event, row.name)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            {checkable ? <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    onChange={(event)=>handleCheckboxChange(event, row.name)}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell> : null}\n\n                                            {headCells.map(header=>{\n                                                if(header.isId){\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\n                                                            {row[header.id]}\n                                                        </TableCell>\n                                                }else if(header.id === 'actions' ){\n                                                        return <TableCell>\n                                                            <div>\n                                                                <IconButton onClick={()=>updateCallback(row[id])} size=\"small\" aria-label=\"edit\" >\n                                                                    <EditIcon fontSize=\"small\" />\n                                                                </IconButton>\n\n                                                                <IconButton size=\"small\" aria-label=\"delete\" >\n                                                                    <DeleteIcon fontSize=\"small\" />\n                                                                </IconButton>\n                                                            </div>\n                                                            </TableCell>\n                                                }else{\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\n                                                }\n\n                                            })}\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\n                                        <TableCell colSpan={6} className={classes.centerCell}>\n                                            <Typography variant=\"h6\" noWrap>\n                                                No results\n                                            </Typography>\n                                        </TableCell>}\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10]}\n                    component=\"div\"\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\n\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\nexport default function useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n\n        [value]\n    );\n\n    return debouncedValue;\n}","import React from \"react\";\nimport axios from \"axios\"\n\nconst request = async function(options, contentType) {\n    const client = axios.create({\n        baseURL: \"http://izbg.l.dedikuoti.lt:8080/\" /*\"http://localhost:8080/\"*/,\n        headers: {\n            'Content-Type': (contentType == null) ? 'application/json': contentType,\n            'Accept':  'application/json',\n            'Access-Control-Allow-Origin': '*'\n        },\n    });\n\n    const onSuccess = function (response) {\n        console.debug('Request Successful!', response);\n        return response.data;\n    };\n\n    const onError = function (error) {\n        console.debug('Request Failed:', error.config);\n        if (error.response) {\n            console.debug('Status:', error.response.status);\n            console.debug('Data:', error.response.data);\n            console.debug('Headers:', error.response.headers);\n        } else {\n            console.debug('Error Message:', error.message);\n        }\n        return Promise.reject(error.response || error.message);\n    };\n\n    return client(options)\n        .then(onSuccess)\n        .catch(onError);\n};\n\nconst getRequest = function (path, urlData= \"\") {\n    return request({\n        url:path+urlData,\n        method: 'GET'\n    });\n};\n\nconst postRequest = function (path, data, urlData = \"\") {\n    return request({\n        url:    path+urlData,\n        method: 'POST',\n        data: data\n    });\n};\n\nconst postMultipartRequest = function (path, formData) {\n    return request({\n        url: path,\n        method: 'POST',\n        data: formData\n    }, 'multipart/form-data' /*'application/x-www-form-urlencoded'*/);\n};\n\nconst RequestType = {\n    getRequest, postRequest, postMultipartRequest\n};\n\nexport default RequestType\n\n\n","import RequestType from '../Networking/NetworkLayerCentral'\n\n//Places\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\n\nconst Places = {getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces};\n\n\n//Tags\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\nconst Tags = {getAllTags, addTag};\n\n//Category\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\nconst getAllCategories = () => RequestType.getRequest(\"api/v1/categories/all\");\nconst Categories = {addCategory, getAllCategories};\n\n//Photo\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\nconst Photos = {addPhoto, uploadPhoto};\n\n\n//Parking\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\nconst Parking = {getParkingByLocation, insertNewParking};\n\n\n//TagsPlace\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\nconst TagsPlace = {updateTagsForPlace};\n\n\n//CategoriesPlace\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\nconst CategoriesPlace = {updateCategoriesForPlace};\n\n//PhotoPlace\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\nconst ParkingPlace = {updateParkingForPlace};\n\n//PhotoPlace\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\nconst PhotoPlace = {updatePhotoForPlace};\n\n//Schedule\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\nconst Schedule = {updateScheduleForPlace};\n\nconst API = {Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule};\n\nexport default API\n\n","import { createBrowserHistory as history} from 'history';\n\nexport default history();","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TableComponent from \"../components/TableComponent\";\nimport API from \"../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Box from \"@material-ui/core/Box\";\nimport history from \"../helpers/history\";\n\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    input: {\n        display: \"none\"\n    },\n    root:{\n        height:\"100vh\",\n        width:\"100%\",\n        overflow: \"auto\"\n    },\n    buttonsDiv: {\n        backgroundColor: \"red\",\n        justifyContent: \"flex-end\"\n    },\n    content:{\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: theme.spacing(8),\n    }\n});\n\n\nconst headCells = [\n    { id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\n    { id: 'address', numeric: false, disablePadding: false, label: 'Address',isId: false},\n    { id: 'city', numeric: false, disablePadding: false, label: 'City',isId: false },\n    { id: 'country', numeric: false, disablePadding: false, label: 'Country',isId: false },\n    { id: 'phoneNumber', numeric: false, disablePadding: false, label: 'Phone Number',isId: false },\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\n];\n\nfunction Places(props) {\n\n    const [data, setData] = useState([]);\n    const [pageData, setPageData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { classes } = props;\n\n    useEffect(()=>{\n        getAllPlaces()\n    },[]);\n\n\n\n    function parseData(data){\n        setIsLoading(false);\n        let placesData = [];\n        data.list.map(row => {\n            placesData.push(row)\n        });\n\n        delete data.list;\n        setData(placesData);\n        setPageData(data);\n    }\n\n    function updatePlaceCallback(id){\n        history.push(\"/addplace/\"+id)\n    }\n\n    const changePageCallback = (p=0, keyword=\"\") => {\n        setIsLoading(true);\n        getAllPlaces(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword)\n    };\n\n\n\n    return (\n        <div className={classes.root}>\n\n            <div className={classes.content} >\n                <TableComponent\n                    title={\"Places\"}\n                    headCells={headCells}\n                    data={data}\n                    pagingInfo={pageData}\n                    checkable={false}\n                    changePageCallback={changePageCallback}\n                    updateCallback={updatePlaceCallback}\n                    id={\"placeId\"}\n                    isLoading={isLoading}\n                />\n\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <Button\n                        onClick={()=>{history.push(\"/addplace\")}}\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        startIcon={<AddIcon />}>\n                        Add\n                    </Button>\n\n                </Box>\n            </div>\n\n        </div>\n    );\n\n    function getAllPlaces(urlParams=\"\") {\n        API.Places.getAllPlacesAdmin(urlParams).then(response=>{\n            parseData(response)\n        }).catch(error=>{\n            console.log(error)\n        })\n    }\n}\n\nPlaces.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Places);","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {withStyles} from \"@material-ui/core\";\n\n\nconst styles = theme => ({\n\n});\n\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo}) {\n\n    const updatePlaceInfo = (event) =>{\n      const {name, value} = event.target\n        let place = Object.assign({}, placeInfo, {})\n        place[name] = value;\n       setPlaceInfo(place)\n    };\n\n\n    return <div>\n            <Typography variant=\"h6\" >\n                Basic place information\n            </Typography>\n            <br/>\n            <TextField\n                label=\"Place name\"\n                style={{ margin: 8 }}\n                placeholder=\"Enter the place name\"\n                fullWidth\n                value={placeInfo['name']}\n                name=\"name\"\n                onChange={e=>updatePlaceInfo(e)}\n                variant=\"outlined\"\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                label=\"Place description\"\n                style={{ margin: 8 }}\n                placeholder=\"Describe the place thoroughly\"\n                fullWidth\n                multiline\n                name=\"description\"\n                value={placeInfo['description']}\n                onChange={e=>updatePlaceInfo(e)}\n                variant=\"outlined\"\n                rows={4}\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                label=\"Phone number\"\n                style={{ margin: 8 }}\n                placeholder=\"Enter phone number\"\n                fullWidth\n                name=\"phoneNumber\"\n                value={placeInfo['phoneNumber']}\n                onChange={e=>updatePlaceInfo(e)}\n                variant=\"outlined\"\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                label=\"Website\"\n                style={{ margin: 8 }}\n                placeholder=\"Enter website\"\n                fullWidth\n                name=\"website\"\n                value={placeInfo['website']}\n                onChange={e=>updatePlaceInfo(e)}\n                variant=\"outlined\"\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n        </div>\n}\n\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport React, {useMemo, useState} from \"react\"\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Gallery from \"react-photo-gallery\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Delete from \"@material-ui/icons/Delete\"\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst imgWithClick = { cursor: \"pointer\" };\n\nconst Photo = ({ index, onItemDelete, photo, margin, direction, top, left }) => {\n\n    const styles = {\n        imgContainer: {\n            margin: margin,\n            display: 'inline',\n            position: 'relative',\n            width: '300px',\n            height: '300px',\n        }\n    }\n    if (direction === \"column\") {\n        styles.imgContainer.position = \"absolute\";\n        styles.imgContainer.imgStyle.left = left;\n        styles.imgContainer.imgStyle.top = top;\n    }\n\n    const handleDelete = event => {\n        onItemDelete(photo);\n    }\n\n        return (\n\n            <Card style={styles.imgContainer}>\n                <CardMedia\n                    style={{height: 0, paddingTop: '80%'}}\n                    image={photo.src}\n                />\n                <CardActions disableSpacing>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        startIcon={<DeleteIcon />}\n                        onClick = {(event) => {handleDelete(event)}}\n                    >\n                        Delete\n                    </Button>\n                </CardActions>\n\n            </Card>\n        )\n\n};\n\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\nconst SortableGallery = SortableContainer(({ items, onItemDelete}) => (\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>} />\n));\n\nfunction ReorderablePhotos(props){\n    let {setPhotos, photos, srcName, keyName} = props\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\n    };\n    function handleItemDelete(photo){\n        setPhotos(photos.filter(item => {return item[keyName].toString() !== photo.key}))\n    }\n\n    let modifiedData = photos.map(item =>  {\n        return(\n    {\n        key: item[keyName].toString(),\n        src: item[srcName],\n        width: 1,\n        height: 1\n    })\n\n})\n        return (\n            <div >\n                <SortableGallery distance={10} items={modifiedData} onSortEnd={onSortEnd} axis={\"xy\"} onItemDelete = {handleItemDelete} />\n            </div>\n        );\n\n}\n\n\nexport default  ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport {Card} from \"@material-ui/core\";\nimport {DropzoneArea} from \"material-ui-dropzone\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport PropTypes from \"prop-types\";\nimport API from \"../Networking/API\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n});\n\nconst acceptedFileFormats = ['image/jpeg', 'image/png', 'image/bmp', 'image/jpg']\n\nfunction AddImageDialog(props){\n\n    const {onCloseCallback, open, onFinishCallback} = props\n    const [loading, setIsLoading] = useState(false)\n\n    function handleFileUpload(files) {\n        setIsLoading(true)\n\n        var imagefile = files[0]\n        let formData = new FormData()\n        formData.append(\"image\", imagefile)\n\n        API.Photos.uploadPhoto(formData).then(response => {\n            onFinishCallback(response)\n        }).catch(err => {\n            onFinishCallback()\n        }).finally(() => {\n            setIsLoading(false)\n        })\n    }\n\n    return(\n        <div>\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\" >\n                    Photo upload\n                </DialogTitle>\n                {loading && <LinearProgress variant=\"query\" />}\n                <DialogContent dividers>\n                    <DropzoneArea\n                        acceptedFiles={acceptedFileFormats}\n                        dropzoneProps = {{disabled: loading}} filesLimit={1} onDrop={(files) => handleFileUpload(files)}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCallback} color=\"primary\">\n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\nAddImageDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onFinishCallback: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(AddImageDialog)\n","import React, {useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ReorderablePhotos from \"../ReorderablePhotos\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddImageDialog from \"../AddImageDialog\";\nimport {Card} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n});\n\nfunction PhotosInfo({classes, setPhotos, photos}) {\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\n\n    function handleAddPhoto(file) {\n        setAddImageDialogOpen(false);\n        if(file == null)\n            return;\n        setPhotos([\n            ...photos,\n            file]\n        )\n    }\n\n    return(\n        <div>\n            <Typography variant=\"h6\" >\n                Photos\n            </Typography>\n            <Card variant={\"outlined\"} className={classes.outline}>\n\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\n\n\n                <Button\n                    variant=\"text\"\n                    color=\"primary\"\n                    size=\"small\"\n                    style={{width: '15%'}}\n                    className={classes.button}\n                    onClick={() => setAddImageDialogOpen(true)}\n                    startIcon={<AddIcon />}>\n                    Add photo\n                </Button>\n\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(file) => handleAddPhoto(file)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\n\n\n            </Card>\n        </div>\n\n    )\n}\n\nexport default withStyles(styles)(PhotosInfo)\n\n\n","import React, {memo, useEffect, useMemo, useState} from 'react'\nimport Autocomplete from 'react-google-autocomplete';\nimport Geocode from \"react-geocode\";\nimport {compose, withProps, withStateHandlers} from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {map} from \"react-bootstrap/cjs/ElementChildren\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../helpers/history\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\n\n//\n\n//Geocoding API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\n//Places API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\n//Maps API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\n\nconst styles = theme => ({\n    content: {\n        margin: theme.spacing(1)\n    },\n    autocomplete:{\n        width: '200px',\n        height: '40px',\n        fontSize: \"14px\",\n        border: \"0\",\n        borderBottom: \"2px solid grey\",\n        outline:\"0\",\n        marginBottom: \"4px\"\n    }\n});\n\nvar markerData = {};\nfunction CustomMap({classes, locationData, setLocationData, mapHeight, selectedParkingCallback, changedParkingMarkerCallback, addParkingCallback}){\n\n\n    CustomMap.propTypes = {\n        locationData: PropTypes.object,\n        setLocationData: PropTypes.func,\n        mapHeight: PropTypes.number\n    };\n\n\n\n    var parkingIcon = 'https://developers.google.com/maps/documentation/javascript/examples/full/images/parking_lot_maps.png';\n\n    Geocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\n    Geocode.enableDebug();\n\n\n    function useFunction(callback) {\n        const ref = React.useRef();\n        ref.current = callback;\n\n        return React.useCallback(function() {\n            const callback = ref.current;\n            if (typeof callback === \"function\") {\n                return callback.apply(this, arguments);\n            }\n        }, []);\n    }\n    const selectParkingHandler = useFunction(selectedParkingCallback);\n    const addNewParkingHandler = useFunction(addParkingCallback);\n\n\n    const onPlaceSelected = (place, onMarkerLocationChanged, onParkingDataChanged) => {\n\n        const address = place.formatted_address\n        const addressArray =  place.address_components\n        if(addressArray !== undefined){\n            const city = getCity( addressArray ),\n                country = getCountry(addressArray),\n                latitudeValue = place.geometry.location.lat(),\n                longitudeValue = place.geometry.location.lng();\n\n            onMarkerLocationChanged(latitudeValue, longitudeValue, address, city, country);\n            changeLocationData(city,country,address,latitudeValue,longitudeValue, onParkingDataChanged);\n        }\n    };\n\n    const onMarkerDragEnd = ( event, onMarkerLocationChanged, onParkingDataChanged) => {\n        let newLat = event.latLng.lat(),\n            newLng = event.latLng.lng();\n\n\n        Geocode.fromLatLng( newLat , newLng ).then(\n            response => {\n                const address = response.results[0].formatted_address\n                const addressArray =  response.results[0].address_components\n                if(addressArray!==undefined){\n                    const city = getCity( addressArray ),\n                        country = getCountry( addressArray );\n\n                    onMarkerLocationChanged(newLat, newLng, address, city, country);\n\n                    changeLocationData(city,country,address,newLat,newLng, onParkingDataChanged);\n                }\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    };\n\n    function changeLocationData(city,country,address,latitude,longitude, onParkingDataChanged) {\n        let data = Object.assign({}, locationData, {});\n        data['city'] = city;\n        data['country'] = country;\n        data['address'] = address;\n        data['latitude'] = latitude;\n        data['longitude'] = longitude;\n        setLocationData(data);\n        markerData = data;\n        if (changedParkingMarkerCallback !== undefined){\n            changedParkingMarkerCallback(city,address,country, latitude,longitude, onParkingDataChanged);\n        }\n    }\n\n    /**\n     * Get the city and set the city input value to the one selected\n     *\n     * @param addressArray\n     * @return {string}\n     */\n    const getCity = ( addressArray ) => {\n        if(addressArray !== undefined){\n            let city = '';\n            for( let i = 0; i < addressArray.length; i++ ) {\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\n                    city = addressArray[ i ].long_name;\n                    return city;\n                }\n            }\n        }\n    };\n\n    const getCountry = (addressArray) =>{\n        if(addressArray!=undefined){\n        let country = '';\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\n                country = addressArray[ i ].long_name;\n                return country;\n            }\n        }\n        }\n    };\n    /**\n     *\n     * Renders parking data markers\n     *\n     * @param onToggleOpen Method to open marker's info window\n     * @param infoWindows Marker info window\n     * @param parking data\n     * @returns {*}\n     */\n    const markers = (onToggleOpen, infoWindows, parking) =>{\n        return parking.map((location, i) => {\n\n            const latitude = parseFloat(location.latitude);\n            const longitude = parseFloat(location.longitude);\n\n            return (\n                <Marker\n                    key={location.parkingId}\n                    position={{ lat: latitude, lng: longitude}}\n                    options={{icon: parkingIcon}}\n                    onClick={()=>onToggleOpen(location.parkingId)}\n                >\n\n                    {infoWindows[i].showInfo && (\n                        <InfoWindow >\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                                {location.address}\n                                <Button\n                                    onClick={()=>{selectParkingHandler(location)}}\n                                    variant=\"text\"\n                                    color=\"secondary\"\n                                    size=\"large\"\n                                    className={classes.button}\n                                    startIcon={<AddIcon />}>\n                                    Add parking\n                                </Button>\n                            </div>\n                        </InfoWindow>\n                    )}\n\n                </Marker>\n            )\n        })\n    };\n\n\n    /**\n     * Map component that renders parking data and has draggable marker\n     */\n    const MyMapComponent = compose(\n        withProps({\n            containerElement: <div style={{ height: mapHeight }} />,\n            mapElement: <div style={{ height: `100%` }} />,\n        }),\n        withStateHandlers({\n                infoWindow: {show: false}\n            },{\n            toggleDraggableInfoWindow: ({draggableMarkerLocation}) => (show) => ({\n                infoWindow: {show: show}\n            })\n            }\n        ),\n        withGoogleMap\n    )(props =>\n\n        <GoogleMap\n            defaultZoom={12}\n            center={{lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }}\n            defaultCenter={{ lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }}\n        >\n            <Marker\n                name={'Dolores park'}\n                visible={true}\n                draggable={true}\n                onClick={()=>props.toggleDraggableInfoWindow(true)}\n                onDragEnd={e=>onMarkerDragEnd(e, props.markerChanger, props.onParkingDataChange)}\n                position={{ lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }} >\n\n                {props.infoWindow.show && addParkingCallback && (\n                    <InfoWindow onCloseClick={()=>{props.toggleDraggableInfoWindow(false)}}>\n                        <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                            {props.markerLocation.address}\n                            <Button\n                                onClick={()=>{\n\n                                    addNewParkingHandler(props.markerLocation)\n\n                                }}\n                                variant=\"text\"\n                                color=\"secondary\"\n                                size=\"large\"\n                                className={classes.button}\n                                startIcon={<AddIcon />}>\n                                Add new parking\n                            </Button>\n                        </div>\n                    </InfoWindow>\n                )}\n            </Marker>\n\n            {markers(props.onToggleOpen, props.infoWindows, props.parkingData)}\n        </GoogleMap>\n    );\n\n    /**\n     * Places autocomplete and map. This component holds it's inner states like draggableMarkerLocation, parkingData etc.\n     */\n    const FullMap = compose(\n        withProps(),\n        withStateHandlers({\n            draggableMarkerLocation: {\n                latitude: locationData.latitude,\n                longitude: locationData.longitude,\n                address:  locationData.address\n            },parkingData: [], infoWindows: []\n        },{\n            onMarkerLocationChanged: ({draggableMarkerLocation}) => (newLat, newLng, address, city, country) => ({\n                draggableMarkerLocation: {\n                    latitude: newLat,\n                    longitude: newLng,\n                    address: address,\n                    city: city,\n                    country: country\n                }\n            }),\n                onParkingDataChange: ({parkingData}) => (parking) => ({\n                    parkingData: parking.map(row=>{\n                        return row\n                    }),\n                    infoWindows: parking.map(p => {\n                        return { parkingId: p.parkingId, showInfo: false };\n                    })\n                }),\n                onToggleOpen: ({ infoWindows }) => selectedIndex => ({\n                    infoWindows: infoWindows.map((iw, i) => {\n                        iw.showInfo = selectedIndex === iw.parkingId;\n                        return iw;\n                    })\n                })\n            }\n            )\n    )(props=>\n        <div className={classes.content}>\n            <Autocomplete\n                className={classes.autocomplete}\n                onPlaceSelected={(place)=>{onPlaceSelected(place, props.onMarkerLocationChanged, props.onParkingDataChange)} }\n                types={['(regions)']}\n            />\n\n            <MyMapComponent markerChanger={props.onMarkerLocationChanged}\n                            markerLocation={props.draggableMarkerLocation}\n                            onParkingDataChange={props.onParkingDataChange}\n                            parkingData={props.parkingData}\n                            onToggleOpen={props.onToggleOpen}\n                            infoWindows={props.infoWindows}\n            />\n\n\n        </div>\n    );\n\n    /**\n     * Memoization of a component.\n     */\n    return useMemo(() => {\n        return <FullMap/>;\n    }, [])\n\n    //\n\n}\n\nexport default withStyles(styles)(CustomMap);","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomMap from \"../CustomMap\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n});\n\nfunction PlaceLocation({locationData, setLocationData}) {\n\n    function changeLocationData(event){\n        const {name, value} = event.target;\n        let data = Object.assign({}, locationData, {});\n        data[name] = value;\n        setLocationData(data)\n    }\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Place location\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select place location from map\n        </Typography>\n        <br/>\n        <CustomMap mapHeight={200}\n                   locationData={locationData}\n                   setLocationData={setLocationData}\n        />\n        <br/>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Place location\n        </Typography>\n        <br/>\n        <TextField\n            label=\"Address\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter place address\"\n            fullWidth\n            disabled\n            value={locationData['address']}\n            name='address'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"City\"\n            disabled\n            style={{ margin: 8 }}\n            placeholder=\"Enter place city\"\n            fullWidth\n            value={locationData['city']}\n            name='city'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Country\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter place country\"\n            fullWidth\n            disabled\n            value={locationData['country']}\n            name='country'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            rows={4}\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n    </div>\n}\n\nexport default withStyles(styles)(PlaceLocation)","import React, { useState, useCallback } from 'react';\nimport { useContext } from 'react';\n\nexport const SnackbarContext = React.createContext({\n    config: null,\n    addConfig: () => {},\n    removeConfig: () => {}\n});\n\nexport function UseSnackbarContext() {\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\n    return { config, addConfig, removeConfig };\n}\n\n\nexport default function SnackbarProvider({ children }) {\n    const [config, setConfig] = useState(null);\n\n    const removeConfig = () => setConfig(null);\n    const addConfig = (success, message) => setConfig({ success, message });\n\n    const contextValue = {\n        config,\n        addConfig: (success, message) => addConfig(success, message),\n        removeConfig: () => removeConfig()\n    };\n\n    return (\n        <SnackbarContext.Provider value={contextValue}>\n            {children}\n        </SnackbarContext.Provider>\n    );\n}","import { useContext } from 'react';\nimport {SnackbarContext} from \"./SnackbarContext\";\n\nexport default function UseSnackbarContext() {\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\n    return { config, addConfig, removeConfig };\n}\n","import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomMap from \"../CustomMap\";\nimport API from \"../../Networking/API\";\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction ParkingLocation({classes, parkingMarkerData, setParkingMarkerData, allSelectedParkingData, setAllSelectedParkingData}) {\n    const { addConfig } = UseSnackbarContext();\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\n    };\n\n    function changedParkingMarkerCallback(city,address,country,lat,lng, parkingDataChanged) {\n        getClosestParking(parseFloat(lat),parseFloat(lng), parkingDataChanged);\n    }\n\n\n\n    function addNewParking(markerData){\n        if(!parkingExists(markerData)){\n            API.Parking.insertNewParking([markerData]).then(response=>{\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\n                addConfig(true)\n            }).catch(error=>{\n                addConfig(false)\n            })\n        }\n    }\n\n    function parkingExists(markerData){\n        for(let i = 0; i<allSelectedParkingData.length; i++){\n            if(allSelectedParkingData[i].address === markerData.address) return true;\n        }\n        return false\n    }\n\n    const getClosestParking = (lat, lng, parkingDataChanged)=>{\n        API.Parking.getParkingByLocation(\"?lat=\"+lat+\"&lng=\"+lng).then(response=>{\n            let placesData = [];\n            console.log(\"ParkingData\", response)\n            response.map(row => {\n                placesData.push(row)\n            });\n            parkingDataChanged(response);\n        }).catch(error=>{\n        })\n    };\n\n    const SortableItem = SortableElement(({value}) => (\n        <Paper className={classes.paper} elevation={3}>\n            <Typography>\n                {value.address}\n            </Typography>\n            <IconButton aria-label=\"delete\" className={classes.margin}\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\n                <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n        </Paper>\n    ));\n\n    useEffect(()=>{\n        getClosestParking(parkingMarkerData.lat, parkingMarkerData.lng)\n    },[]);\n\n    const SortableList = SortableContainer(({items}) => {\n        return (\n            <ul>\n                {items.map((value, index) => (\n                <SortableItem key={index} index={index} value={value} />\n                ))}\n            </ul>\n        );\n    });\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Add parking\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select parking\n        </Typography>\n        <CustomMap mapHeight={350}\n                   locationData={parkingMarkerData}\n                   setLocationData={setParkingMarkerData}\n                   selectedParkingCallback={(location)=>{\n                       if(!parkingExists(location))\n                           setAllSelectedParkingData(oldArray=> [...oldArray, location])\n                       }}\n                   changedParkingMarkerCallback={changedParkingMarkerCallback}\n                   addParkingCallback={addNewParking}\n\n        />\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Selected parking locations\n        </Typography>\n\n        <SortableList distance={10} items={allSelectedParkingData} onSortEnd={onSortEnd} />\n\n    </div>\n}\n\nexport default withStyles(styles)(ParkingLocation)","\nimport React, {useEffect, useState} from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Paper from \"@material-ui/core/Paper\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = theme => ({\n    autoComplete: {\n        margin: theme.spacing(1)\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'left',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(1),\n        margin: 0,\n    },\n    autoCompleteChipContainer: {\n        padding: theme.spacing(1)\n    }\n})\n\nfunction AutoCompleteChip(props){\n\n    const {options, selectedOptions, setSelectedOptions, classes, label, id} = props;\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\n    const [viableOptions, setViableOptions] = useState([]);\n\n\n    function handleDelete(data) {\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\n        setViableOptions(\n            [\n                ...viableOptions,\n                data\n            ]\n        )\n    }\n\n    useEffect(() => {\n        setViableOptions(options.filter(item => !selectedOptions.includes(item)))\n    }, [options, selectedOptions]);\n\n    function handleInput(event, value){\n        setCurrentVal({\"name\": \"\"});\n        setSelectedOptions(\n            [\n                ...selectedOptions,\n                value\n            ]\n        );\n        setViableOptions(viableOptions.filter(item => item !== value))\n    }\n\n    return(\n        <div>\n            <Box  className={classes.autoCompleteChipContainer}>\n                {selectedOptions.length !== 0 &&\n                <Box component=\"ul\" className={classes.root}>\n                    {\n                        selectedOptions.map(option => {\n                            return(\n                                <li key={option[id]}>\n                                    <Chip\n                                        variant=\"outlined\"\n                                        label={option.name}\n                                        onDelete={() => handleDelete(option)}\n                                        className={classes.chip}\n                                    />\n                                </li>\n                            )\n                        })\n                    }\n                </Box>\n                }\n\n                <Autocomplete\n                    className={classes.autoComplete}\n                    value={getCurrentVal}\n                    options={viableOptions}\n                    onChange={handleInput}\n                    disableClearable\n                    getOptionLabel={(option) =>  option.name}\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n                />\n            </Box>\n        </div>\n    )\n}\n\nAutoCompleteChip.propTypes = {\n    setSelectedOptions: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired,\n    selectedOptions: PropTypes.array.isRequired,\n    classes: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(AutoCompleteChip)","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nfunction AddDialog(props){\n\n    function validateInput(){\n        var error = false;\n        if(text.length <= 3)\n            error = true\n        setError(error)\n        return error\n    }\n\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\n    const [text, setText] = useState(\"\")\n    const [error, setError] = useState(false)\n    return(\n        <div>\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\n                    {header}\n                </DialogTitle>\n                <DialogContent dividers>\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCallback} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button autoFocus color=\"primary\" onClick={() => {\n                        !validateInput() && action(text)\n                    }}>\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nAddDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    action: PropTypes.func.isRequired,\n    onCloseCallback: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(AddDialog)\n","import React, {useEffect, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AutocompleteChip from \"../AutocompleteChip\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddDialog from \"../AddDialog\";\nimport API from \"../../Networking/API\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories}) {\n\n    const [dialogAddTagOpen, setDialogAddTagOpen] = useState(false);\n    const [dialogAddCategoryOpen, setDialogAddCategoryOpen] = useState(false);\n\n    const [availableCategories, setAvailableCategories] = useState([]);\n    const [availableTags, setAvailableTags] = useState([]);\n\n\n    const updateTags = () => {\n        API.Tags.getAllTags().then(response=>{\n            setAvailableTags(response);\n            console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n    const updateCategories = () => {\n        API.Categories.getAllCategories().then(response=>{\n            setAvailableCategories(response)\n            console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        });\n    };\n\n    useEffect(()=>{\n        console.log(\"ParsiunciaasdasdkasfkjlasdnfoasdFJasdfn;FN;\")\n        updateTags();\n        updateCategories();\n    },[]);\n\n    const handleAddCategory = (value) => {\n        API.Categories.addCategory([{name: value}]).then(response=>{\n            let newCat = {categoryId: response[0], name: value};\n            setAvailableCategories(\n                [\n                    ...availableCategories,\n                    newCat\n                ]\n            );\n            setSelectedCategories([\n                ...selectedCategories,\n                newCat\n            ]);\n            setDialogAddCategoryOpen(false)\n\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n\n\n\n    const handleAddTag = (value) => {\n        API.Tags.addTag([{name: value}]).then(response=>{\n            let newTag = {tagId: response[0], name: value}\n            setAvailableTags(\n                [\n                    ...availableTags,\n                    newTag\n                ]\n            );\n            setSelectedTags([\n                ...selectedTags,\n                newTag\n            ]);\n            setDialogAddTagOpen(false)\n\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Place discovery settings\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select tags\n        </Typography>\n        <AutocompleteChip label=\"Select tags\" id=\"tagId\" options={availableTags} selectedOptions={selectedTags} setSelectedOptions ={setSelectedTags}/>\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => setDialogAddTagOpen(true)}\n            startIcon={<AddIcon />}>\n            Add missing tag\n        </Button>\n        <AddDialog action={handleAddTag} textFieldLabel=\"Name\" open={dialogAddTagOpen} onCloseCallback={() => setDialogAddTagOpen(false)} header = \"Add a new tag\" />\n\n        <br/>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select categories\n        </Typography>\n        <AutocompleteChip label=\"Select categories\" id=\"categoryId\" options={availableCategories} selectedOptions={selectedCategories} setSelectedOptions={setSelectedCategories}/>\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => setDialogAddCategoryOpen(true)}\n            startIcon={<AddIcon />}>\n            Add missing category\n        </Button>\n        <AddDialog action={handleAddCategory} textFieldLabel=\"Name\" open={dialogAddCategoryOpen} onCloseCallback={() => setDialogAddCategoryOpen(false)} header = \"Add a new category\" />\n\n    </div>\n}\n\nexport default withStyles(styles)(PlaceDiscovery)","const initialScheduleData = [\n    {\n        dayOfWeek: 0,\n        openTime: \"08:00:00\",\n        closeTime: \"18:00:00\",\n        isClosed: false\n    },\n    {\n        dayOfWeek: 1,\n        openTime: \"08:00:00\",\n        closeTime: \"18:00:00\",\n        isClosed: false\n    },\n    {\n        dayOfWeek: 2,\n        openTime: \"08:00:00\",\n        closeTime: \"18:00:00\",\n        isClosed: false\n    },\n    {\n        dayOfWeek: 3,\n        openTime: \"08:00:00\",\n        closeTime: \"18:00:00\",\n        isClosed: false\n    },\n    {\n        dayOfWeek: 4,\n        openTime: \"08:00:00\",\n        closeTime: \"18:00:00\",\n        isClosed: false\n    },\n    {\n        dayOfWeek: 5,\n        openTime: \"08:00:00\",\n        closeTime: \"18:00:00\",\n        isClosed: false\n    },\n    {\n        dayOfWeek: 6,\n        openTime: \"08:00:00\",\n        closeTime: \"18:00:00\",\n        isClosed: false\n    }\n]\n\nexport default initialScheduleData","import {withStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst styles = theme => ({\n    scheduleCard: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n        //width: '100%'\n    },\n})\n\nfunction ScheduleCard({dayOfWeek, setData, data, classes}){\n\n    const weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\n    const [openTime, setOpenTime] = useState(data.openTime);\n    const [closeTime, setCloseTime] = useState(data.closeTime);\n    const [isClosed, setIsClosed] = useState(data.isClosed);\n\n    React.useEffect(() => {\n        setData(oldData => {\n            return oldData.map(item => {\n                if(item.dayOfWeek === dayOfWeek)\n                    return {dayOfWeek: dayOfWeek, openTime: openTime, closeTime: closeTime, isClosed: isClosed}\n                else return item\n            })\n        })\n    }, [openTime, isClosed, closeTime])\n\n    return(\n    <Card elevation={1} className={classes.scheduleCard}  >\n        <Typography variant=\"subtitle1\">\n            {weekDays[dayOfWeek]}\n        </Typography>\n\n        <div >\n\n            {!isClosed &&\n                <React.Fragment>\n                <TextField\n                    label=\"Opens\"\n                    type=\"time\"\n                    value={openTime}\n                    onChange={(e) => setOpenTime(e.target.value)}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    inputProps={{\n                        step: 300, // 5 min\n                    }}\n                />\n                <TextField\n                    label=\"Closes\"\n                    type=\"time\"\n                    onChange={(e) => setCloseTime(e.target.value)}\n                    value={closeTime}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    inputProps={{\n                        step: 300, // 5 min\n                    }}\n                />\n                </React.Fragment>\n            }\n            <Checkbox\n                name=\"checkedB\"\n                color=\"primary\"\n                onChange={() => setIsClosed(state => !state)}\n                checked={!isClosed}\n            />\n\n        </div>\n\n    </Card>\n    )\n}\nScheduleCard.propTypes = {\n    dayOfWeek: PropTypes.number.isRequired,\n    setData: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n};\n\nfunction Schedule({scheduleData, setScheduleData, classes}) {\n    return(\n        <div>\n            {scheduleData.map((item, index) => {\n                return <ScheduleCard key={index} dayOfWeek={index} classes={classes} data = {scheduleData.filter(item => item.dayOfWeek === index)[0]}  setData={setScheduleData}/>\n            })}\n        </div>\n    )\n}\n\nSchedule.propTypes = {\n    setScheduleData: PropTypes.func.isRequired,\n    scheduleData: PropTypes.array.isRequired,\n    classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(Schedule)","import React, {useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport {Card} from \"@material-ui/core\";\nimport Schedule from \"../Schedule\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction WorkingSchedule({classes, scheduleData, setScheduleData,workingScheduleEnabled, setWorkingScheduleEnabled}) {\n\n    return <div>\n        <Typography variant=\"subtitle1\" >\n            Working schedule\n        </Typography>\n        <FormControlLabel\n            control={\n                <Switch\n                    checked={workingScheduleEnabled['hasSchedule']}\n                    onChange={() => {\n                        var obj = Object.assign({}, workingScheduleEnabled,{});\n                        obj['hasSchedule'] = !obj['hasSchedule'];\n                        console.log(obj);\n                        setWorkingScheduleEnabled(obj)}}\n                    color=\"primary\"\n                />\n            }\n            label=\"Enable working schedule for this place\"\n        />\n        <br/>\n        {workingScheduleEnabled['hasSchedule'] &&\n            <Schedule scheduleData={scheduleData} setScheduleData={setScheduleData}/>\n        }\n    </div>\n}\n\nexport default withStyles(styles)(WorkingSchedule)","import React, {useEffect, useState} from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport PropTypes from \"prop-types\";\nimport {Paper} from '@material-ui/core';\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\nimport initialScheduleData from \"../components/add_place_components/initialScheduleData\";\nimport WorkingSchedule from \"../components/add_place_components/WorkingSchedule\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport API from \"../Networking/API\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    paperContent: {\n        width: \"70%\",\n        marginTop: theme.spacing(4),\n        padding: theme.spacing(4),\n    },\n    root:{\n        height:\"100vh\"\n    },\n    loader:{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100vw\",\n        height: \"100vh\"\n    },\n    content:{\n        display:\"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        height:`calc(93vh - 64px)`,\n        padding: theme.spacing(8),\n        overflowY: \"auto\"\n    },\n    bottom:{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        padding: theme.spacing(1),\n        height: \"7vh\"\n    }\n});\n\nfunction AddPlace({classes, match}){\n    const [placeInfo, setPlaceInfo] = useState({placeId: \"\", name: \"\", description: \"\",website: \"\", phoneNumber: \"\", hasSchedule: false, isPublic: false});\n\n    const [selectedTags, setSelectedTags] = useState([]);\n    const [selectedCategories, setSelectedCategories] = useState([]);\n\n    const [photos, setPhotos] = useState([]);\n\n    const [locationData, setLocationData] = useState({city: '', address: '', country: '', latitude: 54.687157, longitude: 25.279652});\n    const [parkingMarkerData, setParkingMarkerData] = useState({city: '', address: '', country: '', latitude: 54.687157, longitude: 25.279652});\n    const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\n\n    const [scheduleData, setScheduleData] = useState(initialScheduleData);\n\n    const [placeId, setPlaceId] = useState(match.params.placeId);\n\n    const [firstTimeLoading, setFirstTimeLoading] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n\n\n\n    const { addConfig } = UseSnackbarContext();\n\n    useEffect(()=>{\n        //Loaded place for editing\n        if(placeId!==undefined){\n            console.log(\"Getting place location\");\n            getPlaceInfo()\n        }else{\n            console.log(\"Came here to add new place\");\n            setFirstTimeLoading(false) //Just loaded add place window\n        }\n\n        //New Place has been just inserted, thus inserting other place info\n        if(placeId!==undefined && firstTimeLoading===false){\n            console.log(\"Just added new place\");\n            Promise.all([\n                updateTagsData(placeId),\n                updateParkingData(placeId),\n                updateCategoriesData(placeId),\n                updatePhotoData(placeId),\n                updateSchedule(placeId)\n            ]).then(responses=>{\n                formFeedback(true, \"Place inserted successfully!\")\n            }).catch(error=>{\n                formFeedback(false)\n            })\n        }\n\n    },[placeId]);\n\n    function getPlaceInfo() {\n        API.Places.getPlaceById(\"?full=true&p=\"+placeId).then(response=>{\n            setAllData(response)\n\n        }).catch(error=>{\n            formFeedback(false)\n        })\n    }\n\n    function setAllData(place){\n        setPlaceInfo({\n            placeId: place.placeId,\n            name: place.name,\n            description: place.description,\n            website: place.website,\n            phoneNumber: place.phoneNumber,\n            hasSchedule: place.hasSchedule,\n            isPublic: place.isPublic\n        });\n\n        setLocationData({city: place.city,\n            address: place.address,\n            country: place.country,\n            latitude: place.latitude,\n            longitude: place.longitude});\n\n        setSelectedTags(place.tags);\n        setSelectedCategories(place.categories);\n        console.log(\"Schedule\", place.schedule);\n        if(place.schedule.length > 0)\n            setScheduleData(place.schedule);\n        console.log(place.parking);\n        setAllSelectedParkingData(place.parking);\n        setPhotos(place.photos)\n\n        setFirstTimeLoading(false);\n\n    }\n\n    function formFeedback(success, message=\"Something went wrong!\"){\n        addConfig(success, message);\n        setIsLoading(false)\n    }\n\n    function saveChanges(){\n        setIsLoading(true);\n        if(placeId === undefined){\n            insertBasicPlaceInfo()\n        }else{\n            Promise.all([\n                updatePlaceInfo(),\n                updateTagsData(placeId),\n                updatePhotoData(placeId),\n                updateCategoriesData(placeId),\n                updateParkingData(placeId),\n                updateSchedule(placeId)\n            ]).then(response=>{\n                formFeedback(true, \"All changes saved!\");\n            }).catch(err=>{\n                formFeedback(false)\n            })\n        }\n    }\n\n    function updatePlaceInfo() {\n        API.Places.updatePlace(formPlaceInfo()).then(response=>{\n\n        }).catch(error=>{\n\n        })\n\n    }\n\n    function insertBasicPlaceInfo(){\n            API.Places.insertPlace(formPlaceInfo()).then(placeId=>{\n                setPlaceId(placeId)\n            }).catch(error=>{\n\n            })\n    }\n\n    function updateParkingData(id) {\n        API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n    function updateTagsData(id) {\n        API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n    function updateCategoriesData(id) {\n        API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n    function updatePhotoData(id) {\n        API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n    function updateSchedule(id){\n        console.log(scheduleData);\n        if(placeInfo['hasSchedule'])\n            API.Schedule.updateScheduleForPlace(scheduleData, \"?p=\"+id).then(response=>{}).catch(er=>{})\n    }\n\n    function formPlaceInfo(){\n        return Object.assign(placeInfo, locationData)\n    }\n\n\n    return(\n        <div className={classes.root}>\n            {firstTimeLoading ? <div className={classes.loader}><CircularProgress /></div> : <div className={classes.content}>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <BasicPlaceInfo\n                        placeInfo={placeInfo}\n                        setPlaceInfo={setPlaceInfo}\n                    />\n                </Paper>\n\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PhotosInfo\n                        photos={photos}\n                        setPhotos={setPhotos}\n                    />\n                </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PlaceLocation\n                        locationData={locationData}\n                        setLocationData={setLocationData}/>\n                </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <ParkingLocation\n                        allSelectedParkingData={allSelectedParkingData}\n                        setAllSelectedParkingData={setAllSelectedParkingData}\n                        parkingMarkerData={parkingMarkerData}\n                        setParkingMarkerData={setParkingMarkerData}/>\n                </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PlaceDiscovery\n                        selectedTags={selectedTags}\n                        setSelectedTags={setSelectedTags}\n                        selectedCategories={selectedCategories}\n                        setSelectedCategories={setSelectedCategories}/>\n                </Paper>\n\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <WorkingSchedule\n                        workingScheduleEnabled={placeInfo}\n                        setWorkingScheduleEnabled={setPlaceInfo}\n                        scheduleData={scheduleData}\n                        setScheduleData={setScheduleData}/>\n                </Paper>\n            </div> }\n\n            {isLoading ? <LinearProgress/> : null}\n\n            <Paper elevation={1} className={classes.bottom}>\n\n                <FormControlLabel\n                    disabled={true}\n                    control={<Switch checked={placeInfo['isPublic']} onChange={()=> {\n                            var obj = Object.assign({}, placeInfo, {});\n                            obj['isPublic'] = !obj['isPublic']\n                            setPlaceInfo(obj);\n                        }\n                    } name=\"isPublic\" />}\n                    label=\"Make this place public\"\n                />\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={()=>saveChanges()}\n                    className={classes.button}>\n                    Save\n                </Button>\n            </Paper>\n        </div>)\n\n}\n\nAddPlace.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AddPlace)\n\n\n","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {Fragment, useState} from \"react\"\nimport Typography from \"@material-ui/core/Typography\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Card from \"@material-ui/core/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport red from \"@material-ui/core/colors/red\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = theme => ({\n    root: {\n        width: \"28vw\",\n        margin: theme.spacing(1)\n    },\n    media: {\n        height: 0,\n            paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n})\n\nfunction CategoriesDisplay({categories}){\n    return(\n        categories != null &&\n        <Box component=\"ul\"  style={{\n            display: 'flex',\n            justifyContent: 'left',\n            flexWrap: 'wrap',\n            listStyle: 'none',\n            padding: '0px'\n        }}>\n            {categories.map((data, index) => {\n                return (\n                    <li key={index}>\n                        <Chip\n                            variant=\"outlined\"\n                            style={{margin: \"5px\"}}\n                            label={data.name}\n                        />\n                    </li>\n\n                );\n            })}\n        </Box>\n    )\n}\n\nfunction SubheaderDisplay({city, address, priceRange, rating}){\n    return(\n        <div>\n\n            {rating != null &&\n            <Fragment><Rating\n                readOnly={true}\n                value={rating}\n            /><br/></Fragment>}\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\n\n        </div>\n    )\n}\n\nfunction ApiPlaceCard({classes, placeData}){\n\n    function truncateText(text){\n        if(text == null)\n            return \"\"\n        if(text.length > 500){\n            return text.substring(0, 500) + \"...\";\n        }else{\n            return text\n        }\n    }\n\n    return(\n        <Card className={classes.root}>\n            <CardHeader\n                action={\n                    <IconButton aria-label=\"settings\">\n                        <InfoIcon />\n                    </IconButton>\n                }\n                title={placeData.name}\n                subheader={<SubheaderDisplay city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\n\n            />\n            {placeData.photos != null &&\n            <CardMedia\n                className={classes.media}\n                image={placeData.photos[0].url}\n            />}\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {truncateText(placeData.description)}\n                </Typography>\n\n                <CategoriesDisplay categories={placeData.categories}/>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\n                {placeData.website}\n                </Typography>\n\n            </CardContent>\n            <CardActions disableSpacing>\n            </CardActions>\n        </Card>\n    )\n}\n\nApiPlaceCard.propTypes = {\n    placeData: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ApiPlaceCard)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport {debounce} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        margin: theme.spacing(2)\n        // width: 400,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    divider: {\n        // height: 28,\n        margin: 4,\n    },\n}));\n\nexport default function SearchInputComponent({hint, searchCallback}) {\n    const classes = useStyles();\n\n    const debouncedInput = (event) => {\n        searchCallback(event.target.value)\n    }\n\n    const debounceInput = debounce(event => debouncedInput(event), 300)\n\n    const handleInput = (event) => {\n        event.persist()\n        debounceInput(event)\n    }\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <InputBase\n                className={classes.input}\n                placeholder={hint}\n                inputProps={{ 'aria-label': hint }}\n                onChange={handleInput}\n            />\n            <IconButton className={classes.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n            <Divider className={classes.divider} orientation=\"vertical\" />\n        </Paper>\n    );\n}","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {useState} from \"react\"\nimport ApiPlaceCard from \"../components/ApiPlaceCard\";\nimport API from \"../Networking/API\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport debounce from 'lodash/debounce'\nimport Masonry from \"react-masonry-component\";\nimport SearchInputComponent from \"../components/SearchInputComponent\";\n\n\n\nconst styles = theme => ({\n    root:{\n        overflow: 'scroll',\n        width: \"100vw\",\n        padding: theme.spacing(1),\n        height:`calc(100vh - 64px)`,\n        // position: \"static\",\n        // left: 0,\n        // right: 0,\n        paddingTop: \"9vh\",\n    },\n    topBar: {\n        height: \"8vh\",\n        position: \"absolute\",\n        width: \"60%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        justifyContent: \"center\",\n        zIndex: 1\n    },\n    searchBox: {\n        margin: theme.spacing(1)\n    }\n})\n\nfunction ApiPlaces({classes}){\n\n    const [data, setData] = useState([])\n    const [isLoadingData, setIsLoadingData] = useState(false)\n    const [after, setAfter] = useState(null)\n    const [searchQuery, setSearchQuery] = useState(\"Kaunas\")\n\n    const loadDataFunc = (query, after) => {\n        // console.log(data)\n        setIsLoadingData(true)\n        API.Places.searchApiPlaces(\"?keyword=\" + encodeURI(query) + (after != null ? \"&after=\" + after : \"\")).then(response => {\n            setData(currentData => [...currentData, ...(response.data)])\n            setAfter(response.after)\n        }).catch(error => {\n        }).finally(() => {\n            setIsLoadingData(false)\n        })\n    }\n\n    const handleScrollDebounced = (e) => {\n        const scrollOffset = 100 //px\n        const bottom = Math.round(e.target.scrollHeight - e.target.scrollTop - scrollOffset)  <= e.target.clientHeight;\n        if (bottom && !isLoadingData) {\n            loadDataFunc(\n                searchQuery, after)\n        }\n    }\n\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200)\n\n    const handleScroll = (e) => {\n        e.persist()\n        debounceScroll(e)\n    }\n\n    const handleSearch = (query) => {\n        setData([])\n        loadDataFunc(searchQuery, null)\n        setSearchQuery(query)\n    }\n\n    return(\n        <div style={{position: \"relative\"}}>\n            <div className = {classes.topBar}>\n                <SearchInputComponent searchCallback={handleSearch} hint=\"Search api places\" style={classes.searchBox} />\n            </div>\n\n            <div className={classes.root} onScroll={(e) => handleScroll(e)}>\n                <Masonry\n                    // className={'my-gallery-class'} // default ''\n                    style={{margin: \"0 auto\"}}\n                    elementType={'div'} // default 'div'\n                    options={{\n                        isFitWidth: true\n                    }} // default {}\n                    disableImagesLoaded={false} // default false\n                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n                    // imagesLoadedOptions={} // default {}\n                >\n\n                    {data.map(item => {\n                        return <ApiPlaceCard key={item.placeId} placeData = {item} style={{boxSizing: 'border-box'}}/>\n                    })}\n                </Masonry>\n                {\n                    isLoadingData &&\n                    <CircularProgress  />\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(ApiPlaces)","import React, {Fragment, useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Router, Route, Link } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Places from \"../pages/Places\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AddPlace from \"../pages/AddPlace\";\nimport history from \"../helpers/history\";\nimport ApiPlaces from \"../pages/ApiPlaces\";\n\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles((theme) => ({\n    root1: {\n        overflow: \"hidden\",\n        display: 'flex',\n        height: \"100vh\",\n        background: \"#F1F1F1\"\n    },\n    appBar: {\n        height: \"64px\",\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        width: \"100vw\",\n        height: \"100%\",\n        //padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        width: \"100vw\",\n        height: \"100%\",\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0\n    },\n}));\n\n\nexport default function Appbar() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n    const [title, setTitle] = useState(\"Home\");\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root1}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n\n            <Router history={history}>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n\n                <Divider />\n                <List>\n                    <ListItem button component={Link} to=\"/\" onClick={()=>setTitle(\"Home\")}>\n                        <ListItemText>Home</ListItemText>\n                    </ListItem>\n                    <Divider light />\n                    <ListItem button component={Link} to=\"/places\" onClick={()=>setTitle(\"Place\")} >\n                        <ListItemText>Places</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/apiplaces\" onClick={()=>setTitle(\"Api places\")} >\n                        <ListItemText>Explore API places</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/addplace\" onClick={()=>setTitle(\"Add Place\")} >\n                        <ListItemText>Add place</ListItemText>\n                    </ListItem>\n                </List>\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/places\" component={Places} />\n                <Route path=\"/addplace/:placeId?\" component={AddPlace} />\n                <Route path=\"/apiplaces\" component={ApiPlaces} />\n                <Route path=\"/addplace\" component={AddPlace} />\n            </main>\n            </Router>\n        </div>\n    );\n}\n","import React, {useState} from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\n\n\nexport default function SnackbarFeedback(props){\n\n    const { config, removeConfig } = UseSnackbarContext();\n\n    return(\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"danger\") : \"\"}>\n                {!!config && config.message}\n            </Alert>\n        </Snackbar>\n    )\n}\n","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Appbar from './components/Appbar.js';\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\n\nclass App extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <SnackbarProvider>\n                    <Appbar />\n                    <SnackbarFeedback/>\n                </SnackbarProvider>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}