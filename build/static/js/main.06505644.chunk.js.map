{"version":3,"sources":["pages/Home.js","components/TableComponent.js","helpers/debounce.js","helpers/history.js","helpers/auth.js","Networking/NetworkLayerCentral.js","Networking/API.js","contexts/AlertDialogContext.js","contexts/UseAlertDialogContext.js","helpers/stringResources.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","contexts/AppBarTitleContext.js","contexts/UseAppBarTitleContext.js","pages/Places.js","helpers/priceRange.js","helpers/averageTimeSpent.js","components/AutocompleteChip.js","components/AddSourceDialog.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/CustomMap.js","components/add_place_components/PlaceLocation.js","components/add_place_components/ParkingLocation.js","components/AddDialog.js","components/add_place_components/PlaceDiscovery.js","components/add_place_components/initialScheduleData.js","components/ReviewCard.js","components/add_place_components/Reviews.js","components/ScheduleInterval.js","components/DayComponent.js","components/Schedule.js","components/add_place_components/SchedulesWrapper.js","pages/AddPlace.js","components/ApiPlaceCard.js","components/SearchInputComponent.js","pages/ApiPlaces.js","pages/NotFoundPage.js","components/Appbar.js","App.js","pages/LoginPage.js","components/AuthenticatedRoute.js","components/feedback/SnackbarFeedback.js","components/feedback/AlertDialogFeedback.js","index.js"],"names":["withStyles","theme","button","margin","spacing","input","display","props","classes","descendingComparator","a","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","checkable","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","customToolbarElements","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","style","alignItems","TextField","target","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","centerCell","textAlign","rowNotPublished","rowNotVerified","rowBasic","TableComponent","pagingInfo","data","updateCallback","removeCallback","isLoading","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","rowStyle","undefined","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckboxChange","header","isId","scope","fontSize","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","pageNum","onChangePage","newPage","onChangeRowsPerPage","parseInt","console","log","history","getAccessToken","Cookies","get","request","options","contentType","client","axios","create","baseURL","headers","onSuccess","response","debug","onError","error","config","status","push","message","Promise","reject","then","catch","RequestType","getRequest","path","urlData","url","method","postRequest","postMultipartRequest","formData","API","SourcePlace","updateSourcesForPlace","urlParams","Source","getSources","addSource","Places","getAllPlaces","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","removePlace","Tags","getAllTags","addTag","params","Categories","addCategory","getAllCategories","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","Reviews","getPlaceReviews","AlertDialogContext","createContext","alertConfig","addAlertConfig","removeAlertConfig","AlertDialogProvider","children","setAlertConfig","contextValue","func","onClose","onCloseFunc","Provider","UseAlertDialogContext","useContext","Strings","DIALOG_PLACE_PUBLISH_TITLE","DIALOG_PLACE_PUBLISH_MESSAGE","DIALOG_PLACE_UNPUBLISH_MESSAGE","DIALOG_PLACE_INSERT_TITLE","DIALOG_PLACE_INSERT","DIALOG_PLACE_UPDATE_TITLE","DIALOG_PLACE_UPDATE","DIALOG_PLACE_VERIFY_TITLE","DIALOG_PLACE_VERIFY_MESSAGE","DIALOG_PLACE_DELETE_TITLE","DIALOG_PLACE_DELETE_MESSAGE","SNACKBAR_PLACE_INSERTED_SUCCESS","SNACKBAR_PLACE_REMOVE_SUCCESS","SNACKBAR_ERROR","SNACKBAR_CHANGES_SAVED","SnackbarContext","addConfig","removeConfig","SnackbarProvider","setConfig","success","UseSnackbarContext","AppBarTitleContext","setTitle","AppBarTitleProvider","UseAppBarTitleContext","sortingButtons","flexDirection","buttonsDiv","justifyContent","content","breakpoints","down","up","setData","pageData","setPageData","setIsLoading","filterLabel","filter","filterName","filterOptions","setFilterOptions","filterQuery","setFilterQuery","parseData","placesData","list","anchorEl","setAnchorEl","open","Boolean","handleClick","currentTarget","p","tmp","placeId","aria-describedby","Popover","anchorOrigin","vertical","horizontal","transformOrigin","FormControlLabel","control","filters","fq","join","filterOptionsChanged","Box","Button","startIcon","priceRange","averageTimeSpent","autoComplete","chip","flexWrap","listStyle","autoCompleteChipContainer","setOptions","selectedOptions","setSelectedOptions","getCurrentVal","setCurrentVal","firstLoad","setFirstLoad","found","row1","JSON","stringify","option","Chip","onDelete","item","Autocomplete","disableClearable","getOptionLabel","renderInput","closeButton","right","grey","action","setDialogOpen","setText","setUrl","setError","Dialog","fullWidth","DialogTitle","DialogContent","dividers","ev","marginTop","DialogActions","autoFocus","validateInput","previousPrice","placeInfo","setPlaceInfo","selectedSources","setSelectedSources","checkErrors","updatePlaceInfo","newValue","place","Object","assign","err","valuetext","setAvailableSources","hasPrice","setHasPrice","hasAverageTime","setHasAverageTime","dialogOpen","availableSources","val","required","placeholder","e","InputLabelProps","shrink","multiline","rows","Switch","old","labelPlacement","Slider","disabled","marginLeft","defaultValue","getAriaValueText","step","marks","FormControl","InputLabel","Select","native","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","distance","onSortEnd","oldIndex","newIndex","arrayMove","axis","acceptedFileFormats","onCloseCallback","onFinishCallback","loading","acceptedFiles","dropzoneProps","filesLimit","onDrop","files","imagefile","FormData","append","finally","handleFileUpload","outline","addImageDialogOpen","setAddImageDialogOpen","file","handleAddPhoto","autocomplete","borderBottom","locationData","setLocationData","mapHeight","selectedParkingCallback","changedParkingMarkerCallback","addParkingCallback","useFunction","callback","ref","useRef","current","useCallback","apply","this","arguments","Geocode","setApiKey","enableDebug","selectParkingHandler","addNewParkingHandler","geocodeFromLatLng","newLat","newLng","onMarkerLocationChanged","onParkingDataChanged","fromLatLng","address","results","formatted_address","addressArray","address_components","city","getCity","country","getCountry","changeLocationData","latitude","longitude","i","types","long_name","MyMapComponent","compose","withProps","containerElement","mapElement","withStateHandlers","infoWindow","show","toggleDraggableInfoWindow","draggableMarkerLocation","withGoogleMap","defaultZoom","center","lat","markerLocation","lng","defaultCenter","visible","draggable","onDragEnd","markerChanger","onParkingDataChange","latLng","onCloseClick","onToggleOpen","infoWindows","parkingData","location","parseFloat","parkingId","icon","showInfo","handleKeyPress","onMarkerLocationChange","which","keyCode","test","fromAddress","geometry","split","FullMap","parking","iw","onKeyPress","onPlaceSelected","latitudeValue","longitudeValue","navigator","geolocation","getCurrentPosition","coords","alert","useMemo","parkingMarkerData","setParkingMarkerData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","getClosestParking","parkingDataChanged","SortableItem","elevation","SortableList","oldArray","textFieldLabel","description","selectedTags","setSelectedTags","selectedCategories","setSelectedCategories","dialogAddTagOpen","setDialogAddTagOpen","dialogAddCategoryOpen","setDialogAddCategoryOpen","availableCategories","setAvailableCategories","availableTags","setAvailableTags","AutocompleteChip","newTag","tagId","newCat","categoryId","initialScheduleData","openDay","closeDay","openTime","closeTime","marginRight","ReviewCard","review","CardContent","Avatar","alt","photoUrl","surname","Rating","rating","readOnly","upvotes","moment","timeAdded","format","reviewsInfo","reviews","overflowX","setReviews","filterBy","setFilterBy","getReviewsForPlace","debounceScroll","debounce","round","scrollWidth","scrollLeft","clientWidth","totalReviews","handleScrollDebounced","handleClose","Fragment","overallStarRating","precision","RadioGroup","Radio","onScroll","persist","handleScroll","picker","intervals","setIntervals","getCloseDay","currentPeriod","isBefore","TimePicker","ampm","oldIntervals","InputProps","disableUnderline","scheduleData","setScheduleData","periods","Divider","pickerStyle","headerLeft","setPeriods","handleIntervalChange","newIntervals","oldPeriods","filtered","oldData","schedule","isDefault","DatePicker","views","from","to","generateWeekdayViews","isScheduleEnabled","setIsScheduleEnabled","state","float","paperContent","loader","bottom","match","website","phoneNumber","hasSchedule","isPublic","isVerified","source","price","sources","setSources","setPlaceId","firstTimeLoading","setFirstTimeLoading","setCheckErrors","ColorButton","getContrastText","green","formFeedback","saveChanges","keys","errorsExists","formPlaceInfo","updateAll","all","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","updateSources","er","d","tags","categories","responses","CircularProgress","obj","CategoriesDisplay","SubheaderDisplay","media","expand","transform","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","CardHeader","subheader","substring","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debouncedInput","InputBase","orientation","topBar","zIndex","searchBox","isLoadingData","setIsLoadingData","word","query","encodeURI","elementType","isFitWidth","disableImagesLoaded","updateOnEachImageLoad","boxSizing","Copyright","Date","getFullYear","minHeight","footer","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","Appbar","useTheme","setOpen","CssBaseline","AppBar","edge","Drawer","anchor","List","ListItem","Link","ListItemText","exact","Home","AddPlace","ApiPlaces","Redirect","App","utils","DateFnsUtils","Component","form","submit","AuthenticatedRoute","rest","Route","render","SnackbarFeedback","Snackbar","autoHideDuration","Alert","severity","AlertDialogFeedback","remove","DialogContentText","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","email","setEmail","password","setPassword","handleLogin","signInWithEmailAndPassword","user","currentUser","getIdToken","idToken","set","Container","maxWidth","mt","gutterBottom","document","getElementById"],"mappings":"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","file":"static/js/main.06505644.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(1)\n    },\n    input: {\n        display: \"none\"\n    }\n});\n\n\n\n\n\nconst Home = props => {\n    const { classes } = props;\n    return (\n        <div>\n\n        </div>\n    );\n};\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit'\nimport TextField from \"@material-ui/core/TextField\"\nimport useDebounce from \"../helpers/debounce\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Chip from \"@material-ui/core/Chip\";\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, checkable} = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n\n                {checkable ? <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell> : null}\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right'  : 'left' }\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n    headCells: PropTypes.object.isRequired,\n    checkable: PropTypes.bool.isRequired\n};\n\n\n\n\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, title, changePageCallback, keyword, setKeyword, customToolbarElements} = props;\n\n\n    const debouncedSearch = useDebounce(keyword, 300);\n\n\n\n    useEffect( () => {\n            changePageCallback(1,keyword)\n        },\n        [debouncedSearch]\n    );\n\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    {title}\n                </Typography>\n            )}\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : <div style={{display: \"flex\", alignItems: \"center\"}}>\n                <TextField id=\"standard-basic\" label=\"Search\" onChange={ event =>{setKeyword(event.target.value)}}/>\n                {!!customToolbarElements ? customToolbarElements : null}\n            </div>}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired\n};\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    centerCell: {\n        textAlign: \"center\",\n        width: '100%'\n    },\n    rowNotPublished:{\n        backgroundColor: \"#ffcdd2\"\n    },\n    rowNotVerified:{\n        backgroundColor: \"#fff9c4\"\n    },\n    rowBasic: {\n        backgroundColor: \"#FFFFFF\"\n    }\n\n}));\n\nexport default function TableComponent({title, headCells, pagingInfo, data, checkable, changePageCallback, updateCallback, removeCallback, id, isLoading, customToolbarElements}) {\n\n    TableComponent.propTypes = {\n        title: PropTypes.string.isRequired,\n        headCells: PropTypes.object.isRequired,\n        pagingInfo: PropTypes.object,\n        data: PropTypes.object.isRequired,\n        checkable: PropTypes.bool.isRequired,\n        changePageCallback: PropTypes.func,\n        updateCallback: PropTypes.func,\n        removeCallback: PropTypes.func,\n        id: PropTypes.string.isRequired,\n        isLoading: PropTypes.bool,\n        customToolbarElements: PropTypes.object\n    };\n\n\n\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [keyword, setKeyword] = useState('');\n\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = data.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleCheckboxChange = (event, name) =>{\n\n            const selectedIndex = selected.indexOf(name);\n            let newSelected = [];\n\n            if (selectedIndex === -1) {\n                newSelected = newSelected.concat(selected, name);\n            } else if (selectedIndex === 0) {\n                newSelected = newSelected.concat(selected.slice(1));\n            } else if (selectedIndex === selected.length - 1) {\n                newSelected = newSelected.concat(selected.slice(0, -1));\n            } else if (selectedIndex > 0) {\n                newSelected = newSelected.concat(\n                    selected.slice(0, selectedIndex),\n                    selected.slice(selectedIndex + 1),\n                );\n            }\n\n            setSelected(newSelected);\n\n    };\n\n    const handleClick = (event, name) => {\n\n    };\n\n\n    const handleChangePage = (event, newPage) => {\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n        console.log(\"handleChangeRowsPerPage\")\n\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                {isLoading ? <LinearProgress/> : null }\n                <EnhancedTableToolbar\n                    title={title}\n                    numSelected={selected.length}\n                    changePageCallback={changePageCallback}\n                    keyword={keyword}\n                    setKeyword={setKeyword}\n                    customToolbarElements={customToolbarElements}\n                />\n                 <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={data.length}\n                            headCells={headCells}\n                            checkable={checkable}\n                        />\n\n\n                        <TableBody>\n                            {stableSort(data, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    const rowStyle = row['isVerified'] !== undefined  && row['isVerified'] === false ? classes.rowNotVerified :\n                                        row['isPublic'] !== undefined && row['isPublic'] === false ? classes.rowNotPublished :  classes.rowBasic;\n\n                                    return (\n                                        <TableRow\n                                            className={rowStyle}\n                                            hover\n                                            onClick={(event) => handleClick(event, row.name)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            {checkable ? <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    onChange={(event)=>handleCheckboxChange(event, row.name)}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell> : null}\n\n                                            {headCells.map(header=>{\n                                                if(header.isId){\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\n                                                            {row[header.id]}\n                                                        </TableCell>\n                                                }else if(header.id === 'actions' ){\n                                                        return <TableCell >\n                                                            <div>\n                                                                <IconButton onClick={()=>updateCallback(row[id])} size=\"small\" aria-label=\"edit\" >\n                                                                    <EditIcon fontSize=\"small\" />\n                                                                </IconButton>\n\n                                                                <IconButton size=\"small\" aria-label=\"delete\" >\n                                                                    <DeleteIcon onClick={()=>removeCallback(row[id])} fontSize=\"small\" />\n                                                                </IconButton>\n                                                            </div>\n                                                            </TableCell>\n                                                }else{\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\n                                                }\n\n                                            })}\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows}}>\n\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\n                                        <TableCell colSpan={6} className={classes.centerCell}>\n                                            <Typography variant=\"h6\" noWrap>\n                                                No results\n                                            </Typography>\n                                        </TableCell>}\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10]}\n                    component=\"div\"\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\n\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\nexport default function useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n\n        [value]\n    );\n\n    return debouncedValue;\n}","import { createBrowserHistory as history} from 'history';\n\nexport default history();","import Cookies from 'js-cookie'\n\nexport const getAccessToken = () => Cookies.get('access_token');\nexport const isAuthenticated = () => !!getAccessToken();","import React from \"react\";\nimport axios from \"axios\"\nimport history from \"../helpers/history\";\nimport {getAccessToken} from \"../helpers/auth\"\n\nconst request = async function(options, contentType) {\n\n    const client = axios.create({\n        baseURL: false ? \"http://localhost:8080/\" : \"https://www.traveldirection.ax.lt:8080/\",\n        headers: {\n            'Content-Type': (contentType == null) ? 'application/json': contentType,\n            'Accept':  'application/json',\n            'Access-Control-Allow-Origin': '*',\n            \"Authorization\": getAccessToken()\n        },\n    });\n\n    const onSuccess = function (response) {\n        console.debug('Request Successful!', response);\n        return response.data;\n    };\n\n    const onError = function (error) {\n        console.debug('Request Failed:', error.config);\n        if (error.response) {\n            console.debug('Status:', error.response.status);\n            if(error.response.status === 403){\n                history.push(\"/login\")\n            }\n            console.debug('Data:', error.response.data);\n            console.debug('Headers:', error.response.headers);\n        } else {\n            console.debug('Error Message:', error.message);\n        }\n        return Promise.reject(error.response || error.message);\n    };\n\n    return client(options)\n        .then(onSuccess)\n        .catch(onError);\n};\n\nconst getRequest = function (path, urlData= \"\") {\n    return request({\n        url:path+urlData,\n        method: 'GET'\n    });\n};\n\nconst postRequest = function (path, data, urlData = \"\") {\n    return request({\n        url:    path+urlData,\n        method: 'POST',\n        data: data\n    });\n};\n\nconst postMultipartRequest = function (path, formData) {\n    return request({\n        url: path,\n        method: 'POST',\n        data: formData\n    }, 'multipart/form-data' /*'application/x-www-form-urlencoded'*/);\n};\n\nconst RequestType = {\n    getRequest, postRequest, postMultipartRequest\n};\n\nexport default RequestType\n\n\n","import RequestType from '../Networking/NetworkLayerCentral'\n\n//Places\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\nconst removePlace = (urlParams) => RequestType.getRequest(\"api/v1/place/delete\", urlParams);\n\nconst Places = {getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces, removePlace};\n\n//Tags\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\nconst Tags = {getAllTags, addTag};\n\n//Category\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\nconst getAllCategories = () => RequestType.getRequest(\"api/v1/categories/all\");\nconst Categories = {addCategory, getAllCategories};\n\n//Photo\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\nconst Photos = {addPhoto, uploadPhoto};\n\n\n//Parking\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\nconst Parking = {getParkingByLocation, insertNewParking};\n\n\n//TagsPlace\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\nconst TagsPlace = {updateTagsForPlace};\n\n\n//CategoriesPlace\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\nconst CategoriesPlace = {updateCategoriesForPlace};\n\n//PhotoPlace\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\nconst ParkingPlace = {updateParkingForPlace};\n\n//PhotoPlace\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\nconst PhotoPlace = {updatePhotoForPlace};\n\n//Schedule\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\nconst Schedule = {updateScheduleForPlace};\n\n//ReviewsPlace\nconst getPlaceReviews = (urlParams) => RequestType.getRequest(\"api/v1/reviews/all\", urlParams);\nconst Reviews = {getPlaceReviews};\n\n//Sources\nconst getSources = () => RequestType.getRequest(\"api/v1/source/all\");\nconst addSource = (data) => RequestType.postRequest(\"api/v1/source/insert\",data);\nconst Source = {getSources, addSource};\n\n//SourcePlace\nconst updateSourcesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/sourceplace/update\", data, urlParams);\nconst SourcePlace = {updateSourcesForPlace};\n\nconst API = {SourcePlace, Source,Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule, Reviews};\n\nexport default API\n\n","// src/common/providers/APIErrorProvider/index.js\nimport React, { useState, useCallback } from 'react';\n\nexport const AlertDialogContext = React.createContext({\n    alertConfig: null,\n    addAlertConfig: () => {},\n    removeAlertConfig: () => {}\n});\n\nexport default function AlertDialogProvider({ children }) {\n    const [alertConfig, setAlertConfig] = useState(null);\n\n    const contextValue = {\n        alertConfig,\n        addAlertConfig: (title, message, func, onClose=undefined) => setAlertConfig({ title, message, func,onClose}),\n        removeAlertConfig: (onCloseFunc) => setAlertConfig(null)\n    };\n\n    return (\n        <AlertDialogContext.Provider value={contextValue}>\n            {children}\n        </AlertDialogContext.Provider>\n    );\n}","import React, {useContext} from \"react\";\nimport {AlertDialogContext} from \"./AlertDialogContext\";\n\nexport default function UseAlertDialogContext() {\n    const { alertConfig, addAlertConfig, removeAlertConfig } = useContext(AlertDialogContext);\n    return { alertConfig, addAlertConfig, removeAlertConfig };\n}\n","const Strings = {\n    DIALOG_PLACE_PUBLISH_TITLE : 'Place publicity',\n    DIALOG_PLACE_PUBLISH_MESSAGE: \"This place will be visible for all users. Are you sure?\",\n    DIALOG_PLACE_UNPUBLISH_MESSAGE :\"This place will not be visible anymore. Are you sure?\",\n\n    DIALOG_PLACE_INSERT_TITLE: \"Insert place\",\n    DIALOG_PLACE_INSERT: \"Are you sure you want to insert this place?\",\n\n    DIALOG_PLACE_UPDATE_TITLE: \"Update place\",\n    DIALOG_PLACE_UPDATE: \"Are you sure you want to make changes to this place?\",\n\n    DIALOG_PLACE_VERIFY_TITLE: \"Place verification\",\n    DIALOG_PLACE_VERIFY_MESSAGE: \"This is a user's suggested place. Are you sure you want to verify this place and make it visible to others?\",\n\n    DIALOG_PLACE_DELETE_TITLE: \"Delete place\",\n    DIALOG_PLACE_DELETE_MESSAGE: \"This action will remove this place permanently. Are you sure you want to proceed?\",\n\n    SNACKBAR_PLACE_INSERTED_SUCCESS: \"Place inserted successfully\",\n    SNACKBAR_PLACE_REMOVE_SUCCESS: \"Place was removed successfully\",\n    SNACKBAR_ERROR: \"Something went wrong!\",\n    SNACKBAR_CHANGES_SAVED: \"All changes saved!\"\n};\n\nexport default Strings;","import React, { useState, useCallback } from 'react';\nimport { useContext } from 'react';\n\nexport const SnackbarContext = React.createContext({\n    config: null,\n    addConfig: () => {},\n    removeConfig: () => {}\n});\n\n\nexport default function SnackbarProvider({ children }) {\n    const [config, setConfig] = useState(null);\n\n    const removeConfig = () => setConfig(null);\n    const addConfig = (success, message) => setConfig({ success, message });\n\n    const contextValue = {\n        config,\n        addConfig: (success, message) => addConfig(success, message),\n        removeConfig: () => removeConfig()\n    };\n\n    return (\n        <SnackbarContext.Provider value={contextValue}>\n            {children}\n        </SnackbarContext.Provider>\n    );\n}","import { useContext } from 'react';\nimport {SnackbarContext} from \"./SnackbarContext\";\n\nexport default function UseSnackbarContext() {\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\n    return { config, addConfig, removeConfig };\n}\n","import React, { useState } from 'react';\n\nexport const AppBarTitleContext = React.createContext({\n    title: \"\",\n    setTitle: () => {},\n});\n\nexport default function AppBarTitleProvider({ children }) {\n    const [title, setTitle] = useState(\"Home\");\n\n    const contextValue = {\n        title,\n        setTitle: (title) => setTitle(title)\n    };\n\n    return (\n        <AppBarTitleContext.Provider value={contextValue}>\n            {children}\n        </AppBarTitleContext.Provider>\n    );\n}","import React, {useContext} from \"react\";\nimport {AppBarTitleContext} from \"./AppBarTitleContext\";\n\nexport default function UseAppBarTitleContext() {\n    const { title, setTitle } = useContext(AppBarTitleContext);\n    return { title, setTitle };\n}\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TableComponent from \"../components/TableComponent\";\nimport API from \"../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Box from \"@material-ui/core/Box\";\nimport history from \"../helpers/history\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Popover from \"@material-ui/core/Popover\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {forEach} from \"react-bootstrap/cjs/ElementChildren\";\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\n\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    input: {\n        display: \"none\"\n    },\n\n    sortingButtons: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\"\n\n},\n\n    root:{\n        height:\"100vh\",\n        width:\"100%\",\n        overflow: \"auto\"\n    },\n    buttonsDiv: {\n        backgroundColor: \"red\",\n        justifyContent: \"flex-end\"\n    },\n    content:{\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    }\n});\n\n\nconst headCells = [\n    { id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\n    { id: 'address', numeric: false, disablePadding: false, label: 'Address',isId: false},\n    { id: 'city', numeric: false, disablePadding: false, label: 'City',isId: false },\n    { id: 'country', numeric: false, disablePadding: false, label: 'Country',isId: false },\n    { id: 'phoneNumber', numeric: false, disablePadding: false, label: 'Phone Number',isId: false },\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\n];\n\nfunction Places(props) {\n\n    const [data, setData] = useState([]);\n    const [pageData, setPageData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { classes } = props;\n\n\n    const [filterOptions, setFilterOptions] = useState([\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\n\n    const [filterQuery, setFilterQuery] = useState(\"\");\n\n\n    const { addAlertConfig } = UseAlertDialogContext();\n    const { addConfig } = UseSnackbarContext();\n\n    useEffect(()=>{\n        console.log(\"Filter query\", filterQuery);\n        getAllPlaces(\"?o=\"+filterQuery)\n    },[filterQuery]);\n\n    function parseData(data){\n        setIsLoading(false);\n        let placesData = [];\n        data.list.map(row => {\n            placesData.push(row)\n        });\n\n        delete data.list;\n        setData(placesData);\n        setPageData(data);\n    }\n\n    function updatePlaceCallback(id){\n        history.push(\"/app/addplace/\"+id)\n    }\n    function removePlaceCallback(id){\n        setIsLoading(true);\n        addAlertConfig(Strings.DIALOG_PLACE_DELETE_TITLE, Strings.DIALOG_PLACE_DELETE_MESSAGE, function () {\n            API.Places.removePlace(\"?p=\"+id).then(response=>{\n                let tmp = [];\n                data.map(row=>{\n                    if(row.placeId !== id){\n                        tmp.push(row)\n                    }\n                });\n                setData(tmp);\n                addConfig(true, Strings.SNACKBAR_PLACE_REMOVE_SUCCESS)\n                setIsLoading(false)\n            }).catch(error=>{\n                setIsLoading(false);\n                addConfig(false, Strings.SNACKBAR_ERROR)\n            })\n        }, ()=>{setIsLoading(false)})\n    }\n\n    const changePageCallback = (p=0, keyword=\"\") => {\n        setIsLoading(true);\n        getAllPlaces(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword+\"&o=\"+filterQuery)\n    };\n\n\n    //Sorting stuff\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const filterOptionsChanged = (name) =>{\n        let filters = [];\n        let fq = [];\n        filterOptions.map(row=>{\n            if(row.filterName === name){\n                row.filter = !row.filter\n            }\n            if(row.filter){\n                fq.push(row.filterName)\n            }\n            filters.push(row)\n        });\n\n        setFilterQuery(fq.join(\",\"));\n        setFilterOptions(filters)\n    };\n\n    const customToolbarElements = () =>{\n        return <div>\n            <Tooltip aria-describedby={id} title=\"Filter list\">\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\n                    <FilterListIcon />\n                </IconButton>\n            </Tooltip>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={()=>{setAnchorEl(null)}}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <div className={classes.sortingButtons}>\n                    {filterOptions.map(row=>{\n                        return <FormControlLabel\n                            control={<Checkbox checked={row.filter} onChange={()=>filterOptionsChanged(row.filterName)} name={row.filterName} />}\n                            label={row.filterLabel}\n                        />\n                    })}\n                </div>\n\n            </Popover>\n        </div>\n    };\n    /*------------------------------------------------------------------------------------------------------*/\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content} >\n                <TableComponent\n                    title={\"Places\"}\n                    headCells={headCells}\n                    data={data}\n                    pagingInfo={pageData}\n                    checkable={false}\n                    changePageCallback={changePageCallback}\n                    updateCallback={updatePlaceCallback}\n                    removeCallback={removePlaceCallback}\n                    id={\"placeId\"}\n                    isLoading={isLoading}\n                    customToolbarElements={customToolbarElements()}\n                />\n\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <Button\n                        onClick={()=>{history.push(\"/app/addplace\")}}\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        startIcon={<AddIcon />}>\n                        Add\n                    </Button>\n                </Box>\n            </div>\n\n        </div>\n    );\n\n    function getAllPlaces(urlParams=\"\") {\n        API.Places.getAllPlacesAdmin(urlParams).then(response=>{\n            parseData(response)\n        }).catch(error=>{\n            console.log(error)\n        })\n    }\n}\n\nPlaces.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Places);","export const priceRange = [\n    {\n        value: 0,\n        label: \"$\",\n    },\n    {\n        value: 25,\n        label: \"$$\",\n    },\n    {\n        value: 50,\n        label: \"$$$\",\n    },\n    {\n        value: 75,\n        label: \"$$$$\",\n    },\n    {\n        value: 100,\n        label: \"$$$$$\",\n    }\n];\n","export const averageTimeSpent = [\n    {\n        value: 30,\n        label: 30,\n    },\n    {\n        value: 60,\n        label: 60,\n    },\n    {\n        value: 90,\n        label: 90,\n    },\n    {\n        value: 120,\n        label: 120,\n    },\n    {\n        value: 150,\n        label: 150,\n    },\n    {\n        value: 180,\n        label: 180,\n    },\n    {\n        value: 210,\n        label: 210,\n    },\n    {\n        value: 240,\n        label: 240,\n    },\n    {\n        value: 270,\n        label: 270,\n    },\n];","\nimport React, {useEffect, useState} from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Paper from \"@material-ui/core/Paper\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = theme => ({\n    autoComplete: {\n        margin: theme.spacing(1)\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'left',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(1),\n        margin: 0,\n    },\n    autoCompleteChipContainer: {\n        padding: theme.spacing(1)\n    }\n});\n\nfunction AutoCompleteChip(props){\n\n    const {options, setOptions, selectedOptions, setSelectedOptions, classes, label, id} = props;\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\n    const [firstLoad, setFirstLoad] = useState(true);\n\n    function handleDelete(data) {\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\n        setOptions(\n            [\n                ...options,\n                data\n            ]\n        )\n    }\n\n    useEffect(()=>{\n        if(firstLoad && options.length>0){\n            let data = [];\n            options.map(row=>{\n                let found = false;\n                selectedOptions.map(row1=>{\n                    if(JSON.stringify(row) === JSON.stringify(row1)){\n                        found = true\n                    }\n                });\n                if(!found){\n                   data.push(row)\n                }\n            });\n            setOptions(data);\n            setFirstLoad(false)\n        }\n    },[options]);\n\n    function handleInput(event, value){\n        setCurrentVal({\"name\": \"\"});\n        setSelectedOptions(\n            [\n                ...selectedOptions,\n                value\n            ]\n        );\n        setOptions(options.filter(item => item !== value))\n    }\n\n    return(\n        <div>\n            <Box  className={classes.autoCompleteChipContainer}>\n                {selectedOptions.length !== 0 &&\n                <Box component=\"ul\" className={classes.root}>\n                    {\n                        selectedOptions.map(option => {\n                            return(\n                                <li key={option[id]}>\n                                    <Chip\n                                        variant=\"outlined\"\n                                        label={option.name}\n                                        onDelete={() => handleDelete(option)}\n                                        className={classes.chip}\n                                    />\n                                </li>\n                            )\n                        })\n                    }\n                </Box>\n                }\n\n                <Autocomplete\n                    className={classes.autoComplete}\n                    value={getCurrentVal}\n                    options={options}\n                    onChange={handleInput}\n                    disableClearable\n                    getOptionLabel={(option) =>  option.name}\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n                />\n            </Box>\n        </div>\n    )\n}\n\nAutoCompleteChip.propTypes = {\n    setSelectedOptions: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired,\n    setOptions: PropTypes.func.isRequired,\n    selectedOptions: PropTypes.array.isRequired,\n    classes: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(AutoCompleteChip)","import {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    }\n});\n\nfunction AddSourceDialog(props){\n\n    function validateInput(){\n        let error = false;\n        if(text.length <= 3 || url.length <=3)\n            error = true;\n        setError(error);\n        return error\n    }\n\n    let {classes, open, action, setDialogOpen} = props;\n    const [text, setText] = useState(\"\");\n    const [url, setUrl] = useState(\"\");\n    const [error, setError] = useState(false);\n    return(\n        <div>\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\">\n                    Insert source\n                </DialogTitle>\n                <DialogContent dividers>\n                        <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}\n                                   label=\"Source name\" variant=\"outlined\" fullWidth />\n                        <TextField style={{marginTop:\"16px\"}} error={error} onChange = {(ev) => {setUrl(ev.target.value)}}\n                                   label=\"Source url\" variant=\"outlined\" fullWidth />\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={()=>setDialogOpen(false)} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button autoFocus color=\"primary\" onClick={() => {\n                        !validateInput() && action(text, url);\n                        setDialogOpen(false)\n                    }}>\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\nexport default withStyles(styles)(AddSourceDialog)","import React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {withStyles} from \"@material-ui/core\";\nimport Slider from \"@material-ui/core/Slider\";\nimport {priceRange} from \"../../helpers/priceRange\";\nimport {averageTimeSpent} from \"../../helpers/averageTimeSpent\"\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport AutoCompleteChip from \"../AutocompleteChip\";\nimport API from \"../../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddSourceDialog from \"../AddSourceDialog\";\n\n\nconst styles = theme => ({});\nlet previousPrice = \"\";\n\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo, selectedSources, setSelectedSources, error, setError, checkErrors}) {\n\n    const updatePlaceInfo = (event, newValue) => {\n        const {name, value, id} = event.target;\n        let place = Object.assign({}, placeInfo, {});\n        let err = Object.assign({}, error, {});\n        if (id !== \"\") {\n            place[id] = valuetext(newValue[0]);\n        } else {\n            //err[name] = name==='name' && value.length === 0;\n            place[name] = value\n        }\n        console.log(\"Updated place\", place);\n        setError(err);\n        setPlaceInfo(place)\n    };\n\n    const getSources = () =>{\n        API.Source.getSources().then(response=>{\n            setAvailableSources(response)\n        }).catch(error=>{\n\n        })\n    };\n\n    const handleAddSource = (name, url) =>{\n        API.Source.addSource({name: name, url: url}).then(response=>{\n            setAvailableSources(\n                [\n                    ...availableSources,\n                    response\n                ]\n            );\n            setSelectedSources([\n                ...selectedSources,\n                response\n            ]);\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n\n    useEffect(()=>{\n        getSources()\n    },[]);\n\n    console.log(placeInfo[\"averageTimeSpent\"]);\n    const [hasPrice, setHasPrice] = useState(placeInfo[\"price\"] !== \"\");\n    const [hasAverageTime, setHasAverageTime] = useState( parseInt(placeInfo[\"averageTimeSpent\"]) !== 0);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n\n    const [availableSources, setAvailableSources] = useState([]);\n\n    function valuetext(value) {\n        let val = \"\";\n        priceRange.map(row => {\n            if (row.value === value)\n                val = row.label\n        });\n        return val\n    }\n\n    return <div>\n        <Typography variant=\"h6\">\n            Basic place information\n        </Typography>\n        <br/>\n        <TextField\n            required\n            error={checkErrors && error['name']}\n            label=\"Place name\"\n            style={{margin: 8}}\n            placeholder=\"Enter the place name\"\n            fullWidth\n            value={placeInfo['name']}\n            name=\"name\"\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Place description\"\n            style={{margin: 8}}\n            placeholder=\"Describe the place thoroughly\"\n            fullWidth\n            multiline\n            name=\"description\"\n            value={placeInfo['description']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            rows={4}\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Phone number\"\n            style={{margin: 8}}\n            placeholder=\"Enter phone number\"\n            fullWidth\n            name=\"phoneNumber\"\n            value={placeInfo['phoneNumber']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Website\"\n            style={{margin: 8}}\n            placeholder=\"Enter website\"\n            fullWidth\n            name=\"website\"\n            value={placeInfo['website']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n\n        <br/>\n        <br/>\n       <AutoCompleteChip\n                id=\"source\"\n                label=\"Select sources\"\n                options={availableSources}\n                setOptions={setAvailableSources}\n                setSelectedOptions={setSelectedSources}\n                selectedOptions={selectedSources}\n       />\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => setDialogOpen(true)}\n            startIcon={<AddIcon />}>\n            Add missing source\n        </Button>\n        <AddSourceDialog\n            action={handleAddSource}\n            open={dialogOpen}\n            setDialogOpen={setDialogOpen}\n        />\n\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <div style={{display: \"flex\"}}>\n            <FormControlLabel\n                control={\n                    <Switch\n                        checked={hasPrice}\n                        onChange={() => {\n                            setHasPrice(old => {\n                                let place = Object.assign({}, placeInfo, {});\n                                if (old === false) {\n                                        previousPrice = place['price'];\n                                        place[\"price\"] = \"\";\n                                        setPlaceInfo(place);\n                                    }else{\n                                        place['price'] = previousPrice;\n                                        setPlaceInfo(place);\n                                    }\n                                    return !old\n                                }\n                            )\n                        }}\n                        name=\"price\"\n                        color=\"primary\"\n                    />\n                }\n                label=\"Price\"\n                labelPlacement=\"start\"\n            />\n\n            <Slider\n                id=\"price\"\n                onChange={updatePlaceInfo}\n                disabled={!hasPrice}\n                value={priceRange.map(row => {\n                    if (row.label === placeInfo['price']) return row.value\n                })}\n                style={{width: \"60%\", marginLeft: \"48px\"}}\n                defaultValue={0}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider-always\"\n                step={25}\n                marks={priceRange}\n            />\n        </div>\n        <br/>\n        <br/>\n        <div style={{display: \"flex\"}}>\n            <FormControlLabel\n                control={\n                    <Switch\n                        checked={hasAverageTime}\n                        onChange={() => setHasAverageTime(old => {\n                            let place = Object.assign({}, placeInfo, {})\n                            place[\"averageTimeSpent\"] = old === true ? 0 : 30\n                            setPlaceInfo(place)\n                            return !old\n                        })}\n                        color=\"primary\"\n                    />\n                }\n                label=\"Average time Spent\"\n                labelPlacement=\"start\"\n            />\n\n\n            <FormControl variant=\"outlined\" style={{width: \"60%\", marginLeft: \"48px\"}}>\n                <InputLabel>Minutes</InputLabel>\n                <Select\n                    disabled={!hasAverageTime}\n                    native\n                    value={parseInt(placeInfo['averageTimeSpent'], 10)}\n                    onChange={updatePlaceInfo}\n                    label=\"Average Time spent\"\n                    inputProps={{\n                        name: 'averageTimeSpent'\n                    }}\n                >\n                    <option disabled value=\"0\">\"\"</option>\n                    {\n                        averageTimeSpent.map(row=>{\n                            return <option value={parseInt(row.value, 10)}> {row.value}</option>\n                        })\n                    }\n                </Select>\n            </FormControl>\n        </div>\n    </div>\n}\n\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport React, {useMemo, useState} from \"react\"\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Gallery from \"react-photo-gallery\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Delete from \"@material-ui/icons/Delete\"\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst imgWithClick = { cursor: \"pointer\" };\n\nconst Photo = ({ index, onItemDelete, photo, margin, direction, top, left }) => {\n\n    const styles = {\n        imgContainer: {\n            margin: margin,\n            display: 'inline',\n            position: 'relative',\n            width: '300px',\n            height: '300px',\n        }\n    }\n    if (direction === \"column\") {\n        styles.imgContainer.position = \"absolute\";\n        styles.imgContainer.imgStyle.left = left;\n        styles.imgContainer.imgStyle.top = top;\n    }\n\n    const handleDelete = event => {\n        onItemDelete(photo);\n    }\n\n        return (\n\n            <Card style={styles.imgContainer}>\n                <CardMedia\n                    style={{height: 0, paddingTop: '80%'}}\n                    image={photo.src}\n                />\n                <CardActions disableSpacing>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        startIcon={<DeleteIcon />}\n                        onClick = {(event) => {handleDelete(event)}}\n                    >\n                        Delete\n                    </Button>\n                </CardActions>\n\n            </Card>\n        )\n\n};\n\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\nconst SortableGallery = SortableContainer(({ items, onItemDelete}) => (\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>} />\n));\n\nfunction ReorderablePhotos(props){\n    let {setPhotos, photos, srcName, keyName} = props\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\n    };\n    function handleItemDelete(photo){\n        setPhotos(photos.filter(item => {return item[keyName].toString() !== photo.key}))\n    }\n\n    let modifiedData = photos.map(item =>  {\n        return(\n    {\n        key: item[keyName].toString(),\n        src: item[srcName],\n        width: 1,\n        height: 1\n    })\n\n})\n        return (\n            <div >\n                <SortableGallery distance={10} items={modifiedData} onSortEnd={onSortEnd} axis={\"xy\"} onItemDelete = {handleItemDelete} />\n            </div>\n        );\n\n}\n\n\nexport default  ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport {Card} from \"@material-ui/core\";\nimport {DropzoneArea} from \"material-ui-dropzone\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport PropTypes from \"prop-types\";\nimport API from \"../Networking/API\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n});\n\nconst acceptedFileFormats = ['image/jpeg', 'image/png', 'image/bmp', 'image/jpg']\n\nfunction AddImageDialog(props){\n\n    const {onCloseCallback, open, onFinishCallback} = props\n    const [loading, setIsLoading] = useState(false)\n\n    function handleFileUpload(files) {\n        setIsLoading(true)\n\n        var imagefile = files[0]\n        let formData = new FormData()\n        formData.append(\"image\", imagefile)\n\n        API.Photos.uploadPhoto(formData).then(response => {\n            onFinishCallback(response)\n        }).catch(err => {\n            onFinishCallback()\n        }).finally(() => {\n            setIsLoading(false)\n        })\n    }\n\n    return(\n        <div>\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\" >\n                    Photo upload\n                </DialogTitle>\n                {loading && <LinearProgress variant=\"query\" />}\n                <DialogContent dividers>\n                    <DropzoneArea\n                        acceptedFiles={acceptedFileFormats}\n                        dropzoneProps = {{disabled: loading}} filesLimit={1} onDrop={(files) => handleFileUpload(files)}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCallback} color=\"primary\">\n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\nAddImageDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onFinishCallback: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(AddImageDialog)\n","import React, {useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ReorderablePhotos from \"../ReorderablePhotos\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddImageDialog from \"../AddImageDialog\";\nimport {Card} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n});\n\nfunction PhotosInfo({classes, setPhotos, photos}) {\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\n\n    function handleAddPhoto(file) {\n        setAddImageDialogOpen(false);\n        if(file == null)\n            return;\n        setPhotos([\n            ...photos,\n            file]\n        )\n    }\n\n    return(\n        <div>\n            <Typography variant=\"h6\" >\n                Photos\n            </Typography>\n            <Card variant={\"outlined\"} className={classes.outline}>\n\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\n\n\n                <Button\n                    variant=\"text\"\n                    color=\"primary\"\n                    size=\"small\"\n                    style={{width: '15%'}}\n                    className={classes.button}\n                    onClick={() => setAddImageDialogOpen(true)}\n                    startIcon={<AddIcon />}>\n                    Add photo\n                </Button>\n\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(file) => handleAddPhoto(file)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\n\n\n            </Card>\n        </div>\n\n    )\n}\n\nexport default withStyles(styles)(PhotosInfo)\n\n\n","import React, {memo, useEffect, useMemo, useState} from 'react'\nimport Autocomplete from 'react-google-autocomplete';\nimport Geocode from \"react-geocode\";\nimport {compose, withProps, withStateHandlers} from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {map} from \"react-bootstrap/cjs/ElementChildren\";\nimport PropTypes, {func} from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../helpers/history\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport IconButton from \"@material-ui/core/IconButton\";\n\n\n//\n\n//Geocoding API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\n//Places API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\n//Maps API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\n\nconst styles = theme => ({\n    content: {\n        margin: theme.spacing(1)\n    },\n    autocomplete:{\n        width: '200px',\n        height: '40px',\n        fontSize: \"14px\",\n        border: \"0\",\n        borderBottom: \"2px solid grey\",\n        outline:\"0\",\n        marginBottom: \"4px\"\n    }\n});\n\nvar markerData = {};\nfunction CustomMap({classes, locationData, setLocationData, mapHeight, selectedParkingCallback, changedParkingMarkerCallback, addParkingCallback}){\n\n\n    CustomMap.propTypes = {\n        locationData: PropTypes.object,\n        setLocationData: PropTypes.func,\n        mapHeight: PropTypes.number\n    };\n\n\n\n    var parkingIcon = 'https://developers.google.com/maps/documentation/javascript/examples/full/images/parking_lot_maps.png';\n\n    Geocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\n    Geocode.enableDebug();\n\n\n    function useFunction(callback) {\n        const ref = React.useRef();\n        ref.current = callback;\n\n        return React.useCallback(function() {\n            const callback = ref.current;\n            if (typeof callback === \"function\") {\n                return callback.apply(this, arguments);\n            }\n        }, []);\n    }\n    const selectParkingHandler = useFunction(selectedParkingCallback);\n    const addNewParkingHandler = useFunction(addParkingCallback);\n\n\n    const onPlaceSelected = (place, onMarkerLocationChanged, onParkingDataChanged) => {\n\n        const address = place.formatted_address\n        const addressArray =  place.address_components\n        if(addressArray !== undefined){\n            const city = getCity( addressArray ),\n                country = getCountry(addressArray),\n                latitudeValue = place.geometry.location.lat(),\n                longitudeValue = place.geometry.location.lng();\n\n            onMarkerLocationChanged(latitudeValue, longitudeValue, address, city, country);\n            changeLocationData(city,country,address,latitudeValue,longitudeValue, onParkingDataChanged);\n        }\n    };\n\n    const onMarkerDragEnd = ( event, onMarkerLocationChanged, onParkingDataChanged) => {\n        let newLat = event.latLng.lat(),\n            newLng = event.latLng.lng();\n            geocodeFromLatLng(newLat, newLng, onMarkerLocationChanged, onParkingDataChanged)\n    };\n\n    function geocodeFromLatLng(newLat, newLng, onMarkerLocationChanged, onParkingDataChanged){\n        Geocode.fromLatLng( newLat , newLng ).then(\n            response => {\n                const address = response.results[0].formatted_address\n                const addressArray =  response.results[0].address_components\n                if(addressArray!==undefined){\n                    const city = getCity( addressArray ),\n                        country = getCountry( addressArray );\n\n                    onMarkerLocationChanged(newLat, newLng, address, city, country);\n\n                    changeLocationData(city,country,address,newLat,newLng, onParkingDataChanged);\n                }\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n\n    function geocodeFromAddress(address, onMarkerLocationChanged, onParkingDataChanged){\n        Geocode.fromAddress( address ).then(\n            response => {\n                const { lat, lng } = response.results[0].geometry.location;\n                const address = response.results[0].formatted_address;\n                const addressArray =  response.results[0].address_components;\n                if(addressArray!==undefined){\n                    const city = getCity( addressArray ),\n                        country = getCountry( addressArray );\n\n                    console.log(lat, lng)\n                    onMarkerLocationChanged(lat, lng, address, city, country);\n                        console.log(\"Pateko\")\n                    changeLocationData(city,country,address,lat,lng, onParkingDataChanged);\n                }\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n\n    function changeLocationData(city,country,address,latitude,longitude, onParkingDataChanged) {\n        let data = Object.assign({}, locationData, {});\n        data['city'] = city;\n        data['country'] = country;\n        data['address'] = address;\n        data['latitude'] = latitude;\n        data['longitude'] = longitude;\n        setLocationData(data);\n        markerData = data;\n        if (changedParkingMarkerCallback !== undefined){\n            changedParkingMarkerCallback(city,address,country, latitude,longitude, onParkingDataChanged);\n        }\n    }\n\n    /**\n     * Get the city and set the city input value to the one selected\n     *\n     * @param addressArray\n     * @return {string}\n     */\n    const getCity = ( addressArray ) => {\n        if(addressArray !== undefined){\n            let city = '';\n            for( let i = 0; i < addressArray.length; i++ ) {\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\n                    city = addressArray[ i ].long_name;\n                    return city;\n                }\n            }\n        }\n    };\n\n    function getCurrentPosition(onMarkerLocationChanged, onParkingDataChanged){\n        navigator.geolocation.getCurrentPosition(function(position) {\n            let newLat = position.coords.latitude,\n                newLng = position.coords.longitude;\n\n            Geocode.fromLatLng( newLat , newLng ).then(\n                response => {\n                    const address = response.results[0].formatted_address\n                    const addressArray =  response.results[0].address_components\n                    if(addressArray!==undefined){\n                        const city = getCity( addressArray ),\n                            country = getCountry( addressArray );\n\n                        onMarkerLocationChanged(newLat, newLng, address, city, country);\n                        changeLocationData(city,country,address,newLat,newLng, onParkingDataChanged);\n                    }\n                },\n                error => {\n                }\n            );\n            console.log(\"Latitude is :\", position.coords.latitude);\n            console.log(\"Longitude is :\", position.coords.longitude);\n        }, error=>{\n            alert(error.message + \"\\n\" + JSON.stringify(error))\n        });\n    }\n\n    const getCountry = (addressArray) =>{\n        //getCurrentPosition()\n        if(addressArray!=undefined){\n        let country = '';\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\n                country = addressArray[ i ].long_name;\n                return country;\n            }\n        }\n        }\n    };\n    /**\n     *\n     * Renders parking data markers\n     *\n     * @param onToggleOpen Method to open marker's info window\n     * @param infoWindows Marker info window\n     * @param parking data\n     * @returns {*}\n     */\n    const markers = (onToggleOpen, infoWindows, parking) =>{\n        return parking.map((location, i) => {\n\n            const latitude = parseFloat(location.latitude);\n            const longitude = parseFloat(location.longitude);\n\n            return (\n                <Marker\n                    key={location.parkingId}\n                    position={{ lat: latitude, lng: longitude}}\n                    options={{icon: parkingIcon}}\n                    onClick={()=>onToggleOpen(location.parkingId)}\n                >\n\n                    {infoWindows[i].showInfo && (\n                        <InfoWindow >\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                                {location.address}\n                                <Button\n                                    onClick={()=>{selectParkingHandler(location)}}\n                                    variant=\"text\"\n                                    color=\"secondary\"\n                                    size=\"large\"\n                                    className={classes.button}\n                                    startIcon={<AddIcon />}>\n                                    Add parking\n                                </Button>\n                            </div>\n                        </InfoWindow>\n                    )}\n\n                </Marker>\n            )\n        })\n    };\n\n\n    /**\n     * Map component that renders parking data and has draggable marker\n     */\n    const MyMapComponent = compose(\n        withProps({\n            containerElement: <div style={{ height: mapHeight }} />,\n            mapElement: <div style={{ height: `100%` }} />,\n        }),\n        withStateHandlers({\n                infoWindow: {show: false}\n            },{\n            toggleDraggableInfoWindow: ({draggableMarkerLocation}) => (show) => ({\n                infoWindow: {show: show}\n            })\n            }\n        ),\n        withGoogleMap\n    )(props =>\n\n        <GoogleMap\n            defaultZoom={12}\n            center={{lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }}\n            defaultCenter={{ lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }}\n        >\n\n\n\n            <Marker\n                name={'Dolores park'}\n                visible={true}\n                draggable={true}\n                onClick={()=>props.toggleDraggableInfoWindow(true)}\n                onDragEnd={e=>onMarkerDragEnd(e, props.markerChanger, props.onParkingDataChange)}\n                position={{ lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }} >\n\n                {props.infoWindow.show && addParkingCallback && (\n                    <InfoWindow onCloseClick={()=>{props.toggleDraggableInfoWindow(false)}}>\n                        <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                            {props.markerLocation.address}\n                            <Button\n                                onClick={()=>{\n\n                                    addNewParkingHandler(props.markerLocation)\n\n                                }}\n                                variant=\"text\"\n                                color=\"secondary\"\n                                size=\"large\"\n                                className={classes.button}\n                                startIcon={<AddIcon />}>\n                                Add new parking\n                            </Button>\n                        </div>\n                    </InfoWindow>\n                )}\n            </Marker>\n\n            {markers(props.onToggleOpen, props.infoWindows, props.parkingData)}\n        </GoogleMap>\n    );\n\n\n    const handleKeyPress = (event, onMarkerLocationChange, onParkingDataChange) =>{\n        const value = event.target.value;\n        if (event.which === 13 || event.keyCode === 13) {\n            if (/[a-zA-Z]+/.test(value)){\n                geocodeFromAddress(value, onMarkerLocationChange, onParkingDataChange)\n            }else{\n                let position = value.split(/[ ,]+/);\n                if(position.length === 2){\n                    geocodeFromLatLng(parseFloat(position[0]), parseFloat(position[1]), onMarkerLocationChange, onParkingDataChange)\n                }\n            }\n            return false;\n        }\n        return true;\n    };\n\n    /**\n     * Places autocomplete and map. This component holds it's inner states like draggableMarkerLocation, parkingData etc.\n     */\n    const FullMap = compose(\n        withProps(),\n        withStateHandlers({\n            draggableMarkerLocation: {\n                latitude: locationData.latitude,\n                longitude: locationData.longitude,\n                address:  locationData.address\n            },parkingData: [], infoWindows: []\n        },{\n            onMarkerLocationChanged: ({draggableMarkerLocation}) => (newLat, newLng, address, city, country) => ({\n                draggableMarkerLocation: {\n                    latitude: newLat,\n                    longitude: newLng,\n                    address: address,\n                    city: city,\n                    country: country\n                }\n            }),\n                onParkingDataChange: ({parkingData}) => (parking) => ({\n                    parkingData: parking.map(row=>{\n                        return row\n                    }),\n                    infoWindows: parking.map(p => {\n                        return { parkingId: p.parkingId, showInfo: false };\n                    })\n                }),\n                onToggleOpen: ({ infoWindows }) => selectedIndex => ({\n                    infoWindows: infoWindows.map((iw, i) => {\n                        iw.showInfo = selectedIndex === iw.parkingId;\n                        return iw;\n                    })\n                })\n            }\n            )\n    )(props=>\n        <div className={classes.content}>\n            <Autocomplete\n                onKeyPress={(event)=>{handleKeyPress(event, props.onMarkerLocationChanged, props.onParkingDataChange)}}\n                className={classes.autocomplete}\n                onPlaceSelected={(place)=>{onPlaceSelected(place, props.onMarkerLocationChanged, props.onParkingDataChange)} }\n                types={['(regions)']}\n            />\n            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\">\n                <MyLocationIcon\n                    fontSize=\"large\"\n                    color=\"primary\"\n                    onClick={()=>{\n                        getCurrentPosition(props.onMarkerLocationChanged, props.onParkingDataChange)\n                    }}\n\n                />\n            </IconButton>\n\n            <MyMapComponent markerChanger={props.onMarkerLocationChanged}\n                            markerLocation={props.draggableMarkerLocation}\n                            onParkingDataChange={props.onParkingDataChange}\n                            parkingData={props.parkingData}\n                            onToggleOpen={props.onToggleOpen}\n                            infoWindows={props.infoWindows}\n            />\n\n\n        </div>\n    );\n\n    /**\n     * Memoization of a component.\n     */\n    return useMemo(() => {\n        return <FullMap/>;\n    }, [])\n\n    //\n\n}\n\nexport default withStyles(styles)(CustomMap);","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomMap from \"../CustomMap\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n});\n\nfunction PlaceLocation({locationData, setLocationData}) {\n\n    function changeLocationData(event){\n        const {name, value} = event.target;\n        let data = Object.assign({}, locationData, {});\n        data[name] = value;\n\n        setLocationData(data)\n    }\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Place location\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select place location from map\n        </Typography>\n        <br/>\n        <CustomMap mapHeight={200}\n                   locationData={locationData}\n                   setLocationData={setLocationData}\n        />\n        <br/>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Place location\n        </Typography>\n        <br/>\n        <TextField\n            required\n            label=\"Address\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter place address\"\n            fullWidth\n            disabled\n            value={locationData['address']}\n            name='address'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"City\"\n            disabled\n            style={{ margin: 8 }}\n            placeholder=\"Enter place city\"\n            fullWidth\n            value={locationData['city']}\n            name='city'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"Country\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter place country\"\n            fullWidth\n            disabled\n            value={locationData['country']}\n            name='country'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            rows={4}\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n    </div>\n}\n\nexport default withStyles(styles)(PlaceLocation)","import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomMap from \"../CustomMap\";\nimport API from \"../../Networking/API\";\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction ParkingLocation({classes, parkingMarkerData, setParkingMarkerData, allSelectedParkingData, setAllSelectedParkingData}) {\n    const { addConfig } = UseSnackbarContext();\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\n    };\n\n    function changedParkingMarkerCallback(city,address,country,lat,lng, parkingDataChanged) {\n        getClosestParking(parseFloat(lat),parseFloat(lng), parkingDataChanged);\n    }\n\n\n\n    function addNewParking(markerData){\n        if(!parkingExists(markerData)){\n            API.Parking.insertNewParking([markerData]).then(response=>{\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\n                addConfig(true)\n            }).catch(error=>{\n                addConfig(false)\n            })\n        }\n    }\n\n    function parkingExists(markerData){\n        for(let i = 0; i<allSelectedParkingData.length; i++){\n            if(allSelectedParkingData[i].address === markerData.address) return true;\n        }\n        return false\n    }\n\n    const getClosestParking = (lat, lng, parkingDataChanged)=>{\n        API.Parking.getParkingByLocation(\"?lat=\"+lat+\"&lng=\"+lng).then(response=>{\n            let placesData = [];\n            console.log(\"ParkingData\", response)\n            response.map(row => {\n                placesData.push(row)\n            });\n            parkingDataChanged(response);\n        }).catch(error=>{\n        })\n    };\n\n    const SortableItem = SortableElement(({value}) => (\n        <Paper className={classes.paper} elevation={3}>\n            <Typography>\n                {value.address}\n            </Typography>\n            <IconButton aria-label=\"delete\" className={classes.margin}\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\n                <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n        </Paper>\n    ));\n\n    useEffect(()=>{\n        getClosestParking(parkingMarkerData.lat, parkingMarkerData.lng)\n    },[]);\n\n    const SortableList = SortableContainer(({items}) => {\n        return (\n            <ul>\n                {items.map((value, index) => (\n                <SortableItem key={index} index={index} value={value} />\n                ))}\n            </ul>\n        );\n    });\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Add parking\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select parking\n        </Typography>\n        <CustomMap mapHeight={350}\n                   locationData={parkingMarkerData}\n                   setLocationData={setParkingMarkerData}\n                   selectedParkingCallback={(location)=>{\n                       if(!parkingExists(location))\n                           setAllSelectedParkingData(oldArray=> [...oldArray, location])\n                       }}\n                   changedParkingMarkerCallback={changedParkingMarkerCallback}\n                   addParkingCallback={addNewParking}\n\n        />\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Selected parking locations\n        </Typography>\n\n        <SortableList distance={10} items={allSelectedParkingData} onSortEnd={onSortEnd} />\n\n    </div>\n}\n\nexport default withStyles(styles)(ParkingLocation)","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nfunction AddDialog(props){\n\n    function validateInput(){\n        var error = false;\n        if(text.length <= 3)\n            error = true\n        setError(error)\n        return error\n    }\n\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\n    const [text, setText] = useState(\"\")\n    const [error, setError] = useState(false)\n    return(\n        <div>\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\n                    {header}\n                </DialogTitle>\n                <DialogContent dividers>\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCallback} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button autoFocus color=\"primary\" onClick={() => {\n                        !validateInput() && action(text)\n                    }}>\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nAddDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    action: PropTypes.func.isRequired,\n    onCloseCallback: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(AddDialog)\n","import React, {useEffect, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AutocompleteChip from \"../AutocompleteChip\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddDialog from \"../AddDialog\";\nimport API from \"../../Networking/API\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories}) {\n\n    const [dialogAddTagOpen, setDialogAddTagOpen] = useState(false);\n    const [dialogAddCategoryOpen, setDialogAddCategoryOpen] = useState(false);\n\n    const [availableCategories, setAvailableCategories] = useState([]);\n    const [availableTags, setAvailableTags] = useState([]);\n\n\n    const updateTags = () => {\n        API.Tags.getAllTags().then(response=>{\n            setAvailableTags(response);\n            console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n    const updateCategories = () => {\n        API.Categories.getAllCategories().then(response=>{\n            setAvailableCategories(response)\n            console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        });\n    };\n\n    useEffect(()=>{\n        updateTags();\n        updateCategories();\n    },[]);\n\n    const handleAddCategory = (value) => {\n        API.Categories.addCategory([{name: value}]).then(response=>{\n            let newCat = {categoryId: response[0], name: value};\n            setAvailableCategories(\n                [\n                    ...availableCategories,\n                    newCat\n                ]\n            );\n            setSelectedCategories([\n                ...selectedCategories,\n                newCat\n            ]);\n            setDialogAddCategoryOpen(false)\n\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n\n\n\n    const handleAddTag = (value) => {\n        API.Tags.addTag([{name: value}]).then(response=>{\n            let newTag = {tagId: response[0], name: value}\n            setAvailableTags(\n                [\n                    ...availableTags,\n                    newTag\n                ]\n            );\n            setSelectedTags([\n                ...selectedTags,\n                newTag\n            ]);\n            setDialogAddTagOpen(false)\n\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Place discovery settings\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select tags\n        </Typography>\n        <AutocompleteChip label=\"Select tags\"\n                          id=\"tagId\"\n                          options={availableTags}\n                          setOptions={setAvailableTags}\n                          selectedOptions={selectedTags}\n                          setSelectedOptions ={setSelectedTags}/>\n\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => setDialogAddTagOpen(true)}\n            startIcon={<AddIcon />}>\n            Add missing tag\n        </Button>\n        <AddDialog action={handleAddTag} textFieldLabel=\"Name\" open={dialogAddTagOpen} onCloseCallback={() => setDialogAddTagOpen(false)} header = \"Add a new tag\" />\n\n        <br/>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select categories\n        </Typography>\n        <AutocompleteChip label=\"Select categories\"\n                          id=\"categoryId\"\n                          options={availableCategories}\n                          setOptions={setAvailableCategories}\n                          selectedOptions={selectedCategories} \n                          setSelectedOptions={setSelectedCategories}/>\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => setDialogAddCategoryOpen(true)}\n            startIcon={<AddIcon />}>\n            Add missing category\n        </Button>\n        <AddDialog action={handleAddCategory}\n                   textFieldLabel=\"Name\"\n                   open={dialogAddCategoryOpen}\n                   onCloseCallback={() => setDialogAddCategoryOpen(false)}\n                   header = \"Add a new category\" />\n    </div>\n}\n\nexport default withStyles(styles)(PlaceDiscovery)","const initialScheduleData = [\n    {\n        \"isDefault\": true,\n        \"periods\": [\n            {\n                openDay: 0,\n                closeDay: 0,\n                openTime: \"08:00\",\n                closeTime: \"18:00\"\n            },\n            {\n                openDay: 1,\n                closeDay: 1,\n                openTime: \"08:00\",\n                closeTime: \"18:00\"\n            },\n            {\n                openDay: 2,\n                closeDay: 2,\n                openTime: \"08:00\",\n                closeTime: \"18:00\"\n            },\n            {\n                openDay: 3,\n                closeDay: 3,\n                openTime: \"08:00\",\n                closeTime: \"18:00\"\n            },\n            {\n                openDay: 4,\n                closeDay: 4,\n                openTime: \"08:00\",\n                closeTime: \"18:00\"\n            },\n            {\n                openDay: 5,\n                closeDay: 5,\n                openTime: \"08:00\",\n                closeTime: \"12:00\"\n            },\n            {\n                openDay: 6,\n                closeDay: 6,\n                openTime: \"08:00\",\n                closeTime: \"12:00\"\n            }\n        ]\n    }\n]\n\nexport default initialScheduleData","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport moment from \"moment\";\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        width: \"20%\",\n        padding: \"2px\",\n        marginRight: \"16px\"\n    },\n\n});\nexport default function ReviewCard({review}) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <div style={{display: \"flex\"}} >\n                    <Avatar alt=\"Cindy Baker\" src={!!review.photoUrl ? review.photoUrl : \"/broken-image.jpg\"} />\n                    <div style={{display: \"flex\", flexDirection: \"column\", marginLeft:\"8px\"}}>\n                        <Typography title=\"subtitle1\">\n                            {review.name} {review.surname}\n                        </Typography>\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                            <Rating size=\"small\" name=\"read-only\" value={review.rating} readOnly />\n                            <Typography title=\"subtitle1\">\n                                {\"+\" + review.upvotes}\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n                <Typography title=\"subtitle1\">\n                    {moment(review.timeAdded).format('LL')}\n                </Typography>\n                <div style={{marginTop: \"16px\"}}>\n                    {review.title}\n                </div>\n                <Typography title=\"subtitle1\">\n                        {review.review}\n                </Typography>\n\n            </CardContent>\n        </Card>\n    );\n}\n\n","import React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Rating from '@material-ui/lab/Rating';\nimport ReviewCard from \"../ReviewCard\";\nimport API from \"../../Networking/API\";\nimport debounce from \"lodash/debounce\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\n\nconst styles = theme => ({\n    reviewsInfo:{\n        display: \"flex\",\n    },\n    reviews:{\n        display: \"flex\",\n        width: \"100%\",\n        margin: theme.spacing(2),\n        overflowX: \"scroll\"\n    },\n    sortingButtons: {\n        padding: theme.spacing(2)\n    }\n});\n\nfunction Reviews({classes, placeInfo}) {\n\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [page, setPage] = useState(1);\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const [filterBy, setFilterBy] = useState('mostRated');\n\n    function getReviewsForPlace(urlParams = \"?p=\"+placeInfo.placeId) {\n        API.Reviews.getPlaceReviews(urlParams).then(response=>{\n            setReviews(old=>[...old, ...response.list]);\n            setIsLoading(false)\n        }).catch(error=>{\n            setIsLoading(false)\n        })\n    }\n\n    //Get ordered by new filter\n    useEffect(()=>{\n            getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=1&o=\"+filterBy)\n    },[filterBy]);\n\n\n    const handleScrollDebounced = (e) => {\n        const scrollOffset = 0;\n        const bottom = Math.round(e.target.scrollWidth - e.target.scrollLeft - scrollOffset)  <= e.target.clientWidth;\n        if (bottom && !isLoading && reviews.length>0 && reviews.length<placeInfo.totalReviews) {\n            setIsLoading(true);\n            setPage(old=>{\n                getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=\"+(old+1)+\"&o=\"+filterBy);\n                return old+1\n            });\n        }\n    };\n\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\n\n    const handleScroll = (e) => {\n        e.persist();\n        debounceScroll(e)\n    };\n\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    function changeSorting(e){\n        const {name, value} = e.target;\n        setFilterBy(value);\n        setReviews([]);\n        setPage(1);\n        handleClose()\n    }\n\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Reviews\n            <br/>\n            {\n               reviews.length > 0 ?\n                   <React.Fragment>\n                       <div style={{display:\"flex\", justifyContent: \"space-between\"}}>\n                           <div className={classes.reviewsInfo}>\n                               <Rating name=\"read-only\" value={placeInfo.overallStarRating} precision={0.2} readOnly />\n                               <Typography style={{marginLeft:\"8px\"}} variant=\"subtitle1\">\n                                   {placeInfo.totalReviews} reviews\n                               </Typography>\n                           </div>\n                           <Tooltip aria-describedby={id} title=\"Filter list\">\n                               <IconButton  aria-label=\"filter list\" onClick={handleClick}>\n                                   <FilterListIcon />\n                               </IconButton>\n                           </Tooltip>\n                           <Popover\n                               id={id}\n                               open={open}\n                               anchorEl={anchorEl}\n                               onClose={handleClose}\n                               anchorOrigin={{\n                                   vertical: 'bottom',\n                                   horizontal: 'center',\n                               }}\n                               transformOrigin={{\n                                   vertical: 'top',\n                                   horizontal: 'center',\n                               }}\n                           >\n                               <RadioGroup className={classes.sortingButtons} aria-label=\"gender\" value={filterBy} name=\"gender1\"  onChange={changeSorting}>\n                                   <FormControlLabel value=\"mostRated\" control={<Radio />} label=\"Most rated\" />\n                                   <FormControlLabel value=\"newest\" control={<Radio />} label=\"Newest\" />\n                               </RadioGroup>\n                           </Popover>\n                       </div>\n\n                       <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                           <Typography>\n                               Showing: {reviews.length} out of {placeInfo.totalReviews}\n                           </Typography>\n                           <Typography>\n                               Sorting by: {filterBy}\n                           </Typography>\n                       </div>\n                       <div className={classes.reviews} onScroll={e=>handleScroll(e)}>\n                           {reviews.map(row=>{\n                               return <ReviewCard review={row}/>\n                           })}\n                       </div>\n                   </React.Fragment> : <Typography> No reviews for this place</Typography>\n            }\n\n        </Typography>\n        <br/>\n        {isLoading ? <LinearProgress/> : null }\n    </div>\n}\n\nexport default withStyles(styles)(Reviews)","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport React, {useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { TimePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport WarningIcon from '@material-ui/icons/Warning';\nimport Moment from \"react-moment\";\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\",\n        justifyContent : \"space-between\",\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(0.5),\n        alignItems: \"center\"\n    },\n    picker: {\n        margin: theme.spacing(0.5),\n        width: \"30%\"\n    }\n});\n\nfunction ScheduleInterval({classes, intervals, index, setIntervals}){\n\n    const getCloseDay = (closeTime, openTime) => {\n        let currentPeriod = intervals[index]\n        if(moment(closeTime, \"HH:mm\").isBefore(moment(openTime, \"HH:mm\")))\n            return (currentPeriod.openDay + 1) > 6 ? 0 : (currentPeriod.openDay +1)\n        else return currentPeriod.openDay\n    }\n\n    let handleUpdateOpenTime = (value) => {\n        setIntervals((oldIntervals) => {\n            return oldIntervals.map((item, i) => {\n                if(index === i){\n                    return {\n                        ...item,\n                        openTime: moment(value).format(\"HH:mm\").toString(),\n                        closeDay: getCloseDay(item.closeTime, value)\n                    }\n                }else return item\n            })\n        })\n    }\n    let handleUpdateCloseTime = (value) => {\n        setIntervals((oldIntervals) => {\n            return oldIntervals.map((item, i) => {\n                if(index === i){\n                    return {\n                        ...item,\n                        closeTime: moment(value).format(\"HH:mm\").toString(),\n                        closeDay: getCloseDay(value, item.openTime)\n                    }\n                }else return item\n            })\n\n        })\n    }\n\n    const handleDelete = () => {\n        setIntervals(oldIntervals => {\n            return oldIntervals.filter((item, i) => i !== index)\n        })\n    }\n\n    return(\n        <div className={classes.root}>\n            <div>\n                <TimePicker\n                    margin=\"normal\"\n                    ampm={false}\n                    label=\"Opens\"\n                    className={classes.picker}\n                    format=\"HH:mm\"\n                    value={moment(intervals[index].openTime, \"HH:mm\")}\n                    onChange={handleUpdateOpenTime}\n                    InputProps={{\n                        disableUnderline: true,\n                    }}\n                />\n                <TimePicker\n                    margin=\"normal\"\n                    ampm={false}\n                    className={classes.picker}\n                    label=\"Closes\"\n                    format=\"HH:mm\"\n                    value={moment(intervals[index].closeTime, \"HH:mm\")}\n                    onChange={handleUpdateCloseTime}\n                    InputProps={{\n                        disableUnderline: true,\n                    }}\n                />\n\n                {intervals[index].closeDay !== intervals[index].openDay &&\n                    <React.Fragment>\n                        <Typography variant=\"subtitle1\">\n                            <WarningIcon style={{marginRight: \"10px\"}}/>\n                            Closes the next day\n                        </Typography>\n                    </React.Fragment>}\n            </div>\n            <div>\n                <Button color=\"primary\" onClick={handleDelete}>\n                    <DeleteOutlineIcon/>\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nScheduleInterval.propTypes = {\n    classes: PropTypes.object.isRequired,\n    intervals: PropTypes.array.isRequired,\n    setIntervals: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(ScheduleInterval)\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ScheduleInterval from \"./ScheduleInterval\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst styles = theme => ({\n    header: {\n        display: \"flex\",\n        justifyContent : \"space-between\"\n    },\n    root: {\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(0.5)\n    }\n});\n\nfunction DayComponent({classes, scheduleData, setScheduleData, openDay, onChange}){\n\n    let [intervals, setIntervals] = useState(scheduleData.periods.filter(item => item.openDay === openDay))\n\n    useEffect(() => {\n        onChange(intervals, openDay)\n    }, [intervals])\n\n    let weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\n    const handleAddPeriod = () => {\n        setIntervals(oldIntervals => {\n            return [\n                ...oldIntervals,\n                {openDay: openDay, closeDay: openDay, openTime: \"08:00\", closeTime: \"18:00\"}\n            ]\n        })\n    }\n\n    return(\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <Typography variant=\"h6\" >\n                    {weekDays[openDay]}\n                </Typography>\n                <Button color=\"secondary\" onClick={handleAddPeriod}>\n                    <AddIcon/>\n                </Button>\n            </div>\n\n            {intervals.map((value, index) => {\n                return <React.Fragment>\n                    <Divider variant=\"middle\" />\n                    <ScheduleInterval index={index} intervals={intervals} setIntervals={setIntervals}/>\n                </React.Fragment>\n            })}\n\n        </div>\n    )\n}\n\nDayComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    scheduleData: PropTypes.object.isRequired,\n    setScheduleData: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(DayComponent)\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, {useEffect, useState} from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {DatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\nimport Divider from \"@material-ui/core/Divider\";\nimport DayComponent from \"./DayComponent\";\nimport moment from \"moment\";\n\nconst styles = theme => ({\n    header: {\n        display: \"flex\",\n        justifyContent : \"space-between\"\n    },\n    root: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(1)\n    },\n    pickerStyle: {\n        margin: theme.spacing(1)\n    },\n    headerLeft: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"left\"\n    }\n});\n\nfunction Schedule({classes, data, setData, index}){\n\n    const[periods, setPeriods] = useState([...data.periods])\n\n    const handleIntervalChange = (newIntervals, openDay) => {\n        setPeriods(oldPeriods => {\n            let filtered = oldPeriods.filter(item => item.openDay !== openDay)\n            if(newIntervals.length === 0)\n                return [...filtered]\n            return [\n                ...filtered,\n                ...newIntervals\n            ]\n        })\n    }\n\n    useEffect(() => {\n        setData(oldData => {\n            return oldData.map((schedule, i) => {\n                if( i === index){\n                    return {...schedule, periods: periods}\n                }else return schedule\n            })\n        })\n    }, [periods])\n\n    const generateWeekdayViews = () => {\n        let views = []\n        for(let i =0; i < 7; i++){\n            views.push(<DayComponent scheduleData={data} onChange={handleIntervalChange} setScheduleData={setData} openDay={i} key={i}/>)\n        }\n        return views\n    }\n\n    const updateFromTime = (value) => {\n        setData(oldData => {\n            return oldData.map((schedule, i) => {\n                if( i === index){\n                    return {...schedule, from: moment(value).format('MM-DD').toString()}\n                }else return schedule\n            })\n        })\n    }\n    const updateToTime = (value) => {\n        setData(oldData => {\n            return oldData.map((schedule, i) => {\n                if( i === index){\n                    return {...schedule, to: moment(value).format('MM-DD').toString()}\n                }else return schedule\n            })\n        })\n    }\n    const removeSchedule = () => {\n        setData(oldData => {\n            return oldData.filter((item, i) => index !== i)\n        })\n    }\n\n    return(\n        <Paper className={classes.root}>\n            <div className={classes.header}>\n                <div className={classes.headerLeft}>\n                    {data.isDefault &&\n                    <Typography variant=\"h6\" >\n                        Date: Year round\n                    </Typography>}\n                    {!data.isDefault &&\n                        <React.Fragment>\n                            <DatePicker\n                                className={classes.pickerStyle}\n                                views={[\"month\", \"date\"]}\n                                label=\"From\"\n                                value={moment(data.from, \"MM-DD\")}\n                                onChange={updateFromTime}\n                            />\n                            <DatePicker\n                                className={classes.pickerStyle}\n                                views={[\"month\", \"day\"]}\n                                label=\"To\"\n                                value={moment(data.to, \"MM-DD\")}\n                                onChange={updateToTime}\n                            />\n                        </React.Fragment>\n                    }\n                </div>\n                {!data.isDefault &&\n                <Button color=\"secondary\" onClick = {removeSchedule}>\n                    <RemoveIcon/>\n                </Button>}\n\n            </div>\n            <br/>\n            {generateWeekdayViews()}\n        </Paper>\n    )\n}\n\nSchedule.propTypes = {\n    classes: PropTypes.object.isRequired,\n    data: PropTypes.object.isRequired,\n    setData: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Schedule)\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, {useEffect, useState} from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from \"@material-ui/core/Button\";\nimport Schedule from \"../Schedule\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {TimePicker} from \"@material-ui/pickers\";\nimport moment from \"moment\";\n\nconst styles = theme => ({\n    header: {\n        display: \"flex\",\n        justifyContent : \"space-between\",\n        flexWrap: \"wrap\"\n    }\n});\n\nfunction SchedulesWrapper({classes, scheduleData, setScheduleData, isScheduleEnabled, setIsScheduleEnabled}){\n\n    const addSchedule = () => {\n        setScheduleData(oldData => {\n            return [\n                ...oldData,\n                {isDefault: false, from: \"01-01\", to: \"01-02\", periods : []}\n            ]\n        })\n    }\n\n    return(\n        <div>\n            <div className={classes.header}>\n                <Typography variant=\"h6\" >\n                    Working schedule\n                </Typography>\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={isScheduleEnabled}\n                            onChange={() => setIsScheduleEnabled(state => !state)}\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"Enable schedule for this place?\"\n                />\n            </div>\n            <br/>\n            {isScheduleEnabled &&\n                <React.Fragment>\n                    {scheduleData.map((value, index) => {\n                        return <Schedule data={value} index={index} setData={setScheduleData}/>\n                    })}\n                    <Button style={{float: \"right\"}}color=\"secondary\" onClick={addSchedule}>\n                        <AddIcon/>\n                    </Button>\n                </React.Fragment>}\n        </div>\n    )\n}\n\nSchedulesWrapper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    scheduleData: PropTypes.array.isRequired,\n    setScheduleData: PropTypes.func.isRequired,\n    isScheduleEnabled: PropTypes.object.isRequired,\n    setIsScheduleEnabled: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SchedulesWrapper)\n","import React, {useEffect, useState} from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes, {func} from \"prop-types\";\nimport {Paper} from '@material-ui/core';\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\nimport initialScheduleData from \"../components/add_place_components/initialScheduleData\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport API from \"../Networking/API\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Strings from \"../helpers/stringResources\";\nimport green from \"@material-ui/core/colors/green\";\nimport Reviews from \"../components/add_place_components/Reviews\";\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\nimport Schedule from \"../components/add_place_components/SchedulesWrapper\";\nimport SchedulesWrapper from \"../components/add_place_components/SchedulesWrapper\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    paperContent: {\n        marginTop: theme.spacing(4),\n        [theme.breakpoints.down(\"lg\")]: {\n            width: \"95%\",\n            padding: theme.spacing(2),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            width: \"70%\",\n            padding: theme.spacing(4),\n        },\n    },\n    root:{\n        height:\"100vh\"\n    },\n    loader:{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100vw\",\n        height: \"100vh\"\n    },\n    content:{\n        display:\"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        height:`calc(93vh - 64px)`,\n        [theme.breakpoints.down(\"lg\")]: {\n            width: \"100%\",\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            width: \"auto\",\n            padding: theme.spacing(8),\n        },\n        overflowY: \"auto\"\n    },\n    bottom:{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        padding: theme.spacing(1),\n        height: \"7vh\"\n    }\n});\n\n\nfunction AddPlace({classes, match}){\n    const [placeInfo, setPlaceInfo] = useState({placeId: \"\",\n        name: \"\", description: \"\",website: \"\", phoneNumber: \"\",\n        hasSchedule: false, isPublic: false, isVerified: true, overallStarRating: 0, totalReviews: 0,\n        source: \"\", price: \"\", averageTimeSpent: \"0\"});\n\n\n    const [selectedTags, setSelectedTags] = useState([]);\n    const [selectedCategories, setSelectedCategories] = useState([]);\n\n    const [photos, setPhotos] = useState([]);\n\n    const [locationData, setLocationData] = useState({city: '', address: '', country: '', latitude: 54.687157, longitude: 25.279652});\n    const [parkingMarkerData, setParkingMarkerData] = useState({city: '', address: '', country: '', latitude: 54.687157, longitude: 25.279652});\n    const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\n\n    const [sources, setSources] = useState([]);\n\n    const [scheduleData, setScheduleData] = useState(initialScheduleData);\n    const [isScheduleEnabled, setIsScheduleEnabled] = useState(false);\n\n    const [placeId, setPlaceId] = useState(match.params.placeId);\n\n    const [firstTimeLoading, setFirstTimeLoading] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [error, setError] = useState({name: false});\n    const [checkErrors, setCheckErrors] = useState(false);\n\n\n    const { addConfig } = UseSnackbarContext();\n    const { addAlertConfig } = UseAlertDialogContext();\n\n    const { title, setTitle } = UseAppBarTitleContext();\n\n    const ColorButton = withStyles((theme) => ({\n        root: {\n            color: theme.palette.getContrastText(green[500]),\n            backgroundColor: green[500],\n            '&:hover': {\n                backgroundColor: green[700],\n            },\n        },\n    }))(Button);\n\n    useEffect(()=>{\n        console.log(placeId)\n        //Loaded place for editing\n        if(placeId!==undefined){\n            console.log(\"Getting place location\");\n            getPlaceInfo()\n        }else{\n            setTitle(\"Add new place\");\n            console.log(\"Came here to add new place\");\n            setFirstTimeLoading(false) //Just loaded add place window\n        }\n\n        //New Place has been just inserted, thus inserting other place info\n        if(placeId!==undefined && firstTimeLoading===false){\n            console.log(\"Just added new place\");\n            Promise.all([\n                updateTagsData(placeId),\n                updateParkingData(placeId),\n                updateCategoriesData(placeId),\n                updatePhotoData(placeId),\n                updateSchedule(placeId),\n                updateSources(placeId)\n            ]).then(responses=>{\n                formFeedback(true, Strings.SNACKBAR_PLACE_INSERTED_SUCCESS)\n            }).catch(error=>{\n                formFeedback(false)\n            })\n        }\n\n    },[placeId]);\n\n    useEffect(()=>{\n        if(firstTimeLoading === false){\n            console.log(\"Making this place public\");\n            updateAll()\n        }\n    },[placeInfo['isPublic']]);\n\n    function getPlaceInfo() {\n        API.Places.getPlaceById(\"?full=true&p=\"+placeId).then(response=>{\n            setAllData(response)\n            setTitle(\"Editing place/\"+response.name);\n        }).catch(error=>{\n            formFeedback(false)\n        })\n    }\n\n    function setAllData(place){\n        console.log(\"Got data:\",place);\n        setPlaceInfo({\n            placeId: place.placeId,\n            name: place.name,\n            description: place.description,\n            website: place.website,\n            phoneNumber: place.phoneNumber,\n            hasSchedule: place.hasSchedule,\n            isPublic: place.isPublic,\n            isVerified: place.isVerified,\n            overallStarRating: place.overallStarRating,\n            totalReviews: place.totalReviews,\n            price: place.price,\n            averageTimeSpent: place.averageTimeSpent\n        });\n\n        setLocationData({city: place.city,\n            address: place.address,\n            country: place.country,\n            latitude: place.latitude,\n            longitude: place.longitude});\n\n        setSources(place.sources);\n        setSelectedTags(place.tags);\n        setSelectedCategories(place.categories);\n        if(place.schedule.length > 0) {\n            setScheduleData([...place.schedule]);\n            setIsScheduleEnabled(true)\n        }else setIsScheduleEnabled(false)\n\n        setAllSelectedParkingData(place.parking);\n        setPhotos(place.photos);\n        setFirstTimeLoading(false)\n    }\n\n    function formFeedback(success, message=Strings.SNACKBAR_ERROR){\n        addConfig(success, message);\n        setIsLoading(false)\n    }\n\n    function errorsExists(){\n        for (let key of Object.keys(error)) {\n            if(error[key] === true)\n                return true\n        }\n        return false\n    }\n\n    function saveChanges(){\n        setCheckErrors(true);\n        if(errorsExists()){\n            addAlertConfig(\"Errors\", \"Make sure you filled required fields\",function () {\n\n            });\n            return\n        }\n\n        if(placeId === undefined){\n            addAlertConfig(Strings.DIALOG_PLACE_INSERT_TITLE,Strings.DIALOG_PLACE_INSERT,function () {\n                setIsLoading(true);\n                insertBasicPlaceInfo()\n            });\n        }else{\n            addAlertConfig(Strings.DIALOG_PLACE_UPDATE_TITLE, Strings.DIALOG_PLACE_UPDATE, function () {\n                setIsLoading(true);\n                updateAll()\n            })\n        }\n    }\n\n    function updateAll(){\n        Promise.all([\n            updatePlaceInfo(),\n            updateTagsData(placeId),\n            updatePhotoData(placeId),\n            updateCategoriesData(placeId),\n            updateParkingData(placeId),\n            updateSchedule(placeId),\n            updateSources(placeId)\n        ]).then(response=>{\n            formFeedback(true, Strings.SNACKBAR_CHANGES_SAVED);\n        }).catch(err=>{\n            formFeedback(false)\n        })\n    }\n\n    function updatePlaceInfo() {\n        console.log(formPlaceInfo());\n        API.Places.updatePlace(formPlaceInfo()).then(response=>{\n\n        }).catch(error=>{\n\n        })\n\n    }\n\n    function insertBasicPlaceInfo(){\n            API.Places.insertPlace(formPlaceInfo()).then(placeId=>{\n                setPlaceId(placeId)\n            }).catch(error=>{\n\n            })\n    }\n\n    function updateParkingData(id) {\n        API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n    function updateTagsData(id) {\n        API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n    function updateSources(id) {\n        console.log(\"Hello\")\n        API.SourcePlace.updateSourcesForPlace(sources, \"?p=\"+id).then(response=>{\n            console.log(sources)\n        }).catch(error=>{\n\n        })\n    }\n\n\n    function updateCategoriesData(id) {\n        API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n    function updatePhotoData(id) {\n        API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n\n    function updateSchedule(id){\n        console.log(scheduleData);\n        API.Schedule.updateScheduleForPlace(isScheduleEnabled ? scheduleData : [], \"?id=\" + id).then(response => {\n        }).catch(er => {\n        })\n\n    }\n\n    function formPlaceInfo(){\n        let d = Object.assign(placeInfo, locationData)\n        console.log(d);\n        return d\n    }\n\n\n    function publishPlace(){\n        addAlertConfig(Strings.DIALOG_PLACE_PUBLISH_TITLE, placeInfo['isPublic'] ? Strings.DIALOG_PLACE_UNPUBLISH_MESSAGE : Strings.DIALOG_PLACE_PUBLISH_MESSAGE, function(){\n            let obj = Object.assign({}, placeInfo, {});\n            obj['isPublic'] = !obj['isPublic'];\n            setPlaceInfo(obj);\n        })\n    }\n\n    function verifyPlace(){\n        addAlertConfig(Strings.DIALOG_PLACE_VERIFY_TITLE, Strings.DIALOG_PLACE_VERIFY_MESSAGE, function(){\n            let obj = Object.assign({}, placeInfo, {});\n            obj['isPublic'] = 1;\n            obj['isVerified'] = 1;\n            setPlaceInfo(obj);\n        })\n    }\n\n    return(\n        <div className={classes.root}>\n            {firstTimeLoading ? <div className={classes.loader}><CircularProgress /></div> : <div className={classes.content}>\n\n\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <BasicPlaceInfo\n                        error={error}\n                        setError={setError}\n                        checkErrors={checkErrors}\n                        placeInfo={placeInfo}\n                        setPlaceInfo={setPlaceInfo}\n                        selectedSources={sources}\n                        setSelectedSources={setSources}\n                    />\n\n                </Paper>\n\n                {placeId !== undefined ?\n                    <Paper elevation = {4} className={classes.paperContent}>\n                        <Reviews\n                            placeInfo={placeInfo}\n                        />\n                    </Paper>\n                    : null}\n\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PhotosInfo\n                        photos={photos}\n                        setPhotos={setPhotos}\n                    />\n                </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PlaceLocation\n                        error={error}\n                        setError={setError}\n                        checkErrors={checkErrors}\n                        locationData={locationData}\n                        setLocationData={setLocationData}/>\n                </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <ParkingLocation\n                        allSelectedParkingData={allSelectedParkingData}\n                        setAllSelectedParkingData={setAllSelectedParkingData}\n                        parkingMarkerData={parkingMarkerData}\n                        setParkingMarkerData={setParkingMarkerData}/>\n                </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PlaceDiscovery\n                        selectedTags={selectedTags}\n                        setSelectedTags={setSelectedTags}\n                        selectedCategories={selectedCategories}\n                        setSelectedCategories={setSelectedCategories}/>\n                </Paper>\n\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <SchedulesWrapper isScheduleEnabled={isScheduleEnabled} setIsScheduleEnabled={setIsScheduleEnabled} setScheduleData={setScheduleData} scheduleData={scheduleData}/>\n                </Paper>\n            </div> }\n\n            {isLoading ? <LinearProgress/> : null}\n\n            <Paper elevation={1} className={classes.bottom}>\n\n                {\n\n                    placeInfo['isVerified'] === false && placeId !== undefined ?\n                        <ColorButton\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={()=>{verifyPlace()}}\n                            className={classes.button}\n                        >\n                            Verify place\n                        </ColorButton>\n                    :\n                    <FormControlLabel\n                    control={<Switch checked={placeInfo['isPublic']} onChange={()=> {\n                        publishPlace()\n                    }\n                    } name=\"isPublic\" />}\n                    label=\"Make this place public\"\n                />}\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={()=>saveChanges()}\n                    className={classes.button}>\n                    Save\n                </Button>\n\n\n            </Paper>\n        </div>)\n\n}\n\nAddPlace.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AddPlace)\n\n\n","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {Fragment, useState} from \"react\"\nimport Typography from \"@material-ui/core/Typography\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Card from \"@material-ui/core/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport red from \"@material-ui/core/colors/red\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = theme => ({\n    root: {\n        [theme.breakpoints.down('lg')]: {\n            width: \"95%\",\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: \"28vw\",\n        },\n        margin: theme.spacing(1)\n    },\n    media: {\n        height: 0,\n            paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n})\n\nfunction CategoriesDisplay({categories}){\n    return(\n        categories != null &&\n        <Box component=\"ul\"  style={{\n            display: 'flex',\n            justifyContent: 'left',\n            flexWrap: 'wrap',\n            listStyle: 'none',\n            padding: '0px'\n        }}>\n            {categories.map((data, index) => {\n                return (\n                    <li key={index}>\n                        <Chip\n                            variant=\"outlined\"\n                            style={{margin: \"5px\"}}\n                            label={data.name}\n                        />\n                    </li>\n\n                );\n            })}\n        </Box>\n    )\n}\n\nfunction SubheaderDisplay({city, address, priceRange, rating}){\n    return(\n        <div>\n\n            {rating != null &&\n            <Fragment><Rating\n                readOnly={true}\n                value={rating}\n            /><br/></Fragment>}\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\n\n        </div>\n    )\n}\n\nfunction ApiPlaceCard({classes, placeData}){\n\n    function truncateText(text){\n        if(text == null)\n            return \"\"\n        if(text.length > 500){\n            return text.substring(0, 500) + \"...\";\n        }else{\n            return text\n        }\n    }\n\n    return(\n        <Card className={classes.root}>\n            <CardHeader\n                action={\n                    <IconButton aria-label=\"settings\">\n                        <InfoIcon />\n                    </IconButton>\n                }\n                title={placeData.name}\n                subheader={<SubheaderDisplay city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\n\n            />\n            {placeData.photos != null &&\n            <CardMedia\n                className={classes.media}\n                image={placeData.photos[0].url}\n            />}\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {truncateText(placeData.description)}\n                </Typography>\n\n                <CategoriesDisplay categories={placeData.categories}/>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\n                {placeData.website}\n                </Typography>\n\n            </CardContent>\n            <CardActions disableSpacing>\n            </CardActions>\n        </Card>\n    )\n}\n\nApiPlaceCard.propTypes = {\n    placeData: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ApiPlaceCard)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport {debounce} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        margin: theme.spacing(2)\n        // width: 400,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    divider: {\n        // height: 28,\n        margin: 4,\n    },\n}));\n\nexport default function SearchInputComponent({hint, searchCallback}) {\n    const classes = useStyles();\n\n    const debouncedInput = (event) => {\n        searchCallback(event.target.value)\n    }\n\n    const debounceInput = debounce(event => debouncedInput(event), 500)\n\n    const handleInput = (event) => {\n        event.persist()\n        debounceInput(event)\n    }\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <InputBase\n                className={classes.input}\n                placeholder={hint}\n                inputProps={{ 'aria-label': hint }}\n                onChange={handleInput}\n            />\n            <IconButton className={classes.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n            <Divider className={classes.divider} orientation=\"vertical\" />\n        </Paper>\n    );\n}","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {useState} from \"react\"\nimport ApiPlaceCard from \"../components/ApiPlaceCard\";\nimport API from \"../Networking/API\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport debounce from 'lodash/debounce'\nimport Masonry from \"react-masonry-component\";\nimport SearchInputComponent from \"../components/SearchInputComponent\";\nimport Strings from \"../helpers/stringResources\";\nimport Typography from \"@material-ui/core/Typography\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\n\n\n\nconst styles = theme => ({\n    root:{\n        overflow: 'scroll',\n        width: \"100%\",\n        padding: theme.spacing(1),\n        height:`calc(100vh - 64px)`,\n        paddingTop: \"9vh\",\n    },\n    topBar: {\n        height: \"8vh\",\n        position: \"absolute\",\n        width: \"60%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        justifyContent: \"center\",\n        zIndex: 1\n    },\n    searchBox: {\n        margin: theme.spacing(1)\n    }\n})\n\nfunction ApiPlaces({classes}){\n\n    const [data, setData] = useState([]);\n    const [isLoadingData, setIsLoadingData] = useState(false);\n    const { addConfig } = UseSnackbarContext();\n\n    const loadDataFunc = (query) => {\n        setData([])\n        setIsLoadingData(true)\n        API.Places.searchApiPlaces(\"?keyword=\" + encodeURI(query)).then(response => {\n            setData([...response])\n        }).catch(error => {\n            addConfig(false, \"The request did not go through.\")\n        }).finally(() => {\n            setIsLoadingData(false)\n        })\n    }\n\n    const handleSearch = (word) => {\n        if(word.length > 3)\n            loadDataFunc(word)\n    }\n\n    return(\n        <div style={{position: \"relative\"}}>\n            <div className = {classes.topBar}>\n                <SearchInputComponent searchCallback={handleSearch} hint=\"Search api places\" style={classes.searchBox} />\n            </div>\n\n            <div className={classes.root}>\n                <Masonry\n                    style={{margin: \"0 auto\"}}\n                    elementType={'div'} // default 'div'\n                    options={{\n                        isFitWidth: true\n                    }} // default {}\n                    disableImagesLoaded={false} // default false\n                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n                >\n\n                    {data.map(item => {\n                        return <ApiPlaceCard key={item.placeId} placeData = {item} style={{boxSizing: 'border-box'}}/>\n                    })}\n\n                    {\n                        data.length === 0 && !isLoadingData &&\n                        <Typography variant=\"subtitle1\">No results</Typography>\n                    }\n                    {\n                        isLoadingData &&\n                        <CircularProgress  />\n                    }\n\n                </Masonry>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(ApiPlaces)","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\">\n            {'Copyright © '}\n            Traveldirection {' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n    main: {\n        marginTop: theme.spacing(8),\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n    },\n}));\n\nexport default function NotFoundPage() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n                    Page not found\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                    {'Try something else'}\n                </Typography>\n            </Container>\n            <footer className={classes.footer}>\n                <Container maxWidth=\"sm\">\n                    <Copyright />\n                </Container>\n            </footer>\n        </div>\n    );\n}","import React, {Fragment, useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Places from \"../pages/Places\";\nimport AddPlace from \"../pages/AddPlace\";\nimport history from \"../helpers/history\";\nimport ApiPlaces from \"../pages/ApiPlaces\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\nimport NotFoundPage from \"../pages/NotFoundPage\";\nimport Redirect from \"react-router-dom/es/Redirect\";\n\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles((theme) => ({\n    root1: {\n        overflow: \"hidden\",\n        display: 'flex',\n        height: \"100vh\",\n        background: \"#F1F1F1\"\n    },\n    appBar: {\n        height: \"64px\",\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        width: \"100vw\",\n        height: \"100%\",\n        //padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        width: \"100vw\",\n        height: \"100%\",\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0\n    },\n}));\n\n\nexport default function Appbar(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n    const { title, setTitle } = UseAppBarTitleContext();\n\n    console.log(props)\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root1}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n\n                <Divider />\n                <List>\n                    <ListItem button component={Link} to=\"/app/\" onClick={()=>setTitle(\"Home\")}>\n                        <ListItemText>Home</ListItemText>\n                    </ListItem>\n                    <Divider light />\n                    <ListItem button component={Link} to=\"/app/places\" onClick={()=>setTitle(\"Places\")} >\n                        <ListItemText>Places</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/apiplaces\" onClick={()=>setTitle(\"Api places\")} >\n                        <ListItemText>Explore API places</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/addplace\" onClick={()=>setTitle(\"Add Place\")} >\n                        <ListItemText>Add place</ListItemText>\n                    </ListItem>\n                </List>\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n                <Switch>\n                    <Route exact path=\"/app\" component={Home} />\n                    <Route path=\"/app/places\" component={Places} />\n                    <Route path=\"/app/addplace/:placeId?\" component={AddPlace} />\n                    <Route path=\"/app/apiplaces\" component={ApiPlaces} />\n                    <Route path=\"/app/addplace\" component={AddPlace} />\n                    <Redirect from=\"*\" to=\"/404\"/>\n                </Switch>\n\n            </main>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport Appbar from './components/Appbar.js';\nimport AppBarTitleProvider from \"./contexts/AppBarTitleContext\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\n\nclass App extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <AppBarTitleProvider>\n                        <Appbar />\n                    </AppBarTitleProvider>\n                    </MuiPickersUtilsProvider>\n            </React.Fragment>\n        );\n    }\n}\nexport default App;","import React, {useEffect, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Cookies from 'js-cookie'\nimport * as firebase from \"firebase\";\nimport history from \"../helpers/history\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n                Traveldirection {' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nexport default function LoginPage() {\n    const classes = useStyles();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loading, setIsLoading] = useState(false);\n    const { addConfig } = UseSnackbarContext();\n\n    useEffect(()=>{\n    },[]);\n    const handleLogin = () =>{\n        setIsLoading(true);\n        firebase.auth().signInWithEmailAndPassword(email , password)\n            .then(function(user) {\n                    if (user) {\n\n                        firebase.auth().currentUser.getIdToken(false).then(function(idToken) {\n                            Cookies.set(\"access_token\", idToken);\n                            history.push(\"/app\");\n                            setIsLoading(false)\n                        }).catch(function(error) {\n                            setIsLoading(false);\n                            addConfig(false, \"Unable to receive access token\")\n                        });\n                    } else {\n                        console.log(\"Wrong credentials\")\n                        setIsLoading(false);\n                        addConfig(false, \"Wrong credentials\")\n                    }\n            })\n            .catch(function(error) {\n                    setIsLoading(false);\n                    addConfig(false, error.message)\n                    console.log(error.message)\n            });\n    };\n\n    const handleKeyPress = (event) =>{\n        if (event.which === 13 || event.keyCode === 13) {\n            handleLogin();\n            return false;\n        }\n        return true;\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" onKeyPress={(e)=>handleKeyPress(e)}>\n            {loading && <LinearProgress />}\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        value={email}\n                        onChange={(e)=>{setEmail(e.target.value)}}\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        value={password}\n                        onChange={(e)=>{setPassword(e.target.value)}}\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <Button\n                        onClick={()=>{handleLogin()}}\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}","import Route from \"react-router-dom/es/Route\";\nimport React from \"react\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport {isAuthenticated} from '../helpers/auth'\n\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n        isAuthenticated() === true\n            ? <Component {...props} />\n            : <Redirect to='/login' />\n    )} />\n);","import React, {useState} from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\n\n\nexport default function SnackbarFeedback(props){\n\n    const { config, removeConfig } = UseSnackbarContext();\n\n    return(\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"error\") : \"\"}>\n                {!!config && config.message}\n            </Alert>\n        </Snackbar>\n    )\n}\n","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\"\n\nconst AlertDialogFeedback = () => {\n\n    const {alertConfig, removeAlertConfig} = UseAlertDialogContext();\n\n    function remove() {\n        if(alertConfig.onClose !== undefined)\n            alertConfig.onClose()\n        removeAlertConfig()\n    }\n\n    return(\n        <Dialog\n            open={!!alertConfig}\n            onClose={remove}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{!!alertConfig ? alertConfig.title : \"\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {!!alertConfig ? alertConfig.message : \"\"}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={remove}\n                        color=\"primary\">\n                    Close\n                </Button>\n                <Button onClick={!!alertConfig ? ()=>{\n                    removeAlertConfig();\n                    alertConfig.func()} : {}\n                } color=\"primary\" autoFocus>\n                    Agree\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n};\n\n\nexport default AlertDialogFeedback\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport history from \"./helpers/history\";\nimport * as firebase from \"firebase\";\nimport LoginPage from \"./pages/LoginPage\";\nimport { Router, Route, Link, Switch} from \"react-router-dom\";\nimport Places from \"./pages/Places\";\nimport AddPlace from \"./pages/AddPlace\";\nimport {AuthenticatedRoute} from \"./components/AuthenticatedRoute\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport AlertDialogProvider from \"./contexts/AlertDialogContext\";\nimport AlertDialogFeedback from \"./components/feedback/AlertDialogFeedback\";\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBRhTGXvKq0RD-ajkbOndOIK9c03wg9vRo\",\n    authDomain: \"travel-fd76c.firebaseapp.com\",\n    databaseURL: \"https://travel-fd76c.firebaseio.com\",\n    projectId: \"travel-fd76c\",\n    storageBucket: \"travel-fd76c.appspot.com\",\n    messagingSenderId: \"654752782594\",\n    appId: \"1:654752782594:web:478b4a1d8a17c52975ca1b\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n    <Router history={history}>\n        <SnackbarProvider>\n            <AlertDialogProvider>\n                <SnackbarFeedback/>\n                <AlertDialogFeedback/>\n                <Switch>\n                    <Redirect exact from=\"/\" to=\"/app\"/>\n                    <AuthenticatedRoute path=\"/app\" component={App} />\n                    <Route path=\"/login\" component={LoginPage} />\n                    <Route path=\"*\" component={NotFoundPage}/>\n                    <Redirect from=\"*\" to=\"/404\" />\n                </Switch>\n            </AlertDialogProvider>\n        </SnackbarProvider>\n    </Router>, document.getElementById('root'));\n"],"sourceRoot":""}