{"version":3,"sources":["pages/Home.js","components/TableComponent.js","helpers/debounce.js","Networking/NetworkLayerCentral.js","Networking/API.js","helpers/history.js","pages/Places.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/CustomMap.js","components/add_place_components/PlaceLocation.js","components/add_place_components/ParkingLocation.js","components/AutocompleteChip.js","components/AddDialog.js","components/add_place_components/PlaceDiscovery.js","components/add_place_components/initialScheduleData.js","components/Schedule.js","components/add_place_components/WorkingSchedule.js","pages/AddPlace.js","components/Appbar.js","App.js","index.js"],"names":["withStyles","theme","button","margin","spacing","input","display","props","classes","descendingComparator","a","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","checkable","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","TextField","target","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","centerCell","textAlign","TableComponent","pagingInfo","data","updateCallback","removeCallback","isLoading","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckboxChange","header","isId","scope","fontSize","style","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","pageNum","onChangePage","newPage","onChangeRowsPerPage","parseInt","console","log","request","options","client","axios","create","baseURL","headers","onSuccess","response","debug","onError","error","config","status","message","Promise","reject","then","catch","RequestType","getRequest","path","urlData","url","method","postRequest","API","getAllPlaces","urlParams","getAllTags","getAllCategories","addTag","params","addCategory","addPhoto","uploadPhoto","getParkingByLocation","insertNewParking","history","buttonsDiv","justifyContent","setData","pageData","setPageData","setIsLoading","parseData","placesData","list","push","p","Box","Button","startIcon","placeholder","fullWidth","InputLabelProps","shrink","multiline","rows","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","item","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","distance","onSortEnd","oldIndex","newIndex","arrayMove","axis","filter","acceptedFileFormats","onCloseCallback","open","onFinishCallback","loading","Dialog","DialogTitle","DialogContent","dividers","acceptedFiles","dropzoneProps","disabled","filesLimit","onDrop","files","formData","FormData","imagefile","append","post","finally","handleFileUpload","DialogActions","outline","addImageDialogOpen","setAddImageDialogOpen","file","handleAddPhoto","markerData","content","autocomplete","locationData","setLocationData","mapHeight","selectedParkingCallback","changedParkingMarkerCallback","addParkingCallback","changeLocationData","city","country","address","lat","lng","onParkingDataChanged","Object","assign","undefined","Geocode","setApiKey","enableDebug","getCity","addressArray","i","types","long_name","getCountry","getArea","j","getState","MyMapComponent","compose","withProps","googleMapURL","loadingElement","containerElement","mapElement","withStateHandlers","infoWindow","show","toggleDraggableInfoWindow","draggableMarkerLocation","withScriptjs","withGoogleMap","defaultZoom","center","markerLocation","defaultCenter","visible","draggable","onDragEnd","e","onMarkerLocationChanged","newLat","latLng","newLng","fromLatLng","results","formatted_address","address_components","onMarkerDragEnd","markerChanger","onParkingDataChange","onCloseClick","flexDirection","onToggleOpen","infoWindows","parkingData","location","parseFloat","latitude","longitude","parkingId","icon","showInfo","FullMap","parking","iw","onPlaceSelected","place","latValue","geometry","lngValue","useMemo","alignItems","marginTop","parkingMarkerData","setParkingMarkerData","allSelectedParkingData","setAllSelectedParkingData","getClosestParking","parkingDataChanged","SortableItem","elevation","SortableList","oldArray","autoComplete","chip","flexWrap","listStyle","autoCompleteChipContainer","selectedOptions","setSelectedOptions","getCurrentVal","setCurrentVal","viableOptions","setViableOptions","includes","option","Chip","onDelete","Autocomplete","disableClearable","getOptionLabel","renderInput","closeButton","right","grey","textFieldLabel","description","action","setText","setError","ev","autoFocus","validateInput","selectedTags","setSelectedTags","selectedCategories","setSelectedCategories","dialogAddTagOpen","setDialogAddTagOpen","dialogAddCategoryOpen","setDialogAddCategoryOpen","availableCategories","setAvailableCategories","availableTags","setAvailableTags","AutocompleteChip","newTag","tagId","newCat","categoryId","initialScheduleData","dayOfWeek","openTime","closeTime","isClosed","ScheduleCard","setOpenTime","setCloseTime","setIsClosed","oldData","scheduleCard","Fragment","step","state","scheduleData","setScheduleData","workingScheduleEnabled","setWorkingScheduleEnabled","FormControlLabel","control","Switch","current","bottomBar","addFromUrlWrapper","activeStep","setActiveStep","steps","getStep","Stepper","Step","StepLabel","prevActiveStep","max","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","flexGrow","contentShift","Appbar","useTheme","setOpen","setTitle","CssBaseline","AppBar","edge","Drawer","anchor","Divider","List","ListItem","Link","to","ListItemText","exact","Home","Places","AddPlace","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d45d68b0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    }\r\n});\r\n\r\nconst Home = props => {\r\n    const { classes } = props;\r\n    return (\r\n        <div>\r\n           Home\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport useDebounce from \"../helpers/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, checkable} = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n\r\n                {checkable ? <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell> : null}\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right'  : 'left' }\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    headCells: PropTypes.object.isRequired,\r\n    checkable: PropTypes.bool.isRequired\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected, title, changePageCallback, keyword, setKeyword} = props;\r\n\r\n\r\n    const debouncedSearch = useDebounce(keyword, 300);\r\n\r\n\r\n\r\n    useEffect( () => {\r\n            changePageCallback(1,keyword)\r\n        },\r\n\r\n        [debouncedSearch]\r\n    );\r\n\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n            )}\r\n\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"delete\">\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : <TextField id=\"standard-basic\" label=\"Search\" onChange={ event =>{setKeyword(event.target.value)}}/>}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    centerCell: {\r\n        textAlign: \"center\",\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nexport default function TableComponent({title, headCells, pagingInfo, data, checkable, changePageCallback, updateCallback, removeCallback, id, isLoading}) {\r\n\r\n    TableComponent.propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        headCells: PropTypes.object.isRequired,\r\n        pagingInfo: PropTypes.object,\r\n        data: PropTypes.object.isRequired,\r\n        checkable: PropTypes.bool.isRequired,\r\n        changePageCallback: PropTypes.func,\r\n        updateCallback: PropTypes.func,\r\n        removeCallback: PropTypes.func,\r\n        id: PropTypes.string.isRequired,\r\n        isLoading: PropTypes.bool\r\n    };\r\n\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = data.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleCheckboxChange = (event, name) =>{\r\n\r\n            const selectedIndex = selected.indexOf(name);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(selected, name);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(selected.slice(1));\r\n            } else if (selectedIndex === selected.length - 1) {\r\n                newSelected = newSelected.concat(selected.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    selected.slice(0, selectedIndex),\r\n                    selected.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelected(newSelected);\r\n\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n\r\n    };\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n        console.log(\"handleChangeRowsPerPage\")\r\n\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                {isLoading ? <LinearProgress/> : null }\r\n                <EnhancedTableToolbar\r\n                    title={title}\r\n                    numSelected={selected.length}\r\n                    changePageCallback={changePageCallback}\r\n                    keyword={keyword}\r\n                    setKeyword={setKeyword}\r\n                />\r\n                 <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={data.length}\r\n                            headCells={headCells}\r\n                            checkable={checkable}\r\n                        />\r\n\r\n                        <TableBody>\r\n                            {stableSort(data, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.name);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row.name)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.name}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            {checkable ? <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    onChange={(event)=>handleCheckboxChange(event, row.name)}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell> : null}\r\n\r\n                                            {headCells.map(header=>{\r\n                                                if(header.isId){\r\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\r\n                                                            {row[header.id]}\r\n                                                        </TableCell>\r\n                                                }else if(header.id === 'actions' ){\r\n                                                        return <TableCell>\r\n                                                            <div>\r\n                                                                <IconButton onClick={()=>updateCallback(row[id])} size=\"small\" aria-label=\"edit\" >\r\n                                                                    <EditIcon fontSize=\"small\" />\r\n                                                                </IconButton>\r\n\r\n                                                                <IconButton size=\"small\" aria-label=\"delete\" >\r\n                                                                    <DeleteIcon fontSize=\"small\" />\r\n                                                                </IconButton>\r\n                                                            </div>\r\n                                                            </TableCell>\r\n                                                }else{\r\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\r\n                                                }\r\n\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\r\n                                        <TableCell colSpan={6} className={classes.centerCell}>\r\n                                            <Typography variant=\"h6\" noWrap>\r\n                                                No results\r\n                                            </Typography>\r\n                                        </TableCell>}\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10]}\r\n                    component=\"div\"\r\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\r\nexport default function useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(\r\n        () => {\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n\r\n        [value]\r\n    );\r\n\r\n    return debouncedValue;\r\n}","import React from \"react\";\r\nimport axios from \"axios\"\r\n\r\nconst request = async function(options) {\r\n    const client = axios.create({\r\n        baseURL: \"http://izbg.l.dedikuoti.lt:8080/\",\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        }\r\n    });\r\n\r\n    const onSuccess = function (response) {\r\n        console.debug('Request Successful!', response);\r\n        return response.data;\r\n    };\r\n\r\n    const onError = function (error) {\r\n        console.debug('Request Failed:', error.config);\r\n        if (error.response) {\r\n            console.debug('Status:', error.response.status);\r\n            console.debug('Data:', error.response.data);\r\n            console.debug('Headers:', error.response.headers);\r\n        } else {\r\n            console.debug('Error Message:', error.message);\r\n        }\r\n        return Promise.reject(error.response || error.message);\r\n    };\r\n\r\n    return client(options)\r\n        .then(onSuccess)\r\n        .catch(onError);\r\n};\r\n\r\nconst getRequest = function (path, urlData= \"\") {\r\n    return request({\r\n        url:path+urlData,\r\n        method: 'GET'\r\n    });\r\n};\r\n\r\nconst postRequest = function (path, data) {\r\n    return request({\r\n        url:    path,\r\n        method: 'POST',\r\n        data: data\r\n    });\r\n};\r\n\r\nconst RequestType = {\r\n    getRequest, postRequest\r\n};\r\n\r\nexport default RequestType\r\n\r\n\r\n","import RequestType from '../Networking/NetworkLayerCentral'\r\n\r\n//Places\r\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\r\n\r\n\r\n//Tags\r\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\r\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\r\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\r\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\r\nconst uploadPhoto = (params) => RequestType.postRequest(\"api/v1/photo/upload\", params);\r\nconst getAllCategories = () => RequestType.getRequest(\"api/v1/categories/all\");\r\n\r\n//Parking\r\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/search\", urlParams);\r\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\r\n\r\nconst API = {getAllPlaces, getAllTags, getAllCategories, addTag, addCategory, addPhoto, uploadPhoto, getParkingByLocation, insertNewParking};\r\n\r\nexport default API\r\n\r\n","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\n\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    buttonsDiv: {\r\n        display: 'flex',\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n});\r\n\r\n\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\r\n    { id: 'address', numeric: false, disablePadding: false, label: 'Address',isId: false},\r\n    { id: 'city', numeric: false, disablePadding: false, label: 'City',isId: false },\r\n    { id: 'country', numeric: false, disablePadding: false, label: 'Country',isId: false },\r\n    { id: 'phoneNumber', numeric: false, disablePadding: false, label: 'Phone Number',isId: false },\r\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\r\n];\r\n\r\n\r\n\r\n\r\n/*\r\n{\r\n    \"total\": 12,\r\n    \"list\": [\r\n        {\r\n            \"placeId\": 1,\r\n\r\n            \"name\": \"Gedimino pilies bokštas\",\r\n            \"description\": \"Šis triaukštis mūrinis bokštas – buvusios pilies, pastatytos XV a., dalis.\",\r\n            \"averageTimeSpent\": \"00:01:00\",\r\n            \"latitude\": 54.4112,\r\n            \"longitude\": 25.1727,\r\n            \"address\": \"Arsenalo g. 5, 01143\",\r\n            \"country\": \"Lithuania\",\r\n            \"city\": \"Vilnius\",\r\n            \"phoneNumber\": \"(8-5) 261 7453\",\r\n            \"website\": \"lnm.lt\"\r\n        },\r\n        {\r\n            \"placeId\": 1,\r\n            \"name\": \"Gedimino pilies bokštas\",\r\n            \"description\": \"Šis triaukštis mūrinis bokštas – buvusios pilies, pastatytos XV a., dalis.\",\r\n            \"averageTimeSpent\": \"00:01:00\",\r\n            \"latitude\": 54.4112,\r\n            \"longitude\": 25.1727,\r\n            \"address\": \"Arsenalo g. 5, 01143\",\r\n            \"country\": \"Lithuania\",\r\n            \"city\": \"Vilnius\",\r\n            \"phoneNumber\": \"(8-5) 261 7453\",\r\n            \"website\": \"lnm.lt\"\r\n        }\r\n    ],\r\n    \"pageNum\": 1,\r\n    \"pageSize\": 10,\r\n    \"size\": 10,\r\n    \"startRow\": 1,\r\n    \"endRow\": 10,\r\n    \"pages\": 2,\r\n    \"prePage\": 0,\r\n    \"nextPage\": 2,\r\n    \"isFirstPage\": true,\r\n    \"isLastPage\": false,\r\n    \"hasPreviousPage\": false,\r\n    \"hasNextPage\": true,\r\n    \"navigatePages\": 8,\r\n    \"navigatepageNums\": [\r\n        1,\r\n        2\r\n    ],\r\n    \"navigateFirstPage\": 1,\r\n    \"navigateLastPage\": 2\r\n}\r\n */\r\n\r\n\r\n\r\nfunction Places(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { classes } = props;\r\n\r\n    useEffect(()=>{\r\n        getAllPlaces()\r\n    },[]);\r\n\r\n\r\n\r\n    function parseData(data){\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        setPageData(data);\r\n        console.log(data)\r\n    }\r\n\r\n    function updatePlaceCallback(id){\r\n        console.log(id)\r\n    }\r\n\r\n\r\n    const changePageCallback = (p=0, keyword=\"\") => {\r\n        setIsLoading(true);\r\n        getAllPlaces(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword)\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TableComponent\r\n                title={\"Places\"}\r\n                headCells={headCells}\r\n                data={data}\r\n                pagingInfo={pageData}\r\n                checkable={false}\r\n                changePageCallback={changePageCallback}\r\n                updateCallback={updatePlaceCallback}\r\n                id={\"placeId\"}\r\n                isLoading={isLoading}\r\n            />\r\n\r\n            <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                <Button\r\n                    onClick={()=>{history.push(\"/addplace\")}}\r\n                    variant=\"text\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    className={classes.button}\r\n                    startIcon={<AddIcon />}>\r\n                    Add\r\n                </Button>\r\n\r\n            </Box>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n    function getAllPlaces(urlParams=\"\") {\r\n        API.getAllPlaces(urlParams).then(response=>{\r\n            parseData(response)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nPlaces.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Places);","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\n\r\nconst styles = theme => ({\r\n\r\n});\r\n\r\nfunction BasicPlaceInfo() {\r\n\r\n    return <div>\r\n            <Typography variant=\"h6\" >\r\n                Basic place information\r\n            </Typography>\r\n            <br/>\r\n            <TextField\r\n                label=\"Place name\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Enter the place name\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                label=\"Place description\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Describe the place thoroughly\"\r\n                fullWidth\r\n                multiline\r\n                variant=\"outlined\"\r\n                rows={4}\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                label=\"Phone number\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Enter phone number\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                label=\"Website\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Enter website\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </div>\r\n}\r\n\r\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport React, {useMemo, useState} from \"react\"\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Delete from \"@material-ui/icons/Delete\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst imgWithClick = { cursor: \"pointer\" };\r\n\r\nconst Photo = ({ index, onItemDelete, photo, margin, direction, top, left }) => {\r\n\r\n    const styles = {\r\n        imgContainer: {\r\n            margin: margin,\r\n            display: 'inline',\r\n            position: 'relative',\r\n            width: '300px',\r\n            height: '300px',\r\n        }\r\n    }\r\n    if (direction === \"column\") {\r\n        styles.imgContainer.position = \"absolute\";\r\n        styles.imgContainer.imgStyle.left = left;\r\n        styles.imgContainer.imgStyle.top = top;\r\n    }\r\n\r\n    const handleDelete = event => {\r\n        onItemDelete(photo);\r\n    }\r\n\r\n        return (\r\n\r\n            <Card style={styles.imgContainer}>\r\n                <CardMedia\r\n                    style={{height: 0, paddingTop: '80%'}}\r\n                    image={photo.src}\r\n                />\r\n                <CardActions disableSpacing>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<DeleteIcon />}\r\n                        onClick = {(event) => {handleDelete(event)}}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </CardActions>\r\n\r\n            </Card>\r\n        )\r\n\r\n};\r\n\r\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\r\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\r\nconst SortableGallery = SortableContainer(({ items, onItemDelete}) => (\r\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>} />\r\n));\r\n\r\nfunction ReorderablePhotos(props){\r\n    let {setPhotos, photos, srcName, keyName} = props\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\r\n    };\r\n    function handleItemDelete(photo){\r\n        setPhotos(photos.filter(item => {return item[keyName].toString() !== photo.key}))\r\n    }\r\n\r\n    let modifiedData = photos.map(item =>  {\r\n        return(\r\n    {\r\n        key: item[keyName].toString(),\r\n        src: item[srcName],\r\n        width: 1,\r\n        height: 1\r\n    })\r\n\r\n})\r\n    console.log(modifiedData)\r\n        return (\r\n            <div >\r\n                <SortableGallery distance={10} items={modifiedData} onSortEnd={onSortEnd} axis={\"xy\"} onItemDelete = {handleItemDelete} />\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\n\r\nexport default  ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {DropzoneArea} from \"material-ui-dropzone\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../Networking/API\";\r\nimport axios from \"axios\";\r\n\r\nconst styles = theme => ({\r\n});\r\n\r\nconst acceptedFileFormats = ['image/jpeg', 'image/png', 'image/bmp', 'image/jpg']\r\n\r\nfunction AddImageDialog(props){\r\n\r\n    const {onCloseCallback, open, onFinishCallback} = props\r\n    const [loading, setIsLoading] = useState(false)\r\n\r\n    function handleFileUpload(files) {\r\n        setIsLoading(true)\r\n        console.log(files)\r\n\r\n        var formData = new FormData();\r\n        var imagefile = files[0]\r\n        formData.append(\"image\", imagefile);\r\n        axios.post('http://izbg.l.dedikuoti.lt:8080/api/v1/photo/upload', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(response => {\r\n            console.log(response)\r\n            onFinishCallback(response.data)\r\n        }).catch(() => {\r\n            onFinishCallback()\r\n        }).finally(() => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\" >\r\n                    Photo upload\r\n                </DialogTitle>\r\n                {loading && <LinearProgress variant=\"query\" />}\r\n                <DialogContent dividers>\r\n                    <DropzoneArea\r\n                        acceptedFiles={acceptedFileFormats}\r\n                        dropzoneProps = {{disabled: loading}} filesLimit={1} onDrop={(files) => handleFileUpload(files)}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\nAddImageDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onFinishCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddImageDialog)\r\n","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ReorderablePhotos from \"../ReorderablePhotos\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddImageDialog from \"../AddImageDialog\";\r\nimport {Card} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PhotosInfo({classes, setPhotos, photos}) {\r\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\r\n\r\n    function handleAddPhoto(file) {\r\n        setAddImageDialogOpen(false);\r\n        if(file == null)\r\n            return;\r\n        setPhotos([\r\n            ...photos,\r\n            file]\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Card variant={\"outlined\"} className={classes.outline}>\r\n            {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\r\n\r\n\r\n            <Button\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                style={{width: '15%'}}\r\n                className={classes.button}\r\n                onClick={() => setAddImageDialogOpen(true)}\r\n                startIcon={<AddIcon />}>\r\n                Add photo\r\n            </Button>\r\n\r\n            <AddImageDialog open={addImageDialogOpen} onFinishCallback={(file) => handleAddPhoto(file)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\r\n\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PhotosInfo)\r\n\r\n\r\n","import React, {memo, useEffect, useMemo, useState} from 'react'\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport Geocode from \"react-geocode\";\r\nimport {compose, withProps, withStateHandlers} from \"recompose\"\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {map} from \"react-bootstrap/cjs/ElementChildren\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\n\r\n//\r\n\r\n//Geocoding API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\r\n//Places API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\r\n//Maps API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    autocomplete:{\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\"\r\n    }\r\n});\r\n\r\nvar markerData = {};\r\n\r\nfunction CustomMap({classes, locationData, setLocationData, mapHeight, selectedParkingCallback, changedParkingMarkerCallback, addParkingCallback}){\r\n\r\n\r\n    CustomMap.propTypes = {\r\n        locationData: PropTypes.object,\r\n        setLocationData: PropTypes.func,\r\n        mapHeight: PropTypes.number\r\n    };\r\n\r\n\r\n\r\n    var parkingIcon = 'https://developers.google.com/maps/documentation/javascript/examples/full/images/parking_lot_maps.png';\r\n\r\n    Geocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\r\n    Geocode.enableDebug();\r\n\r\n\r\n    const onPlaceSelected = (place, onMarkerLocationChanged, onParkingDataChanged) => {\r\n\r\n        const address = place.formatted_address,\r\n            addressArray =  place.address_components,\r\n            city = getCity( addressArray ),\r\n            area = getArea( addressArray ),\r\n            state = getState( addressArray ),\r\n            country = getCountry(addressArray),\r\n            latValue = place.geometry.location.lat(),\r\n            lngValue = place.geometry.location.lng();\r\n\r\n        onMarkerLocationChanged(latValue, lngValue);\r\n        changeLocationData(city,country,address,latValue,lngValue, onParkingDataChanged);\r\n\r\n    };\r\n\r\n    const onMarkerDragEnd = ( event, onMarkerLocationChanged, onParkingDataChanged) => {\r\n        let newLat = event.latLng.lat(),\r\n            newLng = event.latLng.lng();\r\n\r\n        onMarkerLocationChanged(newLat, newLng);\r\n\r\n        Geocode.fromLatLng( newLat , newLng ).then(\r\n            response => {\r\n                const address = response.results[0].formatted_address,\r\n                    addressArray =  response.results[0].address_components,\r\n                    city = getCity( addressArray ),\r\n                    area = getArea( addressArray ),\r\n                    state = getState( addressArray ),\r\n                    country = getState( addressArray );\r\n\r\n                    changeLocationData(city,country,address,newLat,newLng, onParkingDataChanged);\r\n\r\n\r\n            },\r\n            error => {\r\n                console.error(error);\r\n            }\r\n        );\r\n    };\r\n\r\n    function changeLocationData(city,country,address,lat,lng, onParkingDataChanged) {\r\n        let data = Object.assign({}, locationData, {});\r\n        data['city'] = city;\r\n        data['country'] = country;\r\n        data['address'] = address;\r\n        data['lat'] = lat;\r\n        data['lng'] = lng;\r\n        setLocationData(data);\r\n        markerData = data;\r\n        if (changedParkingMarkerCallback !== undefined){\r\n            changedParkingMarkerCallback(city,address,country, lat,lng, onParkingDataChanged);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Get the city and set the city input value to the one selected\r\n     *\r\n     * @param addressArray\r\n     * @return {string}\r\n     */\r\n    const getCity = ( addressArray ) => {\r\n        let city = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\r\n                city = addressArray[ i ].long_name;\r\n                return city;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getCountry = (addressArray) =>{\r\n        let country = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\r\n                country = addressArray[ i ].long_name;\r\n                return country;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the area and set the area input value to the one selected\r\n     *\r\n     * @param addressArray\r\n     * @return {string}\r\n     */\r\n    const getArea = ( addressArray ) => {\r\n        let area = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0]  ) {\r\n                for ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\r\n                    if ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] ) {\r\n                        area = addressArray[ i ].long_name;\r\n                        return area;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get the address and set the address input value to the one selected\r\n     *\r\n     * @param addressArray\r\n     * @return {string}\r\n     */\r\n    const getState = ( addressArray ) => {\r\n        let state = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            for( let i = 0; i < addressArray.length; i++ ) {\r\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n                    state = addressArray[ i ].long_name;\r\n                    return state;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Renders parking data markers\r\n     *\r\n     * @param onToggleOpen Method to open marker's info window\r\n     * @param infoWindows Marker info window\r\n     * @param parking data\r\n     * @returns {*}\r\n     */\r\n    const markers = (onToggleOpen, infoWindows, parking) =>{\r\n        return parking.map((location, i) => {\r\n\r\n            const lat = parseFloat(location.latitude);\r\n            const lng = parseFloat(location.longitude);\r\n\r\n            return (\r\n                <Marker\r\n                    key={location.parkingId}\r\n                    position={{ lat: lat, lng: lng}}\r\n                    options={{icon: parkingIcon}}\r\n                    onClick={()=>onToggleOpen(location.parkingId)}\r\n                >\r\n\r\n                    {infoWindows[i].showInfo && (\r\n                        <InfoWindow >\r\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                                {location.address}\r\n                                <Button\r\n                                    onClick={()=>{selectedParkingCallback(location)}}\r\n                                    variant=\"text\"\r\n                                    color=\"secondary\"\r\n                                    size=\"large\"\r\n                                    className={classes.button}\r\n                                    startIcon={<AddIcon />}>\r\n                                    Add parking\r\n                                </Button>\r\n                            </div>\r\n                        </InfoWindow>\r\n                    )}\r\n\r\n                </Marker>\r\n            )\r\n        })\r\n    };\r\n\r\n    const addNewParking = () => {\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Map component that renders parking data and has draggable marker\r\n     */\r\n    const MyMapComponent = compose(\r\n        withProps({\r\n            googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8&v=3.exp&libraries=geometry,drawing,places\",\r\n            loadingElement: <div style={{ height: `100%` }} />,\r\n            containerElement: <div style={{ height: mapHeight }} />,\r\n            mapElement: <div style={{ height: `100%` }} />,\r\n        }),\r\n        withStateHandlers({\r\n                infoWindow: {show: false}\r\n            },{\r\n            toggleDraggableInfoWindow: ({draggableMarkerLocation}) => (show) => ({\r\n                infoWindow: {show: show}\r\n            })\r\n            }\r\n        ),\r\n        withScriptjs,\r\n        withGoogleMap\r\n    )(props =>\r\n\r\n        <GoogleMap\r\n            defaultZoom={12}\r\n            center={{lat: props.markerLocation.lat, lng: props.markerLocation.lng }}\r\n            defaultCenter={{ lat: props.markerLocation.lat, lng: props.markerLocation.lng }}\r\n        >\r\n            <Marker\r\n                name={'Dolores park'}\r\n                visible={true}\r\n                draggable={true}\r\n                onClick={()=>props.toggleDraggableInfoWindow(true)}\r\n                onDragEnd={e=>onMarkerDragEnd(e, props.markerChanger, props.onParkingDataChange)}\r\n                position={{ lat: props.markerLocation.lat, lng: props.markerLocation.lng }} >\r\n\r\n                {props.infoWindow.show && addParkingCallback && (\r\n                    <InfoWindow onCloseClick={()=>{props.toggleDraggableInfoWindow(false)}}>\r\n                        <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                            {locationData.address}\r\n                            <Button\r\n                                onClick={()=>addParkingCallback(markerData)}\r\n                                variant=\"text\"\r\n                                color=\"secondary\"\r\n                                size=\"large\"\r\n                                className={classes.button}\r\n                                startIcon={<AddIcon />}>\r\n                                Add new parking\r\n                            </Button>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )}\r\n            </Marker>\r\n\r\n            {markers(props.onToggleOpen, props.infoWindows, props.parkingData)}\r\n        </GoogleMap>\r\n    );\r\n\r\n    /**\r\n     * Places autocomplete and map. This component holds it's inner states like draggableMarkerLocation, parkingData etc.\r\n     */\r\n    const FullMap = compose(\r\n        withProps(),\r\n        withStateHandlers({\r\n            draggableMarkerLocation: {\r\n                lat: locationData!==undefined ? locationData.lat : 54.686047,\r\n                lng: locationData!==undefined ? locationData.lng : 25.2775476\r\n            },parkingData: [], infoWindows: []\r\n        },{\r\n            onMarkerLocationChanged: ({draggableMarkerLocation}) => (newLat, newLng) => ({\r\n                draggableMarkerLocation: {\r\n                    lat: newLat,\r\n                    lng: newLng\r\n                }\r\n            }),\r\n                onParkingDataChange: ({parkingData}) => (parking) => ({\r\n                    parkingData: parking.map(row=>{\r\n                        return row\r\n                    }),\r\n                    infoWindows: parking.map(p => {\r\n                        return { parkingId: p.parkingId, showInfo: false };\r\n                    })\r\n                }),\r\n                onToggleOpen: ({ infoWindows }) => selectedIndex => ({\r\n                    infoWindows: infoWindows.map((iw, i) => {\r\n                        iw.showInfo = selectedIndex === iw.parkingId;\r\n                        return iw;\r\n                    })\r\n                })\r\n            }\r\n            )\r\n    )(props=>\r\n        <div className={classes.content}>\r\n            <Autocomplete\r\n                className={classes.autocomplete}\r\n                onPlaceSelected={(place)=>{onPlaceSelected(place, props.onMarkerLocationChanged, props.onParkingDataChange)} }\r\n                types={['(regions)']}\r\n            />\r\n\r\n            <MyMapComponent markerChanger={props.onMarkerLocationChanged}\r\n                            markerLocation={props.draggableMarkerLocation}\r\n                            onParkingDataChange={props.onParkingDataChange}\r\n                            parkingData={props.parkingData}\r\n                            onToggleOpen={props.onToggleOpen}\r\n                            infoWindows={props.infoWindows}\r\n            />\r\n\r\n        </div>\r\n    );\r\n\r\n    /**\r\n     * Memoization of a component.\r\n     */\r\n    return useMemo(() => {\r\n        return <FullMap/>;\r\n    }, [])\r\n\r\n}\r\n\r\nexport default withStyles(styles)(CustomMap);","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CustomMap from \"../CustomMap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PlaceLocation({locationData, setLocationData}) {\r\n\r\n    function changeLocationData(event){\r\n        const {name, value} = event.target;\r\n        let data = Object.assign({}, locationData, {});\r\n        data[name] = value;\r\n        setLocationData(data)\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select place location from map\r\n        </Typography>\r\n        <br/>\r\n        <CustomMap mapHeight={200}\r\n                   locationData={locationData}\r\n                   setLocationData={setLocationData}\r\n        />\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            label=\"Address\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place address\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['address']}\r\n            name='address'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"City\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place city\"\r\n            fullWidth\r\n            value={locationData['city']}\r\n            name='city'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Country\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place country\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['country']}\r\n            name='country'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            rows={4}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceLocation)","import React, {useEffect} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CustomMap from \"../CustomMap\";\r\nimport API from \"../../Networking/API\";\r\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction ParkingLocation({classes, parkingMarkerData, setParkingMarkerData, allSelectedParkingData, setAllSelectedParkingData}) {\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\r\n    };\r\n\r\n    function changedParkingMarkerCallback(city,address,country,lat,lng, parkingDataChanged) {\r\n        getClosestParking(parseFloat(lat),parseFloat(lng), parkingDataChanged);\r\n    }\r\n\r\n    function addNewParking(markerData){\r\n        markerData.latitude = markerData.lat;\r\n        markerData.longitude = markerData.lng;\r\n        API.insertNewParking([markerData]).then(response=>{\r\n            setAllSelectedParkingData(oldArray=>[...oldArray, response[0]])\r\n        }).catch(error=>{\r\n            console.log(error);\r\n        })\r\n    }\r\n    const getClosestParking = (lat, lng, parkingDataChanged)=>{\r\n        API.getParkingByLocation(\"?lat=\"+lat+\"&lng=\"+lng).then(response=>{\r\n            let placesData = [];\r\n            response.map(row => {\r\n                placesData.push(row)\r\n            });\r\n            parkingDataChanged(response);\r\n        }).catch(error=>{\r\n        })\r\n    };\r\n\r\n    const SortableItem = SortableElement(({value}) => (\r\n        <Paper className={classes.paper} elevation={3}>\r\n            <Typography>\r\n                {value.address}\r\n            </Typography>\r\n            <IconButton aria-label=\"delete\" className={classes.margin}\r\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </Paper>\r\n    ));\r\n\r\n    useEffect(()=>{\r\n        getClosestParking(parkingMarkerData.lat, parkingMarkerData.lng)\r\n    },[]);\r\n\r\n    const SortableList = SortableContainer(({items}) => {\r\n        return (\r\n            <ul>\r\n                {items.map((value, index) => (\r\n                <SortableItem key={index} index={index} value={value} />\r\n                ))}\r\n            </ul>\r\n        );\r\n    });\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Add parking\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select parking\r\n        </Typography>\r\n        <CustomMap mapHeight={350}\r\n                   locationData={parkingMarkerData}\r\n                   setLocationData={setParkingMarkerData}\r\n                   selectedParkingCallback={(location)=>setAllSelectedParkingData(oldArray=> [...oldArray, location])}\r\n                   changedParkingMarkerCallback={changedParkingMarkerCallback}\r\n                   addParkingCallback={addNewParking}\r\n\r\n        />\r\n\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Selected parking locations\r\n        </Typography>\r\n\r\n        <SortableList distance={10} items={allSelectedParkingData} onSortEnd={onSortEnd} />\r\n\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(ParkingLocation)","\r\nimport React, {useEffect, useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    autoComplete: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(1),\r\n        margin: 0,\r\n    },\r\n    autoCompleteChipContainer: {\r\n        padding: theme.spacing(1)\r\n    }\r\n})\r\n\r\nfunction AutoCompleteChip(props){\r\n\r\n    const {options, selectedOptions, setSelectedOptions, classes, label, id} = props;\r\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\r\n    const [viableOptions, setViableOptions] = useState([]);\r\n\r\n\r\n    function handleDelete(data) {\r\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\r\n        setViableOptions(\r\n            [\r\n                ...viableOptions,\r\n                data\r\n            ]\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        setViableOptions(options.filter(item => !selectedOptions.includes(item)))\r\n    }, [options, selectedOptions]);\r\n\r\n    function handleInput(event, value){\r\n        setCurrentVal({\"name\": \"\"});\r\n        setSelectedOptions(\r\n            [\r\n                ...selectedOptions,\r\n                value\r\n            ]\r\n        );\r\n        setViableOptions(viableOptions.filter(item => item !== value))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Box  className={classes.autoCompleteChipContainer}>\r\n                {selectedOptions.length !== 0 &&\r\n                <Box component=\"ul\" className={classes.root}>\r\n                    {\r\n                        selectedOptions.map(option => {\r\n                            return(\r\n                                <li key={option[id]}>\r\n                                    <Chip\r\n                                        variant=\"outlined\"\r\n                                        label={option.name}\r\n                                        onDelete={() => handleDelete(option)}\r\n                                        className={classes.chip}\r\n                                    />\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </Box>\r\n                }\r\n\r\n                <Autocomplete\r\n                    className={classes.autoComplete}\r\n                    value={getCurrentVal}\r\n                    options={viableOptions}\r\n                    onChange={handleInput}\r\n                    disableClearable\r\n                    getOptionLabel={(option) =>  option.name}\r\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\r\n                />\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nAutoCompleteChip.propTypes = {\r\n    setSelectedOptions: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    selectedOptions: PropTypes.array.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    label: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AutoCompleteChip)","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nfunction AddDialog(props){\r\n\r\n    function validateInput(){\r\n        var error = false;\r\n        if(text.length <= 3)\r\n            error = true\r\n        setError(error)\r\n        return error\r\n    }\r\n\r\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\r\n    const [text, setText] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    return(\r\n        <div>\r\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\r\n                    {header}\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    action: PropTypes.func.isRequired,\r\n    onCloseCallback: PropTypes.func.isRequired\r\n};\r\nexport default withStyles(styles)(AddDialog)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddDialog from \"../AddDialog\";\r\nimport API from \"../../Networking/API\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories}) {\r\n\r\n    const [dialogAddTagOpen, setDialogAddTagOpen] = useState(false);\r\n    const [dialogAddCategoryOpen, setDialogAddCategoryOpen] = useState(false);\r\n\r\n    const [availableCategories, setAvailableCategories] = useState([]);\r\n    const [availableTags, setAvailableTags] = useState([]);\r\n\r\n\r\n    const updateTags = () => {\r\n        API.getAllTags().then(response=>{\r\n            setAvailableTags(response);\r\n            console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n    const updateCategories = () => {\r\n        API.getAllCategories().then(response=>{\r\n            setAvailableCategories(response)\r\n            console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        });\r\n    };\r\n\r\n    useEffect(()=>{\r\n        console.log(\"ParsiunciaasdasdkasfkjlasdnfoasdFJasdfn;FN;\")\r\n        updateTags();\r\n        updateCategories();\r\n    },[]);\r\n\r\n    const handleAddCategory = (value) => {\r\n        API.addCategory([{name: value}]).then(response=>{\r\n            let newCat = {categoryId: response[0], name: value};\r\n            setAvailableCategories(\r\n                [\r\n                    ...availableCategories,\r\n                    newCat\r\n                ]\r\n            );\r\n            setSelectedCategories([\r\n                ...selectedCategories,\r\n                newCat\r\n            ]);\r\n            setDialogAddCategoryOpen(false)\r\n\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n\r\n\r\n    const handleAddTag = (value) => {\r\n        API.addTag([{name: value}]).then(response=>{\r\n            let newTag = {tagId: response[0], name: value}\r\n            setAvailableTags(\r\n                [\r\n                    ...availableTags,\r\n                    newTag\r\n                ]\r\n            );\r\n            setSelectedTags([\r\n                ...selectedTags,\r\n                newTag\r\n            ]);\r\n            setDialogAddTagOpen(false)\r\n\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place discovery settings\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select tags\r\n        </Typography>\r\n        <AutocompleteChip label=\"Select tags\" id=\"tagId\" options={availableTags} selectedOptions={selectedTags} setSelectedOptions ={setSelectedTags}/>\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={() => setDialogAddTagOpen(true)}\r\n            startIcon={<AddIcon />}>\r\n            Add missing tag\r\n        </Button>\r\n        <AddDialog action={handleAddTag} textFieldLabel=\"Name\" open={dialogAddTagOpen} onCloseCallback={() => setDialogAddTagOpen(false)} header = \"Add a new tag\" />\r\n\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select categories\r\n        </Typography>\r\n        <AutocompleteChip label=\"Select categories\" id=\"categoryId\" options={availableCategories} selectedOptions={selectedCategories} setSelectedOptions={setSelectedCategories}/>\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={() => setDialogAddCategoryOpen(true)}\r\n            startIcon={<AddIcon />}>\r\n            Add a category\r\n        </Button>\r\n        <AddDialog action={handleAddCategory} textFieldLabel=\"Name\" open={dialogAddCategoryOpen} onCloseCallback={() => setDialogAddCategoryOpen(false)} header = \"Add a new category\" />\r\n\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceDiscovery)","const initialScheduleData = [\r\n    {\r\n        dayOfWeek: 0,\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        isClosed: false\r\n    },\r\n    {\r\n        dayOfWeek: 1,\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        isClosed: false\r\n    },\r\n    {\r\n        dayOfWeek: 2,\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        isClosed: false\r\n    },\r\n    {\r\n        dayOfWeek: 3,\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        isClosed: false\r\n    },\r\n    {\r\n        dayOfWeek: 4,\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        isClosed: false\r\n    },\r\n    {\r\n        dayOfWeek: 5,\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        isClosed: false\r\n    },\r\n    {\r\n        dayOfWeek: 6,\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        isClosed: false\r\n    }\r\n]\r\n\r\nexport default initialScheduleData","import {withStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst styles = theme => ({\r\n    scheduleCard: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n        //width: '100%'\r\n    },\r\n})\r\n\r\nfunction ScheduleCard({dayOfWeek, setData, data, classes}){\r\n\r\n    const weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\r\n\r\n    const [openTime, setOpenTime] = useState(data.openTime);\r\n    const [closeTime, setCloseTime] = useState(data.closeTime);\r\n    const [isClosed, setIsClosed] = useState(data.isClosed);\r\n\r\n    React.useEffect(() => {\r\n        setData(oldData => {\r\n            return oldData.map(item => {\r\n                if(item.dayOfWeek === dayOfWeek)\r\n                    return {dayOfWeek: dayOfWeek, openTime: openTime, closeTime: closeTime, isClosed: isClosed}\r\n                else return item\r\n            })\r\n        })\r\n    }, [openTime, isClosed, closeTime])\r\n\r\n    return(\r\n    <Card elevation={1} className={classes.scheduleCard}  >\r\n        <Typography variant=\"h6\">\r\n            {weekDays[dayOfWeek]}\r\n        </Typography>\r\n\r\n        <div >\r\n\r\n            {!isClosed &&\r\n                <React.Fragment>\r\n                <TextField\r\n                    label=\"Opening time\"\r\n                    type=\"time\"\r\n                    value={openTime}\r\n                    onChange={(e) => setOpenTime(e.target.value)}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 300, // 5 min\r\n                    }}\r\n                />\r\n                <TextField\r\n                    label=\"Closing time\"\r\n                    type=\"time\"\r\n                    onChange={(e) => setCloseTime(e.target.value)}\r\n                    value={closeTime}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 300, // 5 min\r\n                    }}\r\n                />\r\n                </React.Fragment>\r\n            }\r\n            <Checkbox\r\n                name=\"checkedB\"\r\n                color=\"primary\"\r\n                onChange={() => setIsClosed(state => !state)}\r\n                checked={!isClosed}\r\n            />\r\n\r\n        </div>\r\n\r\n    </Card>\r\n    )\r\n}\r\nScheduleCard.propTypes = {\r\n    dayOfWeek: PropTypes.number.isRequired,\r\n    setData: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Schedule({scheduleData, setScheduleData, classes}) {\r\n    return(\r\n        <div>\r\n            {scheduleData.map((item, index) => {\r\n                return <ScheduleCard key={index} dayOfWeek={index} classes={classes} data = {scheduleData.filter(item => item.dayOfWeek === index)[0]}  setData={setScheduleData}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nSchedule.propTypes = {\r\n    setScheduleData: PropTypes.func.isRequired,\r\n    scheduleData: PropTypes.array.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(Schedule)","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport Schedule from \"../Schedule\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction WorkingSchedule({classes, scheduleData, setScheduleData}) {\r\n    const [workingScheduleEnabled, setWorkingScheduleEnabled] = useState(false);\r\n\r\n    return <div>\r\n        <Typography variant=\"subtitle1\" >\r\n            Working schedule\r\n        </Typography>\r\n        <FormControlLabel\r\n            control={\r\n                <Switch\r\n                    checked={workingScheduleEnabled}\r\n                    onChange={() => setWorkingScheduleEnabled(current => !current)}\r\n                    color=\"primary\"\r\n                />\r\n            }\r\n            label=\"Enable working schedule for this place\"\r\n        />\r\n        <br/>\r\n        {workingScheduleEnabled &&\r\n        <Card variant={\"outlined\"} className={classes.outline}>\r\n\r\n            <Schedule scheduleData={scheduleData} setScheduleData={setScheduleData}/>\r\n\r\n        </Card>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(WorkingSchedule)","import React, {useState} from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Paper} from '@material-ui/core';\r\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\r\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\r\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\r\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\r\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\r\nimport initialScheduleData from \"../components/add_place_components/initialScheduleData\";\r\nimport WorkingSchedule from \"../components/add_place_components/WorkingSchedule\";\r\n\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    bottomBar: {\r\n        margin: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    content: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(4),\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n    root:{\r\n        width: '100%'\r\n    },\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    addFromUrlWrapper: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        display: 'flex',\r\n    }\r\n});\r\n\r\nfunction getSteps() {\r\n    return ['Basic place info', \"Place location\", 'Parking', 'Place discovery settings', 'Working schedule'];\r\n}\r\n\r\n\r\nfunction AddPlace(props){\r\n\r\n    const {classes} = props;\r\n    const [activeStep, setActiveStep] = useState(0);\r\n\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    const [photos, setPhotos] = useState([]);\r\n\r\n    const [locationData, setLocationData] = useState({city: '', address: '', country: '', lat: 54.687157, lng: 25.279652});\r\n    const [parkingMarkerData, setParkingMarkerData] = useState({city: '', address: '', country: '', lat: 54.687157, lng: 25.279652});\r\n\r\n    const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\r\n\r\n    const [scheduleData, setScheduleData] = useState(initialScheduleData);\r\n\r\n    let steps = getSteps();\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => Math.min(prevActiveStep + 1, steps.length));\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => Math.max(0, prevActiveStep - 1));\r\n    };\r\n\r\n    const getStep = (step) =>{\r\n        switch(step){\r\n            case 0:\r\n                return <React.Fragment>\r\n                        <BasicPlaceInfo/>\r\n                        <PhotosInfo\r\n                            photos={photos}\r\n                            setPhotos={setPhotos}\r\n                        />\r\n                </React.Fragment>\r\n\r\n            case 1:\r\n                return  <PlaceLocation\r\n                    locationData={locationData}\r\n                    setLocationData={setLocationData}/>;\r\n            case 2:\r\n                return <ParkingLocation\r\n                        allSelectedParkingData={allSelectedParkingData}\r\n                        setAllSelectedParkingData={setAllSelectedParkingData}\r\n                        parkingMarkerData={parkingMarkerData}\r\n                        setParkingMarkerData={setParkingMarkerData}/>;\r\n            case 3:\r\n                return <PlaceDiscovery\r\n                    selectedTags={selectedTags}\r\n                    setSelectedTags={setSelectedTags}\r\n                    selectedCategories={selectedCategories}\r\n                    setSelectedCategories={setSelectedCategories}/>;\r\n            case 4:\r\n                return <WorkingSchedule\r\n                    scheduleData={scheduleData}\r\n                    setScheduleData={setScheduleData}/>\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Paper elevation = {2} className={classes.content}>\r\n                {getStep(activeStep)}\r\n            </Paper>\r\n\r\n            <Paper elevation = {2} className = {classes.bottomBar}>\r\n\r\n                <Stepper activeStep={activeStep} style={{ backgroundColor: \"transparent\", width: '100%' }}>\r\n                    {steps.map((label, index) => {\r\n                        return(\r\n                            <Step key={index}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>)\r\n                    })}\r\n                </Stepper>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleBack}\r\n                    className={classes.button}\r\n                >Back</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                >Next</Button>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddPlace.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AddPlace)\r\n\r\n\r\n","import React, {Fragment, useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Router, Route, Link } from \"react-router-dom\";\r\nimport Home from \"../pages/Home\";\r\nimport Places from \"../pages/Places\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport AddPlace from \"../pages/AddPlace\";\r\nimport history from \"../helpers/history\";\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\n\r\nexport default function Appbar() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const [title, setTitle] = useState(\"Home\");\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Router history={history}>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button component={Link} to=\"/\" onClick={()=>setTitle(\"Home\")}>\r\n                        <ListItemText>Home</ListItemText>\r\n                    </ListItem>\r\n                    <Divider light />\r\n                    <ListItem button component={Link} to=\"/places\" onClick={()=>setTitle(\"Place\")} >\r\n                        <ListItemText>Places</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/addplace\" onClick={()=>setTitle(\"Add Place\")} >\r\n                        <ListItemText>Add place</ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route path=\"/places\" component={Places} />\r\n                <Route path=\"/addplace\" component={AddPlace} />\r\n\r\n            </main>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Appbar from './components/Appbar.js';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Appbar />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}