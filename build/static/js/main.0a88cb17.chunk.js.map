{"version":3,"sources":["res/selectedTourIcon.svg","res/selectedParking.svg","res/availableParking.svg","pages/Home.js","components/TableComponent.js","helpers/debounce.js","helpers/history.js","helpers/tokens.js","Networking/NetworkLayerCentral.js","Networking/API.js","contexts/AlertDialogContext.js","contexts/UseAlertDialogContext.js","helpers/stringResources.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","components/AutocompleteChip.js","contexts/AppStateStorageContext.js","contexts/PlacesFilterContext.js","components/add_place_components/FilterBlock.js","pages/Places.js","helpers/priceRange.js","helpers/averageTimeSpent.js","components/AddSourceDialog.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/maps/MapGeolocation.js","components/maps/MapToolbar.js","components/maps/MapLock.js","components/maps/CustomControlsManager.js","components/maps/PlaceMap.js","components/add_place_components/PlaceLocation.js","components/maps/ParkingMap.js","components/add_place_components/ParkingLocation.js","contexts/EditDialogContext.js","contexts/UseEditDialogContext.js","components/add_place_components/PlaceDiscovery.js","components/ReviewCard.js","components/add_place_components/Reviews.js","contexts/AppBarTitleContext.js","contexts/UseAppBarTitleContext.js","components/recomendation/AddRecommendationDialog.js","components/recomendation/RecommendationListDialog.js","components/ApiPlaceCard.js","components/recomendation/Recommendation.js","components/schedule_components/WorkingShift.js","components/schedule_components/WorkingHoursVariant.js","components/schedule_components/ScheduleWorkingHours.js","components/schedule_components/Schedule.js","components/schedule_components/SchedulesContainer.js","pages/AddPlace.js","components/SearchInputComponent.js","pages/ApiPlaces.js","pages/NotFoundPage.js","components/tour_components/TransportItem.js","components/tour_components/TourPlaceComponent.js","components/tour_components/TourPlacesWrapper.js","components/tour_components/PlaceSearch.js","components/tour_components/DayCard.js","components/tour_components/DaysWrapper.js","components/tour_components/TourReducer.js","components/tour_components/TourInfoComponent.js","components/tour_components/TourMap.js","components/tour_components/Tour.js","pages/Tours.js","components/AddDialog.js","components/Resources.js","components/UpdateUserDialog.js","components/AddUserDialog.js","pages/ManageUsers.js","contexts/AuthContext.js","contexts/EditRecommendationContext.js","components/recomendation/EditRecommendationDialog.js","pages/RecommendationsPage.js","components/Appbar.js","App.js","pages/LoginPage.js","components/AuthenticatedRoute.js","components/feedback/SnackbarFeedback.js","components/feedback/AlertDialogFeedback.js","components/feedback/TextInputDialog.js","index.js"],"names":["module","exports","withStyles","theme","button","margin","spacing","input","display","props","classes","EnhancedTableHead","headCells","TableHead","TableRow","map","headCell","TableCell","key","id","align","numeric","padding","label","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","customToolbarElements","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","style","width","alignItems","justifyContent","Typography","className","variant","component","TextField","onChange","event","target","useStyles","paper","marginBottom","table","minWidth","visuallyHidden","border","clip","height","overflow","position","top","centerCell","textAlign","rowNotPublished","rowNotVerified","rowBasic","TableComponent","searchFunction","pagingInfo","data","updateCallback","removeCallback","isLoading","initialKeyword","defaultProps","page","setPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","aria-label","TableBody","filter","item","undefined","slice","row","index","labelId","rowStyle","hover","onClick","rowId","role","tabIndex","header","isId","scope","e","stopPropagation","preventDefault","IconButton","fontSize","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","rowsPerPage","pageNum","onChangePage","newPage","history","getAccessToken","localStorage","getItem","getRefreshToken","isAuthenticated","request","options","contentType","a","authorize","client","axios","create","baseURL","headers","interceptors","response","use","error","originalRequest","config","url","status","code","console","log","Promise","reject","removeItem","push","startsWith","_retry","API","Auth","refreshToken","then","token","access_token","Authorization","setItem","catch","err","onSuccess","onError","debug","message","RequestType","getRequest","path","urlData","method","postRequest","postMultipartRequest","formData","Explore","getExplorePage","updateExplorePage","Recommendation","removeRecommendation","updateRecommendation","removePlaceFromRecommendation","addObjectToRecommendation","getAllRecommendations","urlParams","createRecommendation","User","setRoles","getAllRoles","getAllUsers","getUserProfile","register","login","Tour","insertTour","getTour","updateTour","getAllToursAdmin","removeTour","getTourCategories","updateTourCategories","SourcePlace","updateSourcesForPlace","Source","getSources","addSource","Places","getClosesPlacesAdmin","getAllCities","getAllCounties","getAllCountries","getAllMunicipalities","getAllPlaces","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","removePlace","Tags","getAllTags","addTag","params","removeTags","updateTags","Categories","addCategory","getAllCategories","removeCategory","updateCategory","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","Reviews","getPlaceReviews","AlertDialogContext","React","createContext","alertConfig","addAlertConfig","removeAlertConfig","AlertDialogProvider","children","setAlertConfig","contextValue","actions","onClose","Provider","UseAlertDialogContext","useContext","Strings","DIALOG_PLACE_PUBLISH_TITLE","DIALOG_PLACE_PUBLISH_MESSAGE","DIALOG_PLACE_UNPUBLISH_MESSAGE","DIALOG_PLACE_INSERT_TITLE","DIALOG_PLACE_INSERT","DIALOG_PLACE_UPDATE_TITLE","DIALOG_PLACE_UPDATE","DIALOG_PLACE_VERIFY_TITLE","DIALOG_PLACE_VERIFY_MESSAGE","DIALOG_PLACE_DELETE_TITLE","DIALOG_PLACE_DELETE_MESSAGE","DIALOG_TOUR_DELETE_TITLE","DIALOG_TOUR_DELETE_MESSAGE","SNACKBAR_PLACE_INSERTED_SUCCESS","SNACKBAR_PLACE_REMOVE_SUCCESS","SNACKBAR_TOUR_INSERTED_SUCCESS","SNACKBAR_TOUR_REMOVE_SUCCESS","SNACKBAR_ERROR","SNACKBAR_CHANGES_SAVED","SnackbarContext","addConfig","removeConfig","SnackbarProvider","setConfig","success","UseSnackbarContext","autoComplete","chip","flexWrap","listStyle","autoCompleteChipContainer","setOptions","selectedOptions","setSelectedOptions","name","initialData","setInitialData","getCurrentVal","setCurrentVal","firstLoad","setFirstLoad","handleDelete","found","row1","JSON","stringify","Box","option","Chip","onDelete","Autocomplete","disableClearable","getOptionLabel","renderInput","AppStateStorageContext","AppStateStorageProvider","placesPageConfig","setPlacesPageConfig","savePlacesTableInfo","PlacesFilterContext","buildUrl","require","initialDates","insertionStart","moment","Date","format","insertionEnd","add","modificationStart","modificationEnd","PlacesFilterProvider","categories","setCategories","selectedCategories","setSelectedCategories","cities","setCities","selectedCities","setSelectedCities","countries","setCountries","selectedCountries","setSelectedCountries","municipalities","setMunicipalities","selectedMunicipalities","setSelectedMunicipalities","counties","setCounties","selectedCounties","setSelectedCounties","initialLoading","setInitialLoading","resetFilterOptions","setResetFilterOptions","filterLabel","filterName","filterOptions","setFilterOptions","dates","setDates","queryParams","di","dm","parseFilterOptions","parseCategories","filterQuery","setFilterQuery","getCategories","restrictions","res","cats","countryRestrictions","munRestrictions","all","filterOptionsCleared","areFiltersCleared","o","c","filterDiv","flexDirection","sortingButtons","rightLayout","boxShadow","datesLayout","flexGrow","setOpen","filterDateChange","date","cDate","Object","assign","Grid","container","direction","xs","sm","FormControlLabel","control","Checkbox","checked","generalOptions","filterOptionsChanged","AutocompleteChip","justify","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","Button","marginTop","filters","clearFilters","disablePadding","buttonsDiv","content","breakpoints","down","up","autocomplete","borderBottom","outline","setData","pageData","setPageData","setIsLoading","requestAllPlaces","p","parseData","placesData","list","checkable","i","placeId","getPlaceNameById","action","tmp","startIcon","priceRange","averageTimeSpent","closeButton","right","grey","open","setDialogOpen","setText","setUrl","setError","Dialog","fullWidth","DialogTitle","DialogContent","dividers","ev","DialogActions","autoFocus","validateInput","placeInfo","setPlaceInfo","selectedSources","setSelectedSources","updatePlaceInfo","newValue","place","valuetext","setAvailableSources","dialogOpen","availableSources","val","required","placeholder","InputLabelProps","shrink","multiline","rows","marginLeft","bookInAdvance","Slider","defaultValue","getAriaValueText","step","max","marks","FormControl","InputLabel","Select","native","parseInt","inputProps","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","pressDelay","disableAutoscroll","onSortEnd","oldIndex","newIndex","arrayMove","axis","acceptedFileFormats","dropzoneArea","onCloseCallback","onFinishCallback","loading","selectedFiles","setSelectedFiles","acceptedFiles","maxFileSize","showAlerts","dropzoneProps","disabled","filesLimit","onDrop","files","existingFiles","file","existingFile","imagefile","FormData","append","finally","addImageDialogOpen","setAddImageDialogOpen","handleAddPhoto","Geocode","setApiKey","geocodeFromLatLng","newLat","newLng","fromLatLng","address","results","formatted_address","addressArray","address_components","city","types","long_name","getCity","country","getCountry","county","getCounty","municipality","getMunicipality","latitude","longitude","isLocked","locationCallback","errorParsingLocation","handleKeyPress","which","keyCode","test","fromAddress","geometry","location","lat","lng","loc","split","parseFloat","onKeyPress","onPlaceSelected","navigator","geolocation","getCurrentPosition","coords","alert","setIsLocked","Switch","old","Alert","severity","CustomControlsManager","context","window","google","maps","ControlPosition","TOP_LEFT","MAP","controlDiv","document","createElement","controls","removeAt","createPortal","contextTypes","PropTypes","object","MapComponent","withGoogleMap","defaultZoom","ref","refInstance","center","defaultCenter","largeIcon","locationMarker","setLocationMarker","setParkingLocationMarker","otherPlacesData","setOtherPlacesData","infoWindows","setInfoWindows","refMap","useRef","s","range","l","Fragment","loadingElement","containerElement","mapElement","zIndex","icon","scaledSize","Size","origin","Point","markers","onCloseClick","Avatar","alt","visible","draggable","onDragEnd","latLng","BOTTOM_CENTER","mapCenter","current","getCenter","locationData","setLocationData","setParkingLocation","changeLocationData","setMainInfoWindow","onMarkerDragEnd","setPosition","mainInfoWindow","parking","parkingData","calcCrow","nearestParkingCount","addNewParking","parkingIsAttached","selectedParkingData","parkingId","anchor","parkingInfoWindows","setParkingInfoWindows","addExistingParking","lat1","lon1","lat2","lon2","dLat","toRad","dLon","sin","cos","atan2","sqrt","Value","PI","ParkingMap","setParkingData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","SortableItem","elevation","SortableList","oldArray","EditDialogContext","dialogConfig","addEditDialogConfig","removeEditDialogConfig","defaultOptions","errorMessages","explanation","onDoneCallback","textFieldLabel","defaultText","EditDialogProvider","setDialogConfig","UseEditDialogContext","slider","marginRight","sliderContainer","sliderInput","selectedTags","setSelectedTags","availableCategories","setAvailableCategories","availableTags","setAvailableTags","grade","setGrade","info","tagName","newTag","tagId","1","2","categoryName","newCat","categoryId","Input","Number","onBlur","ReviewCard","review","CardContent","photoUrl","surname","Rating","rating","readOnly","upvotes","timeAdded","reviewsInfo","reviews","overflowX","setReviews","anchorEl","setAnchorEl","Boolean","filterBy","setFilterBy","getReviewsForPlace","debounceScroll","debounce","round","scrollWidth","scrollLeft","clientWidth","totalReviews","handleScrollDebounced","handleClose","overallStarRating","precision","Tooltip","aria-describedby","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","RadioGroup","Radio","onScroll","persist","handleScroll","AppBarTitleContext","setTitle","AppBarTitleProvider","UseAppBarTitleContext","textField","formControl","addCallback","subtitle","description","setLoading","dataChanged","recData","addRecommendation","errors","hasErrors","checkErrors","insertedData","maxWidth","FormLabel","objectId","recommendations","setRecommendations","pagingData","setPagingData","showAddNewRecommendation","setShowAddNewRecommendation","getRecommendations","keywordChange","scrollHeight","scrollTop","clientHeight","pages","List","overflowY","maxHeight","ListItem","rec","recommendationId","ListItemIcon","ListItemText","Divider","recommendation","unshift","CategoriesDisplay","SubheaderDisplay","media","expand","transform","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","renderActionArea","CardHeader","subheader","substring","website","RecommendationType","paperContent","onEditCallback","objects","intervalContainer","pickerStyle","scheduleData","setScheduleData","scheduleOpenIndex","variantId","enableLastAccommodation","currentSchedule","currentVariant","variants","find","x","elementId","shifts","shift","lastShift","firstShift","TimePicker","ampm","openTime","shiftId","time","oldData","newData","closeTime","lastAccommodation","pop","shiftToPush","shortid","generate","weekdays","fullName","weekdayPickerContainer","weekdayButton","minHeight","removeButtonContainer","weekdayPicker","weekDayIndex","dayActive","days","some","day","newScheduleData","includes","splice","indexOf","WorkingShift","findIndex","generateDefaultPeriod","weekdayButtonContainer","pickerInput","schedule","setSchedule","dayIndex","periods","period","openDay","splitSchedule","minutesStep","InputProps","changeOpenTime","changeCloseTime","lastperiod","orientation","flexItem","schedules","newSchedules","newPeriods","periodsForThisDay","determineGlobalSplitScheduleOpenTime","determineGlobalSplitScheduleCloseTime","scheduleDateContainer","setScheduleOpenIndex","seasonalScheduleEnabled","DatePicker","views","from","to","defaultScheduleData","tabContainer","tabsLayout","addScheduleButtonContainer","setSeasonalScheduleEnabled","isScheduleEnabled","setIsScheduleEnabled","setLastAccommodation","Tabs","indicatorColor","textColor","Tab","state","enabled","loader","bottom","match","phoneNumber","isPublic","isVerified","source","price","parkingMarkerData","setParkingMarkerData","sources","setSources","setPlaceId","firstTimeLoading","setFirstTimeLoading","showRecommendationDialog","setShowRecommendationDialog","ColorButton","green","formFeedback","saveChanges","formPlaceInfo","plc","updateAll","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","updateSources","newSchedule","newPeriod","subtract","closeDay","scheduleDefault","er","hasSchedule","minutes","tags","setAllData","responses","basicPlaceInfo","useMemo","placePhotos","placeLocation","parkingLocation","placeDiscovery","scheduleContainer","CircularProgress","obj","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debouncedInput","InputBase","topBar","searchBox","placeApiCard","isLoadingData","setIsLoadingData","word","query","encodeURI","elementType","isFitWidth","disableImagesLoaded","updateOnEachImageLoad","boxSizing","Copyright","getFullYear","footer","transportTypes","flexFlow","transportSelectWrapper","transportSelect","transportId","transportChangeCallback","currentTransport","setCurrentTransport","NativeSelect","transport","cardRoot","only","details","cover","addParkingWrapper","elementData","tourInfoReducer","currentDay","elementIndex","lastElement","handleEditPlace","descriptionInput","note","fk_transportId","TourPlaceSortable","removePlaceCallback","tourPlaceComponent","removeElementCallback","tourInfo","tour","ElementType","errorInfo","setErrorInfo","searchInputComponent","placeCard","addPlaceCallback","setApiPlacesFound","apiPlacesFound","localPlacesFound","setLocalPlacesFound","localPlacesLoading","setLocalPlacesLoading","placeType","mappedPlaces","forEach","generatePlaceCards","radioButtonArea","cardArea","headerWrap","onSelectCallback","handleRemoveDay","updateDescriptionGlobally","DayCardSortable","dayInfo","removeDayCallback","elements","elementIdentifier","addDayButton","footerWrapper","setCurrentDay","removeDay","TourDataReducer","nameField","descriptionField","publicityDiv","tourId","titleMissing","shouldDisplayTitleMissingError","showErrors","helperText","isPublished","MyMapComponent","addPlace","directions","setDirection","directionPlaces","setDirectionPlaces","places","setPlaces","placesInfoWindows","setPlacesInfoWindows","loadingArea","setLoadingArea","fetchPlaces","locations","Array","fill","PlacesMarkers","constructPlaceData","waypoints","stopover","destination","DirectionsService","route","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","searchAreaComponent","TOP_CENTER","suppressMarkers","marker","labelOrigin","sampleTourData","leftLayout","actionsArea","setTourId","recommendationsDialogOpen","setRecommendationsDialogOpen","useReducer","dispatchTourInfo","handleAddPlaceClick","loadData","aggregatedDays","aggregatedElements","aggregatedPlace","aggregatedDay","aggregatedTour","parseTourInfoResponse","handleSave","containsErrors","keys","keyIndex","element","dayInfoWithoutDesc","dayCopy","tourPlacesMemoized","mapComponent","daysWrapperMemoized","tourDaysComponents","tourInfoMemoized","useTheme","largeScreen","useMediaQuery","getAllTours","handleClick","fq","join","categoriesHeadCells","tagsHeadCells","buttonWrapper","setTags","UpdateUserDialog","userData","availableRoles","setAvailableRoles","selectedRoles","setSelectedRoles","roles","roleId","userId","password","email","user","setUser","userDataChanged","addUser","medium","userTmp","FormHelperText","gutterBottom","selectedUser","setSelectedUser","allRoles","setAllRoles","openUpdateDialog","setOpenUpdateDialog","openAddDialog","setOpenAddDialog","requestUsers","usersData","rolesList","parsedRoles","AuthContext","AuthProvider","currentUser","setCurrentUser","EditRecommendationContext","EditRecommendationProvider","currentlyEditing","rootList","setRootList","startEditing","conf","finishEditing","removedId","tempRootList","setRecommendation","newRec","RecommendationPlaceSortable","removeObjectFromRecommendation","recommendedPlaceCard","RecommendationPlaceSortableContainer","alignContent","editRecommendation","constructRecommendationForUpdate","leftTop","leftContent","borderStyle","rightTop","rightContent","homeRecommendations","setHomeRecommendations","unique","newList","existingRecommendations","uniqueList","j","RecommendationSkeleton","Skeleton","animation","explorable","setList","group","order","sortable","evt","onEnd","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","TourWithContext","RecommendationsWithContext","Appbar","useLocation","handleDrawerClose","handleListItemClick","RegExp","pathname","go","hasPermission","perm","permissions","permission","CssBaseline","AppBar","clsx","edge","Drawer","Link","exact","Home","Tours","AddPlace","Resources","ManageUsers","Redirect","App","Component","form","submit","loaderMain","AuthenticatedRoute","rest","Route","render","routeProps","SnackbarFeedback","Snackbar","autoHideDuration","AlertDialogFeedback","remove","DialogContentText","TextInputDialog","inputText","setInputText","deInit","onInput","errorCode","ReactDOM","setEmail","setPassword","handleLogin","identifier","hasAccess","authority","checkAccess","authorities","refresh_token","Container","mt","getElementById"],"mappings":"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","file":"static/js/main.0a88cb17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/selectedTourIcon.127fd3ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/selectedParking.102bdd14.svg\";","module.exports = __webpack_public_path__ + \"static/media/availableParking.6ac3f9ec.svg\";","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    }\r\n});\r\n\r\n\r\n\r\nconst Home = props => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport useDebounce from \"../helpers/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\n\r\n/**\r\n * Table head\r\n * @param headCells\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction EnhancedTableHead({headCells}) {\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right'  : 'left' }\r\n                        padding={'default'}\r\n                    >\r\n                        {headCell.label}\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    headCells: PropTypes.object.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { title, changePageCallback, keyword, setKeyword, customToolbarElements} = props;\r\n    const debouncedSearch = useDebounce(keyword, 300);\r\n\r\n\r\n    useEffect( () => {\r\n            changePageCallback(1,keyword)\r\n        },\r\n        [debouncedSearch]\r\n    );\r\n\r\n    return (\r\n        <Toolbar>\r\n            <div style={{display: \"flex\", width: '100%', alignItems: \"center\", justifyContent: 'space-between'}}>\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n                <TextField id=\"standard-basic\" label=\"Search\" value={keyword} onChange={ event =>{setKeyword(event.target.value)}}/>\r\n                {!!customToolbarElements ? customToolbarElements : null}\r\n            </div>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    centerCell: {\r\n        textAlign: \"center\",\r\n        width: '100%'\r\n    },\r\n    rowNotPublished:{\r\n        backgroundColor: \"#ffcdd2\"\r\n    },\r\n    rowNotVerified:{\r\n        backgroundColor: \"#fff9c4\"\r\n    },\r\n    rowBasic: {\r\n        backgroundColor: \"#FFFFFF\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function TableComponent({title,\r\n                                           searchFunction,\r\n                                           headCells,\r\n                                           pagingInfo,\r\n                                           data,\r\n                                           changePageCallback,\r\n                                           updateCallback,\r\n                                           removeCallback,\r\n                                           id,\r\n                                           isLoading,\r\n                                           customToolbarElements,\r\n                                           initialKeyword\r\n}) {\r\n    TableComponent.propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        headCells: PropTypes.object.isRequired,\r\n        pagingInfo: PropTypes.object,\r\n        data: PropTypes.object.isRequired,\r\n        checkable: PropTypes.bool.isRequired,\r\n        changePageCallback: PropTypes.func,\r\n        updateCallback: PropTypes.func,\r\n        removeCallback: PropTypes.func,\r\n        id: PropTypes.string.isRequired,\r\n        isLoading: PropTypes.bool,\r\n        customToolbarElements: PropTypes.object,\r\n        initialKeyword: PropTypes.string,\r\n    };\r\n\r\n    TableComponent.defaultProps = {\r\n        initialKeyword: ''\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const rowsPerPage = 10;\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [keyword, setKeyword] = useState(initialKeyword);\r\n\r\n    const handleClick = (event, rowId) => {\r\n        if(updateCallback !== undefined){\r\n            updateCallback(rowId)\r\n        }\r\n    };\r\n    const handleChangePage = (event, newPage) => {\r\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\r\n    };\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <div style={{height: 8}}>\r\n                    {isLoading ? <LinearProgress/> : null }\r\n                </div>\r\n                <EnhancedTableToolbar\r\n                    title={title}\r\n                    changePageCallback={changePageCallback}\r\n                    keyword={keyword}\r\n                    setKeyword={setKeyword}\r\n                    customToolbarElements={customToolbarElements}\r\n                />\r\n                 <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={'medium'}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead headCells={headCells}/>\r\n                        <TableBody>\r\n                            {data\r\n                                .filter(item => searchFunction === undefined ? true : searchFunction(keyword, item))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    const rowStyle = row['isVerified'] !== undefined  && row['isVerified'] === false ? classes.rowNotVerified :\r\n                                        row['isPublic'] !== undefined && row['isPublic'] === false ? classes.rowNotPublished :  classes.rowBasic;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            className={rowStyle}\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row[id])}\r\n                                            role=\"checkbox\"\r\n                                            tabIndex={-1}\r\n                                            key={row[id]}\r\n                                        >\r\n\r\n                                            {headCells.map(header=>{\r\n                                                if(header.isId){\r\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\r\n                                                            {row[header.id]}\r\n                                                        </TableCell>\r\n                                                }else if(header.id === 'actions' ){\r\n                                                        return <TableCell >\r\n                                                            <div onClick={e => {e.stopPropagation(); e.preventDefault()}}>\r\n                                                                {updateCallback !== undefined ? <IconButton onClick={(event)=>{\r\n                                                                    updateCallback(row[id]);\r\n                                                                    return 0\r\n                                                                }} size=\"small\" aria-label=\"edit\" >\r\n                                                                    <EditIcon fontSize=\"small\" />\r\n                                                                </IconButton> : null}\r\n\r\n                                                                {removeCallback !== undefined ? <IconButton size=\"small\" aria-label=\"delete\" onClick={()=>removeCallback(row[id])}>\r\n                                                                    <DeleteIcon  fontSize=\"small\" />\r\n                                                                </IconButton> : null}\r\n\r\n                                                            </div>\r\n                                                            </TableCell>\r\n                                                }else{\r\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\r\n                                                }\r\n\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: 53 * emptyRows}}>\r\n\r\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\r\n                                        <TableCell colSpan={6} className={classes.centerCell}>\r\n                                            <Typography variant=\"h6\" noWrap>\r\n                                                No results\r\n                                            </Typography>\r\n                                        </TableCell>}\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10]}\r\n                    component=\"div\"\r\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\r\n                    onChangePage={handleChangePage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\r\nexport default function useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(\r\n        () => {\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n\r\n        [value]\r\n    );\r\n\r\n    return debouncedValue;\r\n}","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","export const getAccessToken = () => localStorage.getItem('access_token');\r\nexport const getRefreshToken = () => localStorage.getItem('refresh_token');\r\nexport const isAuthenticated = () => !!getAccessToken();","import React from \"react\";\r\nimport axios from \"axios\"\r\nimport history from \"../helpers/history\";\r\nimport {getAccessToken, getRefreshToken} from \"../helpers/tokens\";\r\nimport API from \"./API\";\r\n\r\nconst request = async function (options, contentType, authorize= true) {\r\n\r\n    const header = {\r\n        'Content-Type': (contentType == null) ? 'application/json' : contentType,\r\n        'Accept': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Authorization': \"Bearer \" + getAccessToken(),\r\n        'device': 'web'\r\n    };\r\n\r\n    if(!authorize){\r\n        delete header['Authorization']\r\n    }\r\n\r\n    const client = axios.create({\r\n        baseURL: false ? \"http://localhost:9090/\" : \"https://www.traveldirection.ax.lt:8080/\",\r\n        headers: header\r\n    });\r\n\r\n\r\n\r\n    // Add a response interceptor\r\n    client.interceptors.response.use(function (response) {\r\n        return response;\r\n    },  function (error) {\r\n\r\n        // console.log(\"Interceptor error\", error);\r\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n        // Do something with response error\r\n        const originalRequest = error.config;\r\n        const url = originalRequest.url;\r\n        const status = error.response.status;\r\n\r\n\r\n        if (error.response.status === 408 || error.code === 'ECONNABORTED' || error.code === \"ERR_INTERNET_DISCONNECTED\") {\r\n            console.log(`A timeout happend on url ${error.config.url}`)\r\n            return Promise.reject(error)\r\n        }\r\n\r\n        // Logout user if token refresh didn't work or user is disabled\r\n        if (url === 'api/v1/auth/refresh') {\r\n            console.log(\"Asking for refresh token\");\r\n            console.log(\"Unable to issue new JWT token. Redirecting to login page!\");\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"refresh_token\");\r\n            history.push(\"/login\");\r\n            return Promise.reject(error);\r\n        }else if(url.startsWith(\"api/v1/auth\")){\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        //Do not request for new JWT if response code is not Authorized\r\n        if (status !== 403) {\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        if (status === 403 && originalRequest._retry === undefined) {\r\n            console.log(\"Users token has expired!\");\r\n\r\n            originalRequest._retry = true;\r\n\r\n            return API.Auth.refreshToken(getRefreshToken()).then(response=>{\r\n                    console.log(\"Retrieving new token and making the same request!\");\r\n                    let token = response.access_token;\r\n                    originalRequest.headers.Authorization = \"Bearer \" + token;\r\n                    localStorage.setItem(\"access_token\", token);\r\n                    return axios(originalRequest)\r\n            }).catch(err=>{\r\n                return Promise.reject(error)\r\n            })\r\n        }\r\n\r\n        return Promise.reject(error)\r\n    });\r\n\r\n    const onSuccess = function (response) {\r\n        // console.log('Request Successful!', response);\r\n        return response.data;\r\n    };\r\n\r\n    const onError = function (error) {\r\n        if (error.response) {\r\n            console.debug('Status:', error.response.status);\r\n            if (error.response.status === 403) {\r\n                history.push(\"/login\")\r\n            }\r\n            console.debug('Data:', error.response.data);\r\n            console.debug('Headers:', error.response.headers);\r\n        } else {\r\n            console.debug('Error Message:', error.message);\r\n        }\r\n\r\n        return Promise.reject(error.response.data);\r\n    };\r\n\r\n    return client(options)\r\n        .then(onSuccess)\r\n        .catch(onError);\r\n};\r\n\r\nconst getRequest = function (path, urlData = \"\") {\r\n    return request({\r\n        url: path + urlData,\r\n        method: 'GET'\r\n    });\r\n};\r\n\r\nconst postRequest = function (path, data, urlData = \"\", authorize=true) {\r\n    console.log(\"Authorize\",authorize);\r\n    return request({\r\n        url: path + urlData,\r\n        method: 'POST',\r\n        data: data\r\n    }, null, authorize);\r\n};\r\n\r\nconst postMultipartRequest = function (path, formData) {\r\n    return request({\r\n        url: path,\r\n        method: 'POST',\r\n        data: formData\r\n    }, 'multipart/form-data');\r\n};\r\n\r\nconst RequestType = {\r\n    getRequest, postRequest, postMultipartRequest\r\n};\r\n\r\nexport default RequestType\r\n\r\n\r\n","import RequestType from '../Networking/NetworkLayerCentral'\r\n\r\n//Places\r\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\r\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\r\nconst getClosesPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin/closest\", urlParams);\r\n\r\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\r\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\r\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\r\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\r\nconst removePlace = (urlParams) => RequestType.getRequest(\"api/v1/place/delete\", urlParams);\r\n\r\nconst getAllCities = (urlParams) =>RequestType.getRequest(\"api/v1/place/city/all\",urlParams);\r\nconst getAllCounties = (urlParams) =>RequestType.getRequest(\"api/v1/place/county/all\",urlParams);\r\nconst getAllCountries = (urlParams) =>RequestType.getRequest(\"api/v1/place/country/all\",urlParams);\r\nconst getAllMunicipalities = (urlParams) =>RequestType.getRequest(\"api/v1/place/municipality/all\",urlParams);\r\n\r\nconst Places = {getClosesPlacesAdmin,getAllCities,getAllCounties, getAllCountries, getAllMunicipalities, getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces, removePlace};\r\n\r\n//Tags\r\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\r\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\r\nconst removeTags = (params) => RequestType.postRequest(\"api/v1/tags/delete\", params);\r\nconst updateTags = (params) => RequestType.postRequest(\"api/v1/tags/update\", params);\r\nconst Tags = {getAllTags, addTag, removeTags, updateTags};\r\n\r\n//Category\r\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\r\nconst removeCategory = (params) => RequestType.postRequest(\"api/v1/categories/delete\", params);\r\nconst updateCategory = (params) => RequestType.postRequest(\"api/v1/categories/update\", params);\r\nconst getAllCategories = (params) => RequestType.getRequest(\"api/v1/categories/all\", params);\r\nconst Categories = {addCategory, getAllCategories, removeCategory, updateCategory};\r\n\r\n//Photo\r\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\r\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\r\nconst Photos = {addPhoto, uploadPhoto};\r\n\r\n\r\n//Parking\r\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\r\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\r\nconst Parking = {getParkingByLocation, insertNewParking};\r\n\r\n\r\n//TagsPlace\r\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\r\nconst TagsPlace = {updateTagsForPlace};\r\n\r\n//CategoriesPlace\r\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\r\nconst CategoriesPlace = {updateCategoriesForPlace};\r\n\r\n//PhotoPlace\r\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\r\nconst ParkingPlace = {updateParkingForPlace};\r\n\r\n//PhotoPlace\r\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\r\nconst PhotoPlace = {updatePhotoForPlace};\r\n\r\n//Schedule\r\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\r\nconst Schedule = {updateScheduleForPlace};\r\n\r\n//ReviewsPlace\r\nconst getPlaceReviews = (urlParams) => RequestType.getRequest(\"api/v1/reviews/all\", urlParams);\r\nconst Reviews = {getPlaceReviews};\r\n\r\n//Sources\r\nconst getSources = () => RequestType.getRequest(\"api/v1/source/all\");\r\nconst addSource = (data) => RequestType.postRequest(\"api/v1/source/insert\",data);\r\nconst Source = {getSources, addSource};\r\n\r\n//SourcePlace\r\nconst updateSourcesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/sourceplace/update\", data, urlParams);\r\nconst SourcePlace = {updateSourcesForPlace};\r\n\r\n//Tours\r\nconst insertTour = (data) => RequestType.postRequest(\"api/v1/tour/insert\",data)\r\nconst updateTour = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/update\",data, urlParams)\r\nconst updateTourCategories = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/categories/update\",data, urlParams)\r\nconst getTour = (urlParams) => RequestType.getRequest(\"api/v1/tour\",urlParams)\r\nconst getTourCategories = (urlParams) => RequestType.getRequest(\"api/v1/tour/categories\",urlParams)\r\nconst removeTour = (urlParams) => RequestType.getRequest(\"api/v1/tour/delete\", urlParams);\r\nconst getAllToursAdmin = (urlParams) => RequestType.getRequest(\"api/v1/tour/searchadmin\", urlParams);\r\nconst Tour = {insertTour, getTour, updateTour, getAllToursAdmin, removeTour, getTourCategories, updateTourCategories}\r\n\r\n//Auth\r\nconst login = (data) => RequestType.postRequest(\"api/v1/auth/login\", data, \"\", false);\r\nconst register = (data) => RequestType.postRequest(\"api/v1/auth/registration\",data, \"\", false);\r\nconst refreshToken = (data) => RequestType.postRequest(\"api/v1/auth/refresh\", data, \"\", false);\r\n\r\nconst Auth = {register, login, refreshToken};\r\n\r\n//User\r\nconst getUserProfile = () => RequestType.getRequest(\"api/v1/user/info\");\r\nconst getAllUsers = (urlParams) => RequestType.getRequest(\"api/v1/user/search\", urlParams);\r\nconst getAllRoles = () => RequestType.getRequest(\"api/v1/user/roles/all\");\r\nconst setRoles = (data) => RequestType.postRequest(\"api/v1/user/setRoles\", data);\r\n\r\nconst User = {setRoles, getAllRoles, getAllUsers, getUserProfile};\r\n\r\n//Recommendation\r\nconst createRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/create\", data);\r\nconst getAllRecommendations = (urlParams) => RequestType.getRequest(\"api/v1/recommendation/search\", urlParams);\r\nconst addPlaceToRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/addObject\", data);\r\nconst removePlaceFromRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/removeObject\", data);\r\nconst updateRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/update\", data)\r\nconst removeRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/remove\", data)\r\n\r\nconst Recommendation = { removeRecommendation, updateRecommendation, removePlaceFromRecommendation, addObjectToRecommendation: addPlaceToRecommendation, getAllRecommendations, createRecommendation }\r\n\r\n//Explore\r\n\r\nconst updateExplorePage = (data) => RequestType.postRequest(\"api/v1/explore/update\", data)\r\nconst getExplorePage = () => RequestType.getRequest(\"api/v1/explore/\")\r\n\r\nconst Explore = { getExplorePage, updateExplorePage }\r\n\r\nconst API = {Explore, Recommendation, User, Auth, Tour, SourcePlace, Source,Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule, Reviews};\r\n\r\nexport default API\r\n\r\n","// src/common/providers/APIErrorProvider/index.js\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nexport const AlertDialogContext = React.createContext({\r\n    alertConfig: null,\r\n    addAlertConfig: () => {},\r\n    removeAlertConfig: () => {}\r\n});\r\n\r\nexport default function AlertDialogProvider({ children }) {\r\n    const [alertConfig, setAlertConfig] = useState(null);\r\n    const contextValue = {\r\n        alertConfig,\r\n        addAlertConfig: (title, message, actions, onClose = undefined) => setAlertConfig({ title, message, actions, onClose}),\r\n        removeAlertConfig: () => setAlertConfig(null)\r\n    };\r\n\r\n    return (\r\n        <AlertDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </AlertDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AlertDialogContext} from \"./AlertDialogContext\";\r\n\r\nexport default function UseAlertDialogContext() {\r\n    const { alertConfig, addAlertConfig, removeAlertConfig } = useContext(AlertDialogContext);\r\n    return { alertConfig, addAlertConfig, removeAlertConfig };\r\n}\r\n","const Strings = {\r\n    DIALOG_PLACE_PUBLISH_TITLE : 'Place publicity',\r\n    DIALOG_PLACE_PUBLISH_MESSAGE: \"This place will be visible for all users. Are you sure?\",\r\n    DIALOG_PLACE_UNPUBLISH_MESSAGE :\"This place will not be visible anymore. Are you sure?\",\r\n\r\n    DIALOG_PLACE_INSERT_TITLE: \"Insert place\",\r\n    DIALOG_PLACE_INSERT: \"Are you sure you want to insert this place?\",\r\n\r\n    DIALOG_PLACE_UPDATE_TITLE: \"Update place\",\r\n    DIALOG_PLACE_UPDATE: \"Are you sure you want to make changes to this place?\",\r\n\r\n    DIALOG_PLACE_VERIFY_TITLE: \"Place verification\",\r\n    DIALOG_PLACE_VERIFY_MESSAGE: \"This is a user's suggested place. Are you sure you want to verify this place and make it visible to others?\",\r\n\r\n    DIALOG_PLACE_DELETE_TITLE: \"Delete place\",\r\n    DIALOG_PLACE_DELETE_MESSAGE: \"This action will remove this place permanently. Are you sure you want to proceed?\",\r\n\r\n    DIALOG_TOUR_DELETE_TITLE: \"Delete tour\",\r\n    DIALOG_TOUR_DELETE_MESSAGE: \"This action will remove this tour permanently. Are you sure you want to proceed?\",\r\n\r\n    SNACKBAR_PLACE_INSERTED_SUCCESS: \"Place inserted successfully\",\r\n    SNACKBAR_PLACE_REMOVE_SUCCESS: \"Place was removed successfully\",\r\n\r\n    SNACKBAR_TOUR_INSERTED_SUCCESS: \"Tour inserted successfully\",\r\n    SNACKBAR_TOUR_REMOVE_SUCCESS: \"Tour was removed successfully\",\r\n\r\n    SNACKBAR_ERROR: \"Something went wrong!\",\r\n    SNACKBAR_CHANGES_SAVED: \"All changes saved!\"\r\n};\r\n\r\nexport default Strings;","import React, { useState, useCallback } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nexport const SnackbarContext = React.createContext({\r\n    config: null,\r\n    addConfig: () => {},\r\n    removeConfig: () => {}\r\n});\r\n\r\n\r\nexport default function SnackbarProvider({ children }) {\r\n    const [config, setConfig] = useState(null);\r\n\r\n    const removeConfig = () => setConfig(null);\r\n    const addConfig = (success, message) => setConfig({ success, message });\r\n\r\n    const contextValue = {\r\n        config,\r\n        addConfig: (success, message) => addConfig(success, message),\r\n        removeConfig: () => removeConfig()\r\n    };\r\n\r\n    return (\r\n        <SnackbarContext.Provider value={contextValue}>\r\n            {children}\r\n        </SnackbarContext.Provider>\r\n    );\r\n}","import { useContext } from 'react';\r\nimport {SnackbarContext} from \"./SnackbarContext\";\r\n\r\nexport default function UseSnackbarContext() {\r\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\r\n    return { config, addConfig, removeConfig };\r\n}\r\n","\r\nimport React, {useEffect, useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    autoComplete: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(1),\r\n        margin: 0,\r\n    },\r\n    autoCompleteChipContainer: {\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction AutoCompleteChip(props){\r\n\r\n    const {options, setOptions, selectedOptions, setSelectedOptions, classes, label, id, name} = props;\r\n    const [initialData, setInitialData] = useState([]);\r\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\r\n    const [firstLoad, setFirstLoad] = useState(true);\r\n\r\n    function handleDelete(data) {\r\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\r\n        setOptions(\r\n            [\r\n                ...options,\r\n                data\r\n            ]\r\n        )\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(selectedOptions.length===0){\r\n\r\n            setOptions(\r\n                initialData\r\n            )\r\n        }\r\n    },[selectedOptions]);\r\n\r\n    useEffect(()=>{\r\n        if(firstLoad && options.length>0){\r\n            let data = [];\r\n            options.map(row=>{\r\n                let found = false;\r\n                selectedOptions.map(row1=>{\r\n                    if(JSON.stringify(row) === JSON.stringify(row1)){\r\n                        found = true\r\n                    }\r\n                });\r\n                if(!found){\r\n                   data.push(row)\r\n                }\r\n            });\r\n            setOptions(data);\r\n            setInitialData(data);\r\n            setFirstLoad(false)\r\n        }\r\n    },[options]);\r\n\r\n    function handleInput(event, value){\r\n        setCurrentVal({\"name\": \"\"});\r\n        setSelectedOptions(\r\n            [\r\n                ...selectedOptions,\r\n                value\r\n            ]\r\n        );\r\n        setOptions(options.filter(item => item !== value))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Box  className={classes.autoCompleteChipContainer}>\r\n                {selectedOptions.length !== 0 &&\r\n                <Box component=\"ul\" className={classes.root}>\r\n                    {\r\n                        selectedOptions.map(option => {\r\n                            return id !== undefined ?\r\n                                <li key={option[id]}>\r\n                                    <Chip\r\n                                        variant=\"outlined\"\r\n                                        label={name!== undefined ? option[name] : option.name}\r\n                                        onDelete={() => handleDelete(option)}\r\n                                        className={classes.chip}\r\n                                    />\r\n                                </li>\r\n                                :\r\n                                <li key={option}>\r\n                                        <Chip\r\n                                            variant=\"outlined\"\r\n                                            label={option}\r\n                                            onDelete={() => handleDelete(option)}\r\n                                            className={classes.chip}\r\n                                        />\r\n                                </li>\r\n                                }\r\n\r\n                            )\r\n                    }\r\n                </Box>\r\n                }\r\n\r\n                <Autocomplete\r\n                    className={classes.autoComplete}\r\n                    value={getCurrentVal}\r\n                    options={options}\r\n                    onChange={handleInput}\r\n                    disableClearable\r\n                    getOptionLabel={(option) => {\r\n                        if(typeof(option) === 'string')\r\n                            return option\r\n                        else\r\n                            return option.name\r\n                    }}\r\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\r\n                />\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nAutoCompleteChip.propTypes = {\r\n    setSelectedOptions: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    setOptions: PropTypes.func.isRequired,\r\n    selectedOptions: PropTypes.array.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    label: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AutoCompleteChip)","import React, {useEffect, useState} from 'react';\r\n\r\nexport const AppStateStorageContext = React.createContext();\r\n\r\nexport default function AppStateStorageProvider({ children }) {\r\n\r\n    const [placesPageConfig, setPlacesPageConfig] = useState({keyword: '', page: 1})\r\n\r\n    function savePlacesTableInfo(keyword, page){\r\n        const config = { ...placesPageConfig }\r\n        config.keyword = keyword;\r\n        config.page = page;\r\n        console.log(\"Saving\", {keyword, page})\r\n        setPlacesPageConfig(config)\r\n    }\r\n\r\n\r\n    return (\r\n        <AppStateStorageContext.Provider value={{\r\n            savePlacesTableInfo,\r\n            placesPageConfig\r\n\r\n        }}>\r\n            {children}\r\n        </AppStateStorageContext.Provider>\r\n    );\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport API from \"../Networking/API\";\r\nimport * as moment from \"moment\";\r\nimport {func} from \"prop-types\";\r\nimport {AppStateStorageContext} from \"./AppStateStorageContext\";\r\nexport const PlacesFilterContext = React.createContext();\r\nvar buildUrl = require('build-url');\r\n\r\n\r\nconst initialDates = {\r\n    insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n    insertionEnd: moment(new Date()).add(1,'day').format(),\r\n    modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n    modificationEnd: moment(new Date()).add(1,'day').format()\r\n};\r\n\r\nexport const PlacesFilterProvider = ({children}) => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    const [cities, setCities] = useState([]);\r\n    const [selectedCities, setSelectedCities] = useState([]);\r\n\r\n    const [countries, setCountries] = useState([]);\r\n    const [selectedCountries, setSelectedCountries] = useState([]);\r\n\r\n    const [municipalities, setMunicipalities] = useState([]);\r\n    const [selectedMunicipalities, setSelectedMunicipalities] = useState([]);\r\n\r\n    const [counties, setCounties] = useState([]);\r\n    const [selectedCounties, setSelectedCounties] = useState([]);\r\n\r\n    const [initialLoading, setInitialLoading] = useState(true);\r\n    const [resetFilterOptions, setResetFilterOptions] = useState(false);\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [dates, setDates] = useState(initialDates);\r\n\r\n    const [filterQuery, setFilterQuery] = useState( buildUrl(null, {\r\n        queryParams: {\r\n            di: [dates.insertionStart, dates.insertionEnd],\r\n            dm: [dates.modificationStart, dates.modificationEnd],\r\n            filterOptions: parseFilterOptions(),\r\n            categories: parseCategories(),\r\n            countries: selectedCountries,\r\n            cities: selectedCities,\r\n            municipalities: selectedMunicipalities\r\n        }\r\n    }));\r\n\r\n    const {placesPageConfig, savePlacesTableInfo} = useContext(AppStateStorageContext)\r\n\r\n\r\n    const getCategories = (params=\"\") => {\r\n        API.Categories.getAllCategories().then(response=>{\r\n            setCategories(response);\r\n            // console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        });\r\n    };\r\n\r\n    const getAllCities = (restrictions=\"\") =>{\r\n        API.Places.getAllCities(restrictions).then(res=>{\r\n            setCities(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllCounties = () =>{\r\n        API.Places.getAllCounties().then(res=>{\r\n            setCounties(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllCountries = () =>{\r\n        API.Places.getAllCountries().then(res=>{\r\n            setCountries(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllMunicipalities = (restrictions=\"\") =>{\r\n        API.Places.getAllMunicipalities(restrictions).then(res=>{\r\n            setMunicipalities(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            // console.log(\"Selected countries changed\")\r\n            getAllMunicipalities(buildUrl(null, {\r\n                queryParams: {\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }));\r\n            getAllCities(buildUrl(null, {\r\n                queryParams: {\r\n                    munRestrictions: selectedMunicipalities,\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }))\r\n        }\r\n    },[selectedCountries]);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            // console.log(\"Selected munis changed\")\r\n            getAllCities(buildUrl(null, {\r\n                queryParams: {\r\n                    munRestrictions: selectedMunicipalities,\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }))\r\n        }\r\n    }, [selectedMunicipalities]);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Fetching...\");\r\n        Promise.all([\r\n            getCategories(),\r\n            getAllCities(),\r\n            getAllCountries(),\r\n            getAllCounties(),\r\n            getAllMunicipalities()\r\n        ]).then(response => {\r\n            setInitialLoading(false);\r\n            // console.log(\"All data received!\")\r\n        }).catch(err => {\r\n        })\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            if(!resetFilterOptions){\r\n                setFilterQuery(buildUrl(null, {\r\n                    queryParams: {\r\n                        di: [dates.insertionStart, dates.insertionEnd],\r\n                        dm: [dates.modificationStart, dates.modificationEnd],\r\n                        o: parseFilterOptions(),\r\n                        c: parseCategories(),\r\n                        countries: selectedCountries,\r\n                        cities: selectedCities,\r\n                        municipalities: selectedMunicipalities\r\n                    }\r\n                }))\r\n            }else{\r\n                if(areFiltersCleared()){\r\n                    setResetFilterOptions(false)\r\n                }\r\n            }\r\n        }\r\n    },[selectedCategories, selectedCities,selectedCountries,selectedMunicipalities,dates,filterOptions,resetFilterOptions]);\r\n\r\n    function areFiltersCleared() {\r\n        let filterOptionsCleared = true;\r\n        filterOptions.map(row=>{\r\n            if(row.filter){\r\n                filterOptionsCleared = false\r\n            }\r\n        });\r\n        return filterOptionsCleared &&\r\n            selectedCategories.length === 0 &&\r\n            selectedCities.length === 0 &&\r\n            selectedCountries.length ===0 &&\r\n            dates.insertionStart === initialDates.insertionStart &&\r\n            dates.modificationStart === initialDates.modificationStart\r\n    }\r\n\r\n    function parseCategories(){\r\n        let cats = [];\r\n        selectedCategories.map(row=>{\r\n            cats.push(row.name)\r\n        });\r\n        return cats\r\n    }\r\n\r\n    function parseFilterOptions(){\r\n        let options = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filter === true)\r\n                options.push(row.filterName)\r\n        });\r\n        return options\r\n    }\r\n\r\n    const contextValue = {\r\n        filterQuery,\r\n        setResetFilterOptions,\r\n\r\n        dates,\r\n        setDates,\r\n\r\n        filterOptions,\r\n        setFilterOptions,\r\n\r\n        categories,\r\n        setCategories,\r\n        selectedCategories,\r\n        setSelectedCategories,\r\n\r\n        counties,\r\n        setCounties,\r\n        selectedCounties,\r\n        setSelectedCounties,\r\n\r\n        cities,\r\n        setCities,\r\n        selectedCities,\r\n        setSelectedCities,\r\n\r\n        countries,\r\n        setCountries,\r\n        selectedCountries,\r\n        setSelectedCountries,\r\n\r\n        municipalities,\r\n        setMunicipalities,\r\n        selectedMunicipalities,\r\n        setSelectedMunicipalities\r\n    };\r\n\r\n    return (\r\n        <PlacesFilterContext.Provider value={contextValue}>\r\n            {children}\r\n        </PlacesFilterContext.Provider>\r\n    );\r\n};","import React, {useContext, useEffect, useState} from \"react\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport moment from \"moment\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport MuiPickersUtilsProvider from \"@material-ui/pickers/MuiPickersUtilsProvider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst style = theme =>({\r\n    filterDiv: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    sortingButtons: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(1),\r\n        height: \"100%\"\r\n\r\n    },\r\n    rightLayout: {\r\n        boxShadow: \"0 0 1px 0 #666\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(1)\r\n    },\r\n    datesLayout:{\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n        marginBottom: \"8px\",\r\n        boxShadow: \"0 0 1px 0 #666\",\r\n        padding: theme.spacing(1)\r\n    },\r\n    paper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center'\r\n\r\n    }\r\n});\r\n\r\n\r\n\r\nfunction FilterBlock({classes, setOpen}) {\r\n    const {\r\n        categories, setCategories, selectedCategories, setSelectedCategories,\r\n        cities, setCities, selectedCities, setSelectedCities,\r\n        countries, setCountries, selectedCountries, setSelectedCountries,\r\n        municipalities, setMunicipalities, selectedMunicipalities, setSelectedMunicipalities,\r\n        filterOptions, setFilterOptions, setResetFilterOptions,\r\n        dates, setDates} = useContext(PlacesFilterContext);\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let generalOptions = Object.assign([], filterOptions);\r\n        generalOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n        });\r\n        setFilterOptions(generalOptions)\r\n    };\r\n\r\n    function filterDateChange(date, id) {\r\n        let cDate = Object.assign( {}, dates);\r\n        cDate[id] = moment(date).format('YYYY-MM-DD');\r\n        setDates(cDate)\r\n    }\r\n\r\n    function clearFilters() {\r\n        setResetFilterOptions(true);\r\n\r\n        setSelectedCities([]);\r\n        setSelectedCountries([]);\r\n        setSelectedCategories([]);\r\n        setSelectedMunicipalities([]);\r\n\r\n        let filters = Object.assign(filterOptions, []);\r\n        filters.map(row=>{\r\n            row.filter = false\r\n        });\r\n        setFilterOptions(filters);\r\n\r\n        setDates({\r\n            insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n            insertionEnd: moment(new Date()).add(1,'day').format(),\r\n            modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n            modificationEnd: moment(new Date()).add(1,'day').format()\r\n        })\r\n    }\r\n\r\n    return <Paper className={classes.root}>\r\n        <Grid container direction=\"row\" spacing={3}>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\">\r\n                        General options\r\n                    </Typography>\r\n                    <div className={classes.sortingButtons}>\r\n                        {filterOptions.map(row=>{\r\n                            return <FormControlLabel\r\n                                key={row.filterName}\r\n                                control={<Checkbox\r\n                                checked={row.filter}\r\n                                onChange={()=>filterOptionsChanged(row.filterName)}\r\n                                name={row.filterName} />}\r\n                                label={row.filterLabel}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                    <Typography variant=\"h6\">\r\n                        Filter by categories\r\n                    </Typography>\r\n                    <AutocompleteChip label=\"Select categories\"\r\n                                      id=\"categoryId\"\r\n                                      options={categories}\r\n                                      setOptions={setCategories}\r\n                                      selectedOptions={selectedCategories}\r\n                                      setSelectedOptions={setSelectedCategories}/>\r\n\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by dates\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Insertion dates\r\n                            </Typography>\r\n                    <Grid container justify=\"space-around\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"insertionStart\"\r\n                            onChange={(date)=>filterDateChange(date,\"insertionStart\")}\r\n                            value={dates.insertionStart}\r\n                            label=\"Date start\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.insertionEnd}\r\n                            onChange={(date)=>filterDateChange(date,\"insertionEnd\")}\r\n                            id=\"insertionEnd\"\r\n                            label=\"Date end\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        </MuiPickersUtilsProvider>\r\n                    </Grid>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Modification dates\r\n                    </Typography>\r\n                    <Grid container justify=\"space-around\">\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.modificationStart}\r\n                            onChange={(date)=>filterDateChange(date,\"modificationStart\")}\r\n                            id=\"modificationStart\"\r\n                            label=\"Date start\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.modificationEnd}\r\n                            onChange={(date)=>filterDateChange(date,\"modificationEnd\")}\r\n                            id=\"modificationEnd\"\r\n                            label=\"Date end\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\">\r\n                        Filter by countries\r\n                    </Typography>\r\n                    <AutocompleteChip label=\"Select countries\"\r\n                                      options={countries}\r\n                                      setOptions={setCountries}\r\n                                      selectedOptions={selectedCountries}\r\n                                      setSelectedOptions={setSelectedCountries}/>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by municipalities\r\n                            </Typography>\r\n                            <AutocompleteChip label=\"Select municipalities\"\r\n                                              options={municipalities}\r\n                                              setOptions={setMunicipalities}\r\n                                              selectedOptions={selectedMunicipalities}\r\n                                              setSelectedOptions={setSelectedMunicipalities}/>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by cities\r\n                            </Typography>\r\n                            <AutocompleteChip label=\"Select cities\"\r\n                                              options={cities}\r\n                                              setOptions={setCities}\r\n                                              selectedOptions={selectedCities}\r\n                                              setSelectedOptions={setSelectedCities}/>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n        <Button\r\n            style={{marginTop: 8}}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => clearFilters()}>\r\n            Clear filters\r\n        </Button>\r\n    </Paper>\r\n}\r\n\r\nexport default withStyles(style)(FilterBlock)","import React, {useContext, useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport FilterBlock from \"../components/add_place_components/FilterBlock\";\r\nimport {PlacesFilterContext} from \"../contexts/PlacesFilterContext\";\r\nimport {AppStateStorageContext} from \"../contexts/AppStateStorageContext\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    autocomplete: {\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline: \"0\",\r\n        marginBottom: \"4px\"\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\r\n    {id: 'address', numeric: false, disablePadding: false, label: 'Address', isId: false},\r\n    {id: 'city', numeric: false, disablePadding: false, label: 'City', isId: false},\r\n    {id: 'country', numeric: false, disablePadding: false, label: 'Country', isId: false},\r\n    {id: 'dateModified', numeric: false, disablePadding: false, label: 'Date modified', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n];\r\n\r\nfunction Places(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const {classes} = props;\r\n\r\n\r\n    const {filterQuery} = useContext(PlacesFilterContext);\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    const {placesPageConfig, savePlacesTableInfo} = useContext(AppStateStorageContext)\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        if(!isLoading){\r\n            savePlacesTableInfo(placesPageConfig.keyword, 1);\r\n            requestAllPlaces(1, placesPageConfig.keyword);\r\n        }else{\r\n            requestAllPlaces()\r\n        }\r\n    }, [filterQuery]);\r\n\r\n\r\n    function getPlaceNameById(id) {\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i].placeId === id)\r\n                return data[i].name\r\n        }\r\n    }\r\n\r\n    function requestAllPlaces(p = placesPageConfig.page, keyword = placesPageConfig.keyword) {\r\n        console.log(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n        getAllPlaces(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n    }\r\n\r\n    function parseData(data) {\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        console.log(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updatePlaceCallback(id) {\r\n        history.push(\"/app/addplace/\" + id)\r\n    }\r\n\r\n    function removePlaceCallback(id) {\r\n        setIsLoading(true);\r\n        addAlertConfig(Strings.DIALOG_PLACE_DELETE_TITLE + \" - \" + getPlaceNameById(id), Strings.DIALOG_PLACE_DELETE_MESSAGE, [{\r\n            name: \"Remove\",\r\n            action: () => {\r\n                API.Places.removePlace(\"?p=\" + id).then(response => {\r\n                    let tmp = [];\r\n                    data.map(row => {\r\n                        if (row.placeId !== id) {\r\n                            tmp.push(row)\r\n                        }\r\n                    });\r\n                    setData(tmp);\r\n                    addConfig(true, Strings.SNACKBAR_PLACE_REMOVE_SUCCESS)\r\n                    setIsLoading(false)\r\n                }).catch(error => {\r\n                    setIsLoading(false);\r\n                    addConfig(false, Strings.SNACKBAR_ERROR)\r\n                })\r\n            }\r\n        }], () => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const changePageCallback = (p = 0, keyword = \"\") => {\r\n        if(!isLoading){\r\n            setIsLoading(true);\r\n            savePlacesTableInfo(keyword, p)\r\n            requestAllPlaces(p, keyword)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                <FilterBlock setOpen={true}/>\r\n\r\n                <TableComponent\r\n                    title={\"Places\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updatePlaceCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    initialKeyword={placesPageConfig.keyword}\r\n                    id={\"placeId\"}\r\n                    isLoading={isLoading}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={() => {\r\n                            history.push(\"/app/addplace\")\r\n                        }}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n            <Button>\r\n                Clear filters\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    function getAllPlaces(urlParams = \"\") {\r\n        API.Places.getAllPlacesAdmin(urlParams).then(response => {\r\n            setIsLoading(false);\r\n            parseData(response)\r\n        }).catch(error => {\r\n            setIsLoading(false);\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nPlaces.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Places);","export const priceRange = [\r\n    {\r\n        value: 0,\r\n        label: \"FREE\",\r\n    },\r\n    {\r\n        value: 25,\r\n        label: \"$\",\r\n    },\r\n    {\r\n        value: 50,\r\n        label: \"$$\",\r\n    },\r\n    {\r\n        value: 75,\r\n        label: \"$$$\",\r\n    },\r\n    {\r\n        value: 100,\r\n        label: \"$$$$\",\r\n    },\r\n    {\r\n        value: 125,\r\n        label: \"$$$$$\",\r\n    }\r\n];\r\n","export const averageTimeSpent = [\r\n    {\r\n        value: 5,\r\n        label: 5,\r\n    },\r\n    {\r\n        value: 10,\r\n        label: 10,\r\n    },\r\n    {\r\n        value: 15,\r\n        label: 15,\r\n    },\r\n    {\r\n        value: 30,\r\n        label: 30,\r\n    },\r\n    {\r\n        value: 45,\r\n        label: 45,\r\n    },\r\n    {\r\n        value: 60,\r\n        label: 60,\r\n    },\r\n    {\r\n        value: 90,\r\n        label: 90,\r\n    },\r\n    {\r\n        value: 120,\r\n        label: 120,\r\n    },\r\n    {\r\n        value: 150,\r\n        label: 150,\r\n    },\r\n    {\r\n        value: 180,\r\n        label: 180,\r\n    },\r\n    {\r\n        value: 210,\r\n        label: 210,\r\n    },\r\n    {\r\n        value: 240,\r\n        label: 240,\r\n    },\r\n    {\r\n        value: 270,\r\n        label: 270,\r\n    },\r\n];","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    }\r\n});\r\n\r\nfunction AddSourceDialog(props){\r\n\r\n    function validateInput(){\r\n        let error = false;\r\n        if(text.length <= 3 || url.length <=3)\r\n            error = true;\r\n        setError(error);\r\n        return error\r\n    }\r\n\r\n    let {classes, open, action, setDialogOpen} = props;\r\n    const [text, setText] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    return(\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Insert source\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                        <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}\r\n                                   label=\"Source name\" variant=\"outlined\" fullWidth />\r\n                        <TextField style={{marginTop:\"16px\"}} error={error} onChange = {(ev) => {setUrl(ev.target.value)}}\r\n                                   label=\"Source url\" variant=\"outlined\" fullWidth />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={()=>setDialogOpen(false)} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text, url);\r\n                        setDialogOpen(false)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\nexport default withStyles(styles)(AddSourceDialog)","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {priceRange} from \"../../helpers/priceRange\";\r\nimport {averageTimeSpent} from \"../../helpers/averageTimeSpent\"\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport API from \"../../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddSourceDialog from \"../AddSourceDialog\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\n\r\nconst styles = theme => ({});\r\nlet previousPrice = \"\";\r\n\r\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo, selectedSources, setSelectedSources}) {\r\n\r\n    const updatePlaceInfo = (event, newValue) => {\r\n        const {name, value, id} = event.target;\r\n        let place = Object.assign({}, placeInfo, {});\r\n        if (id !== \"\") {\r\n            place[id] = valuetext(newValue[0]);\r\n        } else {\r\n            place[name] = value\r\n        }\r\n        setPlaceInfo(place)\r\n    };\r\n\r\n    const getSources = () =>{\r\n        API.Source.getSources().then(response=>{\r\n            setAvailableSources(response)\r\n        }).catch(error=>{\r\n\r\n        })\r\n    };\r\n\r\n    const handleAddSource = (name, url) =>{\r\n        API.Source.addSource({name: name, url: url}).then(response=>{\r\n            setAvailableSources(\r\n                [\r\n                    ...availableSources,\r\n                    response\r\n                ]\r\n            );\r\n            setSelectedSources([\r\n                ...selectedSources,\r\n                response\r\n            ]);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getSources()\r\n    },[]);\r\n\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [availableSources, setAvailableSources] = useState([]);\r\n\r\n    function valuetext(value) {\r\n        let val = \"\";\r\n        priceRange.map(row => {\r\n            if (row.value === value)\r\n                val = row.label\r\n        });\r\n        return val\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\">\r\n            Basic place information\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Place name\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter the place name\"\r\n            fullWidth\r\n            value={placeInfo['name']}\r\n            name=\"name\"\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Place description\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Describe the place thoroughly\"\r\n            fullWidth\r\n            multiline\r\n            name=\"description\"\r\n            value={placeInfo['description']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            rows={15}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Phone number\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter phone number\"\r\n            fullWidth\r\n            name=\"phoneNumber\"\r\n            value={placeInfo['phoneNumber']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n      <FormControlLabel\r\n          style={{width: '100%', marginLeft: 5}}\r\n          control={\r\n            <Checkbox\r\n                name=\"checkedB\"\r\n                color=\"primary\"\r\n                checked={placeInfo['bookInAdvance'] || false}\r\n                onChange={(e) => setPlaceInfo(place => {\r\n                  return {\r\n                    ...place,\r\n                    bookInAdvance: !place.bookInAdvance || false\r\n                  }\r\n                }\r\n                )}\r\n            />\r\n          }\r\n          label={<span style={{fontSize: 16}}>Requires booking in advance</span>}\r\n      />\r\n        <TextField\r\n            label=\"Website\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter website\"\r\n            fullWidth\r\n            name=\"website\"\r\n            value={placeInfo['website']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n       <AutoCompleteChip\r\n                id=\"source\"\r\n                label=\"Select sources\"\r\n                options={availableSources}\r\n                setOptions={setAvailableSources}\r\n                setSelectedOptions={setSelectedSources}\r\n                selectedOptions={selectedSources}\r\n       />\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={() => setDialogOpen(true)}\r\n            startIcon={<AddIcon />}>\r\n            Add missing source\r\n        </Button>\r\n        <AddSourceDialog\r\n            action={handleAddSource}\r\n            open={dialogOpen}\r\n            setDialogOpen={setDialogOpen}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Typography>\r\n                Price\r\n            </Typography>\r\n            <Slider\r\n                id=\"price\"\r\n                onChange={updatePlaceInfo}\r\n                value={priceRange.map(row => {\r\n                    if (row.label === placeInfo['price']) return row.value\r\n                })}\r\n                style={{width: \"60%\", marginLeft: \"48px\"}}\r\n                defaultValue={0}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider-always\"\r\n                step={25}\r\n                max={125}\r\n                marks={priceRange}\r\n            />\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Typography>\r\n                Average time spent\r\n            </Typography>\r\n            <FormControl variant=\"outlined\" style={{width: \"60%\", marginLeft: \"48px\"}}>\r\n                <InputLabel>Minutes</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={parseInt(placeInfo['averageTimeSpent'], 10)}\r\n                    onChange={updatePlaceInfo}\r\n                    label=\"Average Time spent\"\r\n                    inputProps={{\r\n                        name: 'averageTimeSpent'\r\n                    }}\r\n                >\r\n                    <option value=\"-1\">None</option>\r\n                    {\r\n                        averageTimeSpent.map(row=>{\r\n                            return <option value={parseInt(row.value, 10)}> {row.value}</option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport React, {useMemo, useState} from \"react\"\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Delete from \"@material-ui/icons/Delete\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst imgWithClick = {cursor: \"pointer\"};\r\n\r\nconst Photo = ({index, onItemDelete, photo, margin, direction, top, left}) => {\r\n\r\n    const styles = {\r\n        imgContainer: {\r\n            margin: margin,\r\n            display: 'inline',\r\n            position: 'relative',\r\n            width: '300px',\r\n            height: '300px',\r\n        }\r\n    }\r\n    if (direction === \"column\") {\r\n        styles.imgContainer.position = \"absolute\";\r\n        styles.imgContainer.imgStyle.left = left;\r\n        styles.imgContainer.imgStyle.top = top;\r\n    }\r\n\r\n    const handleDelete = event => {\r\n        onItemDelete(photo);\r\n    }\r\n\r\n    return (\r\n\r\n        <Card style={styles.imgContainer}>\r\n            <CardMedia\r\n                style={{height: 0, paddingTop: '80%'}}\r\n                image={photo.src}\r\n            />\r\n            <CardActions disableSpacing>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon/>}\r\n                    onClick={(event) => {\r\n                        handleDelete(event)\r\n                    }}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n\r\n        </Card>\r\n    )\r\n\r\n};\r\n\r\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\r\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\r\nconst SortableGallery = SortableContainer(({items, onItemDelete}) => (\r\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>}/>\r\n));\r\n\r\nfunction ReorderablePhotos(props) {\r\n    let {setPhotos, photos, srcName, keyName} = props\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\r\n    };\r\n\r\n    function handleItemDelete(photo) {\r\n        setPhotos(photos.filter(item => {\r\n            return item[keyName].toString() !== photo.key\r\n        }))\r\n    }\r\n\r\n    let modifiedData = photos.map(item => {\r\n        return (\r\n            {\r\n                key: item[keyName].toString(),\r\n                src: item[srcName],\r\n                width: 1,\r\n                height: 1\r\n            })\r\n\r\n    })\r\n    return (\r\n        <div>\r\n            <SortableGallery pressDelay={200}\r\n                             disableAutoscroll={false} items={modifiedData} onSortEnd={onSortEnd}\r\n                             axis={\"xy\"} onItemDelete={handleItemDelete}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {DropzoneArea} from \"material-ui-dropzone\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../Networking/API\";\r\n\r\nconst styles = theme => ({\r\n    dropzoneArea: {\r\n        overflow: \"hidden\"\r\n    }\r\n});\r\n\r\nconst acceptedFileFormats = ['.jpeg', '.png', '.bmp', '.jpg']\r\n\r\nfunction AddImageDialog(props) {\r\n\r\n    const {onCloseCallback, open, onFinishCallback, classes} = props\r\n    const [loading, setIsLoading] = useState(false)\r\n    const [selectedFiles, setSelectedFiles] = useState([])\r\n\r\n    const submitCallback = () => {\r\n        setIsLoading(true)\r\n\r\n        Promise.all(selectedFiles.map(imagefile => {\r\n            let formData = new FormData()\r\n            formData.append(\"image\", imagefile)\r\n            return API.Photos.uploadPhoto(formData).then(response => response)\r\n        })).then(response => {\r\n            console.log(response)\r\n            onFinishCallback(response)\r\n        }).catch(error => {\r\n            onFinishCallback(null)\r\n        }).finally(() => {\r\n            setSelectedFiles([])\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleDrop = (files )=> {\r\n        setSelectedFiles(existingFiles => [...existingFiles, ...files])\r\n    }\r\n\r\n    const handleDelete = (file) => {\r\n        console.log(file.name)\r\n        setSelectedFiles(files => {return files.filter(existingFile => existingFile !== file)})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Photo upload\r\n                </DialogTitle>\r\n                {loading && <LinearProgress variant=\"query\"/>}\r\n                <DialogContent dividers>\r\n                    <DropzoneArea\r\n                        className={classes.dropzoneArea}\r\n                        acceptedFiles={acceptedFileFormats}\r\n                        maxFileSize={25000000}\r\n                        showAlerts={['error']}\r\n                        dropzoneProps={{disabled: loading}} filesLimit={5} onDrop={handleDrop}\r\n                    onDelete={handleDelete}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={submitCallback} color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddImageDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onFinishCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddImageDialog)\r\n","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ReorderablePhotos from \"../ReorderablePhotos\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddImageDialog from \"../AddImageDialog\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PhotosInfo({classes, setPhotos, photos}) {\r\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    function handleAddPhoto(files) {\r\n        setAddImageDialogOpen(false);\r\n        if(files == null){\r\n            addConfig(false, \"Something went wrong\")\r\n            return;\r\n        }\r\n        addConfig(true, \"Photos were uploaded successfully.\")\r\n\r\n        setPhotos([\r\n            ...photos,\r\n            ...files]\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h6\" >\r\n                Photos\r\n            </Typography>\r\n            <Card variant={\"outlined\"} className={classes.outline}>\r\n\r\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\r\n\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{width: '15%'}}\r\n                    className={classes.button}\r\n                    onClick={() => setAddImageDialogOpen(true)}\r\n                    startIcon={<AddIcon />}>\r\n                    Add photo\r\n                </Button>\r\n\r\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(files) => handleAddPhoto(files)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\r\n\r\n            </Card>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PhotosInfo)\r\n\r\n\r\n","import React from \"react\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nGeocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\r\n\r\n/**\r\n * Get country from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCountry = (addressArray) =>{\r\n    if(addressArray!==undefined){\r\n        let country = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\r\n                country = addressArray[ i ].long_name;\r\n                return country;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get country from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCity = ( addressArray ) => {\r\n    if(addressArray !== undefined){\r\n        let city = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'locality' === addressArray[ i ].types[0] ) {\r\n                city = addressArray[ i ].long_name;\r\n                return city;\r\n            }\r\n        }\r\n        return city;\r\n    }\r\n};\r\n\r\n/**\r\n * Get district from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCounty = ( addressArray ) => {\r\n        if(addressArray !== undefined){\r\n            let county = '';\r\n            for( let i = 0; i < addressArray.length; i++ ) {\r\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n                    county = addressArray[ i ].long_name;\r\n                    return county;\r\n                }\r\n            }\r\n            return county\r\n        }\r\n    };\r\n/**\r\n * Get district from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getMunicipality = ( addressArray ) => {\r\n    if(addressArray !== undefined){\r\n        let municipality = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\r\n                municipality = addressArray[ i ].long_name;\r\n                return municipality;\r\n            }\r\n        }\r\n        return municipality;\r\n    }\r\n};\r\n\r\n/**\r\n * Geocode location from address\r\n * @param address\r\n * @type string\r\n * @return location object\r\n */\r\nexport function geocodeFromAddress(address){\r\n    return Geocode.fromAddress( address ).then(\r\n        response => {\r\n            const { lat, lng } = response.results[0].geometry.location;\r\n            if(lat !== undefined && lng !== undefined){\r\n                return geocodeFromLatLng(lat, lng).then(loc=>{\r\n                    return loc\r\n                })\r\n            }else{\r\n                return null\r\n            }\r\n        },\r\n        err=>{\r\n            return null\r\n        }\r\n    )\r\n}\r\n\r\n/**\r\n * Geocode location from latitude and longitude\r\n * @param newLat\r\n * @param newLng\r\n * @return location object\r\n */\r\n\r\n\r\nexport function geocodeFromLatLng(newLat, newLng){\r\n    return Geocode.fromLatLng( newLat , newLng ).then(\r\n        response => {\r\n            const address = response.results[0].formatted_address\r\n            const addressArray =  response.results[0].address_components\r\n            if(addressArray!==undefined){\r\n                const city = getCity( addressArray ),\r\n                    country = getCountry( addressArray ),\r\n                    county = getCounty(addressArray),\r\n                    municipality = getMunicipality(addressArray);\r\n                let loc = {address: address, city: city, country: country, latitude: newLat, longitude: newLng, county: county, municipality: municipality};\r\n                return loc;\r\n            }\r\n            return null\r\n        },\r\n        error => {\r\n            return null\r\n        }\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\r\nimport PropTypes from \"prop-types\";\r\nimport {geocodeFromAddress, geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    autocomplete:{\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline:\"0\",\r\n        marginBottom: \"4px\"\r\n    },\r\n    root: {\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"8px\",\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction MapToolbar({classes, isLocked, locationCallback}) {\r\n\r\n    const [loading, setIsLoading] = useState(false);\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    /**\r\n     * Handle manual address and coordinates filling with key presses and return location\r\n     * @param event\r\n     * @return {boolean}\r\n     */\r\n\r\n    function errorParsingLocation(){\r\n        addAlertConfig(\"Error parsing location!\", \"Make sure that address you provided is correct!\",[])\r\n    }\r\n\r\n    function handleKeyPress(event){\r\n        const value = event.target.value;\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            setIsLoading(true);\r\n            if (/[a-zA-Z]+/.test(value)){\r\n                geocodeFromAddress(value).then(location=>{\r\n                    location!==null ? locationCallback(location) : errorParsingLocation();\r\n                    setIsLoading(false)\r\n                })\r\n            }else{\r\n                let position = value.split(/[ ,]+/);\r\n                if(position.length === 2){\r\n                    geocodeFromLatLng(parseFloat(position[0]), parseFloat(position[1])).then(location=>{\r\n                        location!==null ? locationCallback(location) : errorParsingLocation();\r\n                        setIsLoading(false)\r\n                    })\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Handle place selection from google maps autocomplete\r\n     * @param place\r\n     * @return {{country: (*|string), address: *, city: (*|string), latitude: *, longitude: *}|null}\r\n     */\r\n    const onPlaceSelected = (place) => {\r\n        setIsLoading(true);\r\n        const addressArray = place.address_components;\r\n        if (addressArray !== undefined) {\r\n            const lat = place.geometry.location.lat(),\r\n                lng = place.geometry.location.lng();\r\n            geocodeFromLatLng(lat, lng).then(location => {\r\n                location !== null ? locationCallback(location) : errorParsingLocation();\r\n                setIsLoading(false)\r\n            });\r\n        }\r\n        return null\r\n    };\r\n\r\n    /**\r\n     * Get current location\r\n     */\r\n    function getCurrentPosition(){\r\n        setIsLoading(true)\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n            let newLat = position.coords.latitude,\r\n                newLng = position.coords.longitude;\r\n            geocodeFromLatLng(newLat, newLng).then(location=>{\r\n                location!==null ? locationCallback(location) : errorParsingLocation();\r\n\r\n                setIsLoading(false)\r\n            });\r\n        }, error=>{\r\n            setIsLoading(false)\r\n            alert(error.message + \"\\n\" + JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    return <div className={classes.root}>\r\n        <div className={classes.content}>\r\n            <Autocomplete\r\n                onKeyPress={(event)=>{if(!isLocked)handleKeyPress(event)}}\r\n                onPlaceSelected={(place)=>{if(!isLocked)onPlaceSelected(place)} }\r\n                className={classes.autocomplete}\r\n                types={['(regions)']}\r\n            />\r\n            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\">\r\n                <MyLocationIcon\r\n                    onClick={()=>{if(!isLocked)getCurrentPosition()}}\r\n                    fontSize=\"large\"\r\n                    color=\"primary\"\r\n                />\r\n            </IconButton>\r\n        </div>\r\n        {loading ? <LinearProgress /> : null}\r\n\r\n    </div>\r\n\r\n\r\n}\r\n\r\nMapToolbar.propTypes = {\r\n    isLocked: PropTypes.bool.isRequired,\r\n    locationCallback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(MapToolbar)","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"8px\",\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction MapLock({classes, isLocked, setIsLocked}) {\r\n    return <div className={classes.root}>\r\n        <FormControlLabel\r\n            control={<Switch />}\r\n            label=\"Lock\"\r\n            checked={isLocked}\r\n            onChange={()=>{\r\n               setIsLocked(old=>!old)\r\n            }}\r\n        />\r\n        {isLocked ?\r\n            <Alert  severity=\"error\">Map is currently locked. If you want to do any changes unlock it.</Alert> : null}\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(MapLock)","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { MAP } from 'react-google-maps/lib/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CustomControlsManager(\r\n    { position = window.google.maps.ControlPosition.TOP_LEFT, children },\r\n    context\r\n) {\r\n    const map = context[MAP];\r\n\r\n    const controlDiv = document.createElement('div');\r\n\r\n    useEffect(() => {\r\n        const controls = map.controls[position];\r\n        const index = controls.length;\r\n        controls.push(controlDiv);\r\n        return () => {\r\n            controls.removeAt(index);\r\n        };\r\n    });\r\n\r\n    return createPortal(\r\n        <div style={{ marginBottom: 8, marginTop: 8 }}>{children}</div>,\r\n        controlDiv\r\n    );\r\n}\r\n\r\nCustomControlsManager.contextTypes = {\r\n    [MAP]: PropTypes.object,\r\n};","import React, {useEffect, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow} from \"react-google-maps\"\r\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport MapToolbar from \"./MapToolbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport MapLock from \"./MapLock\";\r\nimport CustomControlsManager from \"./CustomControlsManager\";\r\nimport ExploreIcon from '@material-ui/icons/Explore';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../../Networking/API\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from \"@material-ui/core/Card\";\r\nvar buildUrl = require('build-url');\r\nconst styles = theme => ({ largeIcon: {\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n    }});\r\n\r\nconst MapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        defaultZoom={15}\r\n        ref={props.refInstance}\r\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\r\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n        {props.children}\r\n\r\n    </GoogleMap>\r\n\r\n);\r\n\r\n\r\n\r\nfunction PlaceMap({classes, placeInfo,locationMarker,setLocationMarker,setParkingLocationMarker}) {\r\n\r\n    const [otherPlacesData, setOtherPlacesData] = useState([]);\r\n    const [infoWindows, setInfoWindows] = useState([]);\r\n\r\n    const [isLocked, setIsLocked] = useState(placeInfo.placeId !== \"\");\r\n    const refMap = useRef(null);\r\n\r\n    function mapToolbarCallback(location) {\r\n        setParkingLocationMarker(location);\r\n        setLocationMarker(location)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getClosestPlaces()\r\n    },[locationMarker]);\r\n\r\n    function getClosestPlaces(){\r\n        API.Places.getAllPlacesAdmin(buildUrl(null, {\r\n            queryParams: {\r\n                p: \"0\",\r\n                s: \"10\",\r\n                range: 3,\r\n                l: [locationMarker.latitude, locationMarker.longitude]\r\n            }\r\n        })).then(response=>{\r\n            setOtherPlacesData(response.list);\r\n        }).catch(error=>{\r\n\r\n        })\r\n    }\r\n\r\n    function onMarkerDragEnd(event) {\r\n        let newLat = event.latLng.lat(),\r\n            newLng = event.latLng.lng();\r\n        geocodeFromLatLng(newLat, newLng).then(location => {\r\n            setLocationMarker(location);\r\n            setParkingLocationMarker(location)\r\n        })\r\n    }\r\n    \r\n    return <React.Fragment>\r\n        <MapToolbar\r\n            isLocked={isLocked}\r\n            locationCallback={mapToolbarCallback}/>\r\n\r\n        <MapComponent\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            refInstance={refMap}\r\n            position={locationMarker}\r\n        >\r\n            {\r\n                otherPlacesData.map((location, i) =>{\r\n                    const latitude = parseFloat(location.latitude);\r\n                    const longitude = parseFloat(location.longitude);\r\n                        return placeInfo.placeId === \"\" ? <Marker\r\n                            key={location.placeId}\r\n                            zIndex={1}\r\n                            position={{lat: latitude, lng: longitude}}\r\n                            icon={{\r\n                                url: require('../../res/selectedTourIcon.svg'),\r\n                                scaledSize: new window.google.maps.Size(48, 48),\r\n                                origin: new window.google.maps.Point(0, 0)\r\n                            }}\r\n                            onClick={() => {\r\n                                if (!isLocked) {\r\n                                    let markers = Object.assign([], infoWindows);\r\n                                    markers[i] = true;\r\n                                    setInfoWindows(markers)\r\n                                }\r\n                            }}\r\n                        >\r\n                            {infoWindows[i] && (\r\n                                <InfoWindow onCloseClick={() => {\r\n                                    let markers = Object.assign([], infoWindows);\r\n                                    markers[i] = false;\r\n                                    setInfoWindows(markers)\r\n                                }\r\n                                }>\r\n\r\n                                    <Card style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                                        {location.photos.length > 0 ? <Avatar alt=\"Remy Sharp\" src={location.photos[0].url}\r\n                                                                          className={classes.largeIcon}/> : null}\r\n                                        <Typography variant=\"h6\">\r\n                                            {location.name}\r\n                                        </Typography>\r\n\r\n                                    </Card>\r\n                                </InfoWindow>\r\n                            )}\r\n                        </Marker> : null\r\n\r\n                })\r\n            }\r\n\r\n            <Marker\r\n                name={'Dolores park'}\r\n                visible={true}\r\n                draggable={!isLocked}\r\n                zIndex={2}\r\n                onDragEnd={e => onMarkerDragEnd(e)}\r\n                position={{lat: locationMarker.latitude, lng: locationMarker.longitude}}>\r\n            </Marker>\r\n\r\n            <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\r\n                <div>\r\n                    <IconButton aria-label=\"delete\" onClick={()=>{\r\n                        if(!isLocked){\r\n                            const mapCenter = refMap.current.getCenter();\r\n                            geocodeFromLatLng(mapCenter.lat(), mapCenter.lng()).then(location=>{\r\n                                setLocationMarker(location)\r\n                                setParkingLocationMarker(location)\r\n                            });\r\n                        }\r\n                    }}>\r\n                        <ExploreIcon fontSize={\"large\"}/>\r\n                    </IconButton>\r\n                </div>\r\n            </CustomControlsManager>\r\n        </MapComponent>\r\n\r\n\r\n\r\n        <MapLock\r\n            isLocked={isLocked}\r\n            setIsLocked={setIsLocked}\r\n        />\r\n    </React.Fragment>\r\n\r\n\r\n}\r\n\r\nPlaceMap.propTypes = {\r\n    locationMarker: PropTypes.object.isRequired,\r\n    setLocationMarker: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PlaceMap)","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PlaceMap from \"../maps/PlaceMap\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PlaceLocation({locationData, setLocationData, setParkingLocation, placeInfo}) {\r\n\r\n    function changeLocationData(event){\r\n        const {name, value} = event.target;\r\n        let data = Object.assign({}, locationData, {});\r\n        data[name] = value;\r\n\r\n        setParkingLocation(data);\r\n        setLocationData(data)\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select place location from map\r\n        </Typography>\r\n        <br/>\r\n        <PlaceMap\r\n            placeInfo={placeInfo}\r\n            locationMarker={locationData}\r\n            setParkingLocationMarker={setParkingLocation}\r\n            setLocationMarker={setLocationData}\r\n        />\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Address\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place address\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['address']}\r\n            name='address'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"City\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place city\"\r\n            fullWidth\r\n            value={locationData['city']}\r\n            name='city'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"County\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place county\"\r\n            fullWidth\r\n            value={locationData['county']}\r\n            name='county'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Municipality\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place municipality\"\r\n            fullWidth\r\n            value={locationData['municipality']}\r\n            name='municipality'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Country\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place country\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['country']}\r\n            name='country'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            rows={4}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceLocation)","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from \"react-google-maps\";\r\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport MapToolbar from \"./MapToolbar\";\r\nimport API from \"../../Networking/API\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CustomControlsManager from \"./CustomControlsManager\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExploreIcon from \"@material-ui/icons/Explore\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\n\r\nconst MapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        ref={props.refInstance}\r\n        defaultZoom={12}\r\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\r\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n        <Marker\r\n            onClick={()=>{if(!props.isLocked)props.setMainInfoWindow(true)}}\r\n            name={'Dolores park'}\r\n            visible={true}\r\n            draggable={!props.isLocked}\r\n            onDragEnd={e => onMarkerDragEnd(e, props.setPosition)}\r\n            position={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n            {props.mainInfoWindow && (\r\n                <InfoWindow onCloseClick={()=>{props.setMainInfoWindow(false)}}>\r\n                    <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                        {props.position.address}\r\n                        <Button\r\n                            onClick={()=>{\r\n                                let c = nearestParkingCount(props.position, props.parkingData);\r\n                                if(c>0){\r\n                                    props.addAlertConfig(\"Parkings nearby already exist!\", c+\" parking(-s) within 150 meter already exist(-s).\" +\r\n                                        \" Are you sure you don't want to use already existings parking locations?\",[{name:\"ADD NEW PARKING!\", action: ()=>{\r\n                                            props.addNewParking(props.position)\r\n                                        }}])\r\n                                }else{\r\n                                    props.addNewParking(props.position)\r\n                                }\r\n                            }}\r\n                            variant=\"text\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            startIcon={<AddIcon />}>\r\n                            Add new parking\r\n                        </Button>\r\n                    </div>\r\n                </InfoWindow>\r\n            )}\r\n        </Marker>\r\n\r\n        <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\r\n            <div>\r\n                <IconButton aria-label=\"delete\" onClick={()=>{\r\n                    if(!props.isLocked){\r\n                        let loc = Object.assign({},props.position, {});\r\n                        const mapCenter = props.refInstance.current.getCenter();\r\n                        loc.latitude = mapCenter.lat();\r\n                        loc.longitude = mapCenter.lng();\r\n                        props.setPosition(loc)\r\n                    }\r\n                }}>\r\n                    <ExploreIcon fontSize={\"large\"}/>\r\n                </IconButton>\r\n            </div>\r\n        </CustomControlsManager>\r\n\r\n        {\r\n            props.parkingData.map((location, i) =>{\r\n                const latitude = parseFloat(location.latitude);\r\n                const longitude = parseFloat(location.longitude);\r\n                console.log(parkingIsAttached(location, props.selectedParkingData));\r\n                return <Marker\r\n                    key={location.parkingId}\r\n                    position={{ lat: latitude, lng: longitude}}\r\n                    icon={{\r\n                        url: parkingIsAttached(location, props.selectedParkingData) ? require('../../res/selectedParking.svg') :\r\n                            require('../../res/availableParking.svg'),\r\n                        scaledSize: new window.google.maps.Size(20, 48),\r\n                        origin: new window.google.maps.Point(0, 0),\r\n                        anchor: new window.google.maps.Point(10, 35)\r\n                    }}\r\n                    onClick={()=>{\r\n                        if(!props.isLocked){\r\n                            let markers = Object.assign({},props.parkingInfoWindows, {});\r\n                            markers[i] = true;\r\n                            props.setParkingInfoWindows(markers)\r\n                        }\r\n                    }}\r\n                >\r\n                    {props.parkingInfoWindows[i] && (\r\n                        <InfoWindow onCloseClick={()=>{\r\n                                let markers = Object.assign({},props.parkingInfoWindows, {});\r\n                                markers[i] = false;\r\n                                props.setParkingInfoWindows(markers)\r\n                            }\r\n                        }>\r\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                                <Typography variant=\"h6\">\r\n                                    {location.address}\r\n                                </Typography>\r\n                                {parkingIsAttached(location, props.selectedParkingData) ? <div>\r\n                                        <Alert severity=\"success\">This parking location is already attached! See below in \"Selected parking locations\" section.</Alert>\r\n                                </div> :\r\n                                <Button\r\n                                    onClick={()=>{props.addExistingParking(location)}}\r\n                                    variant=\"text\"\r\n                                    color=\"secondary\"\r\n                                    size=\"large\"\r\n                                    startIcon={<AddIcon />}>\r\n                                    Add parking\r\n                                </Button>\r\n                                }\r\n                            </div>\r\n                        </InfoWindow>\r\n                    )}\r\n\r\n                </Marker>\r\n\r\n            })\r\n        }\r\n\r\n    </GoogleMap>\r\n);\r\n\r\nfunction parkingIsAttached(parking, selectedParkingData) {\r\n    for(let i = 0; i<selectedParkingData.length; i++){\r\n        if(selectedParkingData[i].address === parking.address)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction calcCrow(lat1, lon1, lat2, lon2)\r\n{\r\n    var R = 6371; // km\r\n    var dLat = toRad(lat2-lat1);\r\n    var dLon = toRad(lon2-lon1);\r\n    var lat1 = toRad(lat1);\r\n    var lat2 = toRad(lat2);\r\n\r\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    var d = R * c;\r\n    return d;\r\n}\r\nfunction toRad(Value) {return Value * Math.PI / 180}\r\n\r\nfunction nearestParkingCount(parking, parkingData){\r\n    let count = 0;\r\n    for(let i = 0; i<parkingData.length; i++){\r\n        let distance = calcCrow(parking.latitude, parking.longitude, parkingData[i].latitude, parkingData[i].longitude);\r\n        if(distance<=0.15){\r\n            count++;\r\n        }\r\n    }\r\n    return count\r\n}\r\n\r\n\r\nfunction onMarkerDragEnd(event, setLocationMarker) {\r\n    let newLat = event.latLng.lat(),\r\n        newLng = event.latLng.lng();\r\n    geocodeFromLatLng(newLat, newLng).then(location => {\r\n        setLocationMarker(location)\r\n    })\r\n}\r\n\r\nfunction ParkingMap({placeInfo,\r\n                        locationMarker,\r\n                        setLocationMarker,\r\n                        addNewParking,\r\n                        addExistingParking,\r\n                        selectedParkingData\r\n                    }) {\r\n\r\n    const [parkingData, setParkingData] = useState([]);\r\n    const [mainInfoWindow, setMainInfoWindow] = useState(false);\r\n    const [parkingInfoWindows, setParkingInfoWindows] = useState(false);\r\n    const [isLocked, setIsLocked] = useState(false);\r\n    const refMap = useRef(null);\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    function getClosestParking(){\r\n        API.Parking.getParkingByLocation(\"?lat=\"+locationMarker.latitude+\"&lng=\"+locationMarker.longitude).then(response=>{\r\n            setParkingData(response);\r\n        }).catch(error=>{\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getClosestParking()\r\n    },[locationMarker]);\r\n\r\n    function mapToolbarCallback(location) {\r\n        setMainInfoWindow(true);\r\n        setLocationMarker(location)\r\n    }\r\n\r\n    return <React.Fragment>\r\n        <MapToolbar\r\n            isLocked={isLocked}\r\n            locationCallback={mapToolbarCallback}/>\r\n\r\n        <MapComponent\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            mainInfoWindow={mainInfoWindow}\r\n            setMainInfoWindow={setMainInfoWindow}\r\n            addNewParking={addNewParking}\r\n            addExistingParking={addExistingParking}\r\n            parkingInfoWindows={parkingInfoWindows}\r\n            setParkingInfoWindows={setParkingInfoWindows}\r\n            parkingData={parkingData}\r\n            position={locationMarker}\r\n            setPosition={setLocationMarker}\r\n            isLocked={isLocked}\r\n            refInstance={refMap}\r\n            selectedParkingData={selectedParkingData}\r\n            addAlertConfig={addAlertConfig}\r\n        />\r\n\r\n    </React.Fragment>\r\n}\r\n\r\n\r\nParkingMap.propTypes = {\r\n    placeInfo: PropTypes.object.isRequired,\r\n    locationMarker: PropTypes.object.isRequired,\r\n    setLocationMarker: PropTypes.func.isRequired,\r\n    addNewParking: PropTypes.func.isRequired,\r\n    addExistingParking: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ParkingMap","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../../Networking/API\";\r\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport ParkingMap from \"../maps/ParkingMap\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction ParkingLocation({classes, locationData, setLocationData, allSelectedParkingData, setAllSelectedParkingData, placeInfo}) {\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\r\n    };\r\n\r\n    function addNewParking(markerData){\r\n        if(!parkingExists(markerData)){\r\n            API.Parking.insertNewParking([markerData]).then(response=>{\r\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\r\n                addConfig(true)\r\n            }).catch(error=>{\r\n                addConfig(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    function addExistingParking(location) {\r\n        if(!parkingExists(location)){\r\n            setAllSelectedParkingData(oldArray=> [...oldArray, location])\r\n        }\r\n    }\r\n\r\n    function parkingExists(markerData){\r\n        for(let i = 0; i<allSelectedParkingData.length; i++){\r\n            if(allSelectedParkingData[i].address === markerData.address){\r\n                addConfig(false, \"This parking is already attached!\");\r\n                return true;\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    const SortableItem = SortableElement(({value}) => (\r\n        <Paper className={classes.paper} elevation={3}>\r\n            <Typography>\r\n                {value.address}\r\n            </Typography>\r\n            <IconButton aria-label=\"delete\" className={classes.margin}\r\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </Paper>\r\n    ));\r\n\r\n\r\n    const SortableList = SortableContainer(({items}) => {\r\n        return (\r\n            <ul>\r\n                {items.map((value, index) => (\r\n                <SortableItem key={index} index={index} value={value} />\r\n                ))}\r\n            </ul>\r\n        );\r\n    });\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Add parking\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select parking\r\n        </Typography>\r\n\r\n        <ParkingMap\r\n            selectedParkingData={allSelectedParkingData}\r\n            placeInfo={placeInfo}\r\n            locationMarker={locationData}\r\n            setLocationMarker={setLocationData}\r\n            addNewParking={addNewParking}\r\n            addExistingParking={addExistingParking}\r\n        />\r\n\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Selected parking locations\r\n        </Typography>\r\n        {allSelectedParkingData.length === 0 ? <Alert severity=\"error\">\r\n            This place has no selected parking! To select parking for this place do the following:\r\n            <br/>\r\n            1. Select your current location or any other location\r\n            <br/>\r\n            2. Select already existing nearby parking locations and click add\r\n            <br/>\r\n            3. If none of the location is valid, click on the orange marker and add new parking\r\n            </Alert> :\r\n            <SortableList pressDelay={200} disableAutoscroll={false} items={allSelectedParkingData} onSortEnd={onSortEnd} />\r\n        }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(ParkingLocation)","import React, { useState, useCallback } from 'react';\r\n\r\nexport const EditDialogContext = React.createContext({\r\n    dialogConfig: null,\r\n    dialogOpen: null,\r\n    setDialogOpen: null,\r\n    addEditDialogConfig: () => {},\r\n    removeEditDialogConfig: () => {}\r\n});\r\n\r\nconst defaultOptions = {\r\n\r\n    /**\r\n     * The dialog's title.\r\n     */\r\n    title: \"Sample title\",\r\n\r\n    /**\r\n     * Object, that defines an error message for each error returned by validateInput function.\r\n     * Should follow this structure: {errorCode: \"message\", differentErrorCode: \"Message\"}\r\n     * Keys of this object are integers (that represent the error code)\r\n     */\r\n    errorMessages: {},\r\n\r\n    /**\r\n     * Explanation text for this dialog.\r\n     */\r\n    explanation: \"Sample explanation\",\r\n\r\n    /**\r\n     * A callback for when user presses cancel.\r\n     */\r\n    onCloseCallback: () => {},\r\n\r\n    /**\r\n     * A callback for when the user input passes error checks and done button is pressed\r\n     * @param input is the input text\r\n     */\r\n    onDoneCallback: (input) => {},\r\n\r\n    /**\r\n     * The label text to be displayed above textfield\r\n     */\r\n    textFieldLabel: \"Type here\",\r\n\r\n    /**\r\n     * Should return 0 if input is valid.\r\n     * If the input is not valid, it should return an error code.\r\n     * Any returned code, that is not 0 is considered to be an error.\r\n     * The error code returned may have a message in errorMessages prop.\r\n     * @param input\r\n     * @returns {number}\r\n     */\r\n    validateInput: (input) => 0,\r\n\r\n    /**\r\n     * The default text to be displayed in TextField\r\n     */\r\n    defaultText: \"\"\r\n}\r\n\r\nexport default function EditDialogProvider({ children }) {\r\n    const [dialogConfig, setDialogConfig] = useState(defaultOptions);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const contextValue = {\r\n        dialogConfig,\r\n        dialogOpen: dialogOpen,\r\n        setDialogOpen: setDialogOpen,\r\n        addEditDialogConfig: (options) => {\r\n            setDialogConfig({\r\n                ...defaultOptions,\r\n                ...options\r\n            })\r\n            setDialogOpen(true)\r\n        },\r\n        removeEditDialogConfig: () => setDialogConfig(null)\r\n    };\r\n\r\n    return (\r\n        <EditDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </EditDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {EditDialogContext} from \"./EditDialogContext\";\r\n\r\nexport default function UseEditDialogContext() {\r\n    const { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen } = useContext(EditDialogContext);\r\n    return { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen};\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport API from \"../../Networking/API\";\r\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\n\r\nconst styles = theme => ({\r\n  outline: {\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n    width: '100%'\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: \"8px\"\r\n  },\r\n  slider:{\r\n    flex: 1,\r\n    marginRight: 10\r\n  },\r\n  sliderContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  sliderInput: {\r\n\r\n  },\r\n});\r\n\r\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories, placeInfo, setPlaceInfo}) {\r\n\r\n  const [availableCategories, setAvailableCategories] = useState([]);\r\n  const [availableTags, setAvailableTags] = useState([]);\r\n\r\n  const grade = placeInfo.grade\r\n  const setGrade = (value) => {\r\n    setPlaceInfo(info => {\r\n      return {...info, grade: value}\r\n    })\r\n  }\r\n\r\n  const {addEditDialogConfig} = UseEditDialogContext();\r\n  const {addConfig} = UseSnackbarContext();\r\n\r\n  const updateTags = () => {\r\n    API.Tags.getAllTags().then(response => {\r\n      setAvailableTags(response);\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  };\r\n  const updateCategories = () => {\r\n    API.Categories.getAllCategories().then(response => {\r\n      setAvailableCategories(response)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateTags();\r\n    updateCategories();\r\n  }, []);\r\n\r\n\r\n  const promptAddTag = () => {\r\n    addEditDialogConfig({\r\n      title: \"Add tag\",\r\n      explanation: \"Type the tag name\",\r\n      onDoneCallback: (tagName) => {\r\n        API.Tags.addTag([{name: tagName}]).then(response => {\r\n          let newTag = {tagId: response[0], name: tagName}\r\n          setAvailableTags(\r\n              [\r\n                ...availableTags,\r\n                newTag\r\n              ]\r\n          );\r\n          setSelectedTags([\r\n            ...selectedTags,\r\n            newTag\r\n          ]);\r\n\r\n        }).catch(() => {\r\n          addConfig(false, \"Failed to add tag.\")\r\n        })\r\n      },\r\n      errorMessages: {\r\n        1: \"The tag name is too short\",\r\n        2: \"A tag with identical name already exists. You should choose the existing tag instead\"\r\n      },\r\n      validateInput: (input) => {\r\n        if (input.length < 0) {\r\n          return 1 //Input too short\r\n        } else if (availableTags.filter(item => item.name === input).length !== 0) {\r\n          return 2 //Identical tag already exists\r\n        }\r\n        return 0\r\n      },\r\n      textFieldLabel: \"Warm, quick, cozy...\"\r\n    })\r\n  }\r\n\r\n  const promptAddCategory = () => {\r\n    addEditDialogConfig({\r\n      title: \"Add category\",\r\n      explanation: \"Type the category name\",\r\n      onDoneCallback: (categoryName) => {\r\n        API.Categories.addCategory([{name: categoryName}]).then(response => {\r\n          let newCat = {categoryId: response[0], name: categoryName};\r\n          setAvailableCategories(\r\n              [\r\n                ...availableCategories,\r\n                newCat\r\n              ]\r\n          );\r\n          setSelectedCategories([\r\n            ...selectedCategories,\r\n            newCat\r\n          ]);\r\n        }).catch(error => {\r\n          addConfig(false, \"Failed to add category.\")\r\n        })\r\n      },\r\n      errorMessages: {\r\n        1: \"The category name is too short\",\r\n        2: \"A category with identical name already exists. You should choose the existing category instead\"\r\n      },\r\n      validateInput: (input) => {\r\n        if (input.length < 0) {\r\n          return 1 //Input too short\r\n        } else if (availableCategories.filter(item => item.name === input).length !== 0) {\r\n          return 2 //Identical category already exists\r\n        }\r\n        return 0\r\n      },\r\n      textFieldLabel: \"Restaurant, hotel, hiking...\"\r\n    })\r\n  }\r\n\r\n  return <div>\r\n    <Typography variant=\"h6\">\r\n      Place discovery settings\r\n    </Typography>\r\n    <br/>\r\n    <Typography variant=\"subtitle1\">\r\n      Select tags\r\n    </Typography>\r\n    <AutocompleteChip label=\"Select tags\"\r\n                      id=\"tagId\"\r\n                      options={availableTags}\r\n                      setOptions={setAvailableTags}\r\n                      selectedOptions={selectedTags}\r\n                      setSelectedOptions={setSelectedTags}/>\r\n\r\n    <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        onClick={promptAddTag}\r\n        startIcon={<AddIcon/>}>\r\n      Add missing tag\r\n    </Button>\r\n\r\n    <br/>\r\n    <br/>\r\n    <Typography variant=\"subtitle1\">\r\n      Select categories\r\n    </Typography>\r\n    <AutocompleteChip label=\"Select categories\"\r\n                      id=\"categoryId\"\r\n                      options={availableCategories}\r\n                      setOptions={setAvailableCategories}\r\n                      selectedOptions={selectedCategories}\r\n                      setSelectedOptions={setSelectedCategories}/>\r\n    <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        onClick={promptAddCategory}\r\n        startIcon={<AddIcon/>}>\r\n      Add missing category\r\n    </Button>\r\n\r\n    <br/>\r\n    <Typography variant=\"subtitle1\">\r\n      Grade this place\r\n    </Typography>\r\n\r\n    <div className={classes.sliderContainer}>\r\n      <Slider\r\n          className={classes.slider}\r\n          value={grade}\r\n          onChange={(event, value) => {\r\n            setGrade(value)\r\n          }\r\n          }\r\n          max={100}\r\n          min={0}\r\n          aria-labelledby=\"input-slider\"\r\n      />\r\n\r\n      <Input\r\n          className={classes.sliderInput}\r\n          value={grade}\r\n          margin=\"dense\"\r\n          onChange={(event) => {\r\n            setGrade(event.target.value === '' ? '' : Number(event.target.value));\r\n          }}\r\n          onBlur={() => {\r\n            if (grade < 0) {\r\n              setGrade(0);\r\n            } else if (grade > 100) {\r\n              setGrade(100);\r\n            }\r\n          }}\r\n          inputProps={{\r\n            step: 1,\r\n            min: 0,\r\n            max: 100,\r\n            type: 'number',\r\n            'aria-labelledby': 'input-slider',\r\n          }}\r\n      />\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceDiscovery)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        width: \"20%\",\r\n        padding: \"2px\",\r\n        marginRight: \"16px\"\r\n    },\r\n\r\n});\r\nexport default function ReviewCard({review}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <div style={{display: \"flex\"}} >\r\n                    <Avatar alt=\"Cindy Baker\" src={!!review.photoUrl ? review.photoUrl : \"/broken-image.jpg\"} />\r\n                    <div style={{display: \"flex\", flexDirection: \"column\", marginLeft:\"8px\"}}>\r\n                        <Typography title=\"subtitle1\">\r\n                            {review.name} {review.surname}\r\n                        </Typography>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <Rating size=\"small\" name=\"read-only\" value={review.rating} readOnly />\r\n                            <Typography title=\"subtitle1\">\r\n                                {\"+\" + review.upvotes}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                    {moment(review.timeAdded).format('LL')}\r\n                </Typography>\r\n                <div style={{marginTop: \"16px\"}}>\r\n                    {review.title}\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                        {review.review}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ReviewCard from \"../ReviewCard\";\r\nimport API from \"../../Networking/API\";\r\nimport debounce from \"lodash/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nconst styles = theme => ({\r\n    reviewsInfo:{\r\n        display: \"flex\",\r\n    },\r\n    reviews:{\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        margin: theme.spacing(2),\r\n        overflowX: \"scroll\"\r\n    },\r\n    sortingButtons: {\r\n        padding: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction Reviews({classes, placeInfo}) {\r\n\r\n    const [reviews, setReviews] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    const [filterBy, setFilterBy] = useState('mostRated');\r\n\r\n    function getReviewsForPlace(urlParams = \"?p=\"+placeInfo.placeId) {\r\n        API.Reviews.getPlaceReviews(urlParams).then(response=>{\r\n            setReviews(old=>[...old, ...response.list]);\r\n            setIsLoading(false)\r\n        }).catch(error=>{\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    //Get ordered by new filter\r\n    useEffect(()=>{\r\n            getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=1&o=\"+filterBy)\r\n    },[filterBy]);\r\n\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollWidth - e.target.scrollLeft - scrollOffset)  <= e.target.clientWidth;\r\n        if (bottom && !isLoading && reviews.length>0 && reviews.length<placeInfo.totalReviews) {\r\n            setIsLoading(true);\r\n            setPage(old=>{\r\n                getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=\"+(old+1)+\"&o=\"+filterBy);\r\n                return old+1\r\n            });\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    function changeSorting(e){\r\n        const {name, value} = e.target;\r\n        setFilterBy(value);\r\n        setReviews([]);\r\n        setPage(1);\r\n        handleClose()\r\n    }\r\n\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Reviews\r\n            <br/>\r\n            {\r\n               reviews.length > 0 ?\r\n                   <React.Fragment>\r\n                       <div style={{display:\"flex\", justifyContent: \"space-between\"}}>\r\n                           <div className={classes.reviewsInfo}>\r\n                               <Rating name=\"read-only\" value={placeInfo.overallStarRating} precision={0.2} readOnly />\r\n                               <Typography style={{marginLeft:\"8px\"}} variant=\"subtitle1\">\r\n                                   {placeInfo.totalReviews} reviews\r\n                               </Typography>\r\n                           </div>\r\n                           <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                               <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                                   <FilterListIcon />\r\n                               </IconButton>\r\n                           </Tooltip>\r\n                           <Popover\r\n                               id={id}\r\n                               open={open}\r\n                               anchorEl={anchorEl}\r\n                               onClose={handleClose}\r\n                               anchorOrigin={{\r\n                                   vertical: 'bottom',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                               transformOrigin={{\r\n                                   vertical: 'top',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                           >\r\n                               <RadioGroup className={classes.sortingButtons} aria-label=\"gender\" value={filterBy} name=\"gender1\"  onChange={changeSorting}>\r\n                                   <FormControlLabel value=\"mostRated\" control={<Radio />} label=\"Most rated\" />\r\n                                   <FormControlLabel value=\"newest\" control={<Radio />} label=\"Newest\" />\r\n                               </RadioGroup>\r\n                           </Popover>\r\n                       </div>\r\n\r\n                       <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                           <Typography>\r\n                               Showing: {reviews.length} out of {placeInfo.totalReviews}\r\n                           </Typography>\r\n                           <Typography>\r\n                               Sorting by: {filterBy}\r\n                           </Typography>\r\n                       </div>\r\n                       <div className={classes.reviews} onScroll={e=>handleScroll(e)}>\r\n                           {reviews.map(row=>{\r\n                               return <ReviewCard review={row}/>\r\n                           })}\r\n                       </div>\r\n                   </React.Fragment> : <Typography> No reviews for this place</Typography>\r\n            }\r\n\r\n        </Typography>\r\n        <br/>\r\n        {isLoading ? <LinearProgress/> : null }\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(Reviews)","import React, { useState } from 'react';\r\n\r\nexport const AppBarTitleContext = React.createContext({\r\n    title: \"\",\r\n    setTitle: () => {},\r\n});\r\n\r\nexport default function AppBarTitleProvider({ children }) {\r\n    const [title, setTitle] = useState(\"Home\");\r\n\r\n    const contextValue = {\r\n        title,\r\n        setTitle: (title) => setTitle(title)\r\n    };\r\n\r\n    return (\r\n        <AppBarTitleContext.Provider value={contextValue}>\r\n            {children}\r\n        </AppBarTitleContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AppBarTitleContext} from \"./AppBarTitleContext\";\r\n\r\nexport default function UseAppBarTitleContext() {\r\n    const { title, setTitle } = useContext(AppBarTitleContext);\r\n    return { title, setTitle };\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport API from \"../../Networking/API\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n\r\n});\r\n\r\nfunction AddRecommendationDialog({classes, open, setOpen, addCallback}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [data, setData] = useState({name: \"\", subtitle: \"\", description: \"\", type: \"1\"});\r\n    const [error, setError] = useState({name: false, subtitle: false, description: false});\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let recData = { ...data }\r\n        recData[name] = value\r\n        setData(recData)\r\n    };\r\n\r\n    function addRecommendation(){\r\n        if(checkErrors()){\r\n            return\r\n        }\r\n        setLoading(true)\r\n        addAlertConfig(\"Add new recommendation\", \"Are you sure you want to add this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Recommendation.createRecommendation(data).then(id=>{\r\n                    let insertedData = { ...data }\r\n                    insertedData.id = id\r\n                    addConfig(true, \"Recommendation added successfully\")\r\n                    addCallback(insertedData)\r\n                    setOpen(false)\r\n                }).catch((error)=>{\r\n                    console.log('recommendation error', error)\r\n                    addConfig(false, \"Something went wrong. Please try again.\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    function checkErrors(){\r\n        let errors = Object.assign({}, error)\r\n        let hasErrors = false;\r\n        for (let key in data) {\r\n            errors[key] = data[key] === \"\" || data[key] === -1;\r\n            if(errors[key] === true){\r\n                hasErrors = true\r\n            }\r\n        }\r\n        setError(errors);\r\n        return hasErrors\r\n    }\r\n\r\n    function recommendationTypeChanged(event) {\r\n        let recData = { ...data }\r\n        recData.type = event.target.value\r\n\r\n        setData(recData)\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add new recommendation</DialogTitle>\r\n            <DialogContent>\r\n                <div className={classes.root}>\r\n                    <TextField id=\"outlined-basic\"\r\n                               error={error.title}\r\n                               required\r\n                               label=\"Title\"\r\n                               name=\"name\"\r\n                               value={data['name']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               error={error.subtitle}\r\n                               label=\"Subtitle\"\r\n                               name=\"subtitle\"\r\n                               value={data['subtitle']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               error={error.description}\r\n                               label=\"Description\"\r\n                               name=\"description\"\r\n                               value={data['description']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <FormControl component=\"fieldset\" style={{marginTop: 32}}>\r\n                        <FormLabel component=\"legend\">Recommendation type</FormLabel>\r\n                        <RadioGroup aria-label=\"rec\" name=\"rec1\" value={data.type} onChange={recommendationTypeChanged}>\r\n                            <FormControlLabel value=\"1\" control={<Radio />} label=\"Places recommendation\" />\r\n                            <FormControlLabel value=\"2\" control={<Radio />} label=\"Tours recommendation\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </div>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        addRecommendation()\r\n                    }}\r\n                >\r\n                    Create recommendation\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(AddRecommendationDialog)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport API from \"../../Networking/API\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport history from \"../../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddRecommendationDialog from \"./AddRecommendationDialog\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport debounce from \"lodash/debounce\";\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start'\r\n    }\r\n});\r\n\r\nfunction RecommendationListDialog({classes, open, setOpen, objectId, type}){\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [recommendations, setRecommendations] = useState([]);\r\n    const [pagingData, setPagingData] = useState({pageNum: 1})\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [showAddNewRecommendation, setShowAddNewRecommendation] = useState(false)\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    function getRecommendations(page, keywordChange = false) {\r\n        API.Recommendation.getAllRecommendations(\"?p=\"+page+\"&keyword=\"+keyword+\"&type=\"+type).then(response=>{\r\n            if(keywordChange){\r\n                setRecommendations(response.list)\r\n            }else{\r\n                setRecommendations(old=>[...old, ...response.list])\r\n            }\r\n            delete response.list\r\n            setPagingData(response)\r\n        }).catch().finally(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        console.log(\"Handle scroll\")\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollHeight - e.target.scrollTop - scrollOffset)  <= e.target.clientHeight;\r\n        if (bottom && !loading && recommendations.length>0 && pagingData.pageNum<pagingData.pages) {\r\n            setLoading(true);\r\n            console.log(\"Requesting new page\")\r\n            getRecommendations(pagingData.pageNum+1);\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Keyword changed\")\r\n        getRecommendations(1, true);\r\n    }, [keyword])\r\n\r\n\r\n    function addPlaceToRecommendation(rec) {\r\n      API.Recommendation.addObjectToRecommendation({id: objectId, recommendationId: rec.id}).then(()=>{\r\n              addConfig(true, \"Added object to recommendation successfully!\")\r\n      }).catch(()=>{\r\n              addConfig(true, \"Failed to add!\")\r\n          }\r\n      ).finally(()=>{\r\n          setOpen(false)\r\n      })\r\n    }\r\n\r\n    function addNewRecommendationCallback(recommendation){\r\n        let recData = [ ...recommendations ]\r\n        recData.unshift(recommendation)\r\n\r\n        setRecommendations(recData)\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"sm\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add to recommendation</DialogTitle>\r\n            <DialogContent>\r\n                <div className={classes.root}>\r\n                    <div className={classes.root} >\r\n                        <TextField id=\"standard-search\" label=\"Search field\" value={keyword} type=\"search\" onChange={e=>{\r\n                            setKeyword(e.target.value)\r\n                        }} />\r\n                        {recommendations.length > 0 ?\r\n                            <React.Fragment>\r\n                                <List component=\"nav\" style={{ overflowY: \"scroll\", width: '100%', maxHeight: 400}} onScroll={handleScroll} aria-label=\"main mailbox folders\">\r\n                                    {recommendations.map(row=>{\r\n                                        return <ListItem key={row.name} style={{width: '100%'}} button onClick={()=>{addPlaceToRecommendation(row)}}>\r\n                                            <ListItemIcon>\r\n                                                <CheckBoxOutlineBlankIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={row.name} />\r\n                                        </ListItem>\r\n                                    })}\r\n\r\n                                </List>\r\n                            </React.Fragment>\r\n                            :\r\n\r\n                            <Alert severity=\"info\">Recommendations list is empty. You can add new recommendation below.</Alert>\r\n                        }\r\n\r\n\r\n                    </div>\r\n                    <Divider style={{width: '100%'}} />\r\n                    <Button\r\n                        onClick={()=>setShowAddNewRecommendation(true)}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        startIcon={<AddIcon/>}>\r\n                        Create new recommendation\r\n                    </Button>\r\n                </div>\r\n            <AddRecommendationDialog\r\n                open={showAddNewRecommendation}\r\n                setOpen={setShowAddNewRecommendation}\r\n                addCallback={addNewRecommendationCallback}\r\n            />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RecommendationListDialog)\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {Fragment, useState} from \"react\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n\r\n    },\r\n    media: {\r\n        height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n})\r\n\r\nfunction CategoriesDisplay({categories}){\r\n    return(\r\n        categories != null &&\r\n        <Box component=\"ul\"  style={{\r\n            display: 'flex',\r\n            justifyContent: 'left',\r\n            flexWrap: 'wrap',\r\n            listStyle: 'none',\r\n            padding: '0px'\r\n        }}>\r\n            {categories.map((data, index) => {\r\n                return (\r\n                    <li key={index}>\r\n                        <Chip\r\n                            variant=\"outlined\"\r\n                            style={{margin: \"5px\"}}\r\n                            label={data.name}\r\n                        />\r\n                    </li>\r\n\r\n                );\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction SubheaderDisplay({city, address, priceRange, rating}){\r\n    return(\r\n        <div>\r\n            {rating != null &&\r\n            <Fragment><Rating\r\n                readOnly={true}\r\n                value={rating}\r\n            /><br/></Fragment>}\r\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ApiPlaceCard({classes, placeData, renderActionArea}){\r\n\r\n    function truncateText(text){\r\n        if(text == null)\r\n            return \"\"\r\n        if(text.length > 500){\r\n            return text.substring(0, 500) + \"...\";\r\n        }else{\r\n            return text\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                action={\r\n                    renderActionArea != null && renderActionArea()\r\n                }\r\n                title={placeData.name}\r\n                subheader={<SubheaderDisplay  city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\r\n\r\n            />\r\n            {placeData.photos != null && placeData.photos.length > 0 &&\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={placeData.photos[0].url}\r\n            />}\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {truncateText(placeData.description)}\r\n                </Typography>\r\n\r\n                <CategoriesDisplay categories={placeData.categories}/>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n                {placeData.website}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nApiPlaceCard.propTypes = {\r\n    placeData: PropTypes.object.isRequired,\r\n    renderActionArea: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(ApiPlaceCard)","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\n\r\nconst styles = theme => ({\r\n    paperContent: {\r\n        marginTop: theme.spacing(4),\r\n        width: \"100%\",\r\n        padding: theme.spacing(2)\r\n    },\r\n});\r\n\r\nexport const RecommendationType = {\r\n    place: 1,\r\n    tour: 2\r\n}\r\n\r\nfunction Recommendation({classes, recommendation, onEditCallback}) {\r\n\r\n    return <Paper elevation = {4} className={classes.paperContent}>\r\n            <Chip\r\n                label={recommendation.type === 1 ? \"Place recommendation\" : \"Tour recommendation\"} />\r\n            <Typography variant=\"h6\">\r\n                {recommendation.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n                {recommendation.subtitle}\r\n            </Typography>\r\n\r\n            <div style={{display: \"flex\", flexDirection: 'row', overflowX: 'auto', width: '100%'}}>\r\n                <div style={{display:\"flex\", flexDirection: \"row\"}}>\r\n                    {recommendation.objects.length > 0 ?\r\n\r\n                        recommendation.objects.map((place, index)=>{\r\n                            delete place.description\r\n\r\n                            return <div style={{width: 300, padding: 16}}>\r\n                                <ApiPlaceCard placeData={place}/>\r\n                            </div>\r\n                        }) :\r\n\r\n                        <Alert severity=\"info\">This recommendation does not have any objects attached. You can attach\r\n                            Places or Tours by browsing in Places and Tours tables\r\n                        </Alert>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n        <Fragment>\r\n            <Button\r\n                style={{marginTop: 16}}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => onEditCallback()}\r\n                className={classes.button}>\r\n                Edit\r\n            </Button>\r\n        </Fragment>\r\n\r\n        </Paper>\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Recommendation)","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {DatePicker, TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport shortid from 'shortid';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n  },\r\n  intervalContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    margin: 0,\r\n    flexWrap: 'wrap',\r\n  },\r\n  pickerStyle: {\r\n    width: 50,\r\n    marginLeft: 3,\r\n    margin: 0,\r\n  }\r\n});\r\n\r\nfunction WorkingDayIntervals({classes, scheduleData, setScheduleData, scheduleOpenIndex, variantId, enableLastAccommodation}) {\r\n\r\n  const currentSchedule = scheduleData[scheduleOpenIndex];\r\n  const currentVariant = currentSchedule.variants.find(x => x.elementId === variantId)\r\n\r\n  const toggleSplitSchedule = () => {\r\n    if (currentVariant.shifts.length > 1)\r\n      setScheduleData(oldData => {\r\n        const newData = [...oldData];\r\n        const shifts = newData[scheduleOpenIndex].variants.find(variant => variantId === variant.elementId).shifts\r\n        while (shifts.length > 1)\r\n          shifts.pop()\r\n        return newData;\r\n      })\r\n    else\r\n      setScheduleData(oldData => {\r\n        const newData = [...oldData];\r\n        const shiftToPush = {\r\n          openTime: \"08:00\",\r\n          closeTime: \"18:00\",\r\n          elementId: shortid.generate()\r\n        }\r\n        if(enableLastAccommodation)\r\n          shiftToPush['lastAccommodation'] = \"18:00\"\r\n        newData[scheduleOpenIndex]\r\n            .variants\r\n            .find(variant => variantId === variant.elementId)\r\n            .shifts\r\n            .push(shiftToPush)\r\n        return newData;\r\n      })\r\n  }\r\n\r\n  const changeOpenTime = (shiftId, time) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      currentSchedule\r\n          .variants\r\n          .find(x => x.elementId === variantId)\r\n          .shifts\r\n          .find(shift => shift.elementId === shiftId)\r\n          .openTime = moment(time).format('HH:mm') ;\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const changeCloseTime = (shiftId, time) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      currentSchedule\r\n          .variants\r\n          .find(x => x.elementId === variantId)\r\n          .shifts\r\n          .find(shift => shift.elementId === shiftId)\r\n          .closeTime = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n  const changeLastAccommodationTime = (shiftId, time) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      currentSchedule\r\n          .variants\r\n          .find(x => x.elementId === variantId)\r\n          .shifts\r\n          .find(shift => shift.elementId === shiftId)\r\n          .lastAccommodation = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const shifts = currentVariant.shifts.map((shift, index) => {\r\n    const lastShift = index !== currentVariant.shifts.length - 1\r\n    const firstShift = index === 0\r\n    return (\r\n        <>\r\n          <div className={classes.intervalContainer}>\r\n\r\n            <Typography variant=\"h7\">\r\n              {firstShift ? 'O' : 'o'}pens at\r\n            </Typography>\r\n            <TimePicker\r\n                margin=\"normal\"\r\n                ampm={false}\r\n                className={classes.pickerStyle}\r\n                format=\"HH:mm\"\r\n                value={moment(shift.openTime, \"HH:mm\")}\r\n                onChange={(date) => changeOpenTime(shift.elementId, date)}\r\n            />\r\n            <Typography variant=\"h7\">\r\n              and closes at\r\n            </Typography>\r\n            <TimePicker\r\n                margin=\"normal\"\r\n                ampm={false}\r\n                className={classes.pickerStyle}\r\n                format=\"HH:mm\"\r\n                value={moment(shift.closeTime, \"HH:mm\")}\r\n                onChange={(date) => changeCloseTime(shift.elementId, date)}\r\n            />\r\n            {enableLastAccommodation &&\r\n            <>\r\n              <Typography variant=\"h7\">\r\n                last accommodation at\r\n              </Typography>\r\n              <TimePicker\r\n                  margin=\"normal\"\r\n                  ampm={false}\r\n                  className={classes.pickerStyle}\r\n                  format=\"HH:mm\"\r\n                  value={moment(shift.lastAccommodation, \"HH:mm\")}\r\n                  onChange={(date) => changeLastAccommodationTime(shift.elementId, date)}\r\n              />\r\n            </>\r\n            }\r\n\r\n          </div>\r\n          {lastShift && <Typography variant=\"h7\" style={{marginRight: 5}}>\r\n            THEN\r\n          </Typography>}\r\n        </>)\r\n  })\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        {shifts}\r\n        <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                  name=\"checkedB\"\r\n                  color=\"primary\"\r\n                  checked={currentVariant.shifts.length > 1}\r\n                  onChange={toggleSplitSchedule}\r\n              />\r\n            }\r\n            label=\"Split schedule\"\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(WorkingDayIntervals)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport WorkingShift from \"./WorkingShift\";\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    border: '1px dashed black',\r\n    padding: 8\r\n  },\r\n  weekdayPickerContainer: {\r\n    display: 'flex',\r\n    width: '100%'\r\n  },\r\n  weekdayButton: {\r\n    flex: 1,\r\n    margin: 5,\r\n    padding: 0,\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n  },\r\n  removeButtonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  }\r\n});\r\n\r\nexport const weekdays = [\r\n  {\r\n    id: 0,\r\n    name: \"Mon\",\r\n    fullName: \"Monday\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Tue\",\r\n    fullName: \"Tuesday\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Wed\",\r\n    fullName: \"Wednesday\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Thu\",\r\n    fullName: \"Thursday\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Fri\",\r\n    fullName: \"Friday\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Sat\",\r\n    fullName: \"Saturday\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Sun\",\r\n    fullName: \"Sunday\",\r\n  }\r\n]\r\n\r\n\r\nfunction WorkingHoursVariant({classes, enableLastAccommodation, scheduleData, setScheduleData, scheduleOpenIndex, variantId}) {\r\n\r\n  const currentSchedule = scheduleData[scheduleOpenIndex];\r\n  const currentVariant = currentSchedule.variants.filter(x => x.elementId === variantId)[0]\r\n\r\n  const toggleWeekday = (weekDayIndex) => {\r\n    setScheduleData(scheduleData => {\r\n      const newScheduleData = [...scheduleData];\r\n      let days = newScheduleData[scheduleOpenIndex].variants.find(item => item.elementId === variantId).days\r\n      if (days.includes(weekDayIndex))\r\n        days.splice(days.indexOf(weekDayIndex), 1);\r\n      else\r\n        days.push(weekDayIndex);\r\n      return newScheduleData\r\n    })\r\n  }\r\n\r\n  const weekdayReserved = (weekDayIndex) => {\r\n    return currentSchedule.variants.some(variant => variant.days.includes(weekDayIndex));\r\n  }\r\n\r\n  const weekdayPicker = (\r\n      <div className={classes.weekdayPickerContainer}>\r\n        {weekdays.map((item) => {\r\n          const dayActive = currentVariant.days.some(day => day === item.id);\r\n          return(\r\n              <Button onClick={() => toggleWeekday(item.id)}\r\n                      className={classes.weekdayButton}\r\n                      variant={\"contained\"}\r\n                      color={dayActive ? \"primary\" : \"secondary\"}\r\n                      disabled={!dayActive && weekdayReserved(item.id)}>\r\n                {item.name}\r\n              </Button>\r\n          )}\r\n        )\r\n        }\r\n      </div>\r\n  )\r\n\r\n  const handleDeleteVariant = () => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData];\r\n      const variants = newData[scheduleOpenIndex].variants;\r\n      variants.splice(variants.findIndex(variant => variant.elementId === variantId), 1)\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        {/*<Divider light/>*/}\r\n\r\n        {weekdayPicker}\r\n        <WorkingShift\r\n            enableLastAccommodation={enableLastAccommodation}\r\n            scheduleData={scheduleData}\r\n            scheduleOpenIndex={scheduleOpenIndex}\r\n            setScheduleData={setScheduleData}\r\n            variantId={variantId}/>\r\n        <div className={classes.removeButtonContainer}>\r\n          <Button\r\n              variant=\"text\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleDeleteVariant}\r\n              startIcon={<DeleteOutlineIcon/>}\r\n              style={{display: 'absolute'}}>Remove this variant</Button>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(WorkingHoursVariant)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport shortid from 'shortid';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    border: '1px dashed black',\r\n    padding: 8\r\n  },\r\n  weekdayPickerContainer: {\r\n    display: 'flex',\r\n    width: '100%',\r\n  },\r\n  weekdayButtonContainer: {\r\n    flex: 1,\r\n    // margin: 5,\r\n    padding: 0,\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    margin: 5,\r\n    padding: 0,\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n    width: '90%'\r\n  },\r\n  intervalContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n    margin: 0,\r\n    flexWrap: 'wrap',\r\n  },\r\n  pickerStyle: {\r\n    width: 35,\r\n    marginLeft: 3,\r\n    margin: 0,\r\n  },\r\n  pickerInput: {\r\n    fontSize: 13,\r\n    padding: 0,\r\n  },\r\n})\r\n\r\nexport const weekdays = [\r\n  {\r\n    id: 0,\r\n    name: \"Mon\",\r\n    fullName: \"Monday\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Tue\",\r\n    fullName: \"Tuesday\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Wed\",\r\n    fullName: \"Wednesday\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Thu\",\r\n    fullName: \"Thursday\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Fri\",\r\n    fullName: \"Friday\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Sat\",\r\n    fullName: \"Saturday\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Sun\",\r\n    fullName: \"Sunday\",\r\n  }\r\n]\r\n\r\nconst generateDefaultPeriod = () => {\r\n  return {\r\n    openTime: \"08:00\",\r\n    closeTime: \"18:00\",\r\n    elementId: shortid.generate()\r\n  }\r\n}\r\n\r\nfunction ScheduleWorkingHours({schedule, setSchedule, scheduleOpenIndex, classes}) {\r\n\r\n  const findPeriods = (dayIndex) => {\r\n    return schedule[scheduleOpenIndex].periods.filter(period => period.openDay === dayIndex)\r\n  }\r\n\r\n  const changeOpenTime = (elementId, time) => {\r\n    setSchedule(oldData => {\r\n      const newData = [...oldData]\r\n      newData[scheduleOpenIndex].periods.find(period => period.elementId === elementId).openTime = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n  const changeCloseTime = (elementId, time) => {\r\n    setSchedule(oldData => {\r\n      const newData = [...oldData]\r\n      newData[scheduleOpenIndex].periods.find(period => period.elementId === elementId).closeTime = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const determineGlobalCloseTime = () => {\r\n    if(schedule[scheduleOpenIndex].periods == null || schedule[scheduleOpenIndex].periods.length === 0)\r\n      return moment(\"08:00\", \"HH:mm\")\r\n    else\r\n      return moment(schedule[scheduleOpenIndex].periods[0].closeTime, \"HH:mm\")\r\n  }\r\n  const determineGlobalOpenTime = () => {\r\n    if(schedule[scheduleOpenIndex].periods == null || schedule[scheduleOpenIndex].periods.length === 0)\r\n      return moment(\"18:00\", \"HH:mm\")\r\n    else\r\n      return moment(schedule[scheduleOpenIndex].periods[0].openTime, \"HH:mm\")\r\n  }\r\n\r\n  const determineGlobalSplitScheduleCloseTime = () => {\r\n    for(let i = 0; i < 7; i++){\r\n      let periodsForThisDay =  schedule[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n      if (periodsForThisDay.length > 1)\r\n        return moment(periodsForThisDay[1].closeTime, \"HH:mm\")\r\n    }\r\n    return moment(\"18:00\", \"HH:mm\")\r\n  }\r\n  const determineGlobalSplitScheduleOpenTime = () => {\r\n    for(let i = 0; i < 7; i++){\r\n      let periodsForThisDay =  schedule[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n      if (periodsForThisDay.length > 1)\r\n        return moment(periodsForThisDay[1].openTime, \"HH:mm\")\r\n    }\r\n    return moment(\"13:00\", \"HH:mm\")\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <div className={classes.root}>\r\n          <div className={classes.weekdayPickerContainer}>\r\n            {weekdays.map((item, index) => {\r\n              const periods = findPeriods(index)\r\n              const splitSchedule = periods.length > 1\r\n\r\n              const toggleWorkday = () => {\r\n                if (periods.length > 0) {\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData]\r\n                    newData[scheduleOpenIndex].periods = newData[scheduleOpenIndex].periods.filter(period => period.openDay !== index)\r\n                    return newData\r\n                  })\r\n                } else {\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData]\r\n                    newData[scheduleOpenIndex].periods.push({...generateDefaultPeriod(), openDay: index})\r\n                    return newData\r\n                  })\r\n                }\r\n              }\r\n\r\n              const toggleSplitSchedule = () => {\r\n                if (splitSchedule)\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData];\r\n                    const periods = newData[scheduleOpenIndex].periods.filter(period => period.openDay === index)\r\n                    const lastperiod = periods.pop()\r\n                    newData[scheduleOpenIndex].periods = newData[scheduleOpenIndex].periods.filter(period => period.elementId != lastperiod.elementId)\r\n                    return newData;\r\n                  })\r\n                else\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData];\r\n                    newData[scheduleOpenIndex].periods.push({...generateDefaultPeriod(), openDay: index})\r\n                    return newData;\r\n                  })\r\n              }\r\n\r\n              return (\r\n                  <>\r\n                    <div className={classes.weekdayButtonContainer}>\r\n                      <Button variant={\"contained\"}\r\n                              color={periods.length !== 0 ? \"primary\" : \"secondary\"}\r\n                              className={classes.button}\r\n                              onClick={toggleWorkday}>\r\n                        {item.name}\r\n                      </Button>\r\n                      {periods.map((period) => {\r\n                        return <>\r\n                          <div className={classes.intervalContainer}>\r\n                            <TimePicker\r\n                                margin=\"normal\"\r\n                                ampm={false}\r\n                                className={classes.pickerStyle}\r\n                                format=\"HH:mm\"\r\n                                minutesStep={5}\r\n                                InputProps={{\r\n                                  classes: {\r\n                                    input: classes.pickerInput,\r\n                                  },\r\n                                }}\r\n                                value={moment(period.openTime, \"HH:mm\")}\r\n                                onChange={(time) => changeOpenTime(period.elementId, time)}\r\n                            />\r\n                            <Typography variant=\"h7\">\r\n                              -\r\n                            </Typography>\r\n                            <TimePicker\r\n                                margin=\"normal\"\r\n                                ampm={false}\r\n                                className={classes.pickerStyle}\r\n                                format=\"HH:mm\"\r\n                                minutesStep={5}\r\n                                InputProps={{\r\n                                  classes: {\r\n                                    input: classes.pickerInput,\r\n                                  },\r\n                                }}\r\n                                value={moment(period.closeTime, \"HH:mm\")}\r\n                                onChange={(time) => changeCloseTime(period.elementId, time)}\r\n                            />\r\n                          </div>\r\n                        </>\r\n                      })}\r\n                      {periods.length !== 0 && <FormControlLabel\r\n                          style={{width: '100%'}}\r\n                          control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                                checked={splitSchedule}\r\n                                onChange={toggleSplitSchedule}\r\n                            />\r\n                          }\r\n                          label={<span style={{fontSize: 13}}>Split</span>}\r\n                      />}\r\n\r\n                    </div>\r\n                    <Divider orientation=\"vertical\" flexItem/>\r\n                  </>\r\n              )\r\n            })}\r\n          </div>\r\n\r\n        </div>\r\n        <Typography variant=\"h7\">\r\n          Global time\r\n        </Typography>\r\n        <TimePicker\r\n            margin=\"normal\"\r\n            ampm={false}\r\n            format=\"HH:mm\"\r\n            className={classes.pickerStyle}\r\n            minutesStep={5}\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.pickerInput,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setSchedule(schedules => {\r\n                const newSchedules = [...schedules]\r\n                let newPeriods = []\r\n                for(let i = 0; i < 7; i++){\r\n                    let periodsForThisDay =  schedules[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n                    if (periodsForThisDay.length > 0){\r\n                      newPeriods.push({...periodsForThisDay[0], openTime: moment(e).format(\"HH:mm\")})\r\n                      if(periodsForThisDay.length > 1)\r\n                        newPeriods.push(periodsForThisDay[1])\r\n                    }\r\n                }\r\n                newSchedules[scheduleOpenIndex].periods = newPeriods\r\n                return newSchedules\r\n              })\r\n            }}\r\n            value={determineGlobalOpenTime()}\r\n        />\r\n        <Typography variant=\"h7\">\r\n          -\r\n        </Typography>\r\n        <TimePicker\r\n            margin=\"normal\"\r\n            ampm={false}\r\n            format=\"HH:mm\"\r\n            className={classes.pickerStyle}\r\n            minutesStep={5}\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.pickerInput,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setSchedule(schedules => {\r\n                const newSchedules = [...schedules]\r\n                let newPeriods = []\r\n                for(let i = 0; i < 7; i++){\r\n                  let periodsForThisDay =  schedules[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n                  if (periodsForThisDay.length > 0){\r\n                    newPeriods.push({...periodsForThisDay[0], closeTime: moment(e).format(\"HH:mm\")})\r\n                    if(periodsForThisDay.length > 1)\r\n                      newPeriods.push(periodsForThisDay[1])\r\n                  }\r\n                }\r\n                newSchedules[scheduleOpenIndex].periods = newPeriods\r\n                return newSchedules\r\n              })\r\n            }}\r\n            value={determineGlobalCloseTime()}\r\n        />\r\n\r\n        <br/>\r\n        <Typography variant=\"h7\">\r\n          Global split schedule time\r\n        </Typography>\r\n        <TimePicker\r\n            margin=\"normal\"\r\n            ampm={false}\r\n            format=\"HH:mm\"\r\n            className={classes.pickerStyle}\r\n            minutesStep={5}\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.pickerInput,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setSchedule(schedules => {\r\n                const newSchedules = [...schedules]\r\n                let newPeriods = []\r\n                for(let i = 0; i < 7; i++){\r\n                  let periodsForThisDay =  schedules[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n                  if (periodsForThisDay.length > 0){\r\n                    newPeriods.push(periodsForThisDay[0])\r\n                    if(periodsForThisDay.length > 1)\r\n                      newPeriods.push({...periodsForThisDay[1], openTime: moment(e).format(\"HH:mm\")})\r\n                  }\r\n                }\r\n                newSchedules[scheduleOpenIndex].periods = newPeriods\r\n                return newSchedules\r\n              })\r\n            }}\r\n            value={determineGlobalSplitScheduleOpenTime()}\r\n        />\r\n        <Typography variant=\"h7\">\r\n          -\r\n        </Typography>\r\n        <TimePicker\r\n            margin=\"normal\"\r\n            ampm={false}\r\n            format=\"HH:mm\"\r\n            className={classes.pickerStyle}\r\n            minutesStep={5}\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.pickerInput,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setSchedule(schedules => {\r\n                const newSchedules = [...schedules]\r\n                let newPeriods = []\r\n                for(let i = 0; i < 7; i++){\r\n                  let periodsForThisDay =  schedules[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n                  if (periodsForThisDay.length > 0){\r\n                    newPeriods.push(periodsForThisDay[0])\r\n                    if(periodsForThisDay.length > 1)\r\n                      newPeriods.push({...periodsForThisDay[1], closeTime: moment(e).format(\"HH:mm\")})\r\n                  }\r\n                }\r\n                newSchedules[scheduleOpenIndex].periods = newPeriods\r\n                return newSchedules\r\n              })\r\n            }}\r\n            value={determineGlobalSplitScheduleCloseTime()}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(ScheduleWorkingHours)\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {DatePicker, TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport WorkingHoursVariant, {weekdays} from \"./WorkingHoursVariant\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport shortid from 'shortid';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport ScheduleWorkingHours from \"./ScheduleWorkingHours\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    width: '100%',\r\n  },\r\n  scheduleDateContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    flexWrap: 'wrap',\r\n  },\r\n  pickerStyle: {\r\n    width: 100,\r\n    padding: 5,\r\n  }\r\n});\r\n\r\n\r\nfunction Schedule({classes, scheduleData, setScheduleData, scheduleOpenIndex, setScheduleOpenIndex, seasonalScheduleEnabled}) {\r\n\r\n  const currentSchedule = scheduleData[scheduleOpenIndex]\r\n\r\n  const changeFromDate = (date, value) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData];\r\n      newData[scheduleOpenIndex].from = moment(date).format('MM-DD');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const changeToDate = (date, value) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData];\r\n      newData[scheduleOpenIndex].to = moment(date).format('MM-DD');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const scheduleDateContainer = (\r\n      <div className={classes.scheduleDateContainer}>\r\n        <Typography variant=\"h8\">\r\n          This schedule applies from\r\n        </Typography>\r\n        <DatePicker\r\n            className={classes.pickerStyle}\r\n            views={[\"month\", \"date\"]}\r\n            // maxDate={currentSchedule.to}\r\n            value={moment(currentSchedule.from, \"MM-DD\")}\r\n            onChange={changeFromDate}\r\n        />\r\n        <Typography variant=\"h8\">\r\n          to\r\n        </Typography>\r\n        <DatePicker\r\n            className={classes.pickerStyle}\r\n            views={[\"month\", \"date\"]}\r\n            // minDate={currentSchedule.from}\r\n            value={moment(currentSchedule.to, \"MM-DD\")}\r\n            onChange={changeToDate}\r\n        />\r\n      </div>\r\n  )\r\n\r\n  const handleRemoveSchedule = () => {\r\n    setScheduleOpenIndex(index => {\r\n      setScheduleData(oldData => {\r\n        return  [...oldData].filter((item, i) => index !== i)\r\n      })\r\n      return index - 1;\r\n    })\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        {seasonalScheduleEnabled && scheduleDateContainer}\r\n        {scheduleOpenIndex !== 0 && <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={handleRemoveSchedule}\r\n            startIcon={<DeleteOutlineIcon/>}\r\n            style={{display: 'absolute'}}>Remove this schedule</Button>}\r\n\r\n        <ScheduleWorkingHours schedule={scheduleData} setSchedule={setScheduleData} scheduleOpenIndex={scheduleOpenIndex} />\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(Schedule)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Schedule from \"./Schedule\";\r\nimport moment from \"moment\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport shortid from 'shortid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start'\r\n  },\r\n  tabContainer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  tabsLayout: {\r\n    flex: 9,\r\n  },\r\n  addScheduleButtonContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'space-between'\r\n  }\r\n});\r\n\r\nexport const defaultScheduleData = [\r\n  {\r\n    from: \"01-25\",\r\n    to: \"02-20\",\r\n    periods: [\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 0,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 1,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 2,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 3,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 4,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"17:00\",\r\n        openDay: 5,\r\n        elementId: shortid.generate()\r\n      },\r\n    ],\r\n\r\n  }\r\n]\r\n\r\nfunction SchedulesContainer({classes, scheduleData, setScheduleData, scheduleOpenIndex, setScheduleOpenIndex, seasonalScheduleEnabled, setSeasonalScheduleEnabled, isScheduleEnabled, setIsScheduleEnabled, lastAccommodation, setLastAccommodation}) {\r\n\r\n  const handleAddSchedule = () => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      newData.push({\r\n        from: \"01-01\",\r\n        to: \"05-01\",\r\n        periods: [...defaultScheduleData[0].periods]\r\n      })\r\n      setScheduleOpenIndex(newData.length - 1)\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const tabsLayout = (\r\n      <div className={classes.tabContainer}>\r\n        <Tabs\r\n            value={scheduleOpenIndex}\r\n            onChange={(event, newValue) => setScheduleOpenIndex(newValue)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            className={classes.tabsLayout}\r\n        >\r\n          {\r\n            scheduleData.map((item, index) =>\r\n                <Tab onClick={() => setScheduleOpenIndex(index)}\r\n                     label={`${moment(item.from, \"MM-DD\").format(\"MMMM \")}-${moment(item.to, \"MM-DD\").format(\"MMMM \")}`}/>\r\n            )\r\n          }\r\n        </Tabs>\r\n        <div className={classes.addScheduleButtonContainer}>\r\n          <IconButton\r\n              onClick={handleAddSchedule}\r\n              variant=\"text\"\r\n              color=\"secondary\"\r\n              size=\"large\">\r\n            <AddIcon/>\r\n          </IconButton>\r\n        </div>\r\n\r\n      </div>\r\n  )\r\n\r\n  const handleToggleSeasonalSchedule = () => {\r\n    const enabled = !seasonalScheduleEnabled\r\n    setSeasonalScheduleEnabled(() => {\r\n      setScheduleOpenIndex(0)\r\n      return enabled\r\n    })\r\n    if(enabled){\r\n      setScheduleData(schedule => {\r\n        return [...schedule].map(item => {\r\n          return {\r\n            ...item,\r\n            from: \"01-01\",\r\n            to: \"02-01\"\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleEnableLastAccommodation = () => {\r\n    let accommodationTimeEnabled = lastAccommodation != null;\r\n    setLastAccommodation(accommodationTimeEnabled ? null : 30)\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <div className={classes.header}>\r\n          <Typography variant=\"h6\">\r\n            Working hours\r\n          </Typography>\r\n\r\n          <FormControlLabel\r\n              control={\r\n                <Switch\r\n                    checked={isScheduleEnabled}\r\n                    onChange={() => setIsScheduleEnabled(state => !state)}\r\n                    color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Enable schedule for this place?\"\r\n          />\r\n        </div>\r\n\r\n\r\n        { isScheduleEnabled &&\r\n        <>\r\n        <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                  checked={seasonalScheduleEnabled}\r\n                  onChange={handleToggleSeasonalSchedule}\r\n                  name=\"checkedB\"\r\n                  color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Enable seasonal schedule\"\r\n        />\r\n          <FormControlLabel\r\n          control={\r\n          <Checkbox\r\n              name=\"checkedB\"\r\n              color=\"primary\"\r\n              checked={lastAccommodation != null}\r\n              onChange={handleEnableLastAccommodation}\r\n          />\r\n        }\r\n          label=\"Specify last accommodation times\"\r\n          />\r\n          {lastAccommodation != null &&\r\n          <>\r\n            {/*<Typography variant=\"h8\">*/}\r\n            {/*  Minutes before close time*/}\r\n            {/*</Typography>*/}\r\n            <TextField\r\n                id=\"standard-number\"\r\n                label=\"Minutes to closing time\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                value={lastAccommodation}\r\n                onChange={(e) => setLastAccommodation(e.target.value)}\r\n            />\r\n          </>\r\n          }\r\n\r\n        {seasonalScheduleEnabled && tabsLayout}\r\n\r\n          <Schedule scheduleData={scheduleData}\r\n          seasonalScheduleEnabled={seasonalScheduleEnabled}\r\n          setScheduleData={setScheduleData} scheduleOpenIndex={scheduleOpenIndex} setScheduleOpenIndex={setScheduleOpenIndex}/>\r\n          </>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(SchedulesContainer)\r\n\r\n\r\n","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Paper} from '@material-ui/core';\r\nimport shortid from 'shortid';\r\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\r\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\r\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\r\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\r\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Reviews from \"../components/add_place_components/Reviews\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport RecommendationListDialog from \"../components/recomendation/RecommendationListDialog\";\r\nimport {RecommendationType} from \"../components/recomendation/Recommendation\";\r\nimport SchedulesContainer, {defaultScheduleData} from \"../components/schedule_components/SchedulesContainer\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  paperContent: {\r\n    marginTop: theme.spacing(4),\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      width: \"95%\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"70%\",\r\n      padding: theme.spacing(4),\r\n    },\r\n  },\r\n  root: {\r\n    height: \"100vh\",\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      height: \"100%\",\r\n    },\r\n  },\r\n  loader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100vw\",\r\n    height: \"100vh\"\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    height: `calc(93vh - 64px)`,\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      width: \"100%\",\r\n      padding: theme.spacing(1),\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"auto\",\r\n      padding: theme.spacing(8),\r\n    },\r\n    overflowY: \"auto\"\r\n  },\r\n  bottom: {\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      position: \"fixed\",\r\n      height: \"7vh\",\r\n      bottom: 0,\r\n      right: 0,\r\n    },\r\n    width: \"100%\",\r\n    zIndex: 5,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    padding: theme.spacing(1),\r\n  }\r\n});\r\n\r\n\r\nfunction AddPlace({classes, match}) {\r\n  const [placeInfo, setPlaceInfo] = useState({\r\n    placeId: \"\",\r\n    name: \"\", description: \"\", website: \"\", phoneNumber: \"\",\r\n    isPublic: false, isVerified: true, overallStarRating: 0, totalReviews: 0,\r\n    source: \"\", price: \"\", averageTimeSpent: \"0\", grade: 50\r\n  });\r\n\r\n\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n  const [scheduleData, setScheduleData] = useState(defaultScheduleData);\r\n  const [scheduleOpenIndex, setScheduleOpenIndex] = useState(0);\r\n  const [seasonalScheduleEnabled, setSeasonalScheduleEnabled] = useState(false);\r\n  const [lastAccommodation, setLastAccommodation] = useState(null);\r\n\r\n  const [photos, setPhotos] = useState([]);\r\n\r\n  const [locationData, setLocationData] = useState({\r\n    city: '',\r\n    address: '',\r\n    country: '',\r\n    latitude: 54.687157,\r\n    longitude: 25.279652,\r\n    county: '',\r\n    municipality: ''\r\n  });\r\n  const [parkingMarkerData, setParkingMarkerData] = useState({\r\n    city: '',\r\n    address: '',\r\n    country: '',\r\n    latitude: 54.687157,\r\n    longitude: 25.279652,\r\n    county: '',\r\n    municipality: ''\r\n  });\r\n  const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\r\n\r\n  const [sources, setSources] = useState([]);\r\n\r\n  const [isScheduleEnabled, setIsScheduleEnabled] = useState(false);\r\n\r\n  const [placeId, setPlaceId] = useState(match.params.placeId);\r\n\r\n  const [firstTimeLoading, setFirstTimeLoading] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [error, setError] = useState({name: false});\r\n  const [checkErrors, setCheckErrors] = useState(false);\r\n\r\n  const [showRecommendationDialog, setShowRecommendationDialog] = useState(false)\r\n\r\n  const {addConfig} = UseSnackbarContext();\r\n  const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n  const {title, setTitle} = UseAppBarTitleContext();\r\n\r\n  const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      color: \"white\",\r\n      backgroundColor: green[500],\r\n      '&:hover': {\r\n        backgroundColor: green[700],\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  useEffect(() => {\r\n    if (placeId !== undefined) {\r\n      getPlaceInfo()\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //Loaded place for editing\r\n    if (placeId === undefined) {\r\n      setTitle(\"Add new place\");\r\n      setFirstTimeLoading(false) //Just loaded add place window\r\n    }\r\n    //New Place has been just inserted, thus inserting other place info\r\n    if (placeId !== undefined && firstTimeLoading === false) {\r\n      Promise.all([\r\n        updateTagsData(placeId),\r\n        updateParkingData(placeId),\r\n        updateCategoriesData(placeId),\r\n        updatePhotoData(placeId),\r\n        updateSchedule(placeId),\r\n        updateSources(placeId)\r\n      ]).then(responses => {\r\n        formFeedback(true, Strings.SNACKBAR_PLACE_INSERTED_SUCCESS)\r\n      }).catch(error => {\r\n        formFeedback(false)\r\n      })\r\n    }\r\n\r\n  }, [placeId]);\r\n\r\n  useEffect(() => {\r\n    if (firstTimeLoading === false) {\r\n      updateAll()\r\n    }\r\n  }, [placeInfo['isPublic']]);\r\n\r\n  function addToRecommendation() {\r\n    setShowRecommendationDialog(true)\r\n  }\r\n\r\n  function getPlaceInfo() {\r\n    API.Places.getPlaceById(\"?full=true&p=\" + placeId).then(response => {\r\n      setAllData(response)\r\n      setTitle(\"Editing place/\" + response.name);\r\n    }).catch(error => {\r\n      formFeedback(false)\r\n    })\r\n  }\r\n\r\n  const parseScheduleData = (data) => {\r\n\r\n    data.some(schedule => {\r\n      return schedule.periods.some(period => {\r\n        if (period.lastAccommodation != null) {\r\n          setLastAccommodation(moment(period.lastAccommodation, 'HH:mm').minutes() - moment(period.closeTime, 'HH:mm').minutes())\r\n          return true\r\n        }\r\n        return false\r\n      })\r\n    })\r\n\r\n    if (data.length > 1 || data.some(schedule => schedule.from != null && schedule.to != null))\r\n      setSeasonalScheduleEnabled(true)\r\n\r\n    return (data.map(schedule => {\r\n      const newData = {...schedule}\r\n      newData.periods = newData.periods.map(period => {\r\n        const newPeriod = {...period}\r\n        newPeriod.elementId = shortid.generate()\r\n        return newPeriod\r\n      })\r\n      return newData\r\n    }))\r\n  }\r\n\r\n  const convertSchedule = (data) => {\r\n    return (data.map(schedule => {\r\n      const newSchedule = {...schedule}\r\n      if (!seasonalScheduleEnabled) {\r\n        delete newSchedule.from;\r\n        delete newSchedule.to;\r\n      }\r\n      newSchedule.periods = newSchedule.periods.map(period => {\r\n        const newPeriod = {...period}\r\n        if (lastAccommodation != null)\r\n          newPeriod.lastAccommodation = moment(newPeriod.closeTime, 'HH:mm').subtract(lastAccommodation, 'minutes').format('HH:mm')\r\n        newPeriod.closeDay = newPeriod.openDay\r\n        return newPeriod\r\n      })\r\n\r\n      newSchedule.scheduleDefault = false;\r\n      console.log(newSchedule)\r\n      return newSchedule\r\n    }))\r\n  }\r\n\r\n  function setAllData(place) {\r\n    setPlaceInfo({\r\n      placeId: place.placeId,\r\n      name: place.name,\r\n      description: place.description,\r\n      website: place.website,\r\n      phoneNumber: place.phoneNumber,\r\n      hasSchedule: place.hasSchedule,\r\n      isPublic: place.isPublic,\r\n      isVerified: place.isVerified,\r\n      overallStarRating: place.overallStarRating,\r\n      totalReviews: place.totalReviews,\r\n      price: place.price,\r\n      averageTimeSpent: place.averageTimeSpent,\r\n      bookInAdvance: place.bookInAdvance,\r\n      grade: place.grade\r\n    });\r\n\r\n    setLocationData({\r\n      city: place.city,\r\n      address: place.address,\r\n      country: place.country,\r\n      latitude: place.latitude,\r\n      longitude: place.longitude,\r\n      county: place.county,\r\n      municipality: place.municipality,\r\n    });\r\n\r\n    setParkingMarkerData({\r\n      city: place.city,\r\n      address: place.address,\r\n      country: place.country,\r\n      latitude: place.latitude,\r\n      longitude: place.longitude,\r\n      county: place.county,\r\n      municipality: place.municipality,\r\n    });\r\n\r\n    setScheduleData(place.schedule.length === 0 ? defaultScheduleData : parseScheduleData(place.schedule))\r\n    if (place.schedule.length === 0)\r\n      setIsScheduleEnabled(false)\r\n    else\r\n      setIsScheduleEnabled(true)\r\n\r\n    setSources(place.sources);\r\n    setSelectedTags(place.tags);\r\n    setSelectedCategories(place.categories);\r\n\r\n    setAllSelectedParkingData(place.parking);\r\n    setPhotos(place.photos);\r\n    setFirstTimeLoading(false)\r\n  }\r\n\r\n  function formFeedback(success, message = Strings.SNACKBAR_ERROR) {\r\n    addConfig(success, message);\r\n    setIsLoading(false)\r\n  }\r\n\r\n  function saveChanges() {\r\n    if (placeId === undefined) {\r\n      addAlertConfig(Strings.DIALOG_PLACE_INSERT_TITLE, Strings.DIALOG_PLACE_INSERT, [{\r\n        name: \"Insert\", action: () => {\r\n          setIsLoading(true);\r\n          insertBasicPlaceInfo()\r\n        }\r\n      }])\r\n    } else {\r\n      addAlertConfig(Strings.DIALOG_PLACE_UPDATE_TITLE, Strings.DIALOG_PLACE_UPDATE, [{\r\n        name: \"save and publish\", action: () => {\r\n          let plc = Object.assign({}, placeInfo, {});\r\n          plc.isPublic = 1;\r\n          setPlaceInfo(plc);\r\n          setIsLoading(true);\r\n          updateAll()\r\n        }\r\n      }, {\r\n        name: \"save\", action: () => {\r\n          setIsLoading(true);\r\n          updateAll()\r\n        }\r\n      }])\r\n    }\r\n  }\r\n\r\n  function updateAll() {\r\n    Promise.all([\r\n      updatePlaceInfo(),\r\n      updateTagsData(placeId),\r\n      updatePhotoData(placeId),\r\n      updateCategoriesData(placeId),\r\n      updateParkingData(placeId),\r\n      updateSchedule(placeId),\r\n      updateSources(placeId)\r\n    ]).then(response => {\r\n      formFeedback(true, Strings.SNACKBAR_CHANGES_SAVED);\r\n    }).catch(err => {\r\n      formFeedback(false)\r\n    })\r\n  }\r\n\r\n  function updatePlaceInfo() {\r\n    API.Places.updatePlace(formPlaceInfo()).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n\r\n  }\r\n\r\n  function insertBasicPlaceInfo() {\r\n    API.Places.insertPlace(formPlaceInfo()).then(placeId => {\r\n      setPlaceId(placeId)\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updateParkingData(id) {\r\n    API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updateTagsData(id) {\r\n    API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updateSources(id) {\r\n    API.SourcePlace.updateSourcesForPlace(sources, \"?p=\" + id).then(response => {\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n\r\n  function updateCategoriesData(id) {\r\n    API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updatePhotoData(id) {\r\n    API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n\r\n  function updateSchedule(id) {\r\n    API.Schedule.updateScheduleForPlace(isScheduleEnabled ? convertSchedule(scheduleData) : [], \"?id=\" + id).then(response => {\r\n    }).catch(er => {\r\n    })\r\n\r\n  }\r\n\r\n  function formPlaceInfo() {\r\n    let d = Object.assign(placeInfo, locationData);\r\n    return d\r\n  }\r\n\r\n\r\n  function publishPlace() {\r\n    addAlertConfig(Strings.DIALOG_PLACE_PUBLISH_TITLE, placeInfo['isPublic'] ? Strings.DIALOG_PLACE_UNPUBLISH_MESSAGE : Strings.DIALOG_PLACE_PUBLISH_MESSAGE,\r\n        [{\r\n          name: \"Agree\", action: () => {\r\n            let obj = Object.assign({}, placeInfo, {});\r\n            obj['isPublic'] = !obj['isPublic'];\r\n            setPlaceInfo(obj);\r\n          }\r\n        }])\r\n\r\n  }\r\n\r\n  function verifyPlace() {\r\n    addAlertConfig(Strings.DIALOG_PLACE_VERIFY_TITLE, Strings.DIALOG_PLACE_VERIFY_MESSAGE, [{\r\n      name: \"agree\", action: () => {\r\n        let obj = Object.assign({}, placeInfo, {});\r\n        obj['isPublic'] = 1;\r\n        obj['isVerified'] = 1;\r\n        setPlaceInfo(obj);\r\n      }\r\n    }])\r\n  }\r\n\r\n  const basicPlaceInfo = useMemo(() => {\r\n    return <Paper elevation={4} className={classes.paperContent}>\r\n      <BasicPlaceInfo\r\n          error={error}\r\n          setError={setError}\r\n          checkErrors={checkErrors}\r\n          placeInfo={placeInfo}\r\n          setPlaceInfo={setPlaceInfo}\r\n          selectedSources={sources}\r\n          setSelectedSources={setSources}\r\n      />\r\n    </Paper>\r\n  }, [placeInfo.name,\r\n    placeInfo.description,\r\n    placeInfo.averageTimeSpent,\r\n    placeInfo.phoneNumber,\r\n    placeInfo.price,\r\n    placeInfo.website,\r\n      placeInfo.bookInAdvance,\r\n    sources\r\n  ])\r\n\r\n  const placePhotos = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <PhotosInfo\r\n              photos={photos}\r\n              setPhotos={setPhotos}\r\n          />\r\n        </Paper>\r\n    )\r\n  }, [photos])\r\n\r\n  const placeLocation = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <PlaceLocation\r\n              placeInfo={placeInfo}\r\n              locationData={locationData}\r\n              setParkingLocation={setParkingMarkerData}\r\n              setLocationData={setLocationData}/>\r\n        </Paper>\r\n    )\r\n  }, [locationData])\r\n\r\n  const parkingLocation = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <ParkingLocation\r\n              placeInfo={placeInfo}\r\n              allSelectedParkingData={allSelectedParkingData}\r\n              setAllSelectedParkingData={setAllSelectedParkingData}\r\n              locationData={parkingMarkerData}\r\n              setLocationData={setParkingMarkerData}/>\r\n        </Paper>\r\n    )\r\n  }, [allSelectedParkingData, parkingMarkerData])\r\n\r\n  const placeDiscovery = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <PlaceDiscovery\r\n              placeInfo={placeInfo}\r\n              setPlaceInfo={setPlaceInfo}\r\n              selectedTags={selectedTags}\r\n              setSelectedTags={setSelectedTags}\r\n              selectedCategories={selectedCategories}\r\n              setSelectedCategories={setSelectedCategories}/>\r\n        </Paper>\r\n    )\r\n  }, [selectedCategories, selectedTags, placeInfo])\r\n\r\n\r\n  const scheduleContainer = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          {<SchedulesContainer scheduleData={scheduleData} setScheduleData={setScheduleData}\r\n                               scheduleOpenIndex={scheduleOpenIndex}\r\n                               setScheduleOpenIndex={setScheduleOpenIndex}\r\n                               seasonalScheduleEnabled={seasonalScheduleEnabled}\r\n                               setSeasonalScheduleEnabled={setSeasonalScheduleEnabled}\r\n                               setLastAccommodation={setLastAccommodation}\r\n                               isScheduleEnabled={isScheduleEnabled}\r\n                               setIsScheduleEnabled={setIsScheduleEnabled}\r\n                               lastAccommodation={lastAccommodation}/>}\r\n        </Paper>\r\n    )\r\n  }, [scheduleData, scheduleOpenIndex, lastAccommodation, seasonalScheduleEnabled, isScheduleEnabled])\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n\r\n        {firstTimeLoading ? <div className={classes.loader}><CircularProgress/></div> :\r\n            <div className={classes.content}>\r\n\r\n              {basicPlaceInfo}\r\n\r\n              {placeId !== undefined ?\r\n                  <Paper elevation={4} className={classes.paperContent}>\r\n                    <Reviews\r\n                        placeInfo={placeInfo}\r\n                    />\r\n                  </Paper>\r\n                  : null}\r\n\r\n              {placePhotos}\r\n              {placeLocation}\r\n              {parkingLocation}\r\n              {placeDiscovery}\r\n              {scheduleContainer}\r\n            </div>}\r\n\r\n\r\n        {isLoading ? <LinearProgress/> : null}\r\n\r\n        <Paper elevation={1} className={classes.bottom}>\r\n\r\n          {\r\n            placeInfo['isVerified'] === false && placeId !== undefined ?\r\n                <ColorButton\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      verifyPlace()\r\n                    }}\r\n                    className={classes.button}\r\n                >\r\n                  Verify place\r\n                </ColorButton>\r\n                :\r\n                <FormControlLabel\r\n                    control={<Switch checked={placeInfo['isPublic']} onChange={() => {\r\n                      publishPlace()\r\n                    }\r\n                    } name=\"isPublic\"/>}\r\n                    label=\"Make this place public\"\r\n                />}\r\n          <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => saveChanges()}\r\n              className={classes.button}>\r\n            Save\r\n          </Button>\r\n\r\n          {placeId != null ?\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => addToRecommendation()}\r\n                  className={classes.button}>\r\n                Add to recommendation\r\n              </Button> : null\r\n          }\r\n\r\n\r\n          <RecommendationListDialog\r\n              open={showRecommendationDialog}\r\n              setOpen={setShowRecommendationDialog}\r\n              objectId={placeInfo.placeId}\r\n              type={RecommendationType.place}\r\n          />\r\n\r\n        </Paper>\r\n      </div>)\r\n\r\n}\r\n\r\nAddPlace.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AddPlace)\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport {debounce} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: theme.spacing(2)\r\n        // width: 400,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    divider: {\r\n        // height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function SearchInputComponent({hint, searchCallback}) {\r\n    const classes = useStyles();\r\n\r\n    const debouncedInput = (event) => {\r\n        searchCallback(event.target.value)\r\n    }\r\n\r\n    const debounceInput = debounce(event => debouncedInput(event), 500)\r\n\r\n    const handleInput = (event) => {\r\n        event.persist()\r\n        debounceInput(event)\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder={hint}\r\n                inputProps={{ 'aria-label': hint }}\r\n                onChange={handleInput}\r\n            />\r\n            <IconButton className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n        </Paper>\r\n    );\r\n}","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\"\r\nimport ApiPlaceCard from \"../components/ApiPlaceCard\";\r\nimport API from \"../Networking/API\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Masonry from \"react-masonry-component\";\r\nimport SearchInputComponent from \"../components/SearchInputComponent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        overflow: 'scroll',\r\n        width: \"100%\",\r\n        padding: theme.spacing(1),\r\n        height:`calc(100vh - 64px)`,\r\n        paddingTop: \"9vh\",\r\n    },\r\n    topBar: {\r\n        height: \"8vh\",\r\n        position: \"absolute\",\r\n        width: \"60%\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        left: 0,\r\n        right: 0,\r\n        justifyContent: \"center\",\r\n        zIndex: 1\r\n    },\r\n    searchBox: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    placeApiCard: {\r\n        [theme.breakpoints.down('lg')]: {\r\n            width: \"95%\",\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: \"28vw\",\r\n        },\r\n        // minWidth: \"400px\",\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nfunction ApiPlaces({classes}){\r\n\r\n    const [data, setData] = useState([]);\r\n    const [isLoadingData, setIsLoadingData] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const loadDataFunc = (query) => {\r\n        setData([])\r\n        setIsLoadingData(true)\r\n        API.Places.searchApiPlaces(\"?keyword=\" + encodeURI(query)).then(response => {\r\n            setData([...response])\r\n        }).catch(error => {\r\n            addConfig(false, \"The request did not go through.\")\r\n        }).finally(() => {\r\n            setIsLoadingData(false)\r\n        })\r\n    }\r\n\r\n    const handleSearch = (word) => {\r\n        if(word.length > 3)\r\n            loadDataFunc(word)\r\n    }\r\n\r\n    return(\r\n        <div style={{position: \"relative\"}}>\r\n            <div className = {classes.topBar}>\r\n                <SearchInputComponent searchCallback={handleSearch} hint=\"Search api places\" style={classes.searchBox} />\r\n            </div>\r\n\r\n            <div className={classes.root}>\r\n                <Masonry\r\n                    style={{margin: \"0 auto\"}}\r\n                    elementType={'div'} // default 'div'\r\n                    options={{\r\n                        isFitWidth: true\r\n                    }} // default {}\r\n                    disableImagesLoaded={false} // default false\r\n                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\r\n                >\r\n\r\n                    {data.map(item => {\r\n                        return <ApiPlaceCard classes ={{ root: classes.placeApiCard}} key={item.placeId} placeData = {item} style={{boxSizing: 'border-box'}}/>\r\n                    })}\r\n\r\n                    {\r\n                        data.length === 0 && !isLoadingData &&\r\n                        <Typography variant=\"subtitle1\">No results</Typography>\r\n                    }\r\n                    {\r\n                        isLoadingData &&\r\n                        <CircularProgress  />\r\n                    }\r\n\r\n                </Masonry>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ApiPlaces)","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {'Copyright © '}\r\n            Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: '100vh',\r\n    },\r\n    main: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: 'auto',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n    },\r\n}));\r\n\r\nexport default function NotFoundPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\r\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\r\n                    Page not found\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    {'Try something else'}\r\n                </Typography>\r\n            </Container>\r\n            <footer className={classes.footer}>\r\n                <Container maxWidth=\"sm\">\r\n                    <Copyright />\r\n                </Container>\r\n            </footer>\r\n        </div>\r\n    );\r\n}","import React, { useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MetroIcon from '@material-ui/icons/DirectionsTransit';\r\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\r\nimport CarIcon from '@material-ui/icons/DriveEta';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\nimport FlightIcon from '@material-ui/icons/Flight';\r\nimport TramIcon from '@material-ui/icons/Tram';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\"\r\n    },\r\n    transportSelectWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    transportSelect: {\r\n        marginLeft: theme.spacing(1),\r\n        width: \"100px\"\r\n    }\r\n});\r\n\r\nconst transportTypes = [\r\n    {\r\n        icon: <MetroIcon/>,\r\n        label: \"Metro\"\r\n    },\r\n    {\r\n        icon: <DirectionsBikeIcon/>,\r\n        label: \"Bike\"\r\n    },\r\n    {\r\n        icon: <DirectionsBusIcon/>,\r\n        label: \"Bus\"\r\n    },\r\n    {\r\n        icon: <CarIcon/>,\r\n        label: \"Car\"\r\n    },\r\n    {\r\n        icon: <TrainIcon/>,\r\n        label: \"Train\"\r\n    },\r\n    {\r\n        icon: <FlightIcon/>,\r\n        label: \"Plane\"\r\n    },\r\n    {\r\n        icon: <DirectionsWalkIcon/>,\r\n        label: \"Walk\"\r\n    },\r\n    {\r\n        icon: <TramIcon/>,\r\n        label: \"Tram\"\r\n    }\r\n]\r\n\r\nfunction TransportItem({classes, transportId, transportChangeCallback}) {\r\n\r\n    const [currentTransport, setCurrentTransport] = useState(transportId == null ? 0 : transportId)\r\n\r\n    const handleTransportChange = (e) => {\r\n        setCurrentTransport(e.target.value)\r\n        transportChangeCallback({transport: parseInt(e.target.value)})\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MoreVertIcon/>\r\n            <div className={classes.transportSelectWrapper}>\r\n                {transportTypes[currentTransport].icon}\r\n                <FormControl className={classes.transportSelect} >\r\n                    <NativeSelect\r\n                        value={currentTransport}\r\n                        onChange={handleTransportChange}\r\n                    >\r\n                        {transportTypes.map((item, index) => {\r\n                            return <option key={index} value={index}> {item.label}</option>\r\n                        })}\r\n                    </NativeSelect>\r\n                </FormControl>\r\n                {/*<Typography variant=\"subtitle2\" style={{flex: 1, display: 'flex', alignItems: 'flex-end', justifyContent: 'flex-end'}}>*/}\r\n                {/*    Estimated 15 min | 4km*/}\r\n                {/*</Typography>*/}\r\n            </div>\r\n            <MoreVertIcon/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TransportItem)","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport TransportItem from \"./TransportItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n  cardRoot: {\r\n    [theme.breakpoints.only(\"lg\")]: {\r\n      display: 'flex',\r\n      // alignItems: \"flex-start\"\r\n    },\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 5\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      height: \"200px\",\r\n    },\r\n    [theme.breakpoints.only(\"lg\")]: {\r\n      flex: 1,\r\n      height: \"auto\",\r\n    },\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexFlow: \"column wrap\"\r\n  },\r\n  addParkingWrapper: {\r\n    display: \"inline-block\"\r\n  }\r\n})\r\n\r\n\r\nfunction TourPlaceComponent({classes, elementData, removeCallback, tourInfoReducer, currentDay, elementIndex, lastElement, handleEditPlace}) {\r\n\r\n  function truncateText(text) {\r\n    if (text == null)\r\n      return \"\"\r\n    if (text.length > 500) {\r\n      return text.substring(0, 500) + \"...\";\r\n    } else {\r\n      return text\r\n    }\r\n  }\r\n\r\n  const handleRemoveTransport = () => {\r\n\r\n  }\r\n\r\n  const handleChangeTransport = ({transport}) => {\r\n    tourInfoReducer({\r\n      type: 'UPDATE_ELEMENT',\r\n      day: currentDay,\r\n      index: elementIndex,\r\n      data: {\r\n        ...elementData,\r\n        transport: {\r\n          fk_transportId: transport\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleAddTransport = () => {\r\n    tourInfoReducer({\r\n      type: 'UPDATE_ELEMENT',\r\n      day: currentDay,\r\n      index: elementIndex,\r\n      data: {\r\n        ...elementData,\r\n        transport: {\r\n          fk_transportId: 1\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <Card className={classes.cardRoot} onClick={() => handleEditPlace(elementData.data.details.placeId)}>\r\n\r\n          {elementData.data.details.photos != null && elementData.data.details.photos.length > 0 &&\r\n          <CardMedia\r\n              className={classes.cover}\r\n              image={elementData.data.details.photos[0].url}\r\n\r\n          />\r\n          }\r\n\r\n          <div className={classes.details}>\r\n            <CardContent className={classes.content}>\r\n              <Typography component=\"h5\" variant=\"h5\">\r\n                {elementData.data.details.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                {truncateText(elementData.data.details.description)}\r\n              </Typography>\r\n            </CardContent>\r\n          </div>\r\n          <CardHeader\r\n              onClick={e => {e.stopPropagation(); e.preventDefault()}}\r\n              action={\r\n                <IconButton aria-label=\"remove\" onClick={() => removeCallback(elementData)}>\r\n                  <RemoveIcon/>\r\n                </IconButton>\r\n              }\r\n          />\r\n        </Card>\r\n\r\n        <TextField\r\n            className={classes.descriptionInput}\r\n            multiline\r\n            value={elementData.data.note}\r\n            label=\"Add a note\"\r\n            style={{marginTop: 10, marginBottom: 5}}\r\n            variant=\"outlined\"\r\n            onChange={(e) => {\r\n              tourInfoReducer({\r\n                type: 'UPDATE_ELEMENT',\r\n                day: currentDay,\r\n                index: elementIndex,\r\n                data: {\r\n                  ...elementData,\r\n                  note: e.target.value\r\n                }\r\n              })\r\n            }}\r\n        />\r\n\r\n        {elementData.data.transport != null && !lastElement &&\r\n        <TransportItem transportChangeCallback={handleChangeTransport}\r\n                       transportId={elementData.data.transport.fk_transportId}/>}\r\n\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nTourPlaceComponent.propTypes = {\r\n  elementData: PropTypes.object.isRequired,\r\n  removeCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourPlaceComponent)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport TourPlaceComponent from \"./TourPlaceComponent\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ElementType} from \"./Tour\";\r\nimport { SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport TransportItem from \"./TransportItem\";\r\nimport shortid from 'shortid';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst styles = theme => ({\r\n    tourPlaceComponent: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\",\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst TourPlaceSortable = SortableElement(({handleEditPlace, currentDay, elementData, removePlaceCallback, classes, tourInfoReducer, elementIndex, lastElement}) => (\r\n    <div>\r\n        <TourPlaceComponent removeCallback={removePlaceCallback} classes={{root: classes.tourPlaceComponent}}\r\n                            elementData={elementData}\r\n                            tourInfoReducer={tourInfoReducer}\r\n                            elementIndex={elementIndex}\r\n                            currentDay={currentDay}\r\n                            handleEditPlace={handleEditPlace}\r\n                            lastElement={lastElement}/>\r\n    </div>\r\n));\r\n\r\nconst SortableList = SortableContainer(({handleEditPlace, currentDay, removeElementCallback, tourInfo, classes, tourInfoReducer}) => {\r\n\r\n    return (\r\n\r\n        <ul>\r\n            {tourInfo.days[currentDay].tour.map((item, index) => {\r\n\r\n                switch (item.type) {\r\n                    case ElementType.place:\r\n                        return <TourPlaceSortable key={item.data.details.placeId} elementIndex={index}\r\n                                                  elementData={item}\r\n                                                  lastElement={index === tourInfo.days[currentDay].tour.length - 1}\r\n                                                  index={index}\r\n                                                  classes={classes}\r\n                                                  currentDay={currentDay}\r\n                                                  handleEditPlace={handleEditPlace}\r\n                                                  tourInfoReducer={tourInfoReducer}\r\n                                                  removePlaceCallback={() => removeElementCallback(index)}/>\r\n                }\r\n            })}\r\n        </ul>\r\n    )\r\n});\r\n\r\nfunction TourPlacesWrapper({classes, tourInfo, tourInfoReducer, currentDay, errorInfo, setErrorInfo, handleEditPlace}) {\r\n\r\n    const removeElementCallback = (index) => {\r\n        tourInfoReducer({\r\n            type: 'REMOVE_ELEMENT',\r\n            day: currentDay,\r\n            index: index\r\n        })\r\n    };\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        tourInfoReducer({\r\n            type: 'MOVE_ELEMENT',\r\n            day: currentDay,\r\n            oldIndex: oldIndex,\r\n            newIndex: newIndex\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {tourInfo.days[currentDay].tour.length === 0 &&\r\n            <Alert severity=\"warning\">You have not added any places for the currently selected day.</Alert>}\r\n            <SortableList\r\n                pressDelay={200}\r\n                disableAutoscroll={false}\r\n                tourInfoReducer={tourInfoReducer}\r\n                tourInfo={tourInfo}\r\n                onSortEnd={onSortEnd}\r\n                handleEditPlace={handleEditPlace}\r\n                currentDay={currentDay}\r\n                classes={classes}\r\n                removeElementCallback={removeElementCallback}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nTourPlacesWrapper.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourPlacesWrapper)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport SearchInputComponent from \"../SearchInputComponent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\nimport DnsIcon from \"@material-ui/icons/Dns\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport API from \"../../Networking/API\";\r\n\r\nconst styles = theme => ({\r\n    searchInputComponent: {\r\n\r\n    },\r\n    placeCard: {\r\n        margin: theme.spacing(1, 8, 1, 8),\r\n    },\r\n})\r\n\r\n\r\nfunction PlaceSearch({classes, addPlaceCallback, apiPlacesFound, setApiPlacesFound, localPlacesFound, setLocalPlacesFound}) {\r\n\r\n    // const [apiPlacesLoading, setApiPlacesLoading] = useState(false)\r\n    const [localPlacesLoading, setLocalPlacesLoading] = useState(false)\r\n\r\n    const placeType = {\r\n        local: 0,\r\n        api: 1\r\n    }\r\n\r\n    const generatePlaceCards = () => {\r\n        let genProps = (placeInfo, type) => {\r\n            return {\r\n                classes: {root: classes.placeCard},\r\n                key: placeInfo.placeId,\r\n                renderActionArea: () => {\r\n                    return (\r\n                        <div>\r\n                            <Button color=\"primary\" onClick={() => addPlaceCallback(placeInfo, type)}>\r\n                                <AddIcon/>\r\n                            </Button>\r\n                            <Tooltip title={type === placeType.local ? \"This place is from our database\" : \"This place is from API\"} aria-label=\"add\">\r\n                                {type === placeType.local ? <LocalLibraryIcon/> : <DnsIcon/>}\r\n                            </Tooltip>\r\n                        </div>\r\n                    )\r\n                },\r\n                placeData : placeInfo\r\n            }\r\n        }\r\n\r\n        let mappedPlaces = []\r\n        localPlacesFound.forEach(item => {\r\n            mappedPlaces.push(<ApiPlaceCard {...genProps(item, placeType.local)}/>)\r\n        })\r\n        // apiPlacesFound.forEach(item => {\r\n        //     mappedPlaces.push( <ApiPlaceCard {...genProps(item, placeType.api)}/>)\r\n        // })\r\n        return mappedPlaces\r\n    }\r\n\r\n    const searchCallback = (keyword) => {\r\n        if(keyword.length < 3)\r\n            return;\r\n        setLocalPlacesFound([])\r\n        setApiPlacesFound([])\r\n        // setApiPlacesLoading(true)\r\n        setLocalPlacesLoading(true)\r\n        API.Places.getAllPlacesAdmin(\"?keyword=\" + keyword).then(response=>{\r\n            setLocalPlacesFound(response.list)\r\n            setLocalPlacesLoading(false)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n\r\n        // API.Places.searchApiPlaces(\"?keyword=\" + keyword).then(response => {\r\n        //     setApiPlacesFound(response)\r\n        //     setApiPlacesLoading(false)\r\n        // }).catch(error => {\r\n        //     console.log(error)\r\n        // })\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <SearchInputComponent hint=\"Search for a place\" searchCallback={searchCallback} className={classes.searchInputComponent}/>\r\n            {(localPlacesLoading) ?\r\n                <CircularProgress  /> :\r\n                <React.Fragment>\r\n                    {generatePlaceCards()}\r\n                </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PlaceSearch)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    radioButtonArea: {\r\n    },\r\n    cardArea: {\r\n        flex: 1,\r\n        display: \"flex\"\r\n    },\r\n    content: {\r\n        flex: '1 1 auto',\r\n    },\r\n    descriptionInput: {\r\n        marginTop: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    },\r\n    headerWrap: {}\r\n})\r\n\r\nfunction DayCard({classes, onSelectCallback, index, currentDay, tourInfoReducer, description, handleRemoveDay}) {\r\n\r\n    const updateDescriptionGlobally = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_DAY',\r\n            day: index,\r\n            data: {\r\n                description: e\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.radioButtonArea}>\r\n                <Radio checked={index === currentDay} onChange={(e) => {\r\n                    onSelectCallback(index)\r\n                }}/>\r\n            </div>\r\n            <Card className={classes.cardArea}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        Day {index + 1}\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                        className={classes.descriptionInput}\r\n                        multiline\r\n                        label=\"Description\"\r\n                        value={description == null ? '' : description}\r\n                        variant=\"outlined\"\r\n                        onChange={(e) => {\r\n                            updateDescriptionGlobally(e.target.value)\r\n                        }}\r\n                    />\r\n                </CardContent>\r\n                <CardHeader\r\n                    action={\r\n                        <IconButton  aria-label=\"remove\" onClick={() => handleRemoveDay(index)}>\r\n                            <RemoveIcon/>\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nDayCard.propTypes = {\r\n    onSelectCallback: PropTypes.func.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DayCard)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport DayCard from \"./DayCard\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport shortid from 'shortid';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    addDayButton: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    footerWrapper: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n})\r\n\r\nconst DayCardSortable = SortableElement(({dayInfo, day, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => (\r\n    <DayCard\r\n        description={dayInfo.description}\r\n        currentDay={currentDay}\r\n        index={day}\r\n        handleRemoveDay={removeDayCallback}\r\n        onSelectCallback={onSelectCallback}\r\n        tourInfoReducer={tourInfoReducer}/>\r\n));\r\n\r\nconst SortableList = SortableContainer(({elements, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => {\r\n\r\n    return (\r\n        <ul style={{padding: \"0px\"}}>\r\n            {elements.map((item, index) => {\r\n                return <DayCardSortable\r\n                    currentDay={currentDay}\r\n                    day={index}\r\n                    index={index}\r\n                    removeDayCallback={removeDayCallback}\r\n                    key={item.elementIdentifier}\r\n                    dayInfo={item}\r\n                    onSelectCallback={onSelectCallback}\r\n                    tourInfoReducer={tourInfoReducer}/>\r\n            })}\r\n        </ul>\r\n    );\r\n});\r\n\r\nfunction DaysWrapper({classes, currentDay, setCurrentDay, tourInfo, tourInfoReducer}) {\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    const handleSelect = (index) => {\r\n        setCurrentDay(index)\r\n    }\r\n\r\n    const addDayHandler = () => {\r\n        tourInfoReducer({\r\n            type: 'ADD_DAY',\r\n            data: {\r\n                description: \"\",\r\n                elementIdentifier: shortid.generate(),\r\n                tour: []\r\n            }\r\n        })\r\n    }\r\n\r\n    const removeDay = (day) => {\r\n        tourInfoReducer({\r\n                type: 'REMOVE_DAY',\r\n                day: day,\r\n            }\r\n        )\r\n        if(day === currentDay)\r\n            setCurrentDay(day - 1)\r\n    }\r\n\r\n    const removeDayCallback = (day) => {\r\n        if(tourInfo.days.length === 1){\r\n            addAlertConfig(\"Warning\", \"The tour has to have at least one day\", [])\r\n        }else{\r\n            if(tourInfo.days[day].tour.length > 0){ //This day has at least one place/transport added to it\r\n                addAlertConfig(\"Warning\", \"Are you sure you want to remove this day?\",[{name: \"yes\", action: ()=>{\r\n                    removeDay(day)\r\n                    }}],() => {\r\n                })\r\n            }else removeDay(day)\r\n        }\r\n    }\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        tourInfoReducer({\r\n            type: 'MOVE_DAY',\r\n            oldIndex: oldIndex,\r\n            newIndex: newIndex\r\n        })\r\n        setCurrentDay(newIndex)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <SortableList\r\n                pressDelay={200}\r\n                disableAutoscroll={false}\r\n                elements={tourInfo.days}\r\n                currentDay={currentDay}\r\n                onSortEnd={onSortEnd}\r\n                removeDayCallback={removeDayCallback}\r\n                onSelectCallback={handleSelect}\r\n                tourInfoReducer={tourInfoReducer}/>\r\n            <div className={classes.footerWrapper}>\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    className={classes.addDayButton}\r\n                    onClick={addDayHandler}\r\n                    startIcon={<AddIcon/>}>\r\n                    Add another day\r\n                </Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nDaysWrapper.propTypes = {\r\n    setCurrentDay: PropTypes.func.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    tourInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DaysWrapper)\r\n","import {arrayMove} from \"react-sortable-hoc\";\r\nimport {ElementType} from \"./Tour\";\r\n\r\nexport default function TourDataReducer(state, action) {\r\n\r\n    let days = []\r\n\r\n    switch (action.type) {\r\n        case 'ADD_ELEMENT':\r\n            if(state.days !== null && action.data.type === ElementType.place && state.days.some(day => day.tour !== null && day.tour.some(place => place.type === ElementType.place && place.data.details.placeId === action.data.data.details.placeId))){\r\n                if(action.onError !== null && action.onError !== undefined){\r\n                    action.onError()\r\n                }\r\n                return state\r\n            }\r\n\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    days.push({\r\n                        ...item,\r\n                        tour: [\r\n                            ...item.tour,\r\n                            action.data\r\n                        ]\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'UPDATE_ELEMENT':\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    let tour = item.tour\r\n                    tour[action.index] = {...tour[action.index], data: {...tour[action.index].data, ...action.data}}\r\n                    days.push({\r\n                        ...item,\r\n                        tour: tour\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'ADD_DAY':\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...state.days,\r\n                    action.data\r\n                ]\r\n            }\r\n        case 'MOVE_DAY':\r\n            return {\r\n                ...state,\r\n                days: arrayMove(state.days, action.oldIndex, action.newIndex)\r\n            }\r\n        case 'MOVE_ELEMENT':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day)\r\n                    return {...item, tour: arrayMove(item.tour, action.oldIndex, action.newIndex)}\r\n                else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'UPDATE_DAY':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day) {\r\n                    return {...item, ...action.data}\r\n                } else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'REMOVE_ELEMENT':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day)\r\n                    return {...item, tour: item.tour.filter((value, index) => index !== action.index)}\r\n                else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'REMOVE_DAY':\r\n            days = state.days.filter((item, index) => index !== action.day)\r\n            return {\r\n                ...state,\r\n                days: days\r\n            }\r\n        case 'UPDATE_TOUR':\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case 'SET_ALL':\r\n            return action.data\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PropTypes from \"prop-types\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(4),\r\n    },\r\n    nameField: {\r\n        width: \"100%\"\r\n    },\r\n    descriptionField: {\r\n        marginTop: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    },\r\n    publicityDiv: {\r\n        width: \"100%\",\r\n\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2),\r\n        color: \"#ffffff\"\r\n    },\r\n});\r\n\r\nfunction TourInfoComponent({classes, tourInfo, tourInfoReducer, errorInfo, setErrorInfo, availableCategories, selectedCategories, setSelectedCategories, setAvailableCategories, tourId}) {\r\n\r\n    const handleDescriptionChange = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data: {description: e.target.value}\r\n        })\r\n    }\r\n    const handleTitleChange = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {name: e.target.value}\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(tourInfo.name === \"\")\r\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: true}}})\r\n        else\r\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: false}}})\r\n    }, [tourInfo.name])\r\n\r\n    let shouldDisplayTitleMissingError = errorInfo.showErrors && errorInfo.errors.titleMissing\r\n\r\n    const verifyTour = () => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {isVerified: true}\r\n        })\r\n    }\r\n\r\n    const publishTour = () => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {isPublished: !tourInfo.isPublished}\r\n        })\r\n\r\n    }\r\n\r\n    const ColorButton = withStyles((theme) => ({\r\n        root: {\r\n            color: \"white\",\r\n            backgroundColor: green[500],\r\n            '&:hover': {\r\n                backgroundColor: green[700],\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField label=\"Tour name\"\r\n                       variant=\"outlined\"\r\n                       error={shouldDisplayTitleMissingError}\r\n                       helperText={shouldDisplayTitleMissingError ? \"Please provide a title for your tour\" : \"\"}\r\n                       value={tourInfo.name}\r\n                       onChange={handleTitleChange}\r\n                       className={classes.nameField}/>\r\n            <TextField\r\n                className={classes.descriptionField}\r\n                multiline\r\n                label=\"Description\"\r\n                value={tourInfo.description}\r\n                variant=\"outlined\"\r\n                onChange={handleDescriptionChange}\r\n            />\r\n            <br/><br/>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n                Categories for this tour\r\n            </Typography>\r\n            <AutoCompleteChip\r\n                options={availableCategories}\r\n                id=\"categoryId\"\r\n                label=\"Select category\"\r\n                setOptions={setAvailableCategories}\r\n                setSelectedOptions={setSelectedCategories}\r\n                selectedOptions={selectedCategories}\r\n            />\r\n\r\n            {tourId !== undefined &&\r\n                <div className={classes.publicityDiv}>\r\n                    {tourInfo.isVerified ?\r\n                        <div>\r\n                            <FormControlLabel\r\n                                control={<Switch checked={tourInfo.isPublished} onChange={publishTour} name=\"isPublic\"/>}\r\n                                label=\"Make this tour public?\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                    <ColorButton\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={verifyTour}\r\n                        className={classes.button}\r\n                    >\r\n                        Verify tour\r\n                    </ColorButton>\r\n                    }\r\n\r\n\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTourInfoComponent.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    availableCategories: PropTypes.array.isRequired,\r\n    setAvailableCategories: PropTypes.func.isRequired,\r\n    selectedCategories: PropTypes.array.isRequired,\r\n    setSelectedCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourInfoComponent)","import React, {useContext, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer} from \"react-google-maps\"\r\nimport {ElementType} from \"./Tour\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FilterBlock from \"../add_place_components/FilterBlock\";\r\nimport CustomControlsManager from \"../maps/CustomControlsManager\";\r\nimport API from \"../../Networking/API\";\r\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst google = window.google;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(4),\r\n    }, cover: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            height: \"200px\",\r\n        },\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            flex: 1,\r\n            height: \"auto\",\r\n        },\r\n    },\r\n    largeIcon: {\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n    },\r\n});\r\n\r\n\r\n/**\r\n * Tours map component\r\n * @type {React.ComponentClass<WithGoogleMapProps>}\r\n */\r\nconst MyMapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        ref={props.refMap}\r\n        defaultZoom={8}\r\n        defaultCenter={{lat: 55.2983804, lng: 23.9132164}}>\r\n\r\n        {props.children}\r\n\r\n    </GoogleMap>\r\n);\r\n\r\n\r\nfunction TourMap({classes, tourInfo, currentDay, addPlace, removePlace}) {\r\n\r\n    const [directions, setDirection] = useState();\r\n\r\n    console.log('rerender')\r\n\r\n    const [infoWindows, setInfoWindows] = useState([]);\r\n    const [directionPlaces, setDirectionPlaces] = useState([])\r\n\r\n\r\n    const [places, setPlaces] = useState([]);\r\n    const [placesInfoWindows, setPlacesInfoWindows] = useState([]);\r\n\r\n    const [loadingArea, setLoadingArea] = useState(false);\r\n    const refMap = useRef(null);\r\n\r\n    const {filterQuery} = useContext(PlacesFilterContext);\r\n\r\n    const constructPlaceData = () => {\r\n        let p = tourInfo.days[currentDay].tour.filter(item => item.type === ElementType.place);\r\n        let places = [];\r\n        p.forEach(item => {\r\n            let placeId = item.data.details.placeId;\r\n            let lat = item.data.details.latitude;\r\n            let lng = item.data.details.longitude;\r\n            let name = item.data.details.name;\r\n            let photos = item.data.details.photos;\r\n            places.push({placeId: placeId, latitude: lat, longitude: lng, name: name, photo: photos.length > 0 ? photos[0].url : null});\r\n        });\r\n        setInfoWindows(Array(places.length).fill(false))\r\n        setDirectionPlaces(places);\r\n        return places\r\n    };\r\n\r\n    useEffect(() => {\r\n        const places = constructPlaceData();\r\n        if(places.length>1){\r\n            const waypoints = places.map(p =>({\r\n                location: {lat: p.latitude, lng:p.longitude},\r\n                stopover: true\r\n            }));\r\n\r\n            const origin = waypoints.shift().location;\r\n            let destination = null;\r\n\r\n            if (waypoints.length > 0)\r\n                destination = waypoints.pop().location;\r\n            else\r\n                destination = origin;\r\n\r\n            const directionsService = new google.maps.DirectionsService();\r\n\r\n            directionsService.route(\r\n                {\r\n                    origin: origin,\r\n                    destination: destination,\r\n                    travelMode: google.maps.TravelMode.DRIVING,\r\n                    waypoints: waypoints\r\n                },\r\n                (result, status) => {\r\n                    if (status === google.maps.DirectionsStatus.OK) {\r\n                        setDirection(result)\r\n                    } else {\r\n                        alert(status);\r\n                    }\r\n                }\r\n            );\r\n        } else {\r\n            setDirection(null)\r\n        }\r\n    }, [currentDay, tourInfo.days]);\r\n\r\n\r\n    function fetchPlaces(){\r\n        console.log(\"Getting all places...\", refMap.current.getCenter().lat())\r\n        getAllPlaces(filterQuery + \"&p=\" + 0 + \"&s=\" + 100 + \"&l=\" + refMap.current.getCenter().lat() + \",\" + refMap.current.getCenter().lng() + \"range=\" + 50)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!loadingArea){\r\n            if(refMap.current != null){\r\n                fetchPlaces()\r\n            }\r\n        }\r\n    }, [filterQuery]);\r\n\r\n    function getAllPlaces(query) {\r\n        setLoadingArea(true);\r\n        API.Places.getAllPlacesAdmin(query).then(locations => {\r\n            setPlacesInfoWindows(Array(locations.list.length).fill(false));\r\n            setPlaces(locations.list)\r\n            setLoadingArea(false)\r\n        }).catch(err => {\r\n            console.log(err);\r\n            setLoadingArea(false)\r\n        })\r\n    }\r\n\r\n    function addPlaceToTourDay(place) {\r\n        setPlacesInfoWindows(Array(places.length).fill(false));\r\n        addPlace(place, ElementType.place)\r\n    }\r\n\r\n    function removePlaceFromTourDay(place) {\r\n        tourInfo.days[currentDay].tour.map((row, index)=>{\r\n            if(row.type === ElementType.place){\r\n                if(row.data.details.placeId === place.placeId){\r\n                    removePlace(index)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Renders places markers on the map\r\n     * @return {*[]}\r\n     */\r\n    function PlacesMarkers() {\r\n        return places.map((location, i) => {\r\n            const latitude = parseFloat(location.latitude);\r\n            const longitude = parseFloat(location.longitude);\r\n            return <Marker\r\n                zIndex={1}\r\n                key={location.placeId}\r\n                position={{lat: latitude, lng: longitude}}\r\n                onClick={() => {\r\n                    let markers = Object.assign({}, placesInfoWindows);\r\n                    markers[i] = true;\r\n                    setPlacesInfoWindows(markers)\r\n                }}\r\n            >\r\n                {placesInfoWindows[i] && (\r\n                    <InfoWindow onCloseClick={() => {\r\n                        let markers = Object.assign({}, placesInfoWindows);\r\n                        markers[i] = false;\r\n                        setPlacesInfoWindows(markers)\r\n                    }\r\n                    }>\r\n                        <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                            <Typography variant=\"h6\">\r\n                                {location.name}\r\n                            </Typography>\r\n\r\n                            <Button\r\n                                onClick={()=>{addPlaceToTourDay(location)}}\r\n                                variant=\"text\"\r\n                                color=\"secondary\"\r\n                                size=\"large\"\r\n                                startIcon={<AddIcon/>}>\r\n                                Add this place to tour!\r\n                            </Button>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )}\r\n            </Marker>\r\n        })\r\n    }\r\n\r\n\r\n    const searchAreaComponent = useMemo(() => (\r\n        <CustomControlsManager position={window.google.maps.ControlPosition.TOP_CENTER}>\r\n            <div>\r\n                {loadingArea ?\r\n                    <CircularProgress />\r\n                    :\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                               fetchPlaces()\r\n                            }}\r\n                    >\r\n                        Search area...\r\n                    </Button>\r\n                }\r\n\r\n            </div>\r\n        </CustomControlsManager>\r\n    ), [loadingArea]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FilterBlock/>\r\n            <MyMapComponent\r\n                loadingElement={<div style={{height: `100%`}}/>}\r\n                containerElement={<div style={{height: `400px`}}/>}\r\n                mapElement={<div style={{height: `100%`}}/>}\r\n                refMap={refMap}>\r\n\r\n                {searchAreaComponent}\r\n                <PlacesMarkers/>\r\n\r\n                {/* Rendering direction path*/}\r\n                {directions ?\r\n                    <DirectionsRenderer\r\n                        options={{suppressMarkers: true, draggable: false}}\r\n                        draggable={false}\r\n                        directions={directions}/> : null}\r\n\r\n                {/* Rendering direction places markers*/}\r\n                {directionPlaces.map((marker, index) => {\r\n                    const position = { lat: marker.latitude, lng: marker.longitude };\r\n                    return <Marker\r\n                        zIndex={2}\r\n                        icon={{\r\n                            url: require('../../res/selectedTourIcon.svg'),\r\n                            scaledSize: new window.google.maps.Size(48, 48),\r\n                            origin: new window.google.maps.Point(0, 0),\r\n                            labelOrigin: new window.google.maps.Point(24, 16),\r\n                        }}\r\n                        key={index}\r\n                        position={position}\r\n                        label={{text: `${index+1}`, color: \"white\"}}\r\n                        onClick={\r\n                        ()=>{\r\n                            let info = Object.assign({}, infoWindows);\r\n                            info[index] = true;\r\n                            setInfoWindows(info);\r\n                        }\r\n                    }>\r\n                        {infoWindows[index] && (\r\n                        <InfoWindow onCloseClick={()=>{\r\n                            let info = Object.assign({}, infoWindows);\r\n                            info[index] = false;\r\n                            setInfoWindows(info);\r\n                        }}>\r\n                                <Card style={{display:\"flex\", flexDirection: \"column\",alignItems:\"center\"}}>\r\n                                    {marker.photo ?<Avatar alt=\"Remy Sharp\" src={marker.photo} className={classes.largeIcon}/> : null}\r\n\r\n                                    <Typography>\r\n                                        {marker.name}\r\n                                    </Typography>\r\n                                    <Button\r\n                                        onClick={()=>removePlaceFromTourDay(marker)}\r\n                                        style={{marginTop: 12}}\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        startIcon={<DeleteIcon />}\r\n                                    >\r\n                                        Remove from tour\r\n                                    </Button>\r\n\r\n                                </Card>\r\n                        </InfoWindow>\r\n                        )}\r\n                    </Marker>\r\n                })}\r\n\r\n            </MyMapComponent>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTourMap.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourMap)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useMemo, useState} from \"react\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TourPlacesWrapper from \"./TourPlacesWrapper\";\r\nimport PlaceSearch from \"./PlaceSearch\";\r\nimport DaysWrapper from \"./DaysWrapper\";\r\nimport TourDataReducer from \"./TourReducer\";\r\nimport TourInfoComponent from \"./TourInfoComponent\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TourMap from \"./TourMap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../Networking/API\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport shortid from 'shortid';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport RecommendationListDialog from \"../recomendation/RecommendationListDialog\";\r\nimport {RecommendationType} from \"../recomendation/Recommendation\";\r\nimport history from \"../../helpers/history\";\r\nimport TransportItem from \"./TransportItem\";\r\n\r\nexport const ElementType = {\r\n  place: 0,\r\n  transport: 1\r\n}\r\nexport const PlaceType = {\r\n  api: 1,\r\n  local: 0\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      overflow: \"scroll\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      overflow: \"initial\",\r\n      display: \"flex\",\r\n    },\r\n    height: `calc(100% - 64px)`,\r\n    width: \"100%\",\r\n    '&::-webkit-scrollbar': {\r\n      display: \"none\"\r\n    },\r\n  },\r\n  loader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100vw\",\r\n    height: \"100vh\"\r\n  },\r\n  rightLayout: {\r\n    flex: 2,\r\n    '&::-webkit-scrollbar': {\r\n      display: \"none\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      height: \"100%\",\r\n      overflowY: \"scroll\",\r\n\r\n    },\r\n  },\r\n  leftLayout: {\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      height: \"100%\",\r\n    },\r\n    overflowY: \"scroll\",\r\n\r\n    flex: 1,\r\n    '&::-webkit-scrollbar': {\r\n      display: \"none\"\r\n    },\r\n  },\r\n  actionsArea: {\r\n    padding: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n\r\n})\r\n\r\nconst sampleTourData = {\r\n  name: \"\",\r\n  description: \"\",\r\n  isVerified: true,\r\n  isPublished: false,\r\n  days: [\r\n    {\r\n      description: \"\",\r\n      elementIdentifier: \"jkasfbjkdsbjk\",\r\n      tour: []\r\n    }\r\n  ]\r\n}\r\n\r\nfunction Tour({classes, match}) {\r\n\r\n  const [localPlacesFound, setLocalPlacesFound] = useState([])\r\n  const [apiPlacesFound, setApiPlacesFound] = useState([])\r\n  const [currentDay, setCurrentDay] = useState(0)\r\n  const [tourId, setTourId] = useState(match.params.tourId)\r\n  const [isLoading, setIsLoading] = useState(match.params.tourId !== undefined);\r\n  const [recommendationsDialogOpen, setRecommendationsDialogOpen] = useState(false)\r\n\r\n  const [selectedCategories, setSelectedCategories] = useState([])\r\n  const [availableCategories, setAvailableCategories] = useState([])\r\n\r\n  const [errorInfo, setErrorInfo] = useState({\r\n        errors: {\r\n          titleMissing: false,\r\n          /* Any client-side verification errors may by added here, and handled in individual components */\r\n        },\r\n        showErrors: false\r\n      }\r\n  )\r\n\r\n  const [tourInfo, dispatchTourInfo] = React.useReducer(TourDataReducer, sampleTourData)\r\n  const {addConfig} = UseSnackbarContext();\r\n\r\n  const handleAddPlaceClick = (placeInfo, type) => {\r\n    dispatchTourInfo({\r\n      type: 'ADD_ELEMENT',\r\n      day: currentDay,\r\n      data: {\r\n        type: ElementType.place,\r\n        data: {\r\n          type: type,\r\n          details: {...placeInfo},\r\n          transport: {fk_transportId: 3},\r\n          note: ''\r\n        },\r\n      },\r\n      onError: () => {\r\n        addConfig(false, \"This place already exists in this tour.\")\r\n      }\r\n    })\r\n  }\r\n\r\n  const removeElementCallback = (index) => {\r\n    dispatchTourInfo({\r\n      type: 'REMOVE_ELEMENT',\r\n      day: currentDay,\r\n      index: index\r\n    })\r\n  };\r\n\r\n  const handleEditPlace = (placeId) => {\r\n    window.open(`https://www.traveldirection.ax.lt/app/addplace/${placeId}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (tourId !== undefined) { //If user wants to edit a tour, we download all tour data. loadData also downloads categories\r\n      loadData()\r\n    } else { //Otherwise, we just download categories instead.\r\n      API.Categories.getAllCategories().then(response => {\r\n        setAvailableCategories(response)\r\n      }).catch(() => {\r\n        addConfig(false, \"Categories failed to load\")\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const parseTourInfoResponse = (response) => {\r\n    let aggregatedDays = [];\r\n    response.days.forEach(day => {\r\n      let aggregatedElements = [];\r\n      day.data.forEach(place => {\r\n        let aggregatedPlace = {\r\n          type: ElementType.place,\r\n          data: {\r\n            details: place.place, type: place.place.type, transport: place.transport == null ? {fk_transportId: 3} : {\r\n              fk_transportId: place.transport.fk_transportId - 1\r\n            }, note: place.note == null ? '' : place.note\r\n          }\r\n        }\r\n        delete aggregatedPlace.data.details.type\r\n        aggregatedElements.push(aggregatedPlace)\r\n      })\r\n      let aggregatedDay = {...day, tour: aggregatedElements, elementIdentifier: shortid.generate()}\r\n      delete aggregatedDay.data\r\n      aggregatedDays.push(aggregatedDay)\r\n    })\r\n    let aggregatedTour = {...response, days: aggregatedDays}\r\n    dispatchTourInfo({type: 'SET_ALL', data: aggregatedTour})\r\n  }\r\n\r\n  const loadData = () => {\r\n    Promise.all([\r\n          API.Tour.getTour(\"?id=\" + tourId),\r\n          API.Categories.getAllCategories(),\r\n          API.Tour.getTourCategories(\"?id=\" + tourId),\r\n        ]\r\n    ).catch(() => {\r\n      addConfig(false, \"Tour has failed to load\")\r\n      setTourId(undefined)\r\n    }).then((response) => {\r\n      parseTourInfoResponse(response[0])\r\n      setAvailableCategories(response[1])\r\n      setSelectedCategories(response[2])\r\n    }).finally(() => {\r\n      setIsLoading(false)\r\n    })\r\n  }\r\n\r\n  const handleSave = () => {\r\n    let containsErrors = false;\r\n    Object.keys(errorInfo.errors).map(function (keyName, keyIndex) {\r\n      if (errorInfo.errors[keyName]) {\r\n        setErrorInfo(state => {\r\n          return {...state, showErrors: true}\r\n        })\r\n        containsErrors = true;\r\n      }\r\n    })\r\n    if (containsErrors) return\r\n    setErrorInfo(state => {\r\n      return {...state, showErrors: false}\r\n    })\r\n\r\n    const aggregatedDays = []\r\n    tourInfo.days.forEach(day => {\r\n      let aggregatedDay = {...day, data: []}\r\n      delete aggregatedDay.tour\r\n      delete aggregatedDay.elementIdentifier\r\n      for (let i = 0; i < day.tour.length; i++) {\r\n        let element = day.tour[i]\r\n        if (element.type !== ElementType.place)\r\n          continue;\r\n        let aggregatedPlace = {\r\n          place: {\r\n            type: element.data.type,\r\n            placeId: element.data.details.placeId\r\n          },\r\n          note: element.data.note\r\n        }\r\n        if (i !== day.tour.length - 1)\r\n          aggregatedPlace.transport = {fk_transportId: element.data.transport.fk_transportId + 1}\r\n        else\r\n          aggregatedPlace.transport = {fk_transportId: null}\r\n\r\n        aggregatedDay.data.push(aggregatedPlace)\r\n      }\r\n      aggregatedDays.push(aggregatedDay)\r\n    })\r\n    let aggregatedTour = {...tourInfo, days: aggregatedDays}\r\n\r\n    if (tourId === undefined) {\r\n      API.Tour.insertTour(aggregatedTour).then((response) => {\r\n        setTourId(response)\r\n        return response\r\n      }).then((response) => Promise.all(\r\n          [\r\n            API.Tour.updateTourCategories(selectedCategories, \"?p=\" + response)\r\n          ]\r\n      )).then((() => {\r\n        addConfig(true, \"Tour has been inserted successfully!\")\r\n      })).catch((error) => {\r\n        addConfig(false, \"Something went wrong while saving this tour.\")\r\n      })\r\n    } else {\r\n      Promise.all([\r\n        API.Tour.updateTour(aggregatedTour, \"?id=\" + tourId),\r\n        API.Tour.updateTourCategories(selectedCategories, \"?p=\" + tourId)\r\n      ])\r\n          .then(() => {\r\n            addConfig(true, \"Tour has been updated successfully!\")\r\n          }).catch((error) => {\r\n        addConfig(false, \"Something went wrong while saving this tour.\")\r\n      })\r\n    }\r\n\r\n  };\r\n\r\n  const leftLayout = useMemo(() => (\r\n      <div className={classes.leftLayout}>\r\n        <PlaceSearch addPlaceCallback={handleAddPlaceClick} localPlacesFound={localPlacesFound}\r\n                     setLocalPlacesFound={setLocalPlacesFound} apiPlacesFound={apiPlacesFound}\r\n                     setApiPlacesFound={setApiPlacesFound}/>\r\n      </div>\r\n  ), [localPlacesFound, apiPlacesFound, currentDay])\r\n\r\n\r\n  let dayInfoWithoutDesc = JSON.stringify(tourInfo.days.map(day => {\r\n    let dayCopy = {...day}\r\n    delete dayCopy.description\r\n    return dayCopy.tour.map(day => day.data.details)\r\n  }))\r\n\r\n\r\n  const tourPlacesMemoized = useMemo(() => (<TourPlacesWrapper errorInfo={errorInfo} setErrorInfo={setErrorInfo}\r\n                                                               handleEditPlace={handleEditPlace}\r\n                                                               currentDay={currentDay} tourInfoReducer={dispatchTourInfo} tourInfo={tourInfo}/>), [errorInfo, currentDay, JSON.stringify(tourInfo.days.map(day => day.tour))])\r\n  const mapComponent = useMemo(() => (\r\n      <React.Fragment>\r\n        <TourMap tourInfo={tourInfo}\r\n                 currentDay={currentDay}\r\n                 addPlace={handleAddPlaceClick}\r\n                 removePlace={removeElementCallback}\r\n        />\r\n      </React.Fragment>\r\n  ), [dayInfoWithoutDesc, currentDay])\r\n\r\n  const daysWrapperMemoized = useMemo(() => (<DaysWrapper currentDay={currentDay} setCurrentDay={setCurrentDay}\r\n                                                          tourInfo={tourInfo}\r\n                                                          tourInfoReducer={dispatchTourInfo}/>), [JSON.stringify(tourInfo.days.map(day => {\r\n    return {...day, tour: null}\r\n  }))])\r\n\r\n  const tourDaysComponents = useMemo(() => (\r\n      <div>\r\n        {daysWrapperMemoized}\r\n        <Divider variant=\"middle\"/>\r\n        {mapComponent}\r\n        {tourPlacesMemoized}\r\n      </div>\r\n  ), [tourInfo.days, currentDay, errorInfo]);\r\n\r\n  const tourInfoMemoized = useMemo(() => (\r\n      <TourInfoComponent tourInfo={tourInfo} tourInfoReducer={dispatchTourInfo} errorInfo={errorInfo}\r\n                         setErrorInfo={setErrorInfo}\r\n                         tourId={tourId}\r\n                         setSelectedCategories={setSelectedCategories} selectedCategories={selectedCategories}\r\n                         availableCategories={availableCategories}\r\n                         setAvailableCategories={setAvailableCategories}/>), [availableCategories, selectedCategories, tourId, errorInfo, tourInfo.name, tourInfo.description, tourInfo.isPublished, tourInfo.isVerified])\r\n\r\n  const rightLayout = useMemo(() => (\r\n      <Paper className={classes.rightLayout}>\r\n        {tourInfoMemoized}\r\n        <Divider variant=\"middle\"/>\r\n        {tourDaysComponents}\r\n        <div className={classes.actionsArea}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => setRecommendationsDialogOpen(true)}\r\n                  disabled={tourId == null}>\r\n            Add tour to recommendation\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n            Save this tour\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n  ), [tourInfo, currentDay, errorInfo, availableCategories, selectedCategories]);\r\n\r\n  const theme = useTheme();\r\n  const largeScreen = useMediaQuery(theme.breakpoints.up('lg'));\r\n\r\n  const content = (\r\n      <React.Fragment>\r\n        {largeScreen ?\r\n            <React.Fragment>\r\n              {leftLayout}\r\n              {rightLayout}\r\n            </React.Fragment> :\r\n            <React.Fragment>\r\n              {rightLayout}\r\n              {leftLayout}\r\n            </React.Fragment>\r\n        }\r\n      </React.Fragment>\r\n  );\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <RecommendationListDialog\r\n            setOpen={setRecommendationsDialogOpen}\r\n            open={recommendationsDialogOpen}\r\n            objectId={tourId}\r\n            type={RecommendationType.tour}/>\r\n        {isLoading ? <div className={classes.loader}><CircularProgress/></div> : content}\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Tour)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n\r\n    sortingButtons: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n\r\n    },\r\n    root:{\r\n        height:\"100vh\",\r\n        width:\"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content:{\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Tour name', isId: true},\r\n    { id: 'description', numeric: false, disablePadding: false, label: 'Tour description',isId: false},\r\n    { id: 'lastModified', numeric: false, disablePadding: false, label: 'Date modified',isId: false},\r\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\r\n];\r\n\r\nfunction Tours(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { classes } = props;\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [filterQuery, setFilterQuery] = useState(\"\");\r\n\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    useEffect(()=>{\r\n        if(!isLoading){\r\n            getAllTours(\"?o=\"+filterQuery);\r\n        }\r\n    },[filterQuery]);\r\n\r\n    function parseData(data){\r\n        console.log(\"deita\", data.list)\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updateTourCallback(id){\r\n        history.push(\"/app/addtour/\"+id)\r\n    }\r\n    function removePlaceCallback(id){\r\n        console.log(\"tour id\", id)\r\n\r\n        addAlertConfig(Strings.DIALOG_TOUR_DELETE_TITLE, Strings.DIALOG_TOUR_DELETE_MESSAGE, [{name: \"Delete\", action: () => {\r\n                setIsLoading(true);\r\n                API.Tour.removeTour(\"?id=\"+id).then(response=>{\r\n                    let tmp = [];\r\n                    data.map(row=>{\r\n                        if(row[\"tourId\"] !== id){\r\n                            tmp.push(row)\r\n                        }\r\n                    });\r\n                    setData(tmp);\r\n                    addConfig(true, Strings.SNACKBAR_TOUR_REMOVE_SUCCESS)\r\n                    setIsLoading(false)\r\n                }).catch(error=>{\r\n                    setIsLoading(false);\r\n                    addConfig(false, Strings.SNACKBAR_ERROR)\r\n                })\r\n            }}],  ()=>{setIsLoading(false)})\r\n    }\r\n\r\n    const changePageCallback = (p=0, keyword=\"\") => {\r\n        setIsLoading(true);\r\n        getAllTours(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword+\"&o=\"+filterQuery)\r\n    };\r\n\r\n\r\n    //Sorting stuff\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let filters = [];\r\n        let fq = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n            if(row.filter){\r\n                fq.push(row.filterName)\r\n            }\r\n            filters.push(row)\r\n        });\r\n\r\n        setFilterQuery(fq.join(\",\"));\r\n        setFilterOptions(filters)\r\n    };\r\n\r\n    const customToolbarElements = () =>{\r\n        return <div>\r\n            <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                    <FilterListIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={()=>{setAnchorEl(null)}}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.sortingButtons}>\r\n                    {filterOptions.map(row=>{\r\n                        return <FormControlLabel\r\n                            control={<Checkbox checked={row.filter} onChange={()=>filterOptionsChanged(row.filterName)} name={row.filterName} />}\r\n                            label={row.filterLabel}\r\n                        />\r\n                    })}\r\n                </div>\r\n\r\n            </Popover>\r\n        </div>\r\n    };\r\n    /*------------------------------------------------------------------------------------------------------*/\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content} >\r\n                <TableComponent\r\n                    title={\"Tours\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updateTourCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    id={\"tourId\"}\r\n                    isLoading={isLoading}\r\n                    customToolbarElements={customToolbarElements()}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={()=>{history.push(\"/app/addtour\")}}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon />}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n    function getAllTours(urlParams=\"\") {\r\n        API.Tour.getAllToursAdmin(urlParams).then(response=>{\r\n            console.log(response);\r\n            parseData(response)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nTours.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Tours);","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nfunction AddDialog(props){\r\n\r\n    function validateInput(){\r\n        var error = false;\r\n        if(text.length <= 3)\r\n            error = true\r\n        setError(error)\r\n        return error\r\n    }\r\n\r\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\r\n    const [text, setText] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    return(\r\n        <div>\r\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\r\n                    {header}\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    action: PropTypes.func.isRequired,\r\n    onCloseCallback: PropTypes.func.isRequired\r\n};\r\nexport default withStyles(styles)(AddDialog)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport TableComponent from \"./TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddDialog from \"./AddDialog\";\r\nimport UseEditDialogContext from \"../contexts/UseEditDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\",\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    buttonWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        width: \"100%\",\r\n    }\r\n})\r\n\r\nconst categoriesHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Category name', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n]\r\nconst tagsHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Tag name', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n]\r\n\r\nfunction Resources({classes}) {\r\n\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addEditDialogConfig} = UseEditDialogContext();\r\n\r\n    const [loading, setIsLoading] = useState({\r\n        categories: false,\r\n        tags: false\r\n    })\r\n\r\n    const [categories, setCategories] = useState([])\r\n    const [tags, setTags] = useState([])\r\n\r\n    useEffect(() => {\r\n        setIsLoading({categories: true, tags: true})\r\n        Promise.all([\r\n                API.Categories.getAllCategories(),\r\n                API.Tags.getAllTags()\r\n            ]\r\n        ).then(response => {\r\n            setCategories(response[0])\r\n            setTags(response[1])\r\n        }).catch(() => {\r\n            addConfig(false, \"Could not retrieve data!\")\r\n        }).finally(() => {\r\n            setIsLoading(oldData => {return{ ...oldData, categories: false, tags: false}})\r\n        })\r\n    }, [])\r\n\r\n    const handleAddCategory = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add category\",\r\n            explanation: \"Type the category name\",\r\n            onDoneCallback: (text) => {\r\n               API.Categories.addCategory([{name: text}]).then((response)=>{\r\n                   addConfig(true, \"Category inserted successfully\")\r\n                   setCategories(oldData => [...oldData, {name: text, categoryId: response[0]}])\r\n                }).catch(error=>{\r\n                   addConfig(false, \"Failed to add category.\")\r\n               })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Restaurants, hiking, etc...\"\r\n        })\r\n    }\r\n\r\n    const removeCategoryCallback = (categoryId) => {\r\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\r\n        addAlertConfig(\"Warning\", \"Are you sure you want the category, named '\" + categoryName + \"'?\", [{\r\n            name: \"yes\", action: () => {\r\n                setIsLoading(oldData => {\r\n                    return {...oldData, categories: true}\r\n                })\r\n                API.Categories.removeCategory([{categoryId: categoryId}]).then(() => {\r\n                    addConfig(true, \"Category successfully removed.\")\r\n                    setCategories(oldData => oldData.filter(item => item.categoryId !== categoryId))\r\n                }).catch(() => {\r\n                    addConfig(false, \"An error has occurred while removing category.\")\r\n                }).finally(() => {\r\n                    setIsLoading(oldData => {\r\n                        return {...oldData, categories: false}\r\n                    })\r\n                })\r\n            }\r\n        }], () => {\r\n        })\r\n    }\r\n\r\n    const updateCategoryHandler = (categoryId) => {\r\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\r\n        addEditDialogConfig({\r\n            title: \"Edit category\",\r\n            explanation: \"Type the category name\",\r\n            defaultText: categoryName,\r\n            onDoneCallback: (text) => {\r\n                API.Categories.updateCategory([{name: text, categoryId: categoryId}]).then(()=>{\r\n                    addConfig(true, \"Category updated successfully\")\r\n                    setCategories(oldData => {return oldData.map(item => {\r\n                        if(item.categoryId === categoryId)\r\n                            return {...item, name: text}\r\n                        else return item\r\n                    })})\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to update category.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Restaurants, hiking, etc...\"\r\n        })\r\n    }\r\n\r\n    const updateTagHandler = (id) => {\r\n        let tagName = tags.filter(item => item.tagId === id)[0].name\r\n        addEditDialogConfig({\r\n            title: \"Edit tag\",\r\n            explanation: \"Type the tag name\",\r\n            defaultText: tagName,\r\n            onDoneCallback: (text) => {\r\n                API.Tags.updateTags([{name: text, tagId: id}]).then(()=>{\r\n                    addConfig(true, \"Tag updated successfully\")\r\n                    setTags(oldData => {return oldData.map(item => {\r\n                        if(item.tagId === id)\r\n                            return {...item, name: text}\r\n                        else return item\r\n                    })})\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to update tag.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const removeTagHandler = (id) => {\r\n        let tagName = tags.filter(item => item.tagId === id)[0].name\r\n        addAlertConfig(\"Warning\", \"Are you sure you want the tag, named '\" + tagName + \"'?\", [{\r\n            name: \"yes\", action: () => {\r\n                setIsLoading(oldData => {\r\n                    return {...oldData, tags: true}\r\n                })\r\n                API.Tags.removeTags([{tagId: id}]).then(() => {\r\n                    addConfig(true, \"Tag successfully removed.\")\r\n                    setTags(oldData => oldData.filter(item => item.tagId !== id))\r\n                }).catch(() => {\r\n                    addConfig(false, \"An error has occurred while removing tag.\")\r\n                }).finally(() => {\r\n                    setIsLoading(oldData => {\r\n                        return {...oldData, tags: false}\r\n                    })\r\n                })\r\n            }\r\n        }], () => {\r\n        })\r\n    }\r\n\r\n    const handleAddTag = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add tag\",\r\n            explanation: \"Type the tag name\",\r\n            onDoneCallback: (text) => {\r\n                API.Tags.addTag([{name: text}]).then((response)=>{\r\n                    addConfig(true, \"Tag inserted successfully\")\r\n                    setTags(oldData => [...oldData, {name: text, tagId: response[0]}])\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to add tag.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const searchFunction = (keyword, item) => {\r\n        console.log(\"Keyword is what\", keyword)\r\n        if(keyword == null || keyword.length < 1) return true\r\n        return item.name.includes(keyword)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n\r\n                <TableComponent\r\n                    title={\"Categories\"}\r\n                    headCells={categoriesHeadCells}\r\n                    data={categories}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateCategoryHandler}\r\n                    removeCallback={removeCategoryCallback}\r\n                    id={\"categoryId\"}\r\n                    isLoading={loading.categories}\r\n                />\r\n\r\n                <Box className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleAddCategory}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add a new category\r\n                    </Button>\r\n                </Box>\r\n\r\n                <br/>\r\n\r\n                <TableComponent\r\n                    title={\"Tags\"}\r\n                    headCells={tagsHeadCells}\r\n                    data={tags}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateTagHandler}\r\n                    removeCallback={removeTagHandler}\r\n                    id={\"tagId\"}\r\n                    isLoading={loading.tags}\r\n                />\r\n\r\n                <Box className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleAddTag}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add a new tag\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nResources.propTypes = {\r\n};\r\n\r\nexport default withStyles(styles)(Resources)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutoCompleteChip from \"./AutocompleteChip\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\n\r\nconst UpdateUserDialog = ({open, setOpen, userData, availableRoles, setAvailableRoles}) => {\r\n\r\n    const [selectedRoles, setSelectedRoles] = useState([]);\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    useEffect(()=>{\r\n        setSelectedRoles(userData.roles)\r\n    },[userData.roles]);\r\n\r\n    function setRoles() {\r\n        addAlertConfig(\"Update user\", \"Are you sure you want to update this user's permissions?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                let roles = []\r\n                selectedRoles.map(row=>{\r\n                    roles.push(row.roleId)\r\n                });\r\n                API.User.setRoles({userId: userData.id, roles: roles}).then(response=>{\r\n                    addConfig(true, \"Updated user successfully\");\r\n                    setOpen(false)\r\n                }).catch(error=>{\r\n                    addConfig(false, \"Could not update user\")\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n    const renderRoles = <div>\r\n\r\n    </div>\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={'lg'}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">Update user - {userData.name + \" \" + userData.surname}</DialogTitle>\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Change user permissions\r\n                </Typography>\r\n\r\n                <AutoCompleteChip\r\n                    id=\"roleId\"\r\n                    name=\"role\"\r\n                    label=\"Select sources\"\r\n                    options={availableRoles}\r\n                    setOptions={setAvailableRoles}\r\n                    setSelectedOptions={setSelectedRoles}\r\n                    selectedOptions={selectedRoles}\r\n                />\r\n\r\n                {\r\n                    selectedRoles.map(row=>{\r\n                        return <div>\r\n                            <b>{row.role}</b> - {row.description}\r\n                            <br/>\r\n                        </div>\r\n                    })\r\n                }\r\n\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button onClick={()=>setRoles()}\r\n                        color=\"primary\">\r\n                    Update user\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\n\r\nexport default UpdateUserDialog\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutoCompleteChip from \"./AutocompleteChip\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {averageTimeSpent} from \"../helpers/averageTimeSpent\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {load} from \"dotenv\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n\r\n});\r\n\r\nfunction AddUserDialog({classes, open, setOpen, availableRoles}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [user, setUser] = useState({name: \"\", surname: \"\", password: \"\", email: \"\", role: -1});\r\n    const [error, setError] = useState({name: false, surname: false, password: false, email: false, role: false});\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const userDataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let userData = Object.assign({}, user);\r\n        userData[name] = value\r\n        setUser(userData)\r\n    };\r\n\r\n    function parseRoleFromId(id){\r\n        return availableRoles.map(row=>{\r\n            if(row.roleId===id){\r\n                return  row.role + \" - \" + row.description\r\n            }\r\n        })\r\n    }\r\n\r\n    function checkErrors(){\r\n        let errors = Object.assign({}, error)\r\n        let hasErrors = false;\r\n        for (let key in user) {\r\n            errors[key] = user[key] === \"\" || user[key] === -1;\r\n            if(errors[key] === true){\r\n                hasErrors = true\r\n            }\r\n        }\r\n        setError(errors);\r\n        return hasErrors\r\n    }\r\n\r\n    function addUser(){\r\n        if(checkErrors()){\r\n            return\r\n        }\r\n        addAlertConfig(\"Add new editor\", \"Are you sure you want to add new editor?. This user has role: \" + parseRoleFromId(user.role), [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Auth.register(user).then(userId=>{\r\n                    API.User.setRoles({userId: userId, roles: [user.role]}).then(response=>{\r\n                        addConfig(true, \"User was added successfully!\")\r\n                        setOpen(false);\r\n                        setLoading(false)\r\n                    }).catch(error=>{\r\n                        setOpen(false);\r\n                        addConfig(false, \"Could not map user permissions!\");\r\n                        setLoading(false)\r\n                    })\r\n                }).catch(error=>{\r\n                    addConfig(false, error.message);\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add new editor</DialogTitle>\r\n            <DialogContent>\r\n                    <div className={classes.root}>\r\n                        <TextField id=\"outlined-basic\"\r\n                                   error={error.name}\r\n                                   required\r\n                                   label=\"Name\"\r\n                                   name=\"name\"\r\n                                   value={user['name']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.surname}\r\n                                   label=\"Surname\"\r\n                                   name=\"surname\"\r\n                                   value={user['surname']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.email}\r\n                                   label=\"Email\"\r\n                                   name=\"email\"\r\n                                   value={user['email']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.password}\r\n                                   autoComplete='new-password'\r\n                                   label=\"Password\"\r\n                                   name=\"password\"\r\n                                   value={user['password']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   type=\"password\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <br/>\r\n                        <Alert severity=\"info\">\r\n                            Make sure to use secure password as it will give access to modify data in admin panel.\r\n                            <br/>\r\n                            *Password must contain between 8 and 30 characters\r\n                            <br/>\r\n                            *Password must have atleast one digit\r\n                            <br/>\r\n                            *Password must have atleast one upper character\r\n                        </Alert>\r\n\r\n                        <Divider className={classes.textField} medium />\r\n\r\n                        <FormControl error={error.role} variant=\"outlined\" className={classes.textField}>\r\n                            <InputLabel>User role</InputLabel>\r\n                            <Select\r\n                                onChange={(e, value) =>{\r\n                                    let userTmp = Object.assign({},user);\r\n                                    userTmp.role = value.props.value\r\n                                    setUser(userTmp)\r\n                                }}\r\n                                value={user.role}\r\n                                label=\"Select user role\"\r\n                            >\r\n                                <option value=\"-1\">None</option>\r\n                                {\r\n                                    availableRoles.map(row=>{\r\n                                        return <option value={row.roleId}> {row.role}</option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                            <FormHelperText>Select one of the available user roles</FormHelperText>\r\n                        </FormControl>\r\n\r\n                        {user.role === 1 ? <Alert className={classes.textField}\r\n                            severity=\"warning\">\r\n                            ROLE_ADMIN will have full access to the system. Make sure you know this person!\r\n                            </Alert> :\r\n                        null\r\n                        }\r\n\r\n                        <Typography variant=\"h6\" style={{marginTop: 48}}>\r\n                            Available roles\r\n                        </Typography>\r\n                        <div className={classes.textField}>\r\n                            {\r\n                                availableRoles.map(row=>{\r\n                                    return (\r\n                                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                                            {row.role} - {row.description}\r\n                                        </Typography>\r\n                                    )\r\n\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        addUser()\r\n                    }}\r\n                >\r\n                    Add user\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\nexport default withStyles(styles)(AddUserDialog)\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UpdateUserDialog from \"../components/UpdateUserDialog\";\r\nimport AddUserDialog from \"../components/AddUserDialog\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    autocomplete: {\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline: \"0\",\r\n        marginBottom: \"4px\"\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Name', isId: true},\r\n    {id: 'surname', numeric: false, disablePadding: false, label: 'Surname', isId: false},\r\n    {id: 'email', numeric: false, disablePadding: false, label: 'Contact email', isId: false},\r\n    {id: 'phoneNumber', numeric: false, disablePadding: false, label: 'Phone number', isId: false},\r\n    {id: 'parsedRoles', numeric: false, disablePadding: false, label: 'Roles', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n];\r\n\r\nfunction Places(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState({});\r\n    const [allRoles, setAllRoles] = useState([])\r\n    const [pageData, setPageData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const {classes} = props;\r\n\r\n    const [openUpdateDialog, setOpenUpdateDialog] = useState(false);\r\n    const [openAddDialog, setOpenAddDialog] = useState(false);\r\n\r\n\r\n    // const {filterQuery} = useContext(PlacesFilterContext)\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n\r\n    useEffect(()=>{\r\n        API.User.getAllRoles().then(roles=>{\r\n            console.log(roles);\r\n            setAllRoles(roles);\r\n        }).catch(error=>{\r\n            addConfig(false, error.message)\r\n        })\r\n    },[]);\r\n\r\n\r\n\r\n    function requestUsers(p = 1, keyword = \"\") {\r\n        getAllUsers(\"\" + \"?p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n    }\r\n\r\n    function parseData(data) {\r\n\r\n        setIsLoading(false);\r\n        let usersData = [];\r\n        data.list.map(row => {\r\n            let rolesList = [];\r\n            row.roles.map(role =>{\r\n                rolesList.push(role.role)\r\n            });\r\n            row.parsedRoles = rolesList.join(',');\r\n            usersData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(usersData);\r\n        console.log(usersData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updatePlaceCallback(id) {\r\n        data.map(row=>{\r\n            if(row.id === id ){\r\n                setSelectedUser(row)\r\n            }\r\n        });\r\n        setOpenUpdateDialog(true)\r\n    }\r\n\r\n    const changePageCallback = (p = 0, keyword = \"\") => {\r\n            setIsLoading(true);\r\n            requestUsers(p, keyword)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n\r\n                {openUpdateDialog ? <UpdateUserDialog open={openUpdateDialog}\r\n                                                      setOpen={setOpenUpdateDialog}\r\n                                                      availableRoles={allRoles}\r\n                                                      setAvailableRoles={setAllRoles}\r\n                                                      userData={selectedUser}/>\r\n                                                      :\r\n                    null\r\n                }\r\n\r\n                {openAddDialog ? <AddUserDialog open={openAddDialog}\r\n                                                availableRoles={allRoles}\r\n                                                setOpen={setOpenAddDialog}/> : null}\r\n\r\n                <TableComponent\r\n                    title={\"Users\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updatePlaceCallback}\r\n                    id={\"id\"}\r\n                    isLoading={isLoading}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={() => {\r\n                                setOpenAddDialog(true)\r\n                        }}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add user\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n            <Button>\r\n                Clear filters\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    function getAllUsers(urlParams = \"\") {\r\n        API.User.getAllUsers(urlParams).then(response=>{\r\n            console.log(response)\r\n                setIsLoading(false);\r\n                parseData(response)\r\n        }).catch(error=>{\r\n                setIsLoading(false);\r\n                console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nPlaces.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Places);\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {getRefreshToken} from \"../helpers/tokens\";\r\nimport API from \"../Networking/API\";\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        let refreshToken = getRefreshToken();\r\n        if(refreshToken !== \"\" && refreshToken !== undefined){\r\n            // console.log(\"Refresh token\", refreshToken)\r\n                API.User.getUserProfile().then(user=>{\r\n                    // console.log(\"Fetched user\", user);\r\n                    setCurrentUser(user);\r\n                    setIsLoading(false)\r\n                }).catch(error=>{\r\n                    console.log(error);\r\n                    setIsLoading(false)\r\n                })\r\n        }else{\r\n            console.log(\"Refresh token is empty. No actions taken.\")\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser,\r\n                setCurrentUser,\r\n                isLoading\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};","import React, { useState, useCallback } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nexport const EditRecommendationContext = React.createContext()\r\n\r\n\r\nexport default function EditRecommendationProvider({ children }) {\r\n    const [config, setConfig] = useState({\r\n        open: false,\r\n        currentlyEditing: undefined,\r\n        rootList: [],\r\n        setRootList: ()=>{}\r\n    });\r\n\r\n    function startEditing(recommendation, rootList, setRootList) {\r\n        let conf = { ...config }\r\n\r\n        conf.open = true\r\n        conf.currentlyEditing = recommendation\r\n\r\n        conf.rootList = rootList\r\n        conf.setRootList = setRootList\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    function removeRecommendation(){\r\n        let conf = { ...config }\r\n        conf.open = false\r\n\r\n        let tempRootList = [...conf.rootList]\r\n        for(let i = 0; i<tempRootList.length; i++){\r\n            console.log(tempRootList[i].id)\r\n            if(tempRootList[i].id === conf.currentlyEditing.id){\r\n                tempRootList.splice(i, 1)\r\n            }\r\n        }\r\n        config.setRootList(tempRootList)\r\n        setConfig(conf)\r\n    }\r\n\r\n    function finishEditing(success=false, removedId= undefined) {\r\n        let conf = { ...config }\r\n        conf.open = false\r\n\r\n        if(removedId !== undefined){\r\n            for(let i = 0; i<conf.currentlyEditing.objects.length; i++){\r\n                if(conf.currentlyEditing.objects[i].id === removedId){\r\n                    conf.currentlyEditing.objects.splice(i, 1)\r\n                }\r\n            }\r\n        }\r\n\r\n        if(success){\r\n            let tempRootList = [...config.rootList]\r\n            for(let i = 0; i<tempRootList.length; i++){\r\n                if(tempRootList[i].id === conf.currentlyEditing.id){\r\n                    tempRootList[i] = conf.currentlyEditing\r\n                    break;\r\n                }\r\n            }\r\n            config.setRootList(tempRootList)\r\n        }\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    function setRecommendation(newRec){\r\n        let conf = { ...config }\r\n        conf.currentlyEditing = newRec\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    return (\r\n        <EditRecommendationContext.Provider value={{\r\n            config,\r\n            startEditing,\r\n            finishEditing,\r\n            removeRecommendation,\r\n            setRecommendation\r\n        }}>\r\n            {children}\r\n        </EditRecommendationContext.Provider>\r\n    );\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {EditRecommendationContext} from \"../../contexts/EditRecommendationContext\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport API from \"../../Networking/API\";\r\nimport {func} from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    recommendedPlaceCard: {\r\n        width: 300,\r\n        height: 300,\r\n        padding: 16,\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        alignContent: 'flex-end',\r\n        zIndex: 999999\r\n    }\r\n\r\n});\r\n\r\nconst RecommendationPlaceSortable = SortableElement(({classes, place, removeObjectFromRecommendation}) => (\r\n    <div className={classes.recommendedPlaceCard}>\r\n        <ApiPlaceCard\r\n            placeData={place}\r\n            renderActionArea={() => {\r\n                return (\r\n                    <div>\r\n                        <IconButton aria-label=\"delete\" onClick={()=>removeObjectFromRecommendation(place.id)}>\r\n                            <DeleteIcon color=\"secondary\" fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </div>\r\n                )\r\n            }\r\n            }\r\n        />\r\n    </div>)\r\n)\r\n\r\nconst RecommendationPlaceSortableContainer = SortableContainer(({classes, config, removeObjectFromRecommendation}) => {\r\n    return (\r\n        <div style={{display:\"flex\", flexDirection: \"row\"}}>\r\n            {config.currentlyEditing.objects.length > 0 ?\r\n\r\n                config.currentlyEditing.objects.map((place, index)=>{\r\n                    delete place.description\r\n\r\n                    return <RecommendationPlaceSortable\r\n                        classes={classes}\r\n                        removeObjectFromRecommendation={removeObjectFromRecommendation}\r\n                        key={place.id}\r\n                        index={index}\r\n                        place={place}\r\n                    />\r\n                }) :\r\n\r\n                <Alert severity=\"info\">This recommendation does not have any objects attached. You can attach\r\n                    Places or Tours by browsing in Places and Tours tables\r\n                </Alert>\r\n            }\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\nfunction EditRecommendationDialog({classes}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const { config, setRecommendation, finishEditing, removeRecommendation } = useContext(EditRecommendationContext)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let recData = {...config.currentlyEditing}\r\n        recData[name] = value\r\n\r\n        setRecommendation(recData)\r\n    };\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        console.log(\"OnSortEnd\")\r\n        let data = { ...config.currentlyEditing }\r\n        data.objects = arrayMove(data.objects, oldIndex, newIndex)\r\n\r\n        setRecommendation(data)\r\n    }\r\n\r\n    function removeObjectFromRecommendation(placeId) {\r\n        addAlertConfig(\"Remove object from recommendation\", \"Are you sure you want to remove this object from recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true)\r\n                API.Recommendation.removePlaceFromRecommendation(\r\n                    {id: placeId,\r\n                        recommendationId: config.currentlyEditing.id,\r\n                        type: config.currentlyEditing.type}\r\n                ).then(()=>{\r\n                    addConfig(true, \"Object removed from recommendation\")\r\n                    finishEditing(true, placeId)\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n\r\n    }\r\n\r\n    function deleteRecommendation(){\r\n        addAlertConfig(\"Remove recommendation\", \"Are you sure you want to remove this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Recommendation.removeRecommendation(config.currentlyEditing.id).then(()=>{\r\n                    addConfig(true, \"Removed recommendation successfully\")\r\n                    removeRecommendation()\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong. Please try again!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n    function constructRecommendationForUpdate(){\r\n        let rec = { ...config.currentlyEditing }\r\n        const objects = []\r\n        config.currentlyEditing.objects.map(row=>{\r\n            objects.push({id: row.id, type: rec.type})\r\n        })\r\n\r\n        rec.objects = objects\r\n\r\n        return rec\r\n    }\r\n\r\n\r\n    function editRecommendation(){\r\n        addAlertConfig(\"Edit recommendation\", \"Are you sure you want to edit this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                const rec = constructRecommendationForUpdate()\r\n                API.Recommendation.updateRecommendation(rec).then(()=>{\r\n                    addConfig(true, \"Updated recommendation successfuly\")\r\n                    finishEditing(true)\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong. Please try again!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    return(\r\n        <Dialog\r\n            open={config.open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{\r\n                finishEditing()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Edit recommendation</DialogTitle>\r\n            <DialogContent>\r\n                {config.currentlyEditing !== undefined ? <div className={classes.root}>\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Title\"\r\n                               name=\"name\"\r\n                               value={config.currentlyEditing['name']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Subtitle\"\r\n                               name=\"subtitle\"\r\n                               value={config.currentlyEditing['subtitle']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Description\"\r\n                               name=\"description\"\r\n                               value={config.currentlyEditing['description']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <div style={{display: \"flex\", flexDirection: 'row', overflowX: 'auto', width: '100%'}}>\r\n                        <RecommendationPlaceSortableContainer\r\n                            removeObjectFromRecommendation={removeObjectFromRecommendation}\r\n                            classes={classes}\r\n                            config={config}\r\n                            axis={'xy'}\r\n                            pressDelay={200}\r\n                            disableAutoscroll={false}\r\n                            onSortEnd={onSortEnd}/>\r\n                    </div>\r\n                </div> : null }\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>finishEditing()}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        editRecommendation()\r\n                    }}\r\n                >\r\n                    Save\r\n                </Button>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={()=>{\r\n                        deleteRecommendation()\r\n                    }}\r\n                >\r\n                    Delete recommendation\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(EditRecommendationDialog)","import React, {useContext, useEffect, useState} from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../Networking/API\";\r\nimport Recommendation from \"../components/recomendation/Recommendation\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport EditRecommendationDialog from \"../components/recomendation/EditRecommendationDialog\";\r\nimport {EditRecommendationContext} from \"../contexts/EditRecommendationContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport debounce from \"lodash/debounce\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        flexWrap: 'wrap',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    left: {\r\n        width: '50%',\r\n        height: '100%',\r\n        padding: 16,\r\n    },\r\n    leftTop:{\r\n        alignItems: 'flex-start',\r\n        height: '10%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    leftContent:{\r\n        padding: 16,\r\n        borderStyle: 'dashed',\r\n        height: '80%',\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    right:{\r\n        width: '50%',\r\n        height: '100%',\r\n        padding: 16,\r\n    },\r\n    rightTop: {\r\n        alignItems: 'flex-start',\r\n        height: '10%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n    rightContent: {\r\n        padding: 16,\r\n        borderStyle: 'dashed',\r\n        height: '80%',\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    }\r\n});\r\n\r\nfunction RecommendationsPage({classes}) {\r\n\r\n    const [recommendations, setRecommendations] = useState([]);\r\n    const [homeRecommendations, setHomeRecommendations] = useState([]);\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [pagingData, setPagingData] = useState({pageNum: 1})\r\n\r\n    const { startEditing } = useContext(EditRecommendationContext)\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    function getRecommendations(page, keywordChange = false) {\r\n        API.Recommendation.getAllRecommendations(\"?full=true&p=\"+page+\"&keyword=\"+keyword).then(response=>{\r\n            if(keywordChange){\r\n                setRecommendations(unique(response.list, homeRecommendations))\r\n            }else{\r\n                setRecommendations(old=>[...old, ...unique(response.list, homeRecommendations)])\r\n            }\r\n\r\n            delete response.list\r\n            setPagingData(response)\r\n        }).catch(()=>{\r\n\r\n        }).finally(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        Promise.all([\r\n            API.Explore.getExplorePage(\"?s=100\"),\r\n            API.Recommendation.getAllRecommendations(\"?full=true\")\r\n        ]).then((responses)=>{\r\n            setHomeRecommendations(responses[0].list)\r\n            setRecommendations(unique(responses[1].list, responses[0].list))\r\n        }).catch(()=>{\r\n\r\n        }).finally(()=>{\r\n            setLoading(false)\r\n        })\r\n\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!loading){\r\n            getRecommendations(1, true)\r\n        }\r\n    }, [keyword])\r\n\r\n    function unique(newList, existingRecommendations){\r\n        const uniqueList = []\r\n        let found = false;\r\n        for(let i = 0; i<newList.length; i++){\r\n            for(let j = 0; j<existingRecommendations.length; j++){\r\n                if(newList[i].id === existingRecommendations[j].id){\r\n                    found = true\r\n                    break;\r\n                }\r\n            }\r\n            if(!found){\r\n                uniqueList.push(newList[i])\r\n            }\r\n            found = false\r\n        }\r\n\r\n\r\n        return uniqueList\r\n    }\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        console.log(\"Handle scroll\")\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollHeight - e.target.scrollTop - scrollOffset)  <= e.target.clientHeight;\r\n        if (bottom && !loading && recommendations.length>0 && pagingData.pageNum<pagingData.pages) {\r\n            setLoading(true);\r\n            console.log(\"Requesting new page\")\r\n            getRecommendations(pagingData.pageNum+1);\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n\r\n    function RecommendationSkeleton(){\r\n        return(\r\n            <div>\r\n                <Skeleton animation='wave' variant=\"rect\" width={200} height={40} />\r\n                <Skeleton animation='wave' variant=\"text\" width={180}/>\r\n                <Skeleton animation='wave' variant=\"text\" width={250}/>\r\n                <div style={{display: 'flex', margin: 16, flexDirection: 'row'}}>\r\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\r\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\r\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\r\n                </div>\r\n                <Skeleton animation='wave' variant=\"text\" width={1000}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    function updateExplorePage() {\r\n        const explorable = []\r\n        homeRecommendations.map(row=>{\r\n            explorable.push(row.id)\r\n        })\r\n\r\n        // setLoading(true)\r\n        API.Explore.updateExplorePage(explorable).then(()=>{\r\n            addConfig(true, \"Updated explore page successfully!\")\r\n\r\n        }).catch(()=>{\r\n            addConfig(false, \"Unexpected error!\")\r\n        }).finally(()=>{\r\n            // setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.left}>\r\n                <div className={classes.leftTop}>\r\n                    <Typography variant=\"h4\">\r\n                        Home recommendations\r\n                    </Typography>\r\n\r\n                    <Button\r\n                        onClick={updateExplorePage}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        Save feed\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className={classes.leftContent}>\r\n                    {loading ? <>\r\n                            <RecommendationSkeleton />\r\n                            <RecommendationSkeleton style={{marginTop: 48}}/>\r\n                        </> :\r\n                        homeRecommendations.length > 0 ?\r\n                        <ReactSortable\r\n                            style={{width: '100%', height: '100%'}}\r\n                            list={homeRecommendations}\r\n                            setList={setHomeRecommendations}\r\n                            animation={150}\r\n                            group=\"cards\"\r\n                            onChange={(order, sortable, evt) => {}}\r\n                            onEnd={evt => {}}\r\n                        >\r\n                            {homeRecommendations.map(rec => (\r\n                                <Recommendation\r\n                                    key={rec.id}\r\n                                    recommendation={rec}\r\n                                    onEditCallback={()=> {\r\n                                        startEditing(rec, homeRecommendations, setHomeRecommendations)\r\n                                    }}\r\n                                />\r\n                            ))}\r\n                        </ReactSortable> : <Alert style={{marginTop: 48}} severity=\"info\">No recommendations are put in home tab. Click and Drag existing recommendations from right side.</Alert>\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={classes.right}>\r\n                <div className={classes.rightTop}>\r\n                    <Typography variant=\"h4\">\r\n                        Existing recommendations\r\n                    </Typography>\r\n\r\n                </div>\r\n                <div className={classes.rightContent} onScroll={handleScroll}>\r\n                    <TextField id=\"standard-search\" label=\"Search\" value={keyword} type=\"search\" onChange={e=>{\r\n                        setKeyword(e.target.value)\r\n                    }} />\r\n                    {loading ? <>\r\n                       <RecommendationSkeleton />\r\n                       <RecommendationSkeleton style={{marginTop: 16}}/>\r\n                    </> :\r\n                        recommendations.length > 0 ?\r\n\r\n                           <ReactSortable\r\n                           style={{width: '100%', height: '100%'}}\r\n                           list={recommendations}\r\n                           setList={setRecommendations}\r\n                           animation={150}\r\n                           group=\"cards\"\r\n                           onChange={(order, sortable, evt) => {}}\r\n                           onEnd={evt => {}}\r\n                           >\r\n                           {recommendations.map(rec => (\r\n                               <Recommendation\r\n                                   onEditCallback={()=>{\r\n                                       startEditing(rec, recommendations, setRecommendations)\r\n                                   }}\r\n                                   key={rec.id}\r\n                                   recommendation={rec}/>\r\n                           ))}\r\n                           </ReactSortable> :  <Alert style={{marginTop: 48}} severity=\"info\">Currently there are no available recommendations.</Alert>\r\n                       }\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <EditRecommendationDialog />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(RecommendationsPage);\r\n","import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Home from \"../pages/Home\";\r\nimport Places from \"../pages/Places\";\r\nimport AddPlace from \"../pages/AddPlace\";\r\nimport history from \"../helpers/history\";\r\nimport ApiPlaces from \"../pages/ApiPlaces\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport NotFoundPage from \"../pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nimport Tour from \"./tour_components/Tour\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport Tours from \"../pages/Tours\";\r\nimport Resources from \"./Resources\";\r\nimport {PlacesFilterProvider} from \"../contexts/PlacesFilterContext\";\r\nimport ManageUsers from \"../pages/ManageUsers\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport API from \"../Networking/API\";\r\nimport {AuthContext} from \"../contexts/AuthContext\";\r\nimport RecommendationsPage from \"../pages/RecommendationsPage\";\r\nimport EditRecommendationProvider, {EditRecommendationContext} from \"../contexts/EditRecommendationContext\";\r\nimport AppStateStorageProvider from \"../contexts/AppStateStorageContext\";\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root1: {\r\n        overflow: \"hidden\",\r\n        display: 'flex',\r\n        height: \"100vh\",\r\n        background: \"#F1F1F1\"\r\n    },\r\n    appBar: {\r\n        height: \"64px\",\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        //padding: theme.spacing(3),\r\n        // transition: theme.transitions.create('margin', {\r\n        //     easing: theme.transitions.easing.sharp,\r\n        //     duration: theme.transitions.duration.leavingScreen,\r\n        // }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        // transition: theme.transitions.create('margin', {\r\n        //     easing: theme.transitions.easing.easeOut,\r\n        //     duration: theme.transitions.duration.enteringScreen,\r\n        // }),\r\n        marginLeft: 0\r\n    },\r\n}));\r\n\r\n// const PlacesWithContext = () =>  (\r\n//     <AppStateStorageProvider>\r\n//         <Places/>\r\n//     </AppStateStorageProvider>\r\n// );\r\n\r\nconst TourWithContext = (props) =>  (\r\n    <PlacesFilterProvider>\r\n        <Tour {...props}/>\r\n    </PlacesFilterProvider>\r\n);\r\n\r\nconst RecommendationsWithContext = (props) =>  (\r\n    <EditRecommendationProvider>\r\n        <RecommendationsPage {...props}/>\r\n    </EditRecommendationProvider>\r\n);\r\n\r\n\r\nexport default function Appbar(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const { title, setTitle } = UseAppBarTitleContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    let location = useLocation();\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleListItemClick = (url,title) =>{\r\n        handleDrawerClose();\r\n        setTitle(title);\r\n\r\n        let re = new RegExp(url+'([0-9]*)?');\r\n        if(re.test(location.pathname)){\r\n            history.push(url);\r\n            history.go(0);\r\n        }\r\n    };\r\n\r\n    function handleLogout() {\r\n        addAlertConfig(\"Logout\", \"Are you sure you want to logout\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                localStorage.removeItem(\"access_token\");\r\n                localStorage.removeItem(\"refresh_token\")\r\n                history.push(\"/login\")\r\n            }\r\n        }])\r\n    }\r\n\r\n    const hasPermission = (perm) => {\r\n        return currentUser != null && currentUser.permissions.some(permission => permission.permission === perm)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root1}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <Typography variant=\"h6\" style={{width: \"100%\"}}>\r\n                        {currentUser != null ? currentUser.name : \"Loading user profile\"}\r\n                    </Typography>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button component={Link} to=\"/app/home\" onClick={()=>handleListItemClick(\"/app/home\",\"Home\")}>\r\n                        <ListItemText>Home</ListItemText>\r\n                    </ListItem>\r\n                    <Divider light />\r\n                    <ListItem button component={Link} to=\"/app/places\" onClick={()=>handleListItemClick(\"/app/places\",\"Places\")} >\r\n                        <ListItemText>Places</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/tours\" onClick={()=>handleListItemClick(\"/app/tours\",\"Tours\")} >\r\n                        <ListItemText>Tours</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/recommendations\" onClick={()=>handleListItemClick(\"/app/recommendations\",\"Recommendations\")} >\r\n                        <ListItemText>Recommendations</ListItemText>\r\n                    </ListItem>\r\n                    {/*<ListItem button component={Link} to=\"/app/apiplaces\" onClick={()=>handleListItemClick(\"/app/apiplaces\",\"Api places\")} >*/}\r\n                    {/*    <ListItemText>Explore API places</ListItemText>*/}\r\n                    {/*</ListItem>*/}\r\n                    { hasPermission(\"place:insert\") &&\r\n                        <ListItem button component={Link} to=\"/app/addplace\" onClick={()=>handleListItemClick(\"/app/addplace\",\"Add Place\")} >\r\n                            <ListItemText>Add place</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    { hasPermission(\"tour:modify\") &&\r\n                        <ListItem button component={Link} to=\"/app/addtour\"\r\n                                  onClick={() => handleListItemClick(\"/app/addtour\", \"Add tour\")}>\r\n                            <ListItemText>Add tour</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    <ListItem button component={Link} to=\"/app/resources\" onClick={()=>handleListItemClick(\"/app/resources\",\"Manage resources\")} >\r\n                        <ListItemText>Resources</ListItemText>\r\n                    </ListItem>\r\n                    { hasPermission(\"role:manage\") &&\r\n                        <ListItem button component={Link} to=\"/app/users\" onClick={()=>handleListItemClick(\"/app/users\",\"Manage users\")} >\r\n                            <ListItemText>Manage users</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    <Divider light />\r\n                    <ListItem button onClick={()=>handleLogout()} >\r\n                        <ListItemText>Logout</ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                <Switch>\r\n                    <Route exact path=\"/app/home\" component={Home} />\r\n                    <Route path=\"/app/places\" component={Places} />\r\n                    <Route path=\"/app/tours\" component={Tours} />\r\n                    <Route path=\"/app/addplace/:placeId?\" component={AddPlace} />\r\n                    <Route path=\"/app/recommendations\" component={RecommendationsWithContext} />\r\n                    <Route path=\"/app/addtour/:tourId?\" component={TourWithContext} />\r\n                    <Route path=\"/app/resources\" component={Resources} />\r\n                    <Route path=\"/app/users\" component={ManageUsers} />\r\n                    <Redirect from=\"*\" to=\"/404\"/>\r\n                </Switch>\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport Appbar from './components/Appbar.js';\r\nimport AppBarTitleProvider from \"./contexts/AppBarTitleContext\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <AppBarTitleProvider>\r\n                        <Appbar />\r\n                    </AppBarTitleProvider>\r\n                    </MuiPickersUtilsProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default App;","import React, {useContext, useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport history from \"../helpers/history\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {AuthContext} from \"../contexts/AuthContext\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {isAuthenticated} from \"../helpers/tokens\";\r\nimport API from \"../Networking/API\";\r\nimport {func} from \"prop-types\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n                Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    loaderMain: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        alignItems:\"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"red\"\r\n    }\r\n}));\r\n\r\nexport default function LoginPage() {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setIsLoading] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n    const { currentUser, setCurrentUser } = useContext(AuthContext);\r\n\r\n    const handleLogin = () =>{\r\n        setIsLoading(true);\r\n        console.log(\"handleLogin\", {identifier: email, password: password});\r\n        API.Auth.login({identifier: email, password: password}).then(response=>{\r\n            if(!checkAccess(response.authorities)){\r\n                addConfig(false, \"Only admins and editors can access admin panel!\")\r\n                setIsLoading(false);\r\n                return\r\n            }\r\n            setIsLoading(false);\r\n            localStorage.setItem(\"access_token\", response.access_token);\r\n            localStorage.setItem(\"refresh_token\", response.refresh_token);\r\n            API.User.getUserProfile().then(response=>{\r\n                console.log(\"User profile:\", response);\r\n                setCurrentUser(response);\r\n                history.push(\"/app/home\");\r\n            }).catch(error=>{\r\n                setIsLoading(false);\r\n                addConfig(false, error.message)\r\n            });\r\n        }).catch(error=>{\r\n            setIsLoading(false);\r\n            addConfig(false, error.message)\r\n        });\r\n    };\r\n\r\n    function checkAccess(roles){\r\n        var hasAccess = false\r\n        roles.map(row=>{\r\n            console.log(row)\r\n            if(row.authority === \"ROLE_ADMIN\"){\r\n                hasAccess = true\r\n            }\r\n        });\r\n        return hasAccess\r\n    }\r\n\r\n    if (isAuthenticated()) {\r\n        return <Redirect to=\"/app\" />;\r\n    }\r\n\r\n    const handleKeyPress = (event) =>{\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            handleLogin();\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    return <Container component=\"main\" maxWidth=\"xs\" onKeyPress={(e)=>handleKeyPress(e)}>\r\n\r\n                            {loading && <LinearProgress />}\r\n                            <CssBaseline />\r\n                            <div className={classes.paper}>\r\n                                <Avatar className={classes.avatar}>\r\n                                    <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <Typography component=\"h1\" variant=\"h5\">\r\n                                    Sign in\r\n                                </Typography>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={email}\r\n                                    onChange={(e)=>{setEmail(e.target.value)}}\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    autoFocus\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    value={password}\r\n                                    onChange={(e)=>{setPassword(e.target.value)}}\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                                <Button\r\n                                    onClick={()=>{handleLogin()}}\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    Sign In\r\n                                </Button>\r\n                            </div>\r\n                            <Box mt={8}>\r\n                                <Copyright />\r\n                            </Box>\r\n                        </Container>\r\n\r\n}","import Route from \"react-router-dom/es/Route\";\r\nimport React, {useContext} from \"react\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {isAuthenticated} from \"../helpers/tokens\";\r\n\r\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                isAuthenticated() === true ? (\r\n                    <Component {...routeProps} />\r\n                ) : (\r\n                    <Redirect to={\"/login\"} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\n\r\nexport default function SnackbarFeedback(props){\r\n\r\n    const { config, removeConfig } = UseSnackbarContext();\r\n\r\n    return(\r\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\r\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"error\") : \"\"}>\r\n                {!!config && config.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\"\r\n\r\nconst AlertDialogFeedback = () => {\r\n\r\n    const {alertConfig, removeAlertConfig} = UseAlertDialogContext();\r\n\r\n    function remove() {\r\n        if(alertConfig.onClose !== undefined){\r\n            alertConfig.onClose()\r\n        }\r\n        removeAlertConfig()\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={!!alertConfig}\r\n            onClose={remove}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{!!alertConfig ? alertConfig.title : \"\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {!!alertConfig ? alertConfig.message : \"\"}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={remove}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                {!!alertConfig && alertConfig.actions.map(row=>{\r\n                    return <Button onClick={()=>{\r\n                        remove();\r\n                        row.action();\r\n                    }}\r\n                    color=\"primary\"\r\n                    >\r\n                            {row.name}\r\n                    </Button>\r\n                })}\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\n\r\nexport default AlertDialogFeedback\r\n","import Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\r\n\r\n\r\nexport const TextInputDialog = () => {\r\n\r\n    const {dialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen} = UseEditDialogContext();\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [error, setError] = useState(0)\r\n\r\n    const deInit = () => {\r\n        setError(0)\r\n        setDialogOpen(false)\r\n        setInputText(\"\")\r\n    }\r\n\r\n    const handleClose = () => {\r\n        deInit()\r\n    }\r\n\r\n    const handleDone = () => {\r\n        let errorCode = dialogConfig.validateInput(inputText)\r\n        setError(errorCode)\r\n        if(errorCode !== 0) return\r\n\r\n        if(dialogConfig.onDoneCallback !== undefined)\r\n            dialogConfig.onDoneCallback(inputText)\r\n        deInit()\r\n    }\r\n    const handleInput = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={dialogOpen} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n                <DialogTitle id=\"form-dialog-title\">{dialogConfig.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {dialogConfig.explanation}\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        helperText={error !== 0 && dialogConfig.errorMessages[error] !== null ? dialogConfig.errorMessages[error] : \"\"}\r\n                        error={error !== 0}\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        onInput={handleInput}\r\n                        label={dialogConfig.textFieldLabel}\r\n                        defaultValue={dialogConfig.defaultText}\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleDone} color=\"primary\">\r\n                        Done\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport history from \"./helpers/history\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport {Router, Route, Link, Switch} from \"react-router-dom\";\r\nimport {AuthenticatedRoute} from \"./components/AuthenticatedRoute\";\r\nimport NotFoundPage from \"./pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\r\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\r\nimport AlertDialogProvider from \"./contexts/AlertDialogContext\";\r\nimport AlertDialogFeedback from \"./components/feedback/AlertDialogFeedback\";\r\nimport {AuthProvider} from \"./contexts/AuthContext\";\r\nimport {PlacesFilterProvider} from \"./contexts/PlacesFilterContext\";\r\nimport EditDialogProvider from \"./contexts/EditDialogContext\";\r\nimport {TextInputDialog} from \"./components/feedback/TextInputDialog\";\r\nimport LoadingScreen from \"./components/LoadingScreen\";\r\nimport AppStateStorageProvider from \"./contexts/AppStateStorageContext\";\r\n\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <AppStateStorageProvider>\r\n            <AuthProvider>\r\n                <Router history={history}>\r\n                    <SnackbarProvider>\r\n                        <AlertDialogProvider>\r\n                            <EditDialogProvider>\r\n                                <SnackbarFeedback/>\r\n                                <AlertDialogFeedback/>\r\n                                <TextInputDialog/>\r\n                                <PlacesFilterProvider>\r\n                                    <Switch>\r\n                                        <Redirect exact from=\"/\" to=\"/login\"/>\r\n                                        <Redirect exact from=\"/app\" to=\"/app/home\"/>\r\n                                        <AuthenticatedRoute path=\"/app\" component={App}/>\r\n                                        <Route path=\"/login\" component={LoginPage}/>\r\n                                        <Route path=\"*\" component={NotFoundPage}/>\r\n                                        <Redirect from=\"*\" to=\"/404\"/>\r\n                                    </Switch>\r\n                                </PlacesFilterProvider>\r\n                            </EditDialogProvider>\r\n                        </AlertDialogProvider>\r\n                    </SnackbarProvider>\r\n                </Router>\r\n            </AuthProvider>\r\n        </AppStateStorageProvider>\r\n\r\n    </React.Fragment>\r\n    , document.getElementById('root'));\r\n"],"sourceRoot":""}