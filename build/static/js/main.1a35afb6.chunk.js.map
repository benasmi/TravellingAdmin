{"version":3,"sources":["pages/Home.js","components/TableComponent.js","helpers/debounce.js","helpers/history.js","helpers/auth.js","Networking/NetworkLayerCentral.js","Networking/API.js","contexts/AlertDialogContext.js","contexts/UseAlertDialogContext.js","helpers/stringResources.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","contexts/AppBarTitleContext.js","contexts/UseAppBarTitleContext.js","pages/Places.js","helpers/priceRange.js","helpers/averageTimeSpent.js","components/AutocompleteChip.js","components/AddSourceDialog.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/CustomMap.js","components/add_place_components/PlaceLocation.js","components/add_place_components/ParkingLocation.js","components/AddDialog.js","components/add_place_components/PlaceDiscovery.js","components/add_place_components/initialScheduleData.js","components/ReviewCard.js","components/add_place_components/Reviews.js","components/ScheduleInterval.js","components/DayComponent.js","components/Schedule.js","components/add_place_components/SchedulesWrapper.js","pages/AddPlace.js","components/ApiPlaceCard.js","components/SearchInputComponent.js","pages/ApiPlaces.js","pages/NotFoundPage.js","components/Appbar.js","App.js","pages/LoginPage.js","components/AuthenticatedRoute.js","components/feedback/SnackbarFeedback.js","components/feedback/AlertDialogFeedback.js","index.js"],"names":["withStyles","theme","button","margin","spacing","input","display","props","classes","descendingComparator","a","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","checkable","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","customToolbarElements","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","style","alignItems","TextField","target","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","centerCell","textAlign","rowNotPublished","rowNotVerified","rowBasic","TableComponent","pagingInfo","data","updateCallback","removeCallback","isLoading","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","rowStyle","undefined","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckboxChange","header","isId","scope","fontSize","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","pageNum","onChangePage","newPage","onChangeRowsPerPage","parseInt","console","log","history","getAccessToken","Cookies","get","request","options","contentType","client","axios","create","baseURL","headers","onSuccess","response","debug","onError","error","config","status","push","message","Promise","reject","then","catch","RequestType","getRequest","path","urlData","url","method","postRequest","postMultipartRequest","formData","API","SourcePlace","updateSourcesForPlace","urlParams","Source","getSources","addSource","Places","getAllPlaces","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","removePlace","Tags","getAllTags","addTag","params","Categories","addCategory","getAllCategories","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","Reviews","getPlaceReviews","AlertDialogContext","createContext","alertConfig","addAlertConfig","removeAlertConfig","AlertDialogProvider","children","setAlertConfig","contextValue","func","onClose","onCloseFunc","Provider","UseAlertDialogContext","useContext","Strings","DIALOG_PLACE_PUBLISH_TITLE","DIALOG_PLACE_PUBLISH_MESSAGE","DIALOG_PLACE_UNPUBLISH_MESSAGE","DIALOG_PLACE_INSERT_TITLE","DIALOG_PLACE_INSERT","DIALOG_PLACE_UPDATE_TITLE","DIALOG_PLACE_UPDATE","DIALOG_PLACE_VERIFY_TITLE","DIALOG_PLACE_VERIFY_MESSAGE","DIALOG_PLACE_DELETE_TITLE","DIALOG_PLACE_DELETE_MESSAGE","SNACKBAR_PLACE_INSERTED_SUCCESS","SNACKBAR_PLACE_REMOVE_SUCCESS","SNACKBAR_ERROR","SNACKBAR_CHANGES_SAVED","SnackbarContext","addConfig","removeConfig","SnackbarProvider","setConfig","success","UseSnackbarContext","AppBarTitleContext","setTitle","AppBarTitleProvider","UseAppBarTitleContext","sortingButtons","flexDirection","buttonsDiv","justifyContent","content","breakpoints","down","up","setData","pageData","setPageData","setIsLoading","filterLabel","filter","filterName","filterOptions","setFilterOptions","filterQuery","setFilterQuery","parseData","placesData","list","anchorEl","setAnchorEl","open","Boolean","handleClick","currentTarget","p","tmp","placeId","aria-describedby","Popover","anchorOrigin","vertical","horizontal","transformOrigin","FormControlLabel","control","filters","fq","join","filterOptionsChanged","Box","Button","startIcon","priceRange","averageTimeSpent","autoComplete","chip","flexWrap","listStyle","autoCompleteChipContainer","setOptions","selectedOptions","setSelectedOptions","getCurrentVal","setCurrentVal","firstLoad","setFirstLoad","found","row1","JSON","stringify","option","Chip","onDelete","item","Autocomplete","disableClearable","getOptionLabel","renderInput","closeButton","right","grey","action","setDialogOpen","setText","setUrl","setError","Dialog","fullWidth","DialogTitle","DialogContent","dividers","ev","marginTop","DialogActions","autoFocus","validateInput","previousPrice","placeInfo","setPlaceInfo","selectedSources","setSelectedSources","checkErrors","updatePlaceInfo","newValue","place","Object","assign","err","valuetext","setAvailableSources","hasPrice","setHasPrice","hasAverageTime","setHasAverageTime","dialogOpen","availableSources","val","required","placeholder","e","InputLabelProps","shrink","multiline","rows","Switch","old","labelPlacement","Slider","disabled","marginLeft","defaultValue","getAriaValueText","step","marks","FormControl","InputLabel","Select","native","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","distance","onSortEnd","oldIndex","newIndex","arrayMove","axis","acceptedFileFormats","onCloseCallback","onFinishCallback","loading","acceptedFiles","dropzoneProps","filesLimit","onDrop","files","imagefile","FormData","append","finally","handleFileUpload","outline","addImageDialogOpen","setAddImageDialogOpen","file","handleAddPhoto","autocomplete","borderBottom","locationData","setLocationData","mapHeight","selectedParkingCallback","changedParkingMarkerCallback","addParkingCallback","useFunction","callback","ref","useRef","current","useCallback","apply","this","arguments","Geocode","setApiKey","enableDebug","selectParkingHandler","addNewParkingHandler","geocodeFromLatLng","newLat","newLng","onMarkerLocationChanged","onParkingDataChanged","fromLatLng","address","results","formatted_address","addressArray","address_components","city","getCity","country","getCountry","changeLocationData","latitude","longitude","i","types","long_name","MyMapComponent","compose","withProps","containerElement","mapElement","withStateHandlers","infoWindow","show","toggleDraggableInfoWindow","draggableMarkerLocation","withGoogleMap","defaultZoom","center","lat","markerLocation","lng","defaultCenter","visible","draggable","onDragEnd","markerChanger","onParkingDataChange","latLng","onCloseClick","onToggleOpen","infoWindows","parkingData","location","parseFloat","parkingId","icon","showInfo","handleKeyPress","onMarkerLocationChange","which","keyCode","test","fromAddress","geometry","split","FullMap","parking","iw","onKeyPress","onPlaceSelected","latitudeValue","longitudeValue","navigator","geolocation","getCurrentPosition","coords","alert","useMemo","parkingMarkerData","setParkingMarkerData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","getClosestParking","parkingDataChanged","SortableItem","elevation","SortableList","oldArray","textFieldLabel","description","selectedTags","setSelectedTags","selectedCategories","setSelectedCategories","dialogAddTagOpen","setDialogAddTagOpen","dialogAddCategoryOpen","setDialogAddCategoryOpen","availableCategories","setAvailableCategories","availableTags","setAvailableTags","AutocompleteChip","newTag","tagId","newCat","categoryId","initialScheduleData","openDay","closeDay","openTime","closeTime","marginRight","ReviewCard","review","CardContent","Avatar","alt","photoUrl","surname","Rating","rating","readOnly","upvotes","moment","timeAdded","format","reviewsInfo","reviews","overflowX","setReviews","filterBy","setFilterBy","getReviewsForPlace","debounceScroll","debounce","round","scrollWidth","scrollLeft","clientWidth","totalReviews","handleScrollDebounced","handleClose","Fragment","overallStarRating","precision","RadioGroup","Radio","onScroll","persist","handleScroll","flexFlow","picker","intervalRightSide","intervalLeftSide","intervals","setIntervals","currentInterval","lastAccommodation","lastAccommodationEnabled","setLastAccommodationEnabled","lastAccommodationTime","setLastAccommodationTime","getCloseDay","currentPeriod","isBefore","handleDelete","oldIntervals","useTheme","largeScreen","useMediaQuery","only","TimePicker","ampm","InputProps","disableUnderline","state","scheduleData","setScheduleData","periods","Divider","pickerStyle","headerLeft","setPeriods","handleIntervalChange","newIntervals","oldPeriods","filtered","oldData","schedule","isDefault","DatePicker","views","from","to","generateWeekdayViews","isScheduleEnabled","setIsScheduleEnabled","float","paperContent","loader","bottom","match","website","phoneNumber","hasSchedule","isPublic","isVerified","source","price","sources","setSources","setPlaceId","firstTimeLoading","setFirstTimeLoading","setCheckErrors","ColorButton","getContrastText","green","formFeedback","saveChanges","keys","errorsExists","formPlaceInfo","updateAll","all","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","updateSources","er","d","tags","categories","responses","CircularProgress","obj","CategoriesDisplay","SubheaderDisplay","media","expand","transform","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","CardHeader","subheader","substring","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debouncedInput","InputBase","orientation","topBar","zIndex","searchBox","isLoadingData","setIsLoadingData","word","query","encodeURI","elementType","isFitWidth","disableImagesLoaded","updateOnEachImageLoad","boxSizing","Copyright","Date","getFullYear","minHeight","footer","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","Appbar","setOpen","CssBaseline","AppBar","edge","Drawer","anchor","List","ListItem","Link","ListItemText","exact","Home","AddPlace","ApiPlaces","Redirect","App","utils","DateFnsUtils","Component","form","submit","AuthenticatedRoute","rest","Route","render","SnackbarFeedback","Snackbar","autoHideDuration","Alert","severity","AlertDialogFeedback","remove","DialogContentText","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","email","setEmail","password","setPassword","handleLogin","signInWithEmailAndPassword","user","currentUser","getIdToken","idToken","set","Container","maxWidth","mt","gutterBottom","document","getElementById"],"mappings":"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","file":"static/js/main.1a35afb6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst Home = props => {\r\n    const { classes } = props;\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport useDebounce from \"../helpers/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, checkable} = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n\r\n                {checkable ? <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell> : null}\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right'  : 'left' }\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    headCells: PropTypes.object.isRequired,\r\n    checkable: PropTypes.bool.isRequired\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected, title, changePageCallback, keyword, setKeyword, customToolbarElements} = props;\r\n\r\n\r\n    const debouncedSearch = useDebounce(keyword, 300);\r\n\r\n\r\n\r\n    useEffect( () => {\r\n            changePageCallback(1,keyword)\r\n        },\r\n        [debouncedSearch]\r\n    );\r\n\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n            )}\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"delete\">\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : <div style={{display: \"flex\", alignItems: \"center\"}}>\r\n                <TextField id=\"standard-basic\" label=\"Search\" onChange={ event =>{setKeyword(event.target.value)}}/>\r\n                {!!customToolbarElements ? customToolbarElements : null}\r\n            </div>}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    centerCell: {\r\n        textAlign: \"center\",\r\n        width: '100%'\r\n    },\r\n    rowNotPublished:{\r\n        backgroundColor: \"#ffcdd2\"\r\n    },\r\n    rowNotVerified:{\r\n        backgroundColor: \"#fff9c4\"\r\n    },\r\n    rowBasic: {\r\n        backgroundColor: \"#FFFFFF\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function TableComponent({title, headCells, pagingInfo, data, checkable, changePageCallback, updateCallback, removeCallback, id, isLoading, customToolbarElements}) {\r\n\r\n    TableComponent.propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        headCells: PropTypes.object.isRequired,\r\n        pagingInfo: PropTypes.object,\r\n        data: PropTypes.object.isRequired,\r\n        checkable: PropTypes.bool.isRequired,\r\n        changePageCallback: PropTypes.func,\r\n        updateCallback: PropTypes.func,\r\n        removeCallback: PropTypes.func,\r\n        id: PropTypes.string.isRequired,\r\n        isLoading: PropTypes.bool,\r\n        customToolbarElements: PropTypes.object\r\n    };\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = data.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleCheckboxChange = (event, name) =>{\r\n\r\n            const selectedIndex = selected.indexOf(name);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(selected, name);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(selected.slice(1));\r\n            } else if (selectedIndex === selected.length - 1) {\r\n                newSelected = newSelected.concat(selected.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    selected.slice(0, selectedIndex),\r\n                    selected.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelected(newSelected);\r\n\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n\r\n    };\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n        console.log(\"handleChangeRowsPerPage\")\r\n\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                {isLoading ? <LinearProgress/> : null }\r\n                <EnhancedTableToolbar\r\n                    title={title}\r\n                    numSelected={selected.length}\r\n                    changePageCallback={changePageCallback}\r\n                    keyword={keyword}\r\n                    setKeyword={setKeyword}\r\n                    customToolbarElements={customToolbarElements}\r\n                />\r\n                 <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={data.length}\r\n                            headCells={headCells}\r\n                            checkable={checkable}\r\n                        />\r\n\r\n\r\n                        <TableBody>\r\n                            {stableSort(data, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n\r\n                                    const isItemSelected = isSelected(row.name);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    const rowStyle = row['isVerified'] !== undefined  && row['isVerified'] === false ? classes.rowNotVerified :\r\n                                        row['isPublic'] !== undefined && row['isPublic'] === false ? classes.rowNotPublished :  classes.rowBasic;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            className={rowStyle}\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row.name)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.name}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            {checkable ? <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    onChange={(event)=>handleCheckboxChange(event, row.name)}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell> : null}\r\n\r\n                                            {headCells.map(header=>{\r\n                                                if(header.isId){\r\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\r\n                                                            {row[header.id]}\r\n                                                        </TableCell>\r\n                                                }else if(header.id === 'actions' ){\r\n                                                        return <TableCell >\r\n                                                            <div>\r\n                                                                <IconButton onClick={()=>updateCallback(row[id])} size=\"small\" aria-label=\"edit\" >\r\n                                                                    <EditIcon fontSize=\"small\" />\r\n                                                                </IconButton>\r\n\r\n                                                                <IconButton size=\"small\" aria-label=\"delete\" >\r\n                                                                    <DeleteIcon onClick={()=>removeCallback(row[id])} fontSize=\"small\" />\r\n                                                                </IconButton>\r\n                                                            </div>\r\n                                                            </TableCell>\r\n                                                }else{\r\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\r\n                                                }\r\n\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows}}>\r\n\r\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\r\n                                        <TableCell colSpan={6} className={classes.centerCell}>\r\n                                            <Typography variant=\"h6\" noWrap>\r\n                                                No results\r\n                                            </Typography>\r\n                                        </TableCell>}\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10]}\r\n                    component=\"div\"\r\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\r\nexport default function useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(\r\n        () => {\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n\r\n        [value]\r\n    );\r\n\r\n    return debouncedValue;\r\n}","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import Cookies from 'js-cookie'\r\n\r\nexport const getAccessToken = () => Cookies.get('access_token');\r\nexport const isAuthenticated = () => !!getAccessToken();","import React from \"react\";\r\nimport axios from \"axios\"\r\nimport history from \"../helpers/history\";\r\nimport {getAccessToken} from \"../helpers/auth\"\r\n\r\nconst request = async function(options, contentType) {\r\n\r\n    const client = axios.create({\r\n        baseURL: false ? \"http://localhost:8080/\" : \"https://www.traveldirection.ax.lt:8080/\",\r\n        headers: {\r\n            'Content-Type': (contentType == null) ? 'application/json': contentType,\r\n            'Accept':  'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            \"Authorization\": getAccessToken()\r\n        },\r\n    });\r\n\r\n    const onSuccess = function (response) {\r\n        console.debug('Request Successful!', response);\r\n        return response.data;\r\n    };\r\n\r\n    const onError = function (error) {\r\n        console.debug('Request Failed:', error.config);\r\n        if (error.response) {\r\n            console.debug('Status:', error.response.status);\r\n            if(error.response.status === 403){\r\n                history.push(\"/login\")\r\n            }\r\n            console.debug('Data:', error.response.data);\r\n            console.debug('Headers:', error.response.headers);\r\n        } else {\r\n            console.debug('Error Message:', error.message);\r\n        }\r\n        return Promise.reject(error.response || error.message);\r\n    };\r\n\r\n    return client(options)\r\n        .then(onSuccess)\r\n        .catch(onError);\r\n};\r\n\r\nconst getRequest = function (path, urlData= \"\") {\r\n    return request({\r\n        url:path+urlData,\r\n        method: 'GET'\r\n    });\r\n};\r\n\r\nconst postRequest = function (path, data, urlData = \"\") {\r\n    return request({\r\n        url:    path+urlData,\r\n        method: 'POST',\r\n        data: data\r\n    });\r\n};\r\n\r\nconst postMultipartRequest = function (path, formData) {\r\n    return request({\r\n        url: path,\r\n        method: 'POST',\r\n        data: formData\r\n    }, 'multipart/form-data' /*'application/x-www-form-urlencoded'*/);\r\n};\r\n\r\nconst RequestType = {\r\n    getRequest, postRequest, postMultipartRequest\r\n};\r\n\r\nexport default RequestType\r\n\r\n\r\n","import RequestType from '../Networking/NetworkLayerCentral'\r\n\r\n//Places\r\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\r\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\r\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\r\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\r\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\r\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\r\nconst removePlace = (urlParams) => RequestType.getRequest(\"api/v1/place/delete\", urlParams);\r\n\r\nconst Places = {getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces, removePlace};\r\n\r\n//Tags\r\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\r\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\r\nconst Tags = {getAllTags, addTag};\r\n\r\n//Category\r\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\r\nconst getAllCategories = () => RequestType.getRequest(\"api/v1/categories/all\");\r\nconst Categories = {addCategory, getAllCategories};\r\n\r\n//Photo\r\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\r\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\r\nconst Photos = {addPhoto, uploadPhoto};\r\n\r\n\r\n//Parking\r\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\r\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\r\nconst Parking = {getParkingByLocation, insertNewParking};\r\n\r\n\r\n//TagsPlace\r\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\r\nconst TagsPlace = {updateTagsForPlace};\r\n\r\n\r\n//CategoriesPlace\r\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\r\nconst CategoriesPlace = {updateCategoriesForPlace};\r\n\r\n//PhotoPlace\r\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\r\nconst ParkingPlace = {updateParkingForPlace};\r\n\r\n//PhotoPlace\r\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\r\nconst PhotoPlace = {updatePhotoForPlace};\r\n\r\n//Schedule\r\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\r\nconst Schedule = {updateScheduleForPlace};\r\n\r\n//ReviewsPlace\r\nconst getPlaceReviews = (urlParams) => RequestType.getRequest(\"api/v1/reviews/all\", urlParams);\r\nconst Reviews = {getPlaceReviews};\r\n\r\n//Sources\r\nconst getSources = () => RequestType.getRequest(\"api/v1/source/all\");\r\nconst addSource = (data) => RequestType.postRequest(\"api/v1/source/insert\",data);\r\nconst Source = {getSources, addSource};\r\n\r\n//SourcePlace\r\nconst updateSourcesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/sourceplace/update\", data, urlParams);\r\nconst SourcePlace = {updateSourcesForPlace};\r\n\r\nconst API = {SourcePlace, Source,Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule, Reviews};\r\n\r\nexport default API\r\n\r\n","// src/common/providers/APIErrorProvider/index.js\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nexport const AlertDialogContext = React.createContext({\r\n    alertConfig: null,\r\n    addAlertConfig: () => {},\r\n    removeAlertConfig: () => {}\r\n});\r\n\r\nexport default function AlertDialogProvider({ children }) {\r\n    const [alertConfig, setAlertConfig] = useState(null);\r\n\r\n    const contextValue = {\r\n        alertConfig,\r\n        addAlertConfig: (title, message, func, onClose=undefined) => setAlertConfig({ title, message, func,onClose}),\r\n        removeAlertConfig: (onCloseFunc) => setAlertConfig(null)\r\n    };\r\n\r\n    return (\r\n        <AlertDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </AlertDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AlertDialogContext} from \"./AlertDialogContext\";\r\n\r\nexport default function UseAlertDialogContext() {\r\n    const { alertConfig, addAlertConfig, removeAlertConfig } = useContext(AlertDialogContext);\r\n    return { alertConfig, addAlertConfig, removeAlertConfig };\r\n}\r\n","const Strings = {\r\n    DIALOG_PLACE_PUBLISH_TITLE : 'Place publicity',\r\n    DIALOG_PLACE_PUBLISH_MESSAGE: \"This place will be visible for all users. Are you sure?\",\r\n    DIALOG_PLACE_UNPUBLISH_MESSAGE :\"This place will not be visible anymore. Are you sure?\",\r\n\r\n    DIALOG_PLACE_INSERT_TITLE: \"Insert place\",\r\n    DIALOG_PLACE_INSERT: \"Are you sure you want to insert this place?\",\r\n\r\n    DIALOG_PLACE_UPDATE_TITLE: \"Update place\",\r\n    DIALOG_PLACE_UPDATE: \"Are you sure you want to make changes to this place?\",\r\n\r\n    DIALOG_PLACE_VERIFY_TITLE: \"Place verification\",\r\n    DIALOG_PLACE_VERIFY_MESSAGE: \"This is a user's suggested place. Are you sure you want to verify this place and make it visible to others?\",\r\n\r\n    DIALOG_PLACE_DELETE_TITLE: \"Delete place\",\r\n    DIALOG_PLACE_DELETE_MESSAGE: \"This action will remove this place permanently. Are you sure you want to proceed?\",\r\n\r\n    SNACKBAR_PLACE_INSERTED_SUCCESS: \"Place inserted successfully\",\r\n    SNACKBAR_PLACE_REMOVE_SUCCESS: \"Place was removed successfully\",\r\n    SNACKBAR_ERROR: \"Something went wrong!\",\r\n    SNACKBAR_CHANGES_SAVED: \"All changes saved!\"\r\n};\r\n\r\nexport default Strings;","import React, { useState, useCallback } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nexport const SnackbarContext = React.createContext({\r\n    config: null,\r\n    addConfig: () => {},\r\n    removeConfig: () => {}\r\n});\r\n\r\n\r\nexport default function SnackbarProvider({ children }) {\r\n    const [config, setConfig] = useState(null);\r\n\r\n    const removeConfig = () => setConfig(null);\r\n    const addConfig = (success, message) => setConfig({ success, message });\r\n\r\n    const contextValue = {\r\n        config,\r\n        addConfig: (success, message) => addConfig(success, message),\r\n        removeConfig: () => removeConfig()\r\n    };\r\n\r\n    return (\r\n        <SnackbarContext.Provider value={contextValue}>\r\n            {children}\r\n        </SnackbarContext.Provider>\r\n    );\r\n}","import { useContext } from 'react';\r\nimport {SnackbarContext} from \"./SnackbarContext\";\r\n\r\nexport default function UseSnackbarContext() {\r\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\r\n    return { config, addConfig, removeConfig };\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport const AppBarTitleContext = React.createContext({\r\n    title: \"\",\r\n    setTitle: () => {},\r\n});\r\n\r\nexport default function AppBarTitleProvider({ children }) {\r\n    const [title, setTitle] = useState(\"Home\");\r\n\r\n    const contextValue = {\r\n        title,\r\n        setTitle: (title) => setTitle(title)\r\n    };\r\n\r\n    return (\r\n        <AppBarTitleContext.Provider value={contextValue}>\r\n            {children}\r\n        </AppBarTitleContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AppBarTitleContext} from \"./AppBarTitleContext\";\r\n\r\nexport default function UseAppBarTitleContext() {\r\n    const { title, setTitle } = useContext(AppBarTitleContext);\r\n    return { title, setTitle };\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {forEach} from \"react-bootstrap/cjs/ElementChildren\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\n\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n\r\n    sortingButtons: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n\r\n},\r\n\r\n    root:{\r\n        height:\"100vh\",\r\n        width:\"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content:{\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\r\n    { id: 'address', numeric: false, disablePadding: false, label: 'Address',isId: false},\r\n    { id: 'city', numeric: false, disablePadding: false, label: 'City',isId: false },\r\n    { id: 'country', numeric: false, disablePadding: false, label: 'Country',isId: false },\r\n    { id: 'phoneNumber', numeric: false, disablePadding: false, label: 'Phone Number',isId: false },\r\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\r\n];\r\n\r\nfunction Places(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { classes } = props;\r\n\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [filterQuery, setFilterQuery] = useState(\"\");\r\n\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Filter query\", filterQuery);\r\n        getAllPlaces(\"?o=\"+filterQuery)\r\n    },[filterQuery]);\r\n\r\n    function parseData(data){\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updatePlaceCallback(id){\r\n        history.push(\"/app/addplace/\"+id)\r\n    }\r\n    function removePlaceCallback(id){\r\n        setIsLoading(true);\r\n        addAlertConfig(Strings.DIALOG_PLACE_DELETE_TITLE, Strings.DIALOG_PLACE_DELETE_MESSAGE, function () {\r\n            API.Places.removePlace(\"?p=\"+id).then(response=>{\r\n                let tmp = [];\r\n                data.map(row=>{\r\n                    if(row.placeId !== id){\r\n                        tmp.push(row)\r\n                    }\r\n                });\r\n                setData(tmp);\r\n                addConfig(true, Strings.SNACKBAR_PLACE_REMOVE_SUCCESS)\r\n                setIsLoading(false)\r\n            }).catch(error=>{\r\n                setIsLoading(false);\r\n                addConfig(false, Strings.SNACKBAR_ERROR)\r\n            })\r\n        }, ()=>{setIsLoading(false)})\r\n    }\r\n\r\n    const changePageCallback = (p=0, keyword=\"\") => {\r\n        setIsLoading(true);\r\n        getAllPlaces(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword+\"&o=\"+filterQuery)\r\n    };\r\n\r\n\r\n    //Sorting stuff\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let filters = [];\r\n        let fq = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n            if(row.filter){\r\n                fq.push(row.filterName)\r\n            }\r\n            filters.push(row)\r\n        });\r\n\r\n        setFilterQuery(fq.join(\",\"));\r\n        setFilterOptions(filters)\r\n    };\r\n\r\n    const customToolbarElements = () =>{\r\n        return <div>\r\n            <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                    <FilterListIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={()=>{setAnchorEl(null)}}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.sortingButtons}>\r\n                    {filterOptions.map(row=>{\r\n                        return <FormControlLabel\r\n                            control={<Checkbox checked={row.filter} onChange={()=>filterOptionsChanged(row.filterName)} name={row.filterName} />}\r\n                            label={row.filterLabel}\r\n                        />\r\n                    })}\r\n                </div>\r\n\r\n            </Popover>\r\n        </div>\r\n    };\r\n    /*------------------------------------------------------------------------------------------------------*/\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content} >\r\n                <TableComponent\r\n                    title={\"Places\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updatePlaceCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    id={\"placeId\"}\r\n                    isLoading={isLoading}\r\n                    customToolbarElements={customToolbarElements()}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={()=>{history.push(\"/app/addplace\")}}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon />}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n    function getAllPlaces(urlParams=\"\") {\r\n        API.Places.getAllPlacesAdmin(urlParams).then(response=>{\r\n            parseData(response)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nPlaces.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Places);","export const priceRange = [\r\n    {\r\n        value: 0,\r\n        label: \"$\",\r\n    },\r\n    {\r\n        value: 25,\r\n        label: \"$$\",\r\n    },\r\n    {\r\n        value: 50,\r\n        label: \"$$$\",\r\n    },\r\n    {\r\n        value: 75,\r\n        label: \"$$$$\",\r\n    },\r\n    {\r\n        value: 100,\r\n        label: \"$$$$$\",\r\n    }\r\n];\r\n","export const averageTimeSpent = [\r\n    {\r\n        value: 30,\r\n        label: 30,\r\n    },\r\n    {\r\n        value: 60,\r\n        label: 60,\r\n    },\r\n    {\r\n        value: 90,\r\n        label: 90,\r\n    },\r\n    {\r\n        value: 120,\r\n        label: 120,\r\n    },\r\n    {\r\n        value: 150,\r\n        label: 150,\r\n    },\r\n    {\r\n        value: 180,\r\n        label: 180,\r\n    },\r\n    {\r\n        value: 210,\r\n        label: 210,\r\n    },\r\n    {\r\n        value: 240,\r\n        label: 240,\r\n    },\r\n    {\r\n        value: 270,\r\n        label: 270,\r\n    },\r\n];","\r\nimport React, {useEffect, useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    autoComplete: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(1),\r\n        margin: 0,\r\n    },\r\n    autoCompleteChipContainer: {\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction AutoCompleteChip(props){\r\n\r\n    const {options, setOptions, selectedOptions, setSelectedOptions, classes, label, id} = props;\r\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\r\n    const [firstLoad, setFirstLoad] = useState(true);\r\n\r\n    function handleDelete(data) {\r\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\r\n        setOptions(\r\n            [\r\n                ...options,\r\n                data\r\n            ]\r\n        )\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(firstLoad && options.length>0){\r\n            let data = [];\r\n            options.map(row=>{\r\n                let found = false;\r\n                selectedOptions.map(row1=>{\r\n                    if(JSON.stringify(row) === JSON.stringify(row1)){\r\n                        found = true\r\n                    }\r\n                });\r\n                if(!found){\r\n                   data.push(row)\r\n                }\r\n            });\r\n            setOptions(data);\r\n            setFirstLoad(false)\r\n        }\r\n    },[options]);\r\n\r\n    function handleInput(event, value){\r\n        setCurrentVal({\"name\": \"\"});\r\n        setSelectedOptions(\r\n            [\r\n                ...selectedOptions,\r\n                value\r\n            ]\r\n        );\r\n        setOptions(options.filter(item => item !== value))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Box  className={classes.autoCompleteChipContainer}>\r\n                {selectedOptions.length !== 0 &&\r\n                <Box component=\"ul\" className={classes.root}>\r\n                    {\r\n                        selectedOptions.map(option => {\r\n                            return(\r\n                                <li key={option[id]}>\r\n                                    <Chip\r\n                                        variant=\"outlined\"\r\n                                        label={option.name}\r\n                                        onDelete={() => handleDelete(option)}\r\n                                        className={classes.chip}\r\n                                    />\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </Box>\r\n                }\r\n\r\n                <Autocomplete\r\n                    className={classes.autoComplete}\r\n                    value={getCurrentVal}\r\n                    options={options}\r\n                    onChange={handleInput}\r\n                    disableClearable\r\n                    getOptionLabel={(option) =>  option.name}\r\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\r\n                />\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nAutoCompleteChip.propTypes = {\r\n    setSelectedOptions: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    setOptions: PropTypes.func.isRequired,\r\n    selectedOptions: PropTypes.array.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    label: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AutoCompleteChip)","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    }\r\n});\r\n\r\nfunction AddSourceDialog(props){\r\n\r\n    function validateInput(){\r\n        let error = false;\r\n        if(text.length <= 3 || url.length <=3)\r\n            error = true;\r\n        setError(error);\r\n        return error\r\n    }\r\n\r\n    let {classes, open, action, setDialogOpen} = props;\r\n    const [text, setText] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    return(\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Insert source\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                        <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}\r\n                                   label=\"Source name\" variant=\"outlined\" fullWidth />\r\n                        <TextField style={{marginTop:\"16px\"}} error={error} onChange = {(ev) => {setUrl(ev.target.value)}}\r\n                                   label=\"Source url\" variant=\"outlined\" fullWidth />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={()=>setDialogOpen(false)} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text, url);\r\n                        setDialogOpen(false)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\nexport default withStyles(styles)(AddSourceDialog)","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {priceRange} from \"../../helpers/priceRange\";\r\nimport {averageTimeSpent} from \"../../helpers/averageTimeSpent\"\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport API from \"../../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddSourceDialog from \"../AddSourceDialog\";\r\n\r\n\r\nconst styles = theme => ({});\r\nlet previousPrice = \"\";\r\n\r\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo, selectedSources, setSelectedSources, error, setError, checkErrors}) {\r\n\r\n    const updatePlaceInfo = (event, newValue) => {\r\n        const {name, value, id} = event.target;\r\n        let place = Object.assign({}, placeInfo, {});\r\n        let err = Object.assign({}, error, {});\r\n        if (id !== \"\") {\r\n            place[id] = valuetext(newValue[0]);\r\n        } else {\r\n            //err[name] = name==='name' && value.length === 0;\r\n            place[name] = value\r\n        }\r\n        console.log(\"Updated place\", place);\r\n        setError(err);\r\n        setPlaceInfo(place)\r\n    };\r\n\r\n    const getSources = () =>{\r\n        API.Source.getSources().then(response=>{\r\n            setAvailableSources(response)\r\n        }).catch(error=>{\r\n\r\n        })\r\n    };\r\n\r\n    const handleAddSource = (name, url) =>{\r\n        API.Source.addSource({name: name, url: url}).then(response=>{\r\n            setAvailableSources(\r\n                [\r\n                    ...availableSources,\r\n                    response\r\n                ]\r\n            );\r\n            setSelectedSources([\r\n                ...selectedSources,\r\n                response\r\n            ]);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getSources()\r\n    },[]);\r\n\r\n    console.log(placeInfo[\"averageTimeSpent\"]);\r\n    const [hasPrice, setHasPrice] = useState(placeInfo[\"price\"] !== \"\");\r\n    const [hasAverageTime, setHasAverageTime] = useState( parseInt(placeInfo[\"averageTimeSpent\"]) !== 0);\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    const [availableSources, setAvailableSources] = useState([]);\r\n\r\n    function valuetext(value) {\r\n        let val = \"\";\r\n        priceRange.map(row => {\r\n            if (row.value === value)\r\n                val = row.label\r\n        });\r\n        return val\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\">\r\n            Basic place information\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            error={checkErrors && error['name']}\r\n            label=\"Place name\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter the place name\"\r\n            fullWidth\r\n            value={placeInfo['name']}\r\n            name=\"name\"\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Place description\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Describe the place thoroughly\"\r\n            fullWidth\r\n            multiline\r\n            name=\"description\"\r\n            value={placeInfo['description']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            rows={4}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Phone number\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter phone number\"\r\n            fullWidth\r\n            name=\"phoneNumber\"\r\n            value={placeInfo['phoneNumber']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Website\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter website\"\r\n            fullWidth\r\n            name=\"website\"\r\n            value={placeInfo['website']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n       <AutoCompleteChip\r\n                id=\"source\"\r\n                label=\"Select sources\"\r\n                options={availableSources}\r\n                setOptions={setAvailableSources}\r\n                setSelectedOptions={setSelectedSources}\r\n                selectedOptions={selectedSources}\r\n       />\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={() => setDialogOpen(true)}\r\n            startIcon={<AddIcon />}>\r\n            Add missing source\r\n        </Button>\r\n        <AddSourceDialog\r\n            action={handleAddSource}\r\n            open={dialogOpen}\r\n            setDialogOpen={setDialogOpen}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={hasPrice}\r\n                        onChange={() => {\r\n                            setHasPrice(old => {\r\n                                let place = Object.assign({}, placeInfo, {});\r\n                                if (old === false) {\r\n                                        previousPrice = place['price'];\r\n                                        place[\"price\"] = \"\";\r\n                                        setPlaceInfo(place);\r\n                                    }else{\r\n                                        place['price'] = previousPrice;\r\n                                        setPlaceInfo(place);\r\n                                    }\r\n                                    return !old\r\n                                }\r\n                            )\r\n                        }}\r\n                        name=\"price\"\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"Price\"\r\n                labelPlacement=\"start\"\r\n            />\r\n\r\n            <Slider\r\n                id=\"price\"\r\n                onChange={updatePlaceInfo}\r\n                disabled={!hasPrice}\r\n                value={priceRange.map(row => {\r\n                    if (row.label === placeInfo['price']) return row.value\r\n                })}\r\n                style={{width: \"60%\", marginLeft: \"48px\"}}\r\n                defaultValue={0}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider-always\"\r\n                step={25}\r\n                marks={priceRange}\r\n            />\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={hasAverageTime}\r\n                        onChange={() => setHasAverageTime(old => {\r\n                            let place = Object.assign({}, placeInfo, {})\r\n                            place[\"averageTimeSpent\"] = old === true ? 0 : 30\r\n                            setPlaceInfo(place)\r\n                            return !old\r\n                        })}\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"Average time Spent\"\r\n                labelPlacement=\"start\"\r\n            />\r\n\r\n\r\n            <FormControl variant=\"outlined\" style={{width: \"60%\", marginLeft: \"48px\"}}>\r\n                <InputLabel>Minutes</InputLabel>\r\n                <Select\r\n                    disabled={!hasAverageTime}\r\n                    native\r\n                    value={parseInt(placeInfo['averageTimeSpent'], 10)}\r\n                    onChange={updatePlaceInfo}\r\n                    label=\"Average Time spent\"\r\n                    inputProps={{\r\n                        name: 'averageTimeSpent'\r\n                    }}\r\n                >\r\n                    <option disabled value=\"0\">\"\"</option>\r\n                    {\r\n                        averageTimeSpent.map(row=>{\r\n                            return <option value={parseInt(row.value, 10)}> {row.value}</option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport React, {useMemo, useState} from \"react\"\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Delete from \"@material-ui/icons/Delete\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst imgWithClick = { cursor: \"pointer\" };\r\n\r\nconst Photo = ({ index, onItemDelete, photo, margin, direction, top, left }) => {\r\n\r\n    const styles = {\r\n        imgContainer: {\r\n            margin: margin,\r\n            display: 'inline',\r\n            position: 'relative',\r\n            width: '300px',\r\n            height: '300px',\r\n        }\r\n    }\r\n    if (direction === \"column\") {\r\n        styles.imgContainer.position = \"absolute\";\r\n        styles.imgContainer.imgStyle.left = left;\r\n        styles.imgContainer.imgStyle.top = top;\r\n    }\r\n\r\n    const handleDelete = event => {\r\n        onItemDelete(photo);\r\n    }\r\n\r\n        return (\r\n\r\n            <Card style={styles.imgContainer}>\r\n                <CardMedia\r\n                    style={{height: 0, paddingTop: '80%'}}\r\n                    image={photo.src}\r\n                />\r\n                <CardActions disableSpacing>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<DeleteIcon />}\r\n                        onClick = {(event) => {handleDelete(event)}}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </CardActions>\r\n\r\n            </Card>\r\n        )\r\n\r\n};\r\n\r\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\r\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\r\nconst SortableGallery = SortableContainer(({ items, onItemDelete}) => (\r\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>} />\r\n));\r\n\r\nfunction ReorderablePhotos(props){\r\n    let {setPhotos, photos, srcName, keyName} = props\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\r\n    };\r\n    function handleItemDelete(photo){\r\n        setPhotos(photos.filter(item => {return item[keyName].toString() !== photo.key}))\r\n    }\r\n\r\n    let modifiedData = photos.map(item =>  {\r\n        return(\r\n    {\r\n        key: item[keyName].toString(),\r\n        src: item[srcName],\r\n        width: 1,\r\n        height: 1\r\n    })\r\n\r\n})\r\n        return (\r\n            <div >\r\n                <SortableGallery distance={10} items={modifiedData} onSortEnd={onSortEnd} axis={\"xy\"} onItemDelete = {handleItemDelete} />\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\n\r\nexport default  ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {DropzoneArea} from \"material-ui-dropzone\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../Networking/API\";\r\nimport axios from \"axios\";\r\n\r\nconst styles = theme => ({\r\n});\r\n\r\nconst acceptedFileFormats = ['image/jpeg', 'image/png', 'image/bmp', 'image/jpg']\r\n\r\nfunction AddImageDialog(props){\r\n\r\n    const {onCloseCallback, open, onFinishCallback} = props\r\n    const [loading, setIsLoading] = useState(false)\r\n\r\n    function handleFileUpload(files) {\r\n        setIsLoading(true)\r\n\r\n        var imagefile = files[0]\r\n        let formData = new FormData()\r\n        formData.append(\"image\", imagefile)\r\n\r\n        API.Photos.uploadPhoto(formData).then(response => {\r\n            onFinishCallback(response)\r\n        }).catch(err => {\r\n            onFinishCallback()\r\n        }).finally(() => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\" >\r\n                    Photo upload\r\n                </DialogTitle>\r\n                {loading && <LinearProgress variant=\"query\" />}\r\n                <DialogContent dividers>\r\n                    <DropzoneArea\r\n                        acceptedFiles={acceptedFileFormats}\r\n                        dropzoneProps = {{disabled: loading}} filesLimit={1} onDrop={(files) => handleFileUpload(files)}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\nAddImageDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onFinishCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddImageDialog)\r\n","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ReorderablePhotos from \"../ReorderablePhotos\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddImageDialog from \"../AddImageDialog\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PhotosInfo({classes, setPhotos, photos}) {\r\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\r\n\r\n    function handleAddPhoto(file) {\r\n        setAddImageDialogOpen(false);\r\n        if(file == null)\r\n            return;\r\n        setPhotos([\r\n            ...photos,\r\n            file]\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h6\" >\r\n                Photos\r\n            </Typography>\r\n            <Card variant={\"outlined\"} className={classes.outline}>\r\n\r\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\r\n\r\n\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{width: '15%'}}\r\n                    className={classes.button}\r\n                    onClick={() => setAddImageDialogOpen(true)}\r\n                    startIcon={<AddIcon />}>\r\n                    Add photo\r\n                </Button>\r\n\r\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(file) => handleAddPhoto(file)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\r\n\r\n\r\n            </Card>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PhotosInfo)\r\n\r\n\r\n","import React, {memo, useEffect, useMemo, useState} from 'react'\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport Geocode from \"react-geocode\";\r\nimport {compose, withProps, withStateHandlers} from \"recompose\"\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {map} from \"react-bootstrap/cjs/ElementChildren\";\r\nimport PropTypes, {func} from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n\r\n//\r\n\r\n//Geocoding API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\r\n//Places API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\r\n//Maps API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    autocomplete:{\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline:\"0\",\r\n        marginBottom: \"4px\"\r\n    }\r\n});\r\n\r\nvar markerData = {};\r\nfunction CustomMap({classes, locationData, setLocationData, mapHeight, selectedParkingCallback, changedParkingMarkerCallback, addParkingCallback}){\r\n\r\n\r\n    CustomMap.propTypes = {\r\n        locationData: PropTypes.object,\r\n        setLocationData: PropTypes.func,\r\n        mapHeight: PropTypes.number\r\n    };\r\n\r\n\r\n\r\n    var parkingIcon = 'https://developers.google.com/maps/documentation/javascript/examples/full/images/parking_lot_maps.png';\r\n\r\n    Geocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\r\n    Geocode.enableDebug();\r\n\r\n\r\n    function useFunction(callback) {\r\n        const ref = React.useRef();\r\n        ref.current = callback;\r\n\r\n        return React.useCallback(function() {\r\n            const callback = ref.current;\r\n            if (typeof callback === \"function\") {\r\n                return callback.apply(this, arguments);\r\n            }\r\n        }, []);\r\n    }\r\n    const selectParkingHandler = useFunction(selectedParkingCallback);\r\n    const addNewParkingHandler = useFunction(addParkingCallback);\r\n\r\n\r\n    const onPlaceSelected = (place, onMarkerLocationChanged, onParkingDataChanged) => {\r\n\r\n        const address = place.formatted_address\r\n        const addressArray =  place.address_components\r\n        if(addressArray !== undefined){\r\n            const city = getCity( addressArray ),\r\n                country = getCountry(addressArray),\r\n                latitudeValue = place.geometry.location.lat(),\r\n                longitudeValue = place.geometry.location.lng();\r\n\r\n            onMarkerLocationChanged(latitudeValue, longitudeValue, address, city, country);\r\n            changeLocationData(city,country,address,latitudeValue,longitudeValue, onParkingDataChanged);\r\n        }\r\n    };\r\n\r\n    const onMarkerDragEnd = ( event, onMarkerLocationChanged, onParkingDataChanged) => {\r\n        let newLat = event.latLng.lat(),\r\n            newLng = event.latLng.lng();\r\n            geocodeFromLatLng(newLat, newLng, onMarkerLocationChanged, onParkingDataChanged)\r\n    };\r\n\r\n    function geocodeFromLatLng(newLat, newLng, onMarkerLocationChanged, onParkingDataChanged){\r\n        Geocode.fromLatLng( newLat , newLng ).then(\r\n            response => {\r\n                const address = response.results[0].formatted_address\r\n                const addressArray =  response.results[0].address_components\r\n                if(addressArray!==undefined){\r\n                    const city = getCity( addressArray ),\r\n                        country = getCountry( addressArray );\r\n\r\n                    onMarkerLocationChanged(newLat, newLng, address, city, country);\r\n\r\n                    changeLocationData(city,country,address,newLat,newLng, onParkingDataChanged);\r\n                }\r\n            },\r\n            error => {\r\n                console.error(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    function geocodeFromAddress(address, onMarkerLocationChanged, onParkingDataChanged){\r\n        Geocode.fromAddress( address ).then(\r\n            response => {\r\n                const { lat, lng } = response.results[0].geometry.location;\r\n                const address = response.results[0].formatted_address;\r\n                const addressArray =  response.results[0].address_components;\r\n                if(addressArray!==undefined){\r\n                    const city = getCity( addressArray ),\r\n                        country = getCountry( addressArray );\r\n\r\n                    console.log(lat, lng)\r\n                    onMarkerLocationChanged(lat, lng, address, city, country);\r\n                        console.log(\"Pateko\")\r\n                    changeLocationData(city,country,address,lat,lng, onParkingDataChanged);\r\n                }\r\n            },\r\n            error => {\r\n                console.error(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    function changeLocationData(city,country,address,latitude,longitude, onParkingDataChanged) {\r\n        let data = Object.assign({}, locationData, {});\r\n        data['city'] = city;\r\n        data['country'] = country;\r\n        data['address'] = address;\r\n        data['latitude'] = latitude;\r\n        data['longitude'] = longitude;\r\n        setLocationData(data);\r\n        markerData = data;\r\n        if (changedParkingMarkerCallback !== undefined){\r\n            changedParkingMarkerCallback(city,address,country, latitude,longitude, onParkingDataChanged);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the city and set the city input value to the one selected\r\n     *\r\n     * @param addressArray\r\n     * @return {string}\r\n     */\r\n    const getCity = ( addressArray ) => {\r\n        if(addressArray !== undefined){\r\n            let city = '';\r\n            for( let i = 0; i < addressArray.length; i++ ) {\r\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\r\n                    city = addressArray[ i ].long_name;\r\n                    return city;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    function getCurrentPosition(onMarkerLocationChanged, onParkingDataChanged){\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n            let newLat = position.coords.latitude,\r\n                newLng = position.coords.longitude;\r\n\r\n            Geocode.fromLatLng( newLat , newLng ).then(\r\n                response => {\r\n                    const address = response.results[0].formatted_address\r\n                    const addressArray =  response.results[0].address_components\r\n                    if(addressArray!==undefined){\r\n                        const city = getCity( addressArray ),\r\n                            country = getCountry( addressArray );\r\n\r\n                        onMarkerLocationChanged(newLat, newLng, address, city, country);\r\n                        changeLocationData(city,country,address,newLat,newLng, onParkingDataChanged);\r\n                    }\r\n                },\r\n                error => {\r\n                }\r\n            );\r\n            console.log(\"Latitude is :\", position.coords.latitude);\r\n            console.log(\"Longitude is :\", position.coords.longitude);\r\n        }, error=>{\r\n            alert(error.message + \"\\n\" + JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    const getCountry = (addressArray) =>{\r\n        //getCurrentPosition()\r\n        if(addressArray!=undefined){\r\n        let country = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\r\n                country = addressArray[ i ].long_name;\r\n                return country;\r\n            }\r\n        }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * Renders parking data markers\r\n     *\r\n     * @param onToggleOpen Method to open marker's info window\r\n     * @param infoWindows Marker info window\r\n     * @param parking data\r\n     * @returns {*}\r\n     */\r\n    const markers = (onToggleOpen, infoWindows, parking) =>{\r\n        return parking.map((location, i) => {\r\n\r\n            const latitude = parseFloat(location.latitude);\r\n            const longitude = parseFloat(location.longitude);\r\n\r\n            return (\r\n                <Marker\r\n                    key={location.parkingId}\r\n                    position={{ lat: latitude, lng: longitude}}\r\n                    options={{icon: parkingIcon}}\r\n                    onClick={()=>onToggleOpen(location.parkingId)}\r\n                >\r\n\r\n                    {infoWindows[i].showInfo && (\r\n                        <InfoWindow >\r\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                                {location.address}\r\n                                <Button\r\n                                    onClick={()=>{selectParkingHandler(location)}}\r\n                                    variant=\"text\"\r\n                                    color=\"secondary\"\r\n                                    size=\"large\"\r\n                                    className={classes.button}\r\n                                    startIcon={<AddIcon />}>\r\n                                    Add parking\r\n                                </Button>\r\n                            </div>\r\n                        </InfoWindow>\r\n                    )}\r\n\r\n                </Marker>\r\n            )\r\n        })\r\n    };\r\n\r\n\r\n    /**\r\n     * Map component that renders parking data and has draggable marker\r\n     */\r\n    const MyMapComponent = compose(\r\n        withProps({\r\n            containerElement: <div style={{ height: mapHeight }} />,\r\n            mapElement: <div style={{ height: `100%` }} />,\r\n        }),\r\n        withStateHandlers({\r\n                infoWindow: {show: false}\r\n            },{\r\n            toggleDraggableInfoWindow: ({draggableMarkerLocation}) => (show) => ({\r\n                infoWindow: {show: show}\r\n            })\r\n            }\r\n        ),\r\n        withGoogleMap\r\n    )(props =>\r\n\r\n        <GoogleMap\r\n            defaultZoom={12}\r\n            center={{lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }}\r\n            defaultCenter={{ lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }}\r\n        >\r\n\r\n\r\n\r\n            <Marker\r\n                name={'Dolores park'}\r\n                visible={true}\r\n                draggable={true}\r\n                onClick={()=>props.toggleDraggableInfoWindow(true)}\r\n                onDragEnd={e=>onMarkerDragEnd(e, props.markerChanger, props.onParkingDataChange)}\r\n                position={{ lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }} >\r\n\r\n                {props.infoWindow.show && addParkingCallback && (\r\n                    <InfoWindow onCloseClick={()=>{props.toggleDraggableInfoWindow(false)}}>\r\n                        <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                            {props.markerLocation.address}\r\n                            <Button\r\n                                onClick={()=>{\r\n\r\n                                    addNewParkingHandler(props.markerLocation)\r\n\r\n                                }}\r\n                                variant=\"text\"\r\n                                color=\"secondary\"\r\n                                size=\"large\"\r\n                                className={classes.button}\r\n                                startIcon={<AddIcon />}>\r\n                                Add new parking\r\n                            </Button>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )}\r\n            </Marker>\r\n\r\n            {markers(props.onToggleOpen, props.infoWindows, props.parkingData)}\r\n        </GoogleMap>\r\n    );\r\n\r\n\r\n    const handleKeyPress = (event, onMarkerLocationChange, onParkingDataChange) =>{\r\n        const value = event.target.value;\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            if (/[a-zA-Z]+/.test(value)){\r\n                geocodeFromAddress(value, onMarkerLocationChange, onParkingDataChange)\r\n            }else{\r\n                let position = value.split(/[ ,]+/);\r\n                if(position.length === 2){\r\n                    geocodeFromLatLng(parseFloat(position[0]), parseFloat(position[1]), onMarkerLocationChange, onParkingDataChange)\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Places autocomplete and map. This component holds it's inner states like draggableMarkerLocation, parkingData etc.\r\n     */\r\n    const FullMap = compose(\r\n        withProps(),\r\n        withStateHandlers({\r\n            draggableMarkerLocation: {\r\n                latitude: locationData.latitude,\r\n                longitude: locationData.longitude,\r\n                address:  locationData.address\r\n            },parkingData: [], infoWindows: []\r\n        },{\r\n            onMarkerLocationChanged: ({draggableMarkerLocation}) => (newLat, newLng, address, city, country) => ({\r\n                draggableMarkerLocation: {\r\n                    latitude: newLat,\r\n                    longitude: newLng,\r\n                    address: address,\r\n                    city: city,\r\n                    country: country\r\n                }\r\n            }),\r\n                onParkingDataChange: ({parkingData}) => (parking) => ({\r\n                    parkingData: parking.map(row=>{\r\n                        return row\r\n                    }),\r\n                    infoWindows: parking.map(p => {\r\n                        return { parkingId: p.parkingId, showInfo: false };\r\n                    })\r\n                }),\r\n                onToggleOpen: ({ infoWindows }) => selectedIndex => ({\r\n                    infoWindows: infoWindows.map((iw, i) => {\r\n                        iw.showInfo = selectedIndex === iw.parkingId;\r\n                        return iw;\r\n                    })\r\n                })\r\n            }\r\n            )\r\n    )(props=>\r\n        <div className={classes.content}>\r\n            <Autocomplete\r\n                onKeyPress={(event)=>{handleKeyPress(event, props.onMarkerLocationChanged, props.onParkingDataChange)}}\r\n                className={classes.autocomplete}\r\n                onPlaceSelected={(place)=>{onPlaceSelected(place, props.onMarkerLocationChanged, props.onParkingDataChange)} }\r\n                types={['(regions)']}\r\n            />\r\n            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\">\r\n                <MyLocationIcon\r\n                    fontSize=\"large\"\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        getCurrentPosition(props.onMarkerLocationChanged, props.onParkingDataChange)\r\n                    }}\r\n\r\n                />\r\n            </IconButton>\r\n\r\n            <MyMapComponent markerChanger={props.onMarkerLocationChanged}\r\n                            markerLocation={props.draggableMarkerLocation}\r\n                            onParkingDataChange={props.onParkingDataChange}\r\n                            parkingData={props.parkingData}\r\n                            onToggleOpen={props.onToggleOpen}\r\n                            infoWindows={props.infoWindows}\r\n            />\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n    /**\r\n     * Memoization of a component.\r\n     */\r\n    return useMemo(() => {\r\n        return <FullMap/>;\r\n    }, [])\r\n\r\n    //\r\n\r\n}\r\n\r\nexport default withStyles(styles)(CustomMap);","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CustomMap from \"../CustomMap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PlaceLocation({locationData, setLocationData}) {\r\n\r\n    function changeLocationData(event){\r\n        const {name, value} = event.target;\r\n        let data = Object.assign({}, locationData, {});\r\n        data[name] = value;\r\n\r\n        setLocationData(data)\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select place location from map\r\n        </Typography>\r\n        <br/>\r\n        <CustomMap mapHeight={200}\r\n                   locationData={locationData}\r\n                   setLocationData={setLocationData}\r\n        />\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Address\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place address\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['address']}\r\n            name='address'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"City\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place city\"\r\n            fullWidth\r\n            value={locationData['city']}\r\n            name='city'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Country\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place country\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['country']}\r\n            name='country'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            rows={4}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceLocation)","import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CustomMap from \"../CustomMap\";\r\nimport API from \"../../Networking/API\";\r\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction ParkingLocation({classes, parkingMarkerData, setParkingMarkerData, allSelectedParkingData, setAllSelectedParkingData}) {\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\r\n    };\r\n\r\n    function changedParkingMarkerCallback(city,address,country,lat,lng, parkingDataChanged) {\r\n        getClosestParking(parseFloat(lat),parseFloat(lng), parkingDataChanged);\r\n    }\r\n\r\n\r\n\r\n    function addNewParking(markerData){\r\n        if(!parkingExists(markerData)){\r\n            API.Parking.insertNewParking([markerData]).then(response=>{\r\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\r\n                addConfig(true)\r\n            }).catch(error=>{\r\n                addConfig(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    function parkingExists(markerData){\r\n        for(let i = 0; i<allSelectedParkingData.length; i++){\r\n            if(allSelectedParkingData[i].address === markerData.address) return true;\r\n        }\r\n        return false\r\n    }\r\n\r\n    const getClosestParking = (lat, lng, parkingDataChanged)=>{\r\n        API.Parking.getParkingByLocation(\"?lat=\"+lat+\"&lng=\"+lng).then(response=>{\r\n            let placesData = [];\r\n            console.log(\"ParkingData\", response)\r\n            response.map(row => {\r\n                placesData.push(row)\r\n            });\r\n            parkingDataChanged(response);\r\n        }).catch(error=>{\r\n        })\r\n    };\r\n\r\n    const SortableItem = SortableElement(({value}) => (\r\n        <Paper className={classes.paper} elevation={3}>\r\n            <Typography>\r\n                {value.address}\r\n            </Typography>\r\n            <IconButton aria-label=\"delete\" className={classes.margin}\r\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </Paper>\r\n    ));\r\n\r\n    useEffect(()=>{\r\n        getClosestParking(parkingMarkerData.lat, parkingMarkerData.lng)\r\n    },[]);\r\n\r\n    const SortableList = SortableContainer(({items}) => {\r\n        return (\r\n            <ul>\r\n                {items.map((value, index) => (\r\n                <SortableItem key={index} index={index} value={value} />\r\n                ))}\r\n            </ul>\r\n        );\r\n    });\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Add parking\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select parking\r\n        </Typography>\r\n        <CustomMap mapHeight={350}\r\n                   locationData={parkingMarkerData}\r\n                   setLocationData={setParkingMarkerData}\r\n                   selectedParkingCallback={(location)=>{\r\n                       if(!parkingExists(location))\r\n                           setAllSelectedParkingData(oldArray=> [...oldArray, location])\r\n                       }}\r\n                   changedParkingMarkerCallback={changedParkingMarkerCallback}\r\n                   addParkingCallback={addNewParking}\r\n\r\n        />\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Selected parking locations\r\n        </Typography>\r\n\r\n        <SortableList distance={10} items={allSelectedParkingData} onSortEnd={onSortEnd} />\r\n\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(ParkingLocation)","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nfunction AddDialog(props){\r\n\r\n    function validateInput(){\r\n        var error = false;\r\n        if(text.length <= 3)\r\n            error = true\r\n        setError(error)\r\n        return error\r\n    }\r\n\r\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\r\n    const [text, setText] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    return(\r\n        <div>\r\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\r\n                    {header}\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    action: PropTypes.func.isRequired,\r\n    onCloseCallback: PropTypes.func.isRequired\r\n};\r\nexport default withStyles(styles)(AddDialog)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddDialog from \"../AddDialog\";\r\nimport API from \"../../Networking/API\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories}) {\r\n\r\n    const [dialogAddTagOpen, setDialogAddTagOpen] = useState(false);\r\n    const [dialogAddCategoryOpen, setDialogAddCategoryOpen] = useState(false);\r\n\r\n    const [availableCategories, setAvailableCategories] = useState([]);\r\n    const [availableTags, setAvailableTags] = useState([]);\r\n\r\n\r\n    const updateTags = () => {\r\n        API.Tags.getAllTags().then(response=>{\r\n            setAvailableTags(response);\r\n            console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n    const updateCategories = () => {\r\n        API.Categories.getAllCategories().then(response=>{\r\n            setAvailableCategories(response)\r\n            console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        });\r\n    };\r\n\r\n    useEffect(()=>{\r\n        updateTags();\r\n        updateCategories();\r\n    },[]);\r\n\r\n    const handleAddCategory = (value) => {\r\n        API.Categories.addCategory([{name: value}]).then(response=>{\r\n            let newCat = {categoryId: response[0], name: value};\r\n            setAvailableCategories(\r\n                [\r\n                    ...availableCategories,\r\n                    newCat\r\n                ]\r\n            );\r\n            setSelectedCategories([\r\n                ...selectedCategories,\r\n                newCat\r\n            ]);\r\n            setDialogAddCategoryOpen(false)\r\n\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n\r\n\r\n    const handleAddTag = (value) => {\r\n        API.Tags.addTag([{name: value}]).then(response=>{\r\n            let newTag = {tagId: response[0], name: value}\r\n            setAvailableTags(\r\n                [\r\n                    ...availableTags,\r\n                    newTag\r\n                ]\r\n            );\r\n            setSelectedTags([\r\n                ...selectedTags,\r\n                newTag\r\n            ]);\r\n            setDialogAddTagOpen(false)\r\n\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place discovery settings\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select tags\r\n        </Typography>\r\n        <AutocompleteChip label=\"Select tags\"\r\n                          id=\"tagId\"\r\n                          options={availableTags}\r\n                          setOptions={setAvailableTags}\r\n                          selectedOptions={selectedTags}\r\n                          setSelectedOptions ={setSelectedTags}/>\r\n\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={() => setDialogAddTagOpen(true)}\r\n            startIcon={<AddIcon />}>\r\n            Add missing tag\r\n        </Button>\r\n        <AddDialog action={handleAddTag} textFieldLabel=\"Name\" open={dialogAddTagOpen} onCloseCallback={() => setDialogAddTagOpen(false)} header = \"Add a new tag\" />\r\n\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select categories\r\n        </Typography>\r\n        <AutocompleteChip label=\"Select categories\"\r\n                          id=\"categoryId\"\r\n                          options={availableCategories}\r\n                          setOptions={setAvailableCategories}\r\n                          selectedOptions={selectedCategories} \r\n                          setSelectedOptions={setSelectedCategories}/>\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={() => setDialogAddCategoryOpen(true)}\r\n            startIcon={<AddIcon />}>\r\n            Add missing category\r\n        </Button>\r\n        <AddDialog action={handleAddCategory}\r\n                   textFieldLabel=\"Name\"\r\n                   open={dialogAddCategoryOpen}\r\n                   onCloseCallback={() => setDialogAddCategoryOpen(false)}\r\n                   header = \"Add a new category\" />\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceDiscovery)","const initialScheduleData = [\r\n    {\r\n        \"isDefault\": true,\r\n        \"periods\": [\r\n            {\r\n                openDay: 0,\r\n                closeDay: 0,\r\n                openTime: \"08:00\",\r\n                closeTime: \"18:00\"\r\n            },\r\n            {\r\n                openDay: 1,\r\n                closeDay: 1,\r\n                openTime: \"08:00\",\r\n                closeTime: \"18:00\"\r\n            },\r\n            {\r\n                openDay: 2,\r\n                closeDay: 2,\r\n                openTime: \"08:00\",\r\n                closeTime: \"18:00\"\r\n            },\r\n            {\r\n                openDay: 3,\r\n                closeDay: 3,\r\n                openTime: \"08:00\",\r\n                closeTime: \"18:00\"\r\n            },\r\n            {\r\n                openDay: 4,\r\n                closeDay: 4,\r\n                openTime: \"08:00\",\r\n                closeTime: \"18:00\"\r\n            },\r\n            {\r\n                openDay: 5,\r\n                closeDay: 5,\r\n                openTime: \"08:00\",\r\n                closeTime: \"12:00\"\r\n            },\r\n            {\r\n                openDay: 6,\r\n                closeDay: 6,\r\n                openTime: \"08:00\",\r\n                closeTime: \"12:00\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default initialScheduleData","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        width: \"20%\",\r\n        padding: \"2px\",\r\n        marginRight: \"16px\"\r\n    },\r\n\r\n});\r\nexport default function ReviewCard({review}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <div style={{display: \"flex\"}} >\r\n                    <Avatar alt=\"Cindy Baker\" src={!!review.photoUrl ? review.photoUrl : \"/broken-image.jpg\"} />\r\n                    <div style={{display: \"flex\", flexDirection: \"column\", marginLeft:\"8px\"}}>\r\n                        <Typography title=\"subtitle1\">\r\n                            {review.name} {review.surname}\r\n                        </Typography>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <Rating size=\"small\" name=\"read-only\" value={review.rating} readOnly />\r\n                            <Typography title=\"subtitle1\">\r\n                                {\"+\" + review.upvotes}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                    {moment(review.timeAdded).format('LL')}\r\n                </Typography>\r\n                <div style={{marginTop: \"16px\"}}>\r\n                    {review.title}\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                        {review.review}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ReviewCard from \"../ReviewCard\";\r\nimport API from \"../../Networking/API\";\r\nimport debounce from \"lodash/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nconst styles = theme => ({\r\n    reviewsInfo:{\r\n        display: \"flex\",\r\n    },\r\n    reviews:{\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        margin: theme.spacing(2),\r\n        overflowX: \"scroll\"\r\n    },\r\n    sortingButtons: {\r\n        padding: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction Reviews({classes, placeInfo}) {\r\n\r\n    const [reviews, setReviews] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    const [filterBy, setFilterBy] = useState('mostRated');\r\n\r\n    function getReviewsForPlace(urlParams = \"?p=\"+placeInfo.placeId) {\r\n        API.Reviews.getPlaceReviews(urlParams).then(response=>{\r\n            setReviews(old=>[...old, ...response.list]);\r\n            setIsLoading(false)\r\n        }).catch(error=>{\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    //Get ordered by new filter\r\n    useEffect(()=>{\r\n            getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=1&o=\"+filterBy)\r\n    },[filterBy]);\r\n\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollWidth - e.target.scrollLeft - scrollOffset)  <= e.target.clientWidth;\r\n        if (bottom && !isLoading && reviews.length>0 && reviews.length<placeInfo.totalReviews) {\r\n            setIsLoading(true);\r\n            setPage(old=>{\r\n                getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=\"+(old+1)+\"&o=\"+filterBy);\r\n                return old+1\r\n            });\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    function changeSorting(e){\r\n        const {name, value} = e.target;\r\n        setFilterBy(value);\r\n        setReviews([]);\r\n        setPage(1);\r\n        handleClose()\r\n    }\r\n\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Reviews\r\n            <br/>\r\n            {\r\n               reviews.length > 0 ?\r\n                   <React.Fragment>\r\n                       <div style={{display:\"flex\", justifyContent: \"space-between\"}}>\r\n                           <div className={classes.reviewsInfo}>\r\n                               <Rating name=\"read-only\" value={placeInfo.overallStarRating} precision={0.2} readOnly />\r\n                               <Typography style={{marginLeft:\"8px\"}} variant=\"subtitle1\">\r\n                                   {placeInfo.totalReviews} reviews\r\n                               </Typography>\r\n                           </div>\r\n                           <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                               <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                                   <FilterListIcon />\r\n                               </IconButton>\r\n                           </Tooltip>\r\n                           <Popover\r\n                               id={id}\r\n                               open={open}\r\n                               anchorEl={anchorEl}\r\n                               onClose={handleClose}\r\n                               anchorOrigin={{\r\n                                   vertical: 'bottom',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                               transformOrigin={{\r\n                                   vertical: 'top',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                           >\r\n                               <RadioGroup className={classes.sortingButtons} aria-label=\"gender\" value={filterBy} name=\"gender1\"  onChange={changeSorting}>\r\n                                   <FormControlLabel value=\"mostRated\" control={<Radio />} label=\"Most rated\" />\r\n                                   <FormControlLabel value=\"newest\" control={<Radio />} label=\"Newest\" />\r\n                               </RadioGroup>\r\n                           </Popover>\r\n                       </div>\r\n\r\n                       <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                           <Typography>\r\n                               Showing: {reviews.length} out of {placeInfo.totalReviews}\r\n                           </Typography>\r\n                           <Typography>\r\n                               Sorting by: {filterBy}\r\n                           </Typography>\r\n                       </div>\r\n                       <div className={classes.reviews} onScroll={e=>handleScroll(e)}>\r\n                           {reviews.map(row=>{\r\n                               return <ReviewCard review={row}/>\r\n                           })}\r\n                       </div>\r\n                   </React.Fragment> : <Typography> No reviews for this place</Typography>\r\n            }\r\n\r\n        </Typography>\r\n        <br/>\r\n        {isLoading ? <LinearProgress/> : null }\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(Reviews)","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { TimePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport Moment from \"react-moment\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\",\r\n        margin: theme.spacing(0.5),\r\n        // padding: theme.spacing(0.5),\r\n        alignItems: \"center\",\r\n        flexFlow: \"row wrap\"\r\n    },\r\n    picker: {\r\n        margin: theme.spacing(0.5),\r\n        width: \"30%\"\r\n    },\r\n    intervalRightSide: {\r\n        display: \"flex\",\r\n        // width: \"100%\",\r\n        // justifyContent : \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    intervalLeftSide: {\r\n    }\r\n});\r\n\r\nfunction ScheduleInterval({classes, intervals, index, setIntervals}){\r\n\r\n    let currentInterval = intervals[index]\r\n\r\n    const [lastAccommodationEnabled, setLastAccommodationEnabled] = useState(currentInterval.lastAccommodation != null)\r\n    const [lastAccommodationTime, setLastAccommodationTime] = useState(currentInterval.lastAccommodation == null ? currentInterval.closeTime : currentInterval.lastAccommodation)\r\n\r\n    const getCloseDay = (closeTime, openTime) => {\r\n        let currentPeriod = intervals[index]\r\n        if(moment(closeTime, \"HH:mm\").isBefore(moment(openTime, \"HH:mm\")))\r\n            return (currentPeriod.openDay + 1) > 6 ? 0 : (currentPeriod.openDay +1)\r\n        else return currentPeriod.openDay\r\n    }\r\n\r\n    let handleUpdateOpenTime = (value) => {\r\n        setIntervals((oldIntervals) => {\r\n            return oldIntervals.map((item, i) => {\r\n                if(index === i){\r\n                    return {\r\n                        ...item,\r\n                        openTime: moment(value).format(\"HH:mm\").toString(),\r\n                        closeDay: getCloseDay(item.closeTime, value)\r\n                    }\r\n                }else return item\r\n            })\r\n        })\r\n    }\r\n    let handleUpdateCloseTime = (value) => {\r\n        setIntervals((oldIntervals) => {\r\n            return oldIntervals.map((item, i) => {\r\n                if(index === i){\r\n                    return {\r\n                        ...item,\r\n                        closeTime: moment(value).format(\"HH:mm\").toString(),\r\n                        closeDay: getCloseDay(value, item.openTime)\r\n                    }\r\n                }else return item\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setIntervals(oldIntervals => {\r\n            return oldIntervals.filter((item, i) => i !== index)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIntervals((oldIntervals) => {\r\n            return oldIntervals.map((item, i) => {\r\n                if(index === i){\r\n                    return {\r\n                        ...item,\r\n                        lastAccommodation: lastAccommodationEnabled ? lastAccommodationTime.toString() : null\r\n                    }\r\n                }else return item\r\n            })\r\n\r\n        })\r\n    }, [lastAccommodationTime, lastAccommodationEnabled])\r\n\r\n    const theme = useTheme();\r\n    const largeScreen = useMediaQuery(theme.breakpoints.only('lg'));\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.intervalLeftSide}>\r\n                <TimePicker\r\n                    margin=\"normal\"\r\n                    ampm={false}\r\n                    label=\"Opens\"\r\n                    className={classes.picker}\r\n                    format=\"HH:mm\"\r\n                    value={moment(currentInterval.openTime, \"HH:mm\")}\r\n                    onChange={handleUpdateOpenTime}\r\n                    InputProps={{\r\n                        disableUnderline: true,\r\n                    }}\r\n                />\r\n                <TimePicker\r\n                    margin=\"normal\"\r\n                    ampm={false}\r\n                    className={classes.picker}\r\n                    label=\"Closes\"\r\n                    format=\"HH:mm\"\r\n                    value={moment(currentInterval.closeTime, \"HH:mm\")}\r\n                    onChange={handleUpdateCloseTime}\r\n                    InputProps={{\r\n                        disableUnderline: true,\r\n                    }}\r\n                />\r\n\r\n                {intervals[index].closeDay !== intervals[index].openDay &&\r\n                    <React.Fragment>\r\n                        <Typography variant=\"subtitle1\">\r\n                            <WarningIcon style={{marginRight: \"10px\"}}/>\r\n                            Closes the next day\r\n                        </Typography>\r\n                    </React.Fragment>}\r\n\r\n                {!largeScreen &&\r\n                <Button color=\"primary\" onClick={handleDelete}>\r\n                    <DeleteOutlineIcon/>\r\n                </Button>\r\n                }\r\n            </div>\r\n\r\n            <div className={classes.intervalRightSide}>\r\n\r\n                <Checkbox checked={lastAccommodationEnabled} onChange={() => setLastAccommodationEnabled(state => !state)} />\r\n\r\n                <TimePicker\r\n                    margin=\"normal\"\r\n                    ampm={false}\r\n                    label=\"Last accommodation\"\r\n                    format=\"HH:mm\"\r\n                    disabled={!lastAccommodationEnabled}\r\n                    value={moment(lastAccommodationTime.toString(), \"HH:mm\")}\r\n                    onChange={(value) => setLastAccommodationTime(moment(value).format(\"HH:mm\").toString())}\r\n                    InputProps={{\r\n                        disableUnderline: true,\r\n                    }}\r\n                />\r\n\r\n                {largeScreen &&\r\n                    <Button color=\"primary\" onClick={handleDelete}>\r\n                    <DeleteOutlineIcon/>\r\n                    </Button>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nScheduleInterval.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    intervals: PropTypes.array.isRequired,\r\n    setIntervals: PropTypes.func.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ScheduleInterval)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ScheduleInterval from \"./ScheduleInterval\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst styles = theme => ({\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\"\r\n    },\r\n    root: {\r\n        margin: theme.spacing(0.5),\r\n        padding: theme.spacing(0.5)\r\n    }\r\n});\r\n\r\nfunction DayComponent({classes, scheduleData, setScheduleData, openDay, onChange}){\r\n\r\n    let [intervals, setIntervals] = useState(scheduleData.periods.filter(item => item.openDay === openDay))\r\n\r\n    useEffect(() => {\r\n        onChange(intervals, openDay)\r\n        console.log(intervals)\r\n    }, [intervals])\r\n\r\n    let weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\r\n\r\n    const handleAddPeriod = () => {\r\n        setIntervals(oldIntervals => {\r\n            return [\r\n                ...oldIntervals,\r\n                {openDay: openDay, closeDay: openDay, openTime: \"08:00\", closeTime: \"18:00\"}\r\n            ]\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n                <Typography variant=\"h6\" >\r\n                    {weekDays[openDay]}\r\n                </Typography>\r\n                <Button color=\"secondary\" onClick={handleAddPeriod}>\r\n                    <AddIcon/>\r\n                </Button>\r\n            </div>\r\n\r\n            {intervals.map((value, index) => {\r\n                return <React.Fragment>\r\n                    <Divider variant=\"middle\" />\r\n                    <ScheduleInterval index={index} intervals={intervals} setIntervals={setIntervals}/>\r\n                </React.Fragment>\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nDayComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    scheduleData: PropTypes.object.isRequired,\r\n    setScheduleData: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DayComponent)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {DatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport DayComponent from \"./DayComponent\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = theme => ({\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\"\r\n    },\r\n    root: {\r\n        padding: theme.spacing(2),\r\n        margin: theme.spacing(1)\r\n    },\r\n    pickerStyle: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    headerLeft: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"left\"\r\n    }\r\n});\r\n\r\nfunction Schedule({classes, data, setData, index}){\r\n\r\n    const[periods, setPeriods] = useState([...data.periods])\r\n\r\n    const handleIntervalChange = (newIntervals, openDay) => {\r\n        setPeriods(oldPeriods => {\r\n            let filtered = oldPeriods.filter(item => item.openDay !== openDay)\r\n            if(newIntervals.length === 0)\r\n                return [...filtered]\r\n            return [\r\n                ...filtered,\r\n                ...newIntervals\r\n            ]\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setData(oldData => {\r\n            return oldData.map((schedule, i) => {\r\n                if( i === index){\r\n                    return {...schedule, periods: periods}\r\n                }else return schedule\r\n            })\r\n        })\r\n    }, [periods])\r\n\r\n    const generateWeekdayViews = () => {\r\n        let views = []\r\n        for(let i =0; i < 7; i++){\r\n            views.push(<DayComponent scheduleData={data} onChange={handleIntervalChange} setScheduleData={setData} openDay={i} key={i}/>)\r\n        }\r\n        return views\r\n    }\r\n\r\n    const updateFromTime = (value) => {\r\n        setData(oldData => {\r\n            return oldData.map((schedule, i) => {\r\n                if( i === index){\r\n                    return {...schedule, from: moment(value).format('MM-DD').toString()}\r\n                }else return schedule\r\n            })\r\n        })\r\n    }\r\n    const updateToTime = (value) => {\r\n        setData(oldData => {\r\n            return oldData.map((schedule, i) => {\r\n                if( i === index){\r\n                    return {...schedule, to: moment(value).format('MM-DD').toString()}\r\n                }else return schedule\r\n            })\r\n        })\r\n    }\r\n    const removeSchedule = () => {\r\n        setData(oldData => {\r\n            return oldData.filter((item, i) => index !== i)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Paper className={classes.root}>\r\n            <div className={classes.header}>\r\n                <div className={classes.headerLeft}>\r\n                    {data.isDefault &&\r\n                    <Typography variant=\"h6\" >\r\n                        Date: Year round\r\n                    </Typography>}\r\n                    {!data.isDefault &&\r\n                        <React.Fragment>\r\n                            <DatePicker\r\n                                className={classes.pickerStyle}\r\n                                views={[\"month\", \"date\"]}\r\n                                label=\"From\"\r\n                                value={moment(data.from, \"MM-DD\")}\r\n                                onChange={updateFromTime}\r\n                            />\r\n                            <DatePicker\r\n                                className={classes.pickerStyle}\r\n                                views={[\"month\", \"day\"]}\r\n                                label=\"To\"\r\n                                value={moment(data.to, \"MM-DD\")}\r\n                                onChange={updateToTime}\r\n                            />\r\n                        </React.Fragment>\r\n                    }\r\n                </div>\r\n                {!data.isDefault &&\r\n                <Button color=\"secondary\" onClick = {removeSchedule}>\r\n                    <RemoveIcon/>\r\n                </Button>}\r\n\r\n            </div>\r\n            <br/>\r\n            {generateWeekdayViews()}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nSchedule.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    setData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Schedule)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Schedule from \"../Schedule\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = theme => ({\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\",\r\n        flexWrap: \"wrap\"\r\n    }\r\n});\r\n\r\nfunction SchedulesWrapper({classes, scheduleData, setScheduleData, isScheduleEnabled, setIsScheduleEnabled}){\r\n\r\n    const addSchedule = () => {\r\n        setScheduleData(oldData => {\r\n            return [\r\n                ...oldData,\r\n                {isDefault: false, from: \"01-01\", to: \"01-02\", periods : []}\r\n            ]\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className={classes.header}>\r\n                <Typography variant=\"h6\" >\r\n                    Working schedule\r\n                </Typography>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={isScheduleEnabled}\r\n                            onChange={() => setIsScheduleEnabled(state => !state)}\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                    label=\"Enable schedule for this place?\"\r\n                />\r\n            </div>\r\n            <br/>\r\n            {isScheduleEnabled &&\r\n                <React.Fragment>\r\n                    {scheduleData.map((value, index) => {\r\n                        return <Schedule data={value} index={index} setData={setScheduleData}/>\r\n                    })}\r\n                    <Button style={{float: \"right\"}}color=\"secondary\" onClick={addSchedule}>\r\n                        <AddIcon/>\r\n                    </Button>\r\n                </React.Fragment>}\r\n        </div>\r\n    )\r\n}\r\n\r\nSchedulesWrapper.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    scheduleData: PropTypes.array.isRequired,\r\n    setScheduleData: PropTypes.func.isRequired,\r\n    isScheduleEnabled: PropTypes.object.isRequired,\r\n    setIsScheduleEnabled: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SchedulesWrapper)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PropTypes, {func} from \"prop-types\";\r\nimport {Paper} from '@material-ui/core';\r\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\r\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\r\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\r\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\r\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\r\nimport initialScheduleData from \"../components/add_place_components/initialScheduleData\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Reviews from \"../components/add_place_components/Reviews\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport Schedule from \"../components/add_place_components/SchedulesWrapper\";\r\nimport SchedulesWrapper from \"../components/add_place_components/SchedulesWrapper\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paperContent: {\r\n        marginTop: theme.spacing(4),\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            width: \"95%\",\r\n            padding: theme.spacing(2),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"70%\",\r\n            padding: theme.spacing(4),\r\n        },\r\n    },\r\n    root:{\r\n        height:\"100vh\"\r\n    },\r\n    loader:{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"100vw\",\r\n        height: \"100vh\"\r\n    },\r\n    content:{\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        height:`calc(93vh - 64px)`,\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            width: \"100%\",\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"auto\",\r\n            padding: theme.spacing(8),\r\n        },\r\n        overflowY: \"auto\"\r\n    },\r\n    bottom:{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-around\",\r\n        padding: theme.spacing(1),\r\n        height: \"7vh\"\r\n    }\r\n});\r\n\r\n\r\nfunction AddPlace({classes, match}){\r\n    const [placeInfo, setPlaceInfo] = useState({placeId: \"\",\r\n        name: \"\", description: \"\",website: \"\", phoneNumber: \"\",\r\n        hasSchedule: false, isPublic: false, isVerified: true, overallStarRating: 0, totalReviews: 0,\r\n        source: \"\", price: \"\", averageTimeSpent: \"0\"});\r\n\r\n\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    const [photos, setPhotos] = useState([]);\r\n\r\n    const [locationData, setLocationData] = useState({city: '', address: '', country: '', latitude: 54.687157, longitude: 25.279652});\r\n    const [parkingMarkerData, setParkingMarkerData] = useState({city: '', address: '', country: '', latitude: 54.687157, longitude: 25.279652});\r\n    const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\r\n\r\n    const [sources, setSources] = useState([]);\r\n\r\n    const [scheduleData, setScheduleData] = useState(initialScheduleData);\r\n    const [isScheduleEnabled, setIsScheduleEnabled] = useState(false);\r\n\r\n    const [placeId, setPlaceId] = useState(match.params.placeId);\r\n\r\n    const [firstTimeLoading, setFirstTimeLoading] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [error, setError] = useState({name: false});\r\n    const [checkErrors, setCheckErrors] = useState(false);\r\n\r\n\r\n    const { addConfig } = UseSnackbarContext();\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    const { title, setTitle } = UseAppBarTitleContext();\r\n\r\n    const ColorButton = withStyles((theme) => ({\r\n        root: {\r\n            color: theme.palette.getContrastText(green[500]),\r\n            backgroundColor: green[500],\r\n            '&:hover': {\r\n                backgroundColor: green[700],\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n    useEffect(()=>{\r\n        console.log(placeId)\r\n        //Loaded place for editing\r\n        if(placeId!==undefined){\r\n            console.log(\"Getting place location\");\r\n            getPlaceInfo()\r\n        }else{\r\n            setTitle(\"Add new place\");\r\n            console.log(\"Came here to add new place\");\r\n            setFirstTimeLoading(false) //Just loaded add place window\r\n        }\r\n\r\n        //New Place has been just inserted, thus inserting other place info\r\n        if(placeId!==undefined && firstTimeLoading===false){\r\n            console.log(\"Just added new place\");\r\n            Promise.all([\r\n                updateTagsData(placeId),\r\n                updateParkingData(placeId),\r\n                updateCategoriesData(placeId),\r\n                updatePhotoData(placeId),\r\n                updateSchedule(placeId),\r\n                updateSources(placeId)\r\n            ]).then(responses=>{\r\n                formFeedback(true, Strings.SNACKBAR_PLACE_INSERTED_SUCCESS)\r\n            }).catch(error=>{\r\n                formFeedback(false)\r\n            })\r\n        }\r\n\r\n    },[placeId]);\r\n\r\n    useEffect(()=>{\r\n        if(firstTimeLoading === false){\r\n            console.log(\"Making this place public\");\r\n            updateAll()\r\n        }\r\n    },[placeInfo['isPublic']]);\r\n\r\n    function getPlaceInfo() {\r\n        API.Places.getPlaceById(\"?full=true&p=\"+placeId).then(response=>{\r\n            setAllData(response)\r\n            setTitle(\"Editing place/\"+response.name);\r\n        }).catch(error=>{\r\n            formFeedback(false)\r\n        })\r\n    }\r\n\r\n    function setAllData(place){\r\n        console.log(\"Got data:\",place);\r\n        setPlaceInfo({\r\n            placeId: place.placeId,\r\n            name: place.name,\r\n            description: place.description,\r\n            website: place.website,\r\n            phoneNumber: place.phoneNumber,\r\n            hasSchedule: place.hasSchedule,\r\n            isPublic: place.isPublic,\r\n            isVerified: place.isVerified,\r\n            overallStarRating: place.overallStarRating,\r\n            totalReviews: place.totalReviews,\r\n            price: place.price,\r\n            averageTimeSpent: place.averageTimeSpent\r\n        });\r\n\r\n        setLocationData({city: place.city,\r\n            address: place.address,\r\n            country: place.country,\r\n            latitude: place.latitude,\r\n            longitude: place.longitude});\r\n\r\n        setSources(place.sources);\r\n        setSelectedTags(place.tags);\r\n        setSelectedCategories(place.categories);\r\n        if(place.schedule.length > 0) {\r\n            setScheduleData([...place.schedule]);\r\n            setIsScheduleEnabled(true)\r\n        }else setIsScheduleEnabled(false)\r\n\r\n        setAllSelectedParkingData(place.parking);\r\n        setPhotos(place.photos);\r\n        setFirstTimeLoading(false)\r\n    }\r\n\r\n    function formFeedback(success, message=Strings.SNACKBAR_ERROR){\r\n        addConfig(success, message);\r\n        setIsLoading(false)\r\n    }\r\n\r\n    function errorsExists(){\r\n        for (let key of Object.keys(error)) {\r\n            if(error[key] === true)\r\n                return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    function saveChanges(){\r\n        setCheckErrors(true);\r\n        if(errorsExists()){\r\n            addAlertConfig(\"Errors\", \"Make sure you filled required fields\",function () {\r\n\r\n            });\r\n            return\r\n        }\r\n\r\n        if(placeId === undefined){\r\n            addAlertConfig(Strings.DIALOG_PLACE_INSERT_TITLE,Strings.DIALOG_PLACE_INSERT,function () {\r\n                setIsLoading(true);\r\n                insertBasicPlaceInfo()\r\n            });\r\n        }else{\r\n            addAlertConfig(Strings.DIALOG_PLACE_UPDATE_TITLE, Strings.DIALOG_PLACE_UPDATE, function () {\r\n                setIsLoading(true);\r\n                updateAll()\r\n            })\r\n        }\r\n    }\r\n\r\n    function updateAll(){\r\n        Promise.all([\r\n            updatePlaceInfo(),\r\n            updateTagsData(placeId),\r\n            updatePhotoData(placeId),\r\n            updateCategoriesData(placeId),\r\n            updateParkingData(placeId),\r\n            updateSchedule(placeId),\r\n            updateSources(placeId)\r\n        ]).then(response=>{\r\n            formFeedback(true, Strings.SNACKBAR_CHANGES_SAVED);\r\n        }).catch(err=>{\r\n            formFeedback(false)\r\n        })\r\n    }\r\n\r\n    function updatePlaceInfo() {\r\n        console.log(formPlaceInfo());\r\n        API.Places.updatePlace(formPlaceInfo()).then(response=>{\r\n\r\n        }).catch(error=>{\r\n\r\n        })\r\n\r\n    }\r\n\r\n    function insertBasicPlaceInfo(){\r\n            API.Places.insertPlace(formPlaceInfo()).then(placeId=>{\r\n                setPlaceId(placeId)\r\n            }).catch(error=>{\r\n\r\n            })\r\n    }\r\n\r\n    function updateParkingData(id) {\r\n        API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\"+id).then(response=>{\r\n\r\n        }).catch(error=>{\r\n\r\n        })\r\n    }\r\n\r\n    function updateTagsData(id) {\r\n        API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\"+id).then(response=>{\r\n\r\n        }).catch(error=>{\r\n\r\n        })\r\n    }\r\n\r\n    function updateSources(id) {\r\n        console.log(\"Hello\")\r\n        API.SourcePlace.updateSourcesForPlace(sources, \"?p=\"+id).then(response=>{\r\n            console.log(sources)\r\n        }).catch(error=>{\r\n\r\n        })\r\n    }\r\n\r\n\r\n    function updateCategoriesData(id) {\r\n        API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\"+id).then(response=>{\r\n\r\n        }).catch(error=>{\r\n\r\n        })\r\n    }\r\n\r\n    function updatePhotoData(id) {\r\n        API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\"+id).then(response=>{\r\n\r\n        }).catch(error=>{\r\n\r\n        })\r\n    }\r\n\r\n\r\n    function updateSchedule(id){\r\n        console.log(scheduleData);\r\n        API.Schedule.updateScheduleForPlace(isScheduleEnabled ? scheduleData : [], \"?id=\" + id).then(response => {\r\n        }).catch(er => {\r\n        })\r\n\r\n    }\r\n\r\n    function formPlaceInfo(){\r\n        let d = Object.assign(placeInfo, locationData)\r\n        console.log(d);\r\n        return d\r\n    }\r\n\r\n\r\n    function publishPlace(){\r\n        addAlertConfig(Strings.DIALOG_PLACE_PUBLISH_TITLE, placeInfo['isPublic'] ? Strings.DIALOG_PLACE_UNPUBLISH_MESSAGE : Strings.DIALOG_PLACE_PUBLISH_MESSAGE, function(){\r\n            let obj = Object.assign({}, placeInfo, {});\r\n            obj['isPublic'] = !obj['isPublic'];\r\n            setPlaceInfo(obj);\r\n        })\r\n    }\r\n\r\n    function verifyPlace(){\r\n        addAlertConfig(Strings.DIALOG_PLACE_VERIFY_TITLE, Strings.DIALOG_PLACE_VERIFY_MESSAGE, function(){\r\n            let obj = Object.assign({}, placeInfo, {});\r\n            obj['isPublic'] = 1;\r\n            obj['isVerified'] = 1;\r\n            setPlaceInfo(obj);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            {firstTimeLoading ? <div className={classes.loader}><CircularProgress /></div> : <div className={classes.content}>\r\n\r\n\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <BasicPlaceInfo\r\n                        error={error}\r\n                        setError={setError}\r\n                        checkErrors={checkErrors}\r\n                        placeInfo={placeInfo}\r\n                        setPlaceInfo={setPlaceInfo}\r\n                        selectedSources={sources}\r\n                        setSelectedSources={setSources}\r\n                    />\r\n\r\n                </Paper>\r\n\r\n                {placeId !== undefined ?\r\n                    <Paper elevation = {4} className={classes.paperContent}>\r\n                        <Reviews\r\n                            placeInfo={placeInfo}\r\n                        />\r\n                    </Paper>\r\n                    : null}\r\n\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <PhotosInfo\r\n                        photos={photos}\r\n                        setPhotos={setPhotos}\r\n                    />\r\n                </Paper>\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <PlaceLocation\r\n                        error={error}\r\n                        setError={setError}\r\n                        checkErrors={checkErrors}\r\n                        locationData={locationData}\r\n                        setLocationData={setLocationData}/>\r\n                </Paper>\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <ParkingLocation\r\n                        allSelectedParkingData={allSelectedParkingData}\r\n                        setAllSelectedParkingData={setAllSelectedParkingData}\r\n                        parkingMarkerData={parkingMarkerData}\r\n                        setParkingMarkerData={setParkingMarkerData}/>\r\n                </Paper>\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <PlaceDiscovery\r\n                        selectedTags={selectedTags}\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedCategories={selectedCategories}\r\n                        setSelectedCategories={setSelectedCategories}/>\r\n                </Paper>\r\n\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <SchedulesWrapper isScheduleEnabled={isScheduleEnabled} setIsScheduleEnabled={setIsScheduleEnabled} setScheduleData={setScheduleData} scheduleData={scheduleData}/>\r\n                </Paper>\r\n            </div> }\r\n\r\n            {isLoading ? <LinearProgress/> : null}\r\n\r\n            <Paper elevation={1} className={classes.bottom}>\r\n\r\n                {\r\n\r\n                    placeInfo['isVerified'] === false && placeId !== undefined ?\r\n                        <ColorButton\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={()=>{verifyPlace()}}\r\n                            className={classes.button}\r\n                        >\r\n                            Verify place\r\n                        </ColorButton>\r\n                    :\r\n                    <FormControlLabel\r\n                    control={<Switch checked={placeInfo['isPublic']} onChange={()=> {\r\n                        publishPlace()\r\n                    }\r\n                    } name=\"isPublic\" />}\r\n                    label=\"Make this place public\"\r\n                />}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={()=>saveChanges()}\r\n                    className={classes.button}>\r\n                    Save\r\n                </Button>\r\n\r\n\r\n            </Paper>\r\n        </div>)\r\n\r\n}\r\n\r\nAddPlace.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AddPlace)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {Fragment, useState} from \"react\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        [theme.breakpoints.down('lg')]: {\r\n            width: \"95%\",\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: \"28vw\",\r\n        },\r\n        margin: theme.spacing(1)\r\n    },\r\n    media: {\r\n        height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n})\r\n\r\nfunction CategoriesDisplay({categories}){\r\n    return(\r\n        categories != null &&\r\n        <Box component=\"ul\"  style={{\r\n            display: 'flex',\r\n            justifyContent: 'left',\r\n            flexWrap: 'wrap',\r\n            listStyle: 'none',\r\n            padding: '0px'\r\n        }}>\r\n            {categories.map((data, index) => {\r\n                return (\r\n                    <li key={index}>\r\n                        <Chip\r\n                            variant=\"outlined\"\r\n                            style={{margin: \"5px\"}}\r\n                            label={data.name}\r\n                        />\r\n                    </li>\r\n\r\n                );\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction SubheaderDisplay({city, address, priceRange, rating}){\r\n    return(\r\n        <div>\r\n\r\n            {rating != null &&\r\n            <Fragment><Rating\r\n                readOnly={true}\r\n                value={rating}\r\n            /><br/></Fragment>}\r\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ApiPlaceCard({classes, placeData}){\r\n\r\n    function truncateText(text){\r\n        if(text == null)\r\n            return \"\"\r\n        if(text.length > 500){\r\n            return text.substring(0, 500) + \"...\";\r\n        }else{\r\n            return text\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                        <InfoIcon />\r\n                    </IconButton>\r\n                }\r\n                title={placeData.name}\r\n                subheader={<SubheaderDisplay city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\r\n\r\n            />\r\n            {placeData.photos != null &&\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={placeData.photos[0].url}\r\n            />}\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {truncateText(placeData.description)}\r\n                </Typography>\r\n\r\n                <CategoriesDisplay categories={placeData.categories}/>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n                {placeData.website}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nApiPlaceCard.propTypes = {\r\n    placeData: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ApiPlaceCard)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport {debounce} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: theme.spacing(2)\r\n        // width: 400,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    divider: {\r\n        // height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function SearchInputComponent({hint, searchCallback}) {\r\n    const classes = useStyles();\r\n\r\n    const debouncedInput = (event) => {\r\n        searchCallback(event.target.value)\r\n    }\r\n\r\n    const debounceInput = debounce(event => debouncedInput(event), 500)\r\n\r\n    const handleInput = (event) => {\r\n        event.persist()\r\n        debounceInput(event)\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder={hint}\r\n                inputProps={{ 'aria-label': hint }}\r\n                onChange={handleInput}\r\n            />\r\n            <IconButton className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n        </Paper>\r\n    );\r\n}","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\"\r\nimport ApiPlaceCard from \"../components/ApiPlaceCard\";\r\nimport API from \"../Networking/API\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport debounce from 'lodash/debounce'\r\nimport Masonry from \"react-masonry-component\";\r\nimport SearchInputComponent from \"../components/SearchInputComponent\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        overflow: 'scroll',\r\n        width: \"100%\",\r\n        padding: theme.spacing(1),\r\n        height:`calc(100vh - 64px)`,\r\n        paddingTop: \"9vh\",\r\n    },\r\n    topBar: {\r\n        height: \"8vh\",\r\n        position: \"absolute\",\r\n        width: \"60%\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        left: 0,\r\n        right: 0,\r\n        justifyContent: \"center\",\r\n        zIndex: 1\r\n    },\r\n    searchBox: {\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nfunction ApiPlaces({classes}){\r\n\r\n    const [data, setData] = useState([]);\r\n    const [isLoadingData, setIsLoadingData] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const loadDataFunc = (query) => {\r\n        setData([])\r\n        setIsLoadingData(true)\r\n        API.Places.searchApiPlaces(\"?keyword=\" + encodeURI(query)).then(response => {\r\n            setData([...response])\r\n        }).catch(error => {\r\n            addConfig(false, \"The request did not go through.\")\r\n        }).finally(() => {\r\n            setIsLoadingData(false)\r\n        })\r\n    }\r\n\r\n    const handleSearch = (word) => {\r\n        if(word.length > 3)\r\n            loadDataFunc(word)\r\n    }\r\n\r\n    return(\r\n        <div style={{position: \"relative\"}}>\r\n            <div className = {classes.topBar}>\r\n                <SearchInputComponent searchCallback={handleSearch} hint=\"Search api places\" style={classes.searchBox} />\r\n            </div>\r\n\r\n            <div className={classes.root}>\r\n                <Masonry\r\n                    style={{margin: \"0 auto\"}}\r\n                    elementType={'div'} // default 'div'\r\n                    options={{\r\n                        isFitWidth: true\r\n                    }} // default {}\r\n                    disableImagesLoaded={false} // default false\r\n                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\r\n                >\r\n\r\n                    {data.map(item => {\r\n                        return <ApiPlaceCard key={item.placeId} placeData = {item} style={{boxSizing: 'border-box'}}/>\r\n                    })}\r\n\r\n                    {\r\n                        data.length === 0 && !isLoadingData &&\r\n                        <Typography variant=\"subtitle1\">No results</Typography>\r\n                    }\r\n                    {\r\n                        isLoadingData &&\r\n                        <CircularProgress  />\r\n                    }\r\n\r\n                </Masonry>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ApiPlaces)","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {'Copyright © '}\r\n            Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: '100vh',\r\n    },\r\n    main: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: 'auto',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n    },\r\n}));\r\n\r\nexport default function NotFoundPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\r\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\r\n                    Page not found\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    {'Try something else'}\r\n                </Typography>\r\n            </Container>\r\n            <footer className={classes.footer}>\r\n                <Container maxWidth=\"sm\">\r\n                    <Copyright />\r\n                </Container>\r\n            </footer>\r\n        </div>\r\n    );\r\n}","import React, {Fragment, useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Home from \"../pages/Home\";\r\nimport Places from \"../pages/Places\";\r\nimport AddPlace from \"../pages/AddPlace\";\r\nimport history from \"../helpers/history\";\r\nimport ApiPlaces from \"../pages/ApiPlaces\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport NotFoundPage from \"../pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root1: {\r\n        overflow: \"hidden\",\r\n        display: 'flex',\r\n        height: \"100vh\",\r\n        background: \"#F1F1F1\"\r\n    },\r\n    appBar: {\r\n        height: \"64px\",\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        //padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0\r\n    },\r\n}));\r\n\r\n\r\nexport default function Appbar(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const { title, setTitle } = UseAppBarTitleContext();\r\n\r\n    console.log(props)\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root1}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button component={Link} to=\"/app/\" onClick={()=>setTitle(\"Home\")}>\r\n                        <ListItemText>Home</ListItemText>\r\n                    </ListItem>\r\n                    <Divider light />\r\n                    <ListItem button component={Link} to=\"/app/places\" onClick={()=>setTitle(\"Places\")} >\r\n                        <ListItemText>Places</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/apiplaces\" onClick={()=>setTitle(\"Api places\")} >\r\n                        <ListItemText>Explore API places</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/addplace\" onClick={()=>setTitle(\"Add Place\")} >\r\n                        <ListItemText>Add place</ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                <Switch>\r\n                    <Route exact path=\"/app\" component={Home} />\r\n                    <Route path=\"/app/places\" component={Places} />\r\n                    <Route path=\"/app/addplace/:placeId?\" component={AddPlace} />\r\n                    <Route path=\"/app/apiplaces\" component={ApiPlaces} />\r\n                    <Route path=\"/app/addplace\" component={AddPlace} />\r\n                    <Redirect from=\"*\" to=\"/404\"/>\r\n                </Switch>\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport Appbar from './components/Appbar.js';\r\nimport AppBarTitleProvider from \"./contexts/AppBarTitleContext\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <AppBarTitleProvider>\r\n                        <Appbar />\r\n                    </AppBarTitleProvider>\r\n                    </MuiPickersUtilsProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default App;","import React, {useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Cookies from 'js-cookie'\r\nimport * as firebase from \"firebase\";\r\nimport history from \"../helpers/history\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n                Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function LoginPage() {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setIsLoading] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    useEffect(()=>{\r\n    },[]);\r\n    const handleLogin = () =>{\r\n        setIsLoading(true);\r\n        firebase.auth().signInWithEmailAndPassword(email , password)\r\n            .then(function(user) {\r\n                    if (user) {\r\n\r\n                        firebase.auth().currentUser.getIdToken(false).then(function(idToken) {\r\n                            Cookies.set(\"access_token\", idToken);\r\n                            history.push(\"/app\");\r\n                            setIsLoading(false)\r\n                        }).catch(function(error) {\r\n                            setIsLoading(false);\r\n                            addConfig(false, \"Unable to receive access token\")\r\n                        });\r\n                    } else {\r\n                        console.log(\"Wrong credentials\")\r\n                        setIsLoading(false);\r\n                        addConfig(false, \"Wrong credentials\")\r\n                    }\r\n            })\r\n            .catch(function(error) {\r\n                    setIsLoading(false);\r\n                    addConfig(false, error.message)\r\n                    console.log(error.message)\r\n            });\r\n    };\r\n\r\n    const handleKeyPress = (event) =>{\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            handleLogin();\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\" onKeyPress={(e)=>handleKeyPress(e)}>\r\n            {loading && <LinearProgress />}\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        value={email}\r\n                        onChange={(e)=>{setEmail(e.target.value)}}\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        value={password}\r\n                        onChange={(e)=>{setPassword(e.target.value)}}\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <Button\r\n                        onClick={()=>{handleLogin()}}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import Route from \"react-router-dom/es/Route\";\r\nimport React from \"react\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {isAuthenticated} from '../helpers/auth'\r\n\r\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        isAuthenticated() === true\r\n            ? <Component {...props} />\r\n            : <Redirect to='/login' />\r\n    )} />\r\n);","import React, {useState} from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\n\r\nexport default function SnackbarFeedback(props){\r\n\r\n    const { config, removeConfig } = UseSnackbarContext();\r\n\r\n    return(\r\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\r\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"error\") : \"\"}>\r\n                {!!config && config.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\"\r\n\r\nconst AlertDialogFeedback = () => {\r\n\r\n    const {alertConfig, removeAlertConfig} = UseAlertDialogContext();\r\n\r\n    function remove() {\r\n        if(alertConfig.onClose !== undefined)\r\n            alertConfig.onClose()\r\n        removeAlertConfig()\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={!!alertConfig}\r\n            onClose={remove}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{!!alertConfig ? alertConfig.title : \"\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {!!alertConfig ? alertConfig.message : \"\"}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={remove}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                <Button onClick={!!alertConfig ? ()=>{\r\n                    removeAlertConfig();\r\n                    alertConfig.func()} : {}\r\n                } color=\"primary\" autoFocus>\r\n                    Agree\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\n\r\nexport default AlertDialogFeedback\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport history from \"./helpers/history\";\r\nimport * as firebase from \"firebase\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport { Router, Route, Link, Switch} from \"react-router-dom\";\r\nimport Places from \"./pages/Places\";\r\nimport AddPlace from \"./pages/AddPlace\";\r\nimport {AuthenticatedRoute} from \"./components/AuthenticatedRoute\";\r\nimport NotFoundPage from \"./pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\r\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport AlertDialogProvider from \"./contexts/AlertDialogContext\";\r\nimport AlertDialogFeedback from \"./components/feedback/AlertDialogFeedback\";\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBRhTGXvKq0RD-ajkbOndOIK9c03wg9vRo\",\r\n    authDomain: \"travel-fd76c.firebaseapp.com\",\r\n    databaseURL: \"https://travel-fd76c.firebaseio.com\",\r\n    projectId: \"travel-fd76c\",\r\n    storageBucket: \"travel-fd76c.appspot.com\",\r\n    messagingSenderId: \"654752782594\",\r\n    appId: \"1:654752782594:web:478b4a1d8a17c52975ca1b\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nReactDOM.render(\r\n    <Router history={history}>\r\n        <SnackbarProvider>\r\n            <AlertDialogProvider>\r\n                <SnackbarFeedback/>\r\n                <AlertDialogFeedback/>\r\n                <Switch>\r\n                    <Redirect exact from=\"/\" to=\"/app\"/>\r\n                    <AuthenticatedRoute path=\"/app\" component={App} />\r\n                    <Route path=\"/login\" component={LoginPage} />\r\n                    <Route path=\"*\" component={NotFoundPage}/>\r\n                    <Redirect from=\"*\" to=\"/404\" />\r\n                </Switch>\r\n            </AlertDialogProvider>\r\n        </SnackbarProvider>\r\n    </Router>, document.getElementById('root'));\r\n"],"sourceRoot":""}