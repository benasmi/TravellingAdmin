{"version":3,"sources":["res/selectedParking.svg","res/availableParking.svg","helpers/firebaseInit.js","pages/Home.js","components/TableComponent.js","helpers/debounce.js","helpers/history.js","helpers/tokens.js","Networking/NetworkLayerCentral.js","Networking/API.js","contexts/AlertDialogContext.js","contexts/UseAlertDialogContext.js","helpers/stringResources.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","components/AutocompleteChip.js","contexts/PlacesFilterContext.js","components/add_place_components/FilterBlock.js","pages/Places.js","helpers/priceRange.js","helpers/averageTimeSpent.js","components/AddSourceDialog.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/maps/MapGeolocation.js","components/maps/MapToolbar.js","components/maps/MapLock.js","components/maps/CustomControlsManager.js","components/maps/PlaceMap.js","components/add_place_components/PlaceLocation.js","components/maps/ParkingMap.js","components/add_place_components/ParkingLocation.js","components/AddDialog.js","contexts/EditDialogContext.js","contexts/UseEditDialogContext.js","components/add_place_components/PlaceDiscovery.js","components/add_place_components/initialScheduleData.js","components/ReviewCard.js","components/add_place_components/Reviews.js","contexts/AppBarTitleContext.js","contexts/UseAppBarTitleContext.js","components/ScheduleInterval.js","components/DayComponent.js","components/Schedule.js","components/add_place_components/SchedulesWrapper.js","pages/AddPlace.js","components/ApiPlaceCard.js","components/SearchInputComponent.js","pages/ApiPlaces.js","pages/NotFoundPage.js","components/tour_components/TourPlaceComponent.js","components/tour_components/TransportItem.js","components/tour_components/TourPlacesWrapper.js","components/tour_components/PlaceSearch.js","components/tour_components/DayCard.js","components/tour_components/DaysWrapper.js","components/tour_components/TourReducer.js","components/tour_components/TourInfoComponent.js","components/tour_components/TourMap.js","components/tour_components/Tour.js","pages/Tours.js","components/Resources.js","components/Appbar.js","App.js","contexts/AuthContext.js","pages/LoginPage.js","components/AuthenticatedRoute.js","components/feedback/SnackbarFeedback.js","components/feedback/AlertDialogFeedback.js","components/feedback/TextInputDialog.js","index.js"],"names":["module","exports","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","withStyles","theme","button","margin","spacing","input","display","props","classes","descendingComparator","a","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","checkable","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","customToolbarElements","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","style","alignItems","TextField","target","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","centerCell","textAlign","rowNotPublished","rowNotVerified","rowBasic","TableComponent","searchFunction","pagingInfo","data","updateCallback","removeCallback","isLoading","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","filter","item","undefined","slice","row","isItemSelected","indexOf","labelId","rowStyle","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckboxChange","header","isId","scope","fontSize","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","pageNum","onChangePage","newPage","onChangeRowsPerPage","parseInt","console","log","history","getAccessToken","Cookies","get","isAuthenticated","request","options","contentType","client","axios","create","baseURL","headers","interceptors","response","use","error","originalRequest","config","status","auth","currentUser","_retry","Promise","reject","getIdToken","then","token","Authorization","set","onSuccess","onError","debug","push","message","catch","RequestType","getRequest","path","urlData","url","method","postRequest","postMultipartRequest","formData","API","Tour","insertTour","getTour","urlParams","updateTour","getAllToursAdmin","removeTour","SourcePlace","updateSourcesForPlace","Source","getSources","addSource","Places","getAllCities","getAllCounties","getAllCountries","getAllMunicipalities","getAllPlaces","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","removePlace","Tags","getAllTags","addTag","params","removeTags","updateTags","Categories","addCategory","getAllCategories","removeCategory","updateCategory","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","Reviews","getPlaceReviews","AlertDialogContext","createContext","alertConfig","addAlertConfig","removeAlertConfig","AlertDialogProvider","children","setAlertConfig","contextValue","actions","onClose","Provider","UseAlertDialogContext","useContext","Strings","DIALOG_PLACE_PUBLISH_TITLE","DIALOG_PLACE_PUBLISH_MESSAGE","DIALOG_PLACE_UNPUBLISH_MESSAGE","DIALOG_PLACE_INSERT_TITLE","DIALOG_PLACE_INSERT","DIALOG_PLACE_UPDATE_TITLE","DIALOG_PLACE_UPDATE","DIALOG_PLACE_VERIFY_TITLE","DIALOG_PLACE_VERIFY_MESSAGE","DIALOG_PLACE_DELETE_TITLE","DIALOG_PLACE_DELETE_MESSAGE","DIALOG_TOUR_DELETE_TITLE","DIALOG_TOUR_DELETE_MESSAGE","SNACKBAR_PLACE_INSERTED_SUCCESS","SNACKBAR_PLACE_REMOVE_SUCCESS","SNACKBAR_TOUR_INSERTED_SUCCESS","SNACKBAR_TOUR_REMOVE_SUCCESS","SNACKBAR_ERROR","SNACKBAR_CHANGES_SAVED","SnackbarContext","addConfig","removeConfig","SnackbarProvider","setConfig","success","UseSnackbarContext","autoComplete","chip","justifyContent","flexWrap","listStyle","autoCompleteChipContainer","setOptions","selectedOptions","setSelectedOptions","getCurrentVal","setCurrentVal","firstLoad","setFirstLoad","handleDelete","found","row1","JSON","stringify","Box","option","Chip","onDelete","Autocomplete","disableClearable","getOptionLabel","renderInput","PlacesFilterContext","buildUrl","require","initialDates","insertionStart","moment","Date","format","insertionEnd","add","modificationStart","modificationEnd","PlacesFilterProvider","categories","setCategories","selectedCategories","setSelectedCategories","cities","setCities","selectedCities","setSelectedCities","countries","setCountries","selectedCountries","setSelectedCountries","municipalities","setMunicipalities","selectedMunicipalities","setSelectedMunicipalities","counties","setCounties","selectedCounties","setSelectedCounties","initialLoading","setInitialLoading","resetFilterOptions","setResetFilterOptions","filterLabel","filterName","filterOptions","setFilterOptions","dates","setDates","queryParams","di","dm","parseFilterOptions","parseCategories","filterQuery","setFilterQuery","cats","all","res","err","filterOptionsCleared","areFiltersCleared","o","c","filterDiv","flexDirection","sortingButtons","rightLayout","boxShadow","datesLayout","filterDateChange","date","cDate","Object","assign","FormControlLabel","control","generalOptions","filterOptionsChanged","Grid","container","justify","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","AutocompleteChip","Button","filters","clearFilters","buttonsDiv","content","breakpoints","down","up","autocomplete","borderBottom","outline","setData","pageData","setPageData","setIsLoading","getPlaceNameById","i","placeId","requestAllPlaces","p","parseData","placesData","list","anchorEl","setAnchorEl","open","Boolean","handleClick","currentTarget","action","tmp","aria-describedby","Popover","anchorOrigin","vertical","horizontal","transformOrigin","startIcon","priceRange","averageTimeSpent","closeButton","right","grey","setDialogOpen","setText","setUrl","setError","Dialog","fullWidth","DialogTitle","DialogContent","dividers","ev","marginTop","DialogActions","autoFocus","validateInput","placeInfo","setPlaceInfo","selectedSources","setSelectedSources","updatePlaceInfo","newValue","place","valuetext","setAvailableSources","dialogOpen","availableSources","val","required","placeholder","e","InputLabelProps","shrink","multiline","rows","Slider","marginLeft","defaultValue","getAriaValueText","step","max","marks","FormControl","InputLabel","Select","native","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","pressDelay","disableAutoscroll","onSortEnd","oldIndex","newIndex","arrayMove","axis","acceptedFileFormats","dropzoneArea","onCloseCallback","onFinishCallback","loading","selectedFiles","setSelectedFiles","acceptedFiles","maxFileSize","dropzoneProps","disabled","filesLimit","onDrop","imagefile","FormData","append","finally","addImageDialogOpen","setAddImageDialogOpen","files","handleAddPhoto","Geocode","setApiKey","enableDebug","getCountry","addressArray","types","long_name","getCity","city","getCounty","county","getMunicipality","municipality","geocodeFromLatLng","newLat","newLng","fromLatLng","address","results","formatted_address","address_components","country","latitude","longitude","isLocked","locationCallback","handleKeyPress","which","keyCode","test","fromAddress","geometry","location","lat","lng","split","parseFloat","onKeyPress","onPlaceSelected","navigator","geolocation","getCurrentPosition","coords","alert","setIsLocked","Switch","old","Alert","severity","CustomControlsManager","context","window","google","maps","ControlPosition","TOP_LEFT","MAP","controlDiv","document","createElement","controls","removeAt","createPortal","contextTypes","PropTypes","object","MapComponent","withGoogleMap","defaultZoom","ref","refInstance","center","defaultCenter","visible","draggable","onDragEnd","setLocationMarker","latLng","onMarkerDragEnd","setPosition","BOTTOM_CENTER","mapCenter","current","getCenter","locationMarker","refMap","useRef","Fragment","loadingElement","containerElement","mapElement","locationData","setLocationData","changeLocationData","setMainInfoWindow","mainInfoWindow","onCloseClick","parking","parkingData","calcCrow","nearestParkingCount","addNewParking","loc","parkingIsAttached","selectedParkingData","parkingId","icon","scaledSize","Size","origin","Point","anchor","markers","parkingInfoWindows","setParkingInfoWindows","addExistingParking","lat1","lon1","lat2","lon2","dLat","toRad","dLon","sin","cos","atan2","sqrt","Value","PI","ParkingMap","setParkingData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","SortableItem","elevation","SortableList","oldArray","textFieldLabel","description","EditDialogContext","dialogConfig","addEditDialogConfig","removeEditDialogConfig","defaultOptions","errorMessages","explanation","onDoneCallback","defaultText","EditDialogProvider","setDialogConfig","UseEditDialogContext","selectedTags","setSelectedTags","availableCategories","setAvailableCategories","availableTags","setAvailableTags","tagName","newTag","tagId","1","2","categoryName","newCat","categoryId","initialScheduleData","openDay","closeDay","openTime","closeTime","marginRight","ReviewCard","review","CardContent","Avatar","alt","photoUrl","surname","Rating","rating","readOnly","upvotes","timeAdded","reviewsInfo","reviews","overflowX","setReviews","filterBy","setFilterBy","getReviewsForPlace","debounceScroll","debounce","round","scrollWidth","scrollLeft","clientWidth","totalReviews","handleScrollDebounced","handleClose","overallStarRating","precision","RadioGroup","Radio","onScroll","persist","handleScroll","AppBarTitleContext","setTitle","AppBarTitleProvider","UseAppBarTitleContext","flexFlow","picker","intervalRightSide","intervalLeftSide","intervals","setIntervals","currentInterval","lastAccommodation","lastAccommodationEnabled","setLastAccommodationEnabled","lastAccommodationTime","setLastAccommodationTime","getCloseDay","currentPeriod","isBefore","oldIntervals","useTheme","largeScreen","useMediaQuery","only","TimePicker","ampm","InputProps","disableUnderline","state","scheduleData","setScheduleData","globalTime","periods","ignoreOpenTime","ignoreCloseTime","ignoreGlobalTime","setIgnoreGlobalTime","Divider","pickerStyle","headerLeft","globalTimeEditLayout","globalTimeEditLeft","globalTimePicker","setPeriods","setGlobalTime","handleIntervalChange","newIntervals","oldPeriods","filtered","oldData","schedule","scheduleDefault","DatePicker","views","from","to","generateWeekdayViews","isScheduleEnabled","setIsScheduleEnabled","float","paperContent","loader","bottom","match","website","phoneNumber","hasSchedule","isPublic","isVerified","source","price","parkingMarkerData","setParkingMarkerData","sources","setSources","setPlaceId","firstTimeLoading","setFirstTimeLoading","checkErrors","ColorButton","getContrastText","green","formFeedback","saveChanges","formPlaceInfo","plc","updateAll","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","updateSources","er","tags","responses","CircularProgress","obj","CategoriesDisplay","SubheaderDisplay","media","expand","transform","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","renderActionArea","CardHeader","subheader","substring","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debouncedInput","InputBase","orientation","topBar","zIndex","searchBox","placeApiCard","isLoadingData","setIsLoadingData","word","query","encodeURI","elementType","isFitWidth","disableImagesLoaded","updateOnEachImageLoad","boxSizing","Copyright","getFullYear","minHeight","footer","cardRoot","details","cover","addParkingWrapper","elementData","addTransportCallback","displayNoTransportWarning","transportTypes","transportSelectWrapper","transportSelect","transportId","transportChangeCallback","transportRemoveCallback","currentTransport","setCurrentTransport","NativeSelect","transport","TourPlaceSortable","removePlaceCallback","tourPlaceComponent","TransportItemSortable","currentDay","removeElementCallback","tourInfo","shouldDisplayNoTransportWarning","elements","days","tour","ElementType","elementIdentifier","tourInfoReducer","errorInfo","setErrorInfo","day","shortid","generate","searchInputComponent","placeCard","addPlaceCallback","apiPlacesFound","setApiPlacesFound","localPlacesFound","setLocalPlacesFound","apiPlacesLoading","setApiPlacesLoading","localPlacesLoading","setLocalPlacesLoading","placeType","genProps","mappedPlaces","forEach","generatePlaceCards","radioButtonArea","cardArea","descriptionInput","headerWrap","onSelectCallback","handleRemoveDay","updateDescriptionGlobally","DayCardSortable","dayInfo","removeDayCallback","addDayButton","footerWrapper","setCurrentDay","removeDay","TourDataReducer","findIndex","splice","nameField","descriptionField","errors","titleMissing","shouldDisplayTitleMissingError","showErrors","helperText","MyMapComponent","suppressMarkers","directions","places","marker","info","infoWindows","setInfoWindows","setDirection","setPlaces","markersInfo","constructPlaceData","waypoints","stopover","shift","destination","pop","DirectionsService","route","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","sampleTourData","overflowY","leftLayout","actionsArea","tourId","setTourId","useReducer","dispatchTourInfo","handleAddPlaceClick","loadData","aggregatedDays","aggregatedElements","aggregatedPlace","fk_transportId","aggregatedDay","aggregatedTour","handleSave","containsErrors","keys","keyIndex","element","j","useMemo","tourDaysComponents","getAllTours","fq","join","categoriesHeadCells","tagsHeadCells","buttonWrapper","setTags","includes","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","Appbar","setOpen","useLocation","handleDrawerClose","handleListItemClick","RegExp","pathname","go","CssBaseline","AppBar","edge","Drawer","List","ListItem","Link","ListItemText","exact","Home","Tours","AddPlace","ApiPlaces","Resources","Redirect","App","Component","AuthContext","AuthProvider","setCurrentUser","onAuthStateChanged","user","idToken","form","submit","loaderMain","AuthenticatedRoute","rest","Route","render","routeProps","SnackbarFeedback","Snackbar","autoHideDuration","AlertDialogFeedback","remove","DialogContentText","TextInputDialog","inputText","setInputText","deInit","onInput","errorCode","ReactDOM","email","setEmail","password","setPassword","handleLogin","signInWithEmailAndPassword","Container","maxWidth","mt","gutterBottom","getElementById"],"mappings":"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","file":"static/js/main.31f123e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/selectedParking.102bdd14.svg\";","module.exports = __webpack_public_path__ + \"static/media/availableParking.6ac3f9ec.svg\";","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n});\n\nexport default app;","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport app from \"../helpers/firebaseInit\";\nimport Cookies from \"js-cookie\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(1)\n    },\n    input: {\n        display: \"none\"\n    }\n});\n\n\n\n\n\n\nconst Home = props => {\n    const { classes } = props;\n\n    return (\n        <div>\n\n        </div>\n    );\n};\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit'\nimport TextField from \"@material-ui/core/TextField\"\nimport useDebounce from \"../helpers/debounce\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Chip from \"@material-ui/core/Chip\";\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, checkable} = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n\n                {checkable ? <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell> : null}\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right'  : 'left' }\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n    headCells: PropTypes.object.isRequired,\n    checkable: PropTypes.bool.isRequired\n};\n\n\n\n\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, title, changePageCallback, keyword, setKeyword, customToolbarElements} = props;\n\n\n    const debouncedSearch = useDebounce(keyword, 300);\n\n\n    useEffect( () => {\n            changePageCallback(1,keyword)\n        },\n        [debouncedSearch]\n    );\n\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    {title}\n                </Typography>\n            )}\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : <div style={{display: \"flex\", alignItems: \"center\"}}>\n                <TextField id=\"standard-basic\" label=\"Search\" onChange={ event =>{setKeyword(event.target.value)}}/>\n                {!!customToolbarElements ? customToolbarElements : null}\n            </div>}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n};\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    centerCell: {\n        textAlign: \"center\",\n        width: '100%'\n    },\n    rowNotPublished:{\n        backgroundColor: \"#ffcdd2\"\n    },\n    rowNotVerified:{\n        backgroundColor: \"#fff9c4\"\n    },\n    rowBasic: {\n        backgroundColor: \"#FFFFFF\"\n    }\n\n}));\n\nexport default function TableComponent({title, searchFunction, headCells, pagingInfo, data, checkable, changePageCallback, updateCallback, removeCallback, id, isLoading, customToolbarElements}) {\n\n    TableComponent.propTypes = {\n        title: PropTypes.string.isRequired,\n        headCells: PropTypes.object.isRequired,\n        pagingInfo: PropTypes.object,\n        data: PropTypes.object.isRequired,\n        checkable: PropTypes.bool.isRequired,\n        changePageCallback: PropTypes.func,\n        updateCallback: PropTypes.func,\n        removeCallback: PropTypes.func,\n        id: PropTypes.string.isRequired,\n        isLoading: PropTypes.bool,\n        customToolbarElements: PropTypes.object\n    };\n\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [keyword, setKeyword] = useState('');\n\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = data.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleCheckboxChange = (event, name) =>{\n\n            const selectedIndex = selected.indexOf(name);\n            let newSelected = [];\n\n            if (selectedIndex === -1) {\n                newSelected = newSelected.concat(selected, name);\n            } else if (selectedIndex === 0) {\n                newSelected = newSelected.concat(selected.slice(1));\n            } else if (selectedIndex === selected.length - 1) {\n                newSelected = newSelected.concat(selected.slice(0, -1));\n            } else if (selectedIndex > 0) {\n                newSelected = newSelected.concat(\n                    selected.slice(0, selectedIndex),\n                    selected.slice(selectedIndex + 1),\n                );\n            }\n\n            setSelected(newSelected);\n\n    };\n\n    const handleClick = (event, name) => {\n\n    };\n\n\n    const handleChangePage = (event, newPage) => {\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n        console.log(\"handleChangeRowsPerPage\")\n\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                {isLoading ? <LinearProgress/> : null }\n                <EnhancedTableToolbar\n                    title={title}\n                    numSelected={selected.length}\n                    changePageCallback={changePageCallback}\n                    keyword={keyword}\n                    setKeyword={setKeyword}\n                    customToolbarElements={customToolbarElements}\n                />\n                 <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={data.length}\n                            headCells={headCells}\n                            checkable={checkable}\n                        />\n\n\n                        <TableBody>\n                            {stableSort(data, getComparator(order, orderBy))\n                                .filter(item => searchFunction === undefined ? true : searchFunction(keyword, item))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    const rowStyle = row['isVerified'] !== undefined  && row['isVerified'] === false ? classes.rowNotVerified :\n                                        row['isPublic'] !== undefined && row['isPublic'] === false ? classes.rowNotPublished :  classes.rowBasic;\n\n                                    return (\n                                        <TableRow\n                                            className={rowStyle}\n                                            hover\n                                            onClick={(event) => handleClick(event, row.name)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row[id]}\n                                            selected={isItemSelected}\n                                        >\n                                            {checkable ? <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    onChange={(event)=>handleCheckboxChange(event, row.name)}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell> : null}\n\n                                            {headCells.map(header=>{\n                                                if(header.isId){\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\n                                                            {row[header.id]}\n                                                        </TableCell>\n                                                }else if(header.id === 'actions' ){\n                                                        return <TableCell >\n                                                            <div>\n                                                                <IconButton onClick={()=>updateCallback(row[id])} size=\"small\" aria-label=\"edit\" >\n                                                                    <EditIcon fontSize=\"small\" />\n                                                                </IconButton>\n\n                                                                <IconButton size=\"small\" aria-label=\"delete\" >\n                                                                    <DeleteIcon onClick={()=>removeCallback(row[id])} fontSize=\"small\" />\n                                                                </IconButton>\n                                                            </div>\n                                                            </TableCell>\n                                                }else{\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\n                                                }\n\n                                            })}\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows}}>\n\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\n                                        <TableCell colSpan={6} className={classes.centerCell}>\n                                            <Typography variant=\"h6\" noWrap>\n                                                No results\n                                            </Typography>\n                                        </TableCell>}\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10]}\n                    component=\"div\"\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\n\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\nexport default function useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n\n        [value]\n    );\n\n    return debouncedValue;\n}","import { createBrowserHistory as history} from 'history';\n\nexport default history();","import Cookies from 'js-cookie'\n\nexport const getAccessToken = () => Cookies.get('access_token');\nexport const isAuthenticated = () => !!getAccessToken();","import React from \"react\";\nimport axios from \"axios\"\nimport history from \"../helpers/history\";\nimport {getAccessToken} from \"../helpers/tokens\";\nimport Cookies from \"js-cookie\";\nimport app from \"../helpers/firebaseInit\";\n\nconst request = async function (options, contentType) {\n\n    const client = axios.create({\n        baseURL: false ? \"http://localhost:8080/\" : \"https://www.traveldirection.ax.lt:8080/\",\n        headers: {\n            'Content-Type': (contentType == null) ? 'application/json' : contentType,\n            'Accept': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            \"Authorization\": getAccessToken()\n        },\n    });\n\n\n    // Add a response interceptor\n    client.interceptors.response.use(function (response) {\n        return response;\n    }, function (error) {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        // Do something with response error\n        const originalRequest = error.config;\n        const status = error.response.status;\n        if (!!app.auth().currentUser  &&\n            (status === 401 || status === 403) &&\n            originalRequest._retry === undefined\n        ) {\n            //console.log(\"Users token has expired!\");\n            return app.auth().currentUser.getIdToken(true).then(token => {\n                //console.log(\"Retrieving new token and making the same request!\");\n                originalRequest._retry = true;\n                originalRequest.headers.Authorization = token;\n                Cookies.set(\"access_token\", token);\n                return axios(originalRequest)\n            });\n        }\n        return Promise.reject(error);\n    });\n\n    const onSuccess = function (response) {\n        console.log('Request Successful!', response);\n        return response.data;\n    };\n\n    const onError = function (error) {\n        console.debug('Request Failed:', error.config);\n        if (error.response) {\n            console.debug('Status:', error.response.status);\n            if (error.response.status === 403) {\n                history.push(\"/login\")\n            }\n            console.debug('Data:', error.response.data);\n            console.debug('Headers:', error.response.headers);\n        } else {\n            console.debug('Error Message:', error.message);\n        }\n        return Promise.reject(error.response || error.message);\n    };\n\n    return client(options)\n        .then(onSuccess)\n        .catch(onError);\n};\n\nconst getRequest = function (path, urlData = \"\") {\n    return request({\n        url: path + urlData,\n        method: 'GET'\n    });\n};\n\nconst postRequest = function (path, data, urlData = \"\") {\n    return request({\n        url: path + urlData,\n        method: 'POST',\n        data: data\n    });\n};\n\nconst postMultipartRequest = function (path, formData) {\n    return request({\n        url: path,\n        method: 'POST',\n        data: formData\n    }, 'multipart/form-data' /*'application/x-www-form-urlencoded'*/);\n};\n\nconst RequestType = {\n    getRequest, postRequest, postMultipartRequest\n};\n\nexport default RequestType\n\n\n","import RequestType from '../Networking/NetworkLayerCentral'\n\n//Places\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\n\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\nconst removePlace = (urlParams) => RequestType.getRequest(\"api/v1/place/delete\", urlParams);\n\nconst getAllCities = () =>RequestType.getRequest(\"api/v1/place/city/all\");\nconst getAllCounties = () =>RequestType.getRequest(\"api/v1/place/county/all\");\nconst getAllCountries = () =>RequestType.getRequest(\"api/v1/place/country/all\");\nconst getAllMunicipalities = () =>RequestType.getRequest(\"api/v1/place/municipality/all\");\n\nconst Places = {getAllCities,getAllCounties, getAllCountries, getAllMunicipalities, getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces, removePlace};\n\n//Tags\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\nconst removeTags = (params) => RequestType.postRequest(\"api/v1/tags/delete\", params);\nconst updateTags = (params) => RequestType.postRequest(\"api/v1/tags/update\", params);\nconst Tags = {getAllTags, addTag, removeTags, updateTags};\n\n//Category\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\nconst removeCategory = (params) => RequestType.postRequest(\"api/v1/categories/delete\", params);\nconst updateCategory = (params) => RequestType.postRequest(\"api/v1/categories/update\", params);\nconst getAllCategories = () => RequestType.getRequest(\"api/v1/categories/all\");\nconst Categories = {addCategory, getAllCategories, removeCategory, updateCategory};\n\n//Photo\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\nconst Photos = {addPhoto, uploadPhoto};\n\n\n//Parking\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\nconst Parking = {getParkingByLocation, insertNewParking};\n\n\n//TagsPlace\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\nconst TagsPlace = {updateTagsForPlace};\n\n//CategoriesPlace\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\nconst CategoriesPlace = {updateCategoriesForPlace};\n\n//PhotoPlace\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\nconst ParkingPlace = {updateParkingForPlace};\n\n//PhotoPlace\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\nconst PhotoPlace = {updatePhotoForPlace};\n\n//Schedule\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\nconst Schedule = {updateScheduleForPlace};\n\n//ReviewsPlace\nconst getPlaceReviews = (urlParams) => RequestType.getRequest(\"api/v1/reviews/all\", urlParams);\nconst Reviews = {getPlaceReviews};\n\n//Sources\nconst getSources = () => RequestType.getRequest(\"api/v1/source/all\");\nconst addSource = (data) => RequestType.postRequest(\"api/v1/source/insert\",data);\nconst Source = {getSources, addSource};\n\n//SourcePlace\nconst updateSourcesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/sourceplace/update\", data, urlParams);\nconst SourcePlace = {updateSourcesForPlace};\n\n//Tours\nconst insertTour = (data) => RequestType.postRequest(\"api/v1/tour/insert\",data)\nconst updateTour = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/update\",data, urlParams)\nconst getTour = (urlParams) => RequestType.getRequest(\"api/v1/tour\",urlParams)\nconst removeTour = (urlParams) => RequestType.getRequest(\"api/v1/tour/delete\", urlParams);\nconst getAllToursAdmin = (urlParams) => RequestType.getRequest(\"api/v1/tour/searchadmin\", urlParams);\nconst Tour = {insertTour, getTour, updateTour, getAllToursAdmin, removeTour}\n\nconst API = {Tour, SourcePlace, Source,Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule, Reviews};\n\nexport default API\n\n","// src/common/providers/APIErrorProvider/index.js\nimport React, { useState, useCallback } from 'react';\n\nexport const AlertDialogContext = React.createContext({\n    alertConfig: null,\n    addAlertConfig: () => {},\n    removeAlertConfig: () => {}\n});\n\nexport default function AlertDialogProvider({ children }) {\n    const [alertConfig, setAlertConfig] = useState(null);\n    const contextValue = {\n        alertConfig,\n        addAlertConfig: (title, message, actions, onClose = undefined) => setAlertConfig({ title, message, actions, onClose}),\n        removeAlertConfig: () => setAlertConfig(null)\n    };\n\n    return (\n        <AlertDialogContext.Provider value={contextValue}>\n            {children}\n        </AlertDialogContext.Provider>\n    );\n}","import React, {useContext} from \"react\";\nimport {AlertDialogContext} from \"./AlertDialogContext\";\n\nexport default function UseAlertDialogContext() {\n    const { alertConfig, addAlertConfig, removeAlertConfig } = useContext(AlertDialogContext);\n    return { alertConfig, addAlertConfig, removeAlertConfig };\n}\n","const Strings = {\n    DIALOG_PLACE_PUBLISH_TITLE : 'Place publicity',\n    DIALOG_PLACE_PUBLISH_MESSAGE: \"This place will be visible for all users. Are you sure?\",\n    DIALOG_PLACE_UNPUBLISH_MESSAGE :\"This place will not be visible anymore. Are you sure?\",\n\n    DIALOG_PLACE_INSERT_TITLE: \"Insert place\",\n    DIALOG_PLACE_INSERT: \"Are you sure you want to insert this place?\",\n\n    DIALOG_PLACE_UPDATE_TITLE: \"Update place\",\n    DIALOG_PLACE_UPDATE: \"Are you sure you want to make changes to this place?\",\n\n    DIALOG_PLACE_VERIFY_TITLE: \"Place verification\",\n    DIALOG_PLACE_VERIFY_MESSAGE: \"This is a user's suggested place. Are you sure you want to verify this place and make it visible to others?\",\n\n    DIALOG_PLACE_DELETE_TITLE: \"Delete place\",\n    DIALOG_PLACE_DELETE_MESSAGE: \"This action will remove this place permanently. Are you sure you want to proceed?\",\n\n    DIALOG_TOUR_DELETE_TITLE: \"Delete tour\",\n    DIALOG_TOUR_DELETE_MESSAGE: \"This action will remove this tour permanently. Are you sure you want to proceed?\",\n\n    SNACKBAR_PLACE_INSERTED_SUCCESS: \"Place inserted successfully\",\n    SNACKBAR_PLACE_REMOVE_SUCCESS: \"Place was removed successfully\",\n\n    SNACKBAR_TOUR_INSERTED_SUCCESS: \"Tour inserted successfully\",\n    SNACKBAR_TOUR_REMOVE_SUCCESS: \"Tour was removed successfully\",\n\n    SNACKBAR_ERROR: \"Something went wrong!\",\n    SNACKBAR_CHANGES_SAVED: \"All changes saved!\"\n};\n\nexport default Strings;","import React, { useState, useCallback } from 'react';\nimport { useContext } from 'react';\n\nexport const SnackbarContext = React.createContext({\n    config: null,\n    addConfig: () => {},\n    removeConfig: () => {}\n});\n\n\nexport default function SnackbarProvider({ children }) {\n    const [config, setConfig] = useState(null);\n\n    const removeConfig = () => setConfig(null);\n    const addConfig = (success, message) => setConfig({ success, message });\n\n    const contextValue = {\n        config,\n        addConfig: (success, message) => addConfig(success, message),\n        removeConfig: () => removeConfig()\n    };\n\n    return (\n        <SnackbarContext.Provider value={contextValue}>\n            {children}\n        </SnackbarContext.Provider>\n    );\n}","import { useContext } from 'react';\nimport {SnackbarContext} from \"./SnackbarContext\";\n\nexport default function UseSnackbarContext() {\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\n    return { config, addConfig, removeConfig };\n}\n","\nimport React, {useEffect, useState} from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Paper from \"@material-ui/core/Paper\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = theme => ({\n    autoComplete: {\n        margin: theme.spacing(1)\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'left',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(1),\n        margin: 0,\n    },\n    autoCompleteChipContainer: {\n        padding: theme.spacing(1)\n    }\n});\n\nfunction AutoCompleteChip(props){\n\n    const {options, setOptions, selectedOptions, setSelectedOptions, classes, label, id} = props;\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\n    const [firstLoad, setFirstLoad] = useState(true);\n\n    function handleDelete(data) {\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\n        setOptions(\n            [\n                ...options,\n                data\n            ]\n        )\n    }\n\n    useEffect(()=>{\n        if(firstLoad && options.length>0){\n            let data = [];\n            options.map(row=>{\n                let found = false;\n                selectedOptions.map(row1=>{\n                    if(JSON.stringify(row) === JSON.stringify(row1)){\n                        found = true\n                    }\n                });\n                if(!found){\n                   data.push(row)\n                }\n            });\n            setOptions(data);\n            setFirstLoad(false)\n        }\n    },[options]);\n\n    function handleInput(event, value){\n        setCurrentVal({\"name\": \"\"});\n        setSelectedOptions(\n            [\n                ...selectedOptions,\n                value\n            ]\n        );\n        setOptions(options.filter(item => item !== value))\n    }\n\n    return(\n        <div>\n            <Box  className={classes.autoCompleteChipContainer}>\n                {selectedOptions.length !== 0 &&\n                <Box component=\"ul\" className={classes.root}>\n                    {\n                        selectedOptions.map(option => {\n                            return id !== undefined ?\n                                <li key={option[id]}>\n                                    <Chip\n                                        variant=\"outlined\"\n                                        label={option.name}\n                                        onDelete={() => handleDelete(option)}\n                                        className={classes.chip}\n                                    />\n                                </li>\n                                :\n                                <li key={option}>\n                                        <Chip\n                                            variant=\"outlined\"\n                                            label={option}\n                                            onDelete={() => handleDelete(option)}\n                                            className={classes.chip}\n                                        />\n                                </li>\n                                }\n\n                            )\n                    }\n                </Box>\n                }\n\n                <Autocomplete\n                    className={classes.autoComplete}\n                    value={getCurrentVal}\n                    options={options}\n                    onChange={handleInput}\n                    disableClearable\n                    getOptionLabel={(option) =>  id!==undefined ? option.name : option}\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n                />\n            </Box>\n        </div>\n    )\n}\n\nAutoCompleteChip.propTypes = {\n    setSelectedOptions: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired,\n    setOptions: PropTypes.func.isRequired,\n    selectedOptions: PropTypes.array.isRequired,\n    classes: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(AutoCompleteChip)","import React, {useEffect, useState} from \"react\";\nimport API from \"../Networking/API\";\nimport * as moment from \"moment\";\nimport {func} from \"prop-types\";\nexport const PlacesFilterContext = React.createContext();\nvar buildUrl = require('build-url');\n\n\nconst initialDates = {\n    insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\n    insertionEnd: moment(new Date()).add(1,'day').format(),\n    modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\n    modificationEnd: moment(new Date()).add(1,'day').format()\n};\n\nexport const PlacesFilterProvider = ({children}) => {\n    const [categories, setCategories] = useState([]);\n    const [selectedCategories, setSelectedCategories] = useState([]);\n\n    const [cities, setCities] = useState([]);\n    const [selectedCities, setSelectedCities] = useState([]);\n\n    const [countries, setCountries] = useState([]);\n    const [selectedCountries, setSelectedCountries] = useState([]);\n\n    const [municipalities, setMunicipalities] = useState([]);\n    const [selectedMunicipalities, setSelectedMunicipalities] = useState([]);\n\n    const [counties, setCounties] = useState([]);\n    const [selectedCounties, setSelectedCounties] = useState([]);\n\n    const [initialLoading, setInitialLoading] = useState(true);\n    const [resetFilterOptions, setResetFilterOptions] = useState(false);\n\n    const [filterOptions, setFilterOptions] = useState([\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\n\n    const [dates, setDates] = useState(initialDates);\n\n    const [filterQuery, setFilterQuery] = useState( buildUrl(null, {\n        queryParams: {\n            di: [dates.insertionStart, dates.insertionEnd],\n            dm: [dates.modificationStart, dates.modificationEnd],\n            filterOptions: parseFilterOptions(),\n            categories: parseCategories(),\n            countries: selectedCountries,\n            cities: selectedCities\n        }\n    }));\n\n\n    const getCategories = () => {\n        API.Categories.getAllCategories().then(response=>{\n            setCategories(response);\n            console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        });\n    };\n\n    const getAllCities = () =>{\n        API.Places.getAllCities().then(res=>{\n            setCities(res)\n        }).catch(err=>{\n        })\n    };\n\n    const getAllCounties = () =>{\n        API.Places.getAllCounties().then(res=>{\n            setCounties(res)\n        }).catch(err=>{\n        })\n    };\n\n    const getAllCountries = () =>{\n        API.Places.getAllCountries().then(res=>{\n            setCountries(res)\n        }).catch(err=>{\n        })\n    };\n\n    const getAllMunicipalities = () =>{\n        API.Places.getAllMunicipalities().then(res=>{\n            setMunicipalities(res)\n        }).catch(err=>{\n        })\n    };\n\n\n    useEffect(()=>{\n        console.log(\"Fetching...\");\n        Promise.all([\n            getCategories(),\n            getAllCities(),\n            getAllCountries(),\n            getAllCounties(),\n            getAllMunicipalities()\n        ]).then(response => {\n            setInitialLoading(false);\n            console.log(\"All data received!\")\n        }).catch(err => {\n        })\n    },[]);\n\n    useEffect(()=>{\n        if(!initialLoading){\n            if(!resetFilterOptions){\n                setFilterQuery(buildUrl(null, {\n                    queryParams: {\n                        di: [dates.insertionStart, dates.insertionEnd],\n                        dm: [dates.modificationStart, dates.modificationEnd],\n                        o: parseFilterOptions(),\n                        c: parseCategories(),\n                        countries: selectedCountries,\n                        cities: selectedCities\n                    }\n                }))\n            }else{\n                console.log(\"Clearing filters\");\n                if(areFiltersCleared()){\n                    console.log(\"All filters cleared\");\n                    setResetFilterOptions(false)\n                }\n            }\n        }\n    },[selectedCategories, selectedCities,selectedCountries,dates,filterOptions,resetFilterOptions]);\n\n    function areFiltersCleared() {\n        let filterOptionsCleared = true;\n        filterOptions.map(row=>{\n            if(row.filter){\n                filterOptionsCleared = false\n            }\n        });\n        return filterOptionsCleared &&\n            selectedCategories.length === 0 &&\n            selectedCities.length === 0 &&\n            selectedCountries.length ===0 &&\n            dates.insertionStart === initialDates.insertionStart &&\n            dates.modificationStart === initialDates.modificationStart\n    }\n\n    function parseCategories(){\n        let cats = [];\n        selectedCategories.map(row=>{\n            cats.push(row.name)\n        });\n        return cats\n    }\n\n    function parseFilterOptions(){\n        let options = [];\n        filterOptions.map(row=>{\n            if(row.filter === true)\n                options.push(row.filterName)\n        });\n        return options\n    }\n\n    const contextValue = {\n        filterQuery,\n        setResetFilterOptions,\n\n        dates,\n        setDates,\n\n        filterOptions,\n        setFilterOptions,\n\n        categories,\n        setCategories,\n        selectedCategories,\n        setSelectedCategories,\n\n        counties,\n        setCounties,\n        selectedCounties,\n        setSelectedCounties,\n\n        cities,\n        setCities,\n        selectedCities,\n        setSelectedCities,\n\n        countries,\n        setCountries,\n        selectedCountries,\n        setSelectedCountries,\n\n        municipalities,\n        setMunicipalities,\n        selectedMunicipalities,\n        setSelectedMunicipalities\n    };\n\n    return (\n        <PlacesFilterContext.Provider value={contextValue}>\n            {children}\n        </PlacesFilterContext.Provider>\n    );\n};","import React, {useContext, useEffect, useState} from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\nimport AutocompleteChip from \"../AutocompleteChip\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport moment from \"moment\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport MuiPickersUtilsProvider from \"@material-ui/pickers/MuiPickersUtilsProvider\";\nimport Button from \"@material-ui/core/Button\";\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\n\nconst style = theme =>({\n    filterDiv: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    sortingButtons: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: theme.spacing(2),\n        height: \"100%\"\n\n    },\n    rightLayout: {\n        boxShadow: \"0 0 1px 0 #666\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: theme.spacing(2)\n    },\n    datesLayout:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n    }\n});\n\n\n\nfunction FilterBlock({classes}) {\n    const {\n        categories, setCategories, selectedCategories, setSelectedCategories,\n        cities, setCities, selectedCities, setSelectedCities,\n        countries, setCountries, selectedCountries, setSelectedCountries,\n        filterOptions, setFilterOptions, setResetFilterOptions,\n        dates, setDates} = useContext(PlacesFilterContext);\n\n    const filterOptionsChanged = (name) =>{\n        let generalOptions = Object.assign([], filterOptions);\n        generalOptions.map(row=>{\n            if(row.filterName === name){\n                row.filter = !row.filter\n            }\n        });\n        setFilterOptions(generalOptions)\n    };\n\n    function filterDateChange(date, id) {\n        let cDate = Object.assign( {}, dates);\n        cDate[id] = moment(date).format('YYYY-MM-DD');\n        setDates(cDate)\n    }\n\n    function clearFilters() {\n        setResetFilterOptions(true);\n\n        setSelectedCities([]);\n        setSelectedCountries([]);\n        setSelectedCategories([]);\n\n        let filters = Object.assign(filterOptions, []);\n        filters.map(row=>{\n            row.filter = false\n        });\n        setFilterOptions(filters);\n\n        setDates({\n            insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\n            insertionEnd: moment(new Date()).add(1,'day').format(),\n            modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\n            modificationEnd: moment(new Date()).add(1,'day').format()\n        })\n    }\n\n\n\n    return <div className={classes.filterDiv}>\n        <div className={classes.sortingButtons}>\n            {filterOptions.map(row=>{\n                return <FormControlLabel\n                    control={<Checkbox\n                        checked={row.filter}\n                        onChange={()=>filterOptionsChanged(row.filterName)}\n                        name={row.filterName} />}\n                    label={row.filterLabel}\n                />\n            })}\n        </div>\n        <div className={classes.rightLayout}>\n            <Typography variant=\"h6\">\n                Filter by dates\n            </Typography>\n            <Typography variant=\"subtitle1\">\n                Insertion dates between\n            </Typography>\n            <Grid container justify=\"space-around\">\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM-dd-yyyy\"\n                    margin=\"normal\"\n                    id=\"insertionStart\"\n                    onChange={(date)=>filterDateChange(date,\"insertionStart\")}\n                    value={dates.insertionStart}\n                    label=\"Date start\"\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                />\n                <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM-dd-yyyy\"\n                    margin=\"normal\"\n                    value={dates.insertionEnd}\n                    onChange={(date)=>filterDateChange(date,\"insertionEnd\")}\n                    id=\"insertionEnd\"\n                    label=\"Date end\"\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                />\n                </MuiPickersUtilsProvider>\n            </Grid>\n            <br/>\n            <br/>\n            <Typography variant=\"subtitle1\">\n                Modification dates between\n            </Typography>\n            <Grid container justify=\"space-around\">\n                <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM-dd-yyyy\"\n                    margin=\"normal\"\n                    value={dates.modificationStart}\n                    onChange={(date)=>filterDateChange(date,\"modificationStart\")}\n                    id=\"modificationStart\"\n                    label=\"Date start\"\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                />\n                <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM-dd-yyyy\"\n                    margin=\"normal\"\n                    value={dates.modificationEnd}\n                    onChange={(date)=>filterDateChange(date,\"modificationEnd\")}\n                    id=\"modificationEnd\"\n                    label=\"Date end\"\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                />\n            </Grid>\n            <br/>\n            <Typography variant=\"h6\">\n                Filter by categories\n            </Typography>\n            <AutocompleteChip label=\"Select categories\"\n                              id=\"categoryId\"\n                              options={categories}\n                              setOptions={setCategories}\n                              selectedOptions={selectedCategories}\n                              setSelectedOptions={setSelectedCategories}/>\n\n                              <br/>\n                              <br/>\n            <Typography variant=\"h6\">\n                Filter by countries\n            </Typography>\n            <AutocompleteChip label=\"Select countries\"\n                              options={countries}\n                              setOptions={setCountries}\n                              selectedOptions={selectedCountries}\n                              setSelectedOptions={setSelectedCountries}/>\n            <br/>\n            <br/>\n\n            <Typography variant=\"h6\">\n                Filter by cities\n            </Typography>\n            <AutocompleteChip label=\"Select cities\"\n                              options={cities}\n                              setOptions={setCities}\n                              selectedOptions={selectedCities}\n                              setSelectedOptions={setSelectedCities}/>\n            <br/>\n            <br/>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => clearFilters()}>\n                Clear filters\n            </Button>\n        </div>\n\n    </div>\n\n}\n\nexport default withStyles(style)(FilterBlock)","import React, {useContext, useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TableComponent from \"../components/TableComponent\";\nimport API from \"../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Box from \"@material-ui/core/Box\";\nimport history from \"../helpers/history\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Popover from \"@material-ui/core/Popover\";\nimport FilterBlock from \"../components/add_place_components/FilterBlock\";\nimport * as moment from \"moment\";\nimport {PlacesFilterContext} from \"../contexts/PlacesFilterContext\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    input: {\n        display: \"none\"\n    },\n    root:{\n        height:\"100vh\",\n        width:\"100%\",\n        overflow: \"auto\"\n    },\n    buttonsDiv: {\n        backgroundColor: \"red\",\n        justifyContent: \"flex-end\"\n    },\n    content:{\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    },\n    autocomplete:{\n        width: '200px',\n        height: '40px',\n        fontSize: \"14px\",\n        border: \"0\",\n        borderBottom: \"2px solid grey\",\n        outline:\"0\",\n        marginBottom: \"4px\"\n    }\n});\n\n\nconst headCells = [\n    { id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\n    { id: 'address', numeric: false, disablePadding: false, label: 'Address',isId: false},\n    { id: 'city', numeric: false, disablePadding: false, label: 'City',isId: false },\n    { id: 'country', numeric: false, disablePadding: false, label: 'Country',isId: false },\n    { id: 'dateModified', numeric: false, disablePadding: false, label: 'Date modified',isId: false },\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\n];\n\nfunction Places(props) {\n\n    const [data, setData] = useState([]);\n    const [pageData, setPageData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { classes } = props;\n\n\n    const { filterQuery } = useContext(PlacesFilterContext);\n    const { addAlertConfig } = UseAlertDialogContext();\n    const { addConfig } = UseSnackbarContext();\n\n    useEffect(()=>{\n        setIsLoading(true);\n        requestAllPlaces();\n    },[filterQuery]);\n\n\n    function getPlaceNameById(id){\n        for(var i = 0; i<data.length; i++){\n            if(data[i].placeId === id)\n                return data[i].name\n        }\n    }\n\n    function requestAllPlaces(p=1,keyword=\"\"){\n        console.log(filterQuery + \"&p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword);\n        getAllPlaces(filterQuery+\"&p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword);\n    }\n\n    function parseData(data){\n        setIsLoading(false);\n        let placesData = [];\n        data.list.map(row => {\n            placesData.push(row)\n        });\n\n        delete data.list;\n        setData(placesData);\n        console.log(placesData);\n        setPageData(data);\n    }\n\n    function updatePlaceCallback(id){\n        history.push(\"/app/addplace/\"+id)\n    }\n    function removePlaceCallback(id){\n        console.log(\"Name\",getPlaceNameById(id));\n        setIsLoading(true);\n        addAlertConfig(Strings.DIALOG_PLACE_DELETE_TITLE +\" - \" + getPlaceNameById(id), Strings.DIALOG_PLACE_DELETE_MESSAGE, [{\n            name: \"Remove\",\n            action: () =>{\n                    API.Places.removePlace(\"?p=\"+id).then(response=>{\n                        let tmp = [];\n                        data.map(row=>{\n                            if(row.placeId !== id){\n                                tmp.push(row)\n                            }\n                        });\n                        setData(tmp);\n                        addConfig(true, Strings.SNACKBAR_PLACE_REMOVE_SUCCESS)\n                        setIsLoading(false)\n                    }).catch(error=>{\n                        setIsLoading(false);\n                        addConfig(false, Strings.SNACKBAR_ERROR)\n                    })\n            }\n        }], ()=>{setIsLoading(false)})\n    }\n\n    const changePageCallback = (p=0, keyword=\"\") => {\n        setIsLoading(true);\n        requestAllPlaces(p, keyword)\n    };\n\n    //Sorting stuff\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n\n    const customToolbarElements = () =>{\n        return <div>\n            <Tooltip aria-describedby={id} title=\"Filter list\">\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\n                    <FilterListIcon />\n                </IconButton>\n            </Tooltip>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={()=>{setAnchorEl(null)}}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <FilterBlock/>\n\n            </Popover>\n        </div>\n    };\n    /*------------------------------------------------------------------------------------------------------*/\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content} >\n                <TableComponent\n                    title={\"Places\"}\n                    headCells={headCells}\n                    data={data}\n                    pagingInfo={pageData}\n                    checkable={false}\n                    changePageCallback={changePageCallback}\n                    updateCallback={updatePlaceCallback}\n                    removeCallback={removePlaceCallback}\n                    id={\"placeId\"}\n                    isLoading={isLoading}\n                    customToolbarElements={customToolbarElements()}\n                />\n\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <Button\n                        onClick={()=>{history.push(\"/app/addplace\")}}\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        startIcon={<AddIcon />}>\n                        Add\n                    </Button>\n                </Box>\n            </div>\n            <Button>\n                Clear filters\n            </Button>\n        </div>\n    );\n\n    function getAllPlaces(urlParams=\"\") {\n        API.Places.getAllPlacesAdmin(urlParams).then(response=>{\n            setIsLoading(false);\n            parseData(response)\n        }).catch(error=>{\n            setIsLoading(false);\n            console.log(error)\n        })\n    }\n}\n\nPlaces.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Places);","export const priceRange = [\n    {\n        value: 0,\n        label: \"FREE\",\n    },\n    {\n        value: 25,\n        label: \"$\",\n    },\n    {\n        value: 50,\n        label: \"$$\",\n    },\n    {\n        value: 75,\n        label: \"$$$\",\n    },\n    {\n        value: 100,\n        label: \"$$$$\",\n    },\n    {\n        value: 125,\n        label: \"$$$$$\",\n    }\n];\n","export const averageTimeSpent = [\n    {\n        value: 5,\n        label: 5,\n    },\n    {\n        value: 10,\n        label: 10,\n    },\n    {\n        value: 15,\n        label: 15,\n    },\n    {\n        value: 30,\n        label: 30,\n    },\n    {\n        value: 45,\n        label: 45,\n    },\n    {\n        value: 60,\n        label: 60,\n    },\n    {\n        value: 90,\n        label: 90,\n    },\n    {\n        value: 120,\n        label: 120,\n    },\n    {\n        value: 150,\n        label: 150,\n    },\n    {\n        value: 180,\n        label: 180,\n    },\n    {\n        value: 210,\n        label: 210,\n    },\n    {\n        value: 240,\n        label: 240,\n    },\n    {\n        value: 270,\n        label: 270,\n    },\n];","import {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    }\n});\n\nfunction AddSourceDialog(props){\n\n    function validateInput(){\n        let error = false;\n        if(text.length <= 3 || url.length <=3)\n            error = true;\n        setError(error);\n        return error\n    }\n\n    let {classes, open, action, setDialogOpen} = props;\n    const [text, setText] = useState(\"\");\n    const [url, setUrl] = useState(\"\");\n    const [error, setError] = useState(false);\n    return(\n        <div>\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\">\n                    Insert source\n                </DialogTitle>\n                <DialogContent dividers>\n                        <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}\n                                   label=\"Source name\" variant=\"outlined\" fullWidth />\n                        <TextField style={{marginTop:\"16px\"}} error={error} onChange = {(ev) => {setUrl(ev.target.value)}}\n                                   label=\"Source url\" variant=\"outlined\" fullWidth />\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={()=>setDialogOpen(false)} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button autoFocus color=\"primary\" onClick={() => {\n                        !validateInput() && action(text, url);\n                        setDialogOpen(false)\n                    }}>\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\nexport default withStyles(styles)(AddSourceDialog)","import React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {withStyles} from \"@material-ui/core\";\nimport Slider from \"@material-ui/core/Slider\";\nimport {priceRange} from \"../../helpers/priceRange\";\nimport {averageTimeSpent} from \"../../helpers/averageTimeSpent\"\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport AutoCompleteChip from \"../AutocompleteChip\";\nimport API from \"../../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddSourceDialog from \"../AddSourceDialog\";\n\n\nconst styles = theme => ({});\nlet previousPrice = \"\";\n\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo, selectedSources, setSelectedSources}) {\n\n    const updatePlaceInfo = (event, newValue) => {\n        const {name, value, id} = event.target;\n        let place = Object.assign({}, placeInfo, {});\n        if (id !== \"\") {\n            place[id] = valuetext(newValue[0]);\n        } else {\n            place[name] = value\n        }\n        console.log(\"Updated place\", place);\n        setPlaceInfo(place)\n    };\n\n    const getSources = () =>{\n        API.Source.getSources().then(response=>{\n            setAvailableSources(response)\n        }).catch(error=>{\n\n        })\n    };\n\n    const handleAddSource = (name, url) =>{\n        API.Source.addSource({name: name, url: url}).then(response=>{\n            setAvailableSources(\n                [\n                    ...availableSources,\n                    response\n                ]\n            );\n            setSelectedSources([\n                ...selectedSources,\n                response\n            ]);\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n\n    useEffect(()=>{\n        getSources()\n    },[]);\n\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [availableSources, setAvailableSources] = useState([]);\n\n    function valuetext(value) {\n        let val = \"\";\n        priceRange.map(row => {\n            if (row.value === value)\n                val = row.label\n        });\n        return val\n    }\n\n    return <div>\n        <Typography variant=\"h6\">\n            Basic place information\n        </Typography>\n        <br/>\n        <TextField\n            required\n            label=\"Place name\"\n            style={{margin: 8}}\n            placeholder=\"Enter the place name\"\n            fullWidth\n            value={placeInfo['name']}\n            name=\"name\"\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Place description\"\n            style={{margin: 8}}\n            placeholder=\"Describe the place thoroughly\"\n            fullWidth\n            multiline\n            name=\"description\"\n            value={placeInfo['description']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            rows={4}\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Phone number\"\n            style={{margin: 8}}\n            placeholder=\"Enter phone number\"\n            fullWidth\n            name=\"phoneNumber\"\n            value={placeInfo['phoneNumber']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Website\"\n            style={{margin: 8}}\n            placeholder=\"Enter website\"\n            fullWidth\n            name=\"website\"\n            value={placeInfo['website']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n\n        <br/>\n        <br/>\n       <AutoCompleteChip\n                id=\"source\"\n                label=\"Select sources\"\n                options={availableSources}\n                setOptions={setAvailableSources}\n                setSelectedOptions={setSelectedSources}\n                selectedOptions={selectedSources}\n       />\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => setDialogOpen(true)}\n            startIcon={<AddIcon />}>\n            Add missing source\n        </Button>\n        <AddSourceDialog\n            action={handleAddSource}\n            open={dialogOpen}\n            setDialogOpen={setDialogOpen}\n        />\n\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <div style={{display: \"flex\"}}>\n            <Typography>\n                Price\n            </Typography>\n            <Slider\n                id=\"price\"\n                onChange={updatePlaceInfo}\n                value={priceRange.map(row => {\n                    if (row.label === placeInfo['price']) return row.value\n                })}\n                style={{width: \"60%\", marginLeft: \"48px\"}}\n                defaultValue={0}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider-always\"\n                step={25}\n                max={125}\n                marks={priceRange}\n            />\n        </div>\n        <br/>\n        <br/>\n        <div style={{display: \"flex\"}}>\n            <Typography>\n                Average time spent\n            </Typography>\n            <FormControl variant=\"outlined\" style={{width: \"60%\", marginLeft: \"48px\"}}>\n                <InputLabel>Minutes</InputLabel>\n                <Select\n                    native\n                    value={parseInt(placeInfo['averageTimeSpent'], 10)}\n                    onChange={updatePlaceInfo}\n                    label=\"Average Time spent\"\n                    inputProps={{\n                        name: 'averageTimeSpent'\n                    }}\n                >\n                    <option value=\"-1\">None</option>\n                    {\n                        averageTimeSpent.map(row=>{\n                            return <option value={parseInt(row.value, 10)}> {row.value}</option>\n                        })\n                    }\n                </Select>\n            </FormControl>\n        </div>\n    </div>\n}\n\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport React, {useMemo, useState} from \"react\"\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Gallery from \"react-photo-gallery\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Delete from \"@material-ui/icons/Delete\"\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst imgWithClick = {cursor: \"pointer\"};\n\nconst Photo = ({index, onItemDelete, photo, margin, direction, top, left}) => {\n\n    const styles = {\n        imgContainer: {\n            margin: margin,\n            display: 'inline',\n            position: 'relative',\n            width: '300px',\n            height: '300px',\n        }\n    }\n    if (direction === \"column\") {\n        styles.imgContainer.position = \"absolute\";\n        styles.imgContainer.imgStyle.left = left;\n        styles.imgContainer.imgStyle.top = top;\n    }\n\n    const handleDelete = event => {\n        onItemDelete(photo);\n    }\n\n    return (\n\n        <Card style={styles.imgContainer}>\n            <CardMedia\n                style={{height: 0, paddingTop: '80%'}}\n                image={photo.src}\n            />\n            <CardActions disableSpacing>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon/>}\n                    onClick={(event) => {\n                        handleDelete(event)\n                    }}\n                >\n                    Delete\n                </Button>\n            </CardActions>\n\n        </Card>\n    )\n\n};\n\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\nconst SortableGallery = SortableContainer(({items, onItemDelete}) => (\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>}/>\n));\n\nfunction ReorderablePhotos(props) {\n    let {setPhotos, photos, srcName, keyName} = props\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\n    };\n\n    function handleItemDelete(photo) {\n        setPhotos(photos.filter(item => {\n            return item[keyName].toString() !== photo.key\n        }))\n    }\n\n    let modifiedData = photos.map(item => {\n        return (\n            {\n                key: item[keyName].toString(),\n                src: item[srcName],\n                width: 1,\n                height: 1\n            })\n\n    })\n    return (\n        <div>\n            <SortableGallery pressDelay={200}\n                             disableAutoscroll={false} items={modifiedData} onSortEnd={onSortEnd}\n                             axis={\"xy\"} onItemDelete={handleItemDelete}/>\n        </div>\n    );\n\n}\n\n\nexport default ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport {DropzoneArea} from \"material-ui-dropzone\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport PropTypes from \"prop-types\";\nimport API from \"../Networking/API\";\n\nconst styles = theme => ({\n    dropzoneArea: {\n        overflow: \"hidden\"\n    }\n});\n\nconst acceptedFileFormats = ['image/jpeg', 'image/png', 'image/bmp', 'image/jpg']\n\nfunction AddImageDialog(props) {\n\n    const {onCloseCallback, open, onFinishCallback, classes} = props\n    const [loading, setIsLoading] = useState(false)\n    const [selectedFiles, setSelectedFiles] = useState([])\n\n    const submitCallback = () => {\n        setIsLoading(true)\n\n        Promise.all(selectedFiles.map(imagefile => {\n            let formData = new FormData()\n            formData.append(\"image\", imagefile)\n            return API.Photos.uploadPhoto(formData)\n        })).then(response => {\n            console.log(response)\n            onFinishCallback(response)\n        }).catch(error => {\n            onFinishCallback()\n        }).finally(() => {\n            setIsLoading(false)\n        })\n    }\n\n    return (\n        <div>\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\">\n                    Photo upload\n                </DialogTitle>\n                {loading && <LinearProgress variant=\"query\"/>}\n                <DialogContent dividers>\n                    <DropzoneArea\n                        className={classes.dropzoneArea}\n                        acceptedFiles={acceptedFileFormats}\n                        maxFileSize={25000000}\n                        dropzoneProps={{disabled: loading}} filesLimit={5} onDrop={setSelectedFiles}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCallback} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={submitCallback} color=\"primary\">\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nAddImageDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onFinishCallback: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(AddImageDialog)\n","import React, {useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ReorderablePhotos from \"../ReorderablePhotos\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddImageDialog from \"../AddImageDialog\";\nimport {Card} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n});\n\nfunction PhotosInfo({classes, setPhotos, photos}) {\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\n\n    function handleAddPhoto(files) {\n        setAddImageDialogOpen(false);\n        if(files == null)\n            return;\n\n        setPhotos([\n            ...photos,\n            ...files]\n        )\n    }\n\n    return(\n        <div>\n            <Typography variant=\"h6\" >\n                Photos\n            </Typography>\n            <Card variant={\"outlined\"} className={classes.outline}>\n\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\n\n                <Button\n                    variant=\"text\"\n                    color=\"primary\"\n                    size=\"small\"\n                    style={{width: '15%'}}\n                    className={classes.button}\n                    onClick={() => setAddImageDialogOpen(true)}\n                    startIcon={<AddIcon />}>\n                    Add photo\n                </Button>\n\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(files) => handleAddPhoto(files)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\n\n\n            </Card>\n        </div>\n\n    )\n}\n\nexport default withStyles(styles)(PhotosInfo)\n\n\n","import React from \"react\";\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\nGeocode.enableDebug();\n\n/**\n * Get country from google maps address array\n * @param addressArray\n * @returns {*|string}\n */\nexport const getCountry = (addressArray) =>{\n    if(addressArray!==undefined){\n        let country = '';\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\n                country = addressArray[ i ].long_name;\n                return country;\n            }\n        }\n    }\n};\n\n/**\n * Get country from google maps address array\n * @param addressArray\n * @returns {*|string}\n */\nexport const getCity = ( addressArray ) => {\n    if(addressArray !== undefined){\n        console.log(\"Address array\", addressArray);\n        let city = '';\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'locality' === addressArray[ i ].types[0] ) {\n                city = addressArray[ i ].long_name;\n                return city;\n            }\n        }\n        return city;\n    }\n};\n\n/**\n * Get district from google maps address array\n * @param addressArray\n * @returns {*|string}\n */\nexport const getCounty = ( addressArray ) => {\n        if(addressArray !== undefined){\n            let county = '';\n            for( let i = 0; i < addressArray.length; i++ ) {\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\n                    county = addressArray[ i ].long_name;\n                    return county;\n                }\n            }\n            return county\n        }\n    };\n/**\n * Get district from google maps address array\n * @param addressArray\n * @returns {*|string}\n */\nexport const getMunicipality = ( addressArray ) => {\n    if(addressArray !== undefined){\n        let municipality = '';\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\n                municipality = addressArray[ i ].long_name;\n                return municipality;\n            }\n        }\n        return municipality;\n    }\n};\n\n/**\n * Geocode location from string address\n * @param address\n * @type string\n * @return location object\n */\nexport function geocodeFromAddress(address){\n    return Geocode.fromAddress( address ).then(\n        response => {\n            const { lat, lng } = response.results[0].geometry.location;\n            const address = response.results[0].formatted_address;\n            const addressArray =  response.results[0].address_components;\n            if(addressArray!==undefined){\n                const city = getCity( addressArray ),\n                    country = getCountry( addressArray ),\n                    county = getCounty(addressArray),\n                    municipality = getMunicipality(addressArray);\n                let loc = {address: address, city: city, country: country, latitude: lat, longitude: lng, county: county, municipality: municipality};\n                return loc\n            }\n            return null\n        },\n        error => {\n            console.log(error);\n        }\n    );\n}\n\n/**\n * Geocode location from latitude and longitude\n * @param newLat\n * @param newLng\n * @return location object\n */\nexport function geocodeFromLatLng(newLat, newLng){\n    return Geocode.fromLatLng( newLat , newLng ).then(\n        response => {\n            const address = response.results[0].formatted_address\n            const addressArray =  response.results[0].address_components\n            if(addressArray!==undefined){\n                const city = getCity( addressArray ),\n                    country = getCountry( addressArray ),\n                    county = getCounty(addressArray),\n                    municipality = getMunicipality(addressArray);\n                let loc = {address: address, city: city, country: country, latitude: newLat, longitude: newLng, county: county, municipality: municipality};\n                return loc;\n            }\n            return null\n        },\n        error => {\n            console.error(error);\n        }\n    );\n}","import React, {useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\nimport PropTypes from \"prop-types\";\nimport {geocodeFromAddress, geocodeFromLatLng, getCity, getCountry, getCounty, getMunicipality} from \"./MapGeolocation\";\nimport {load} from \"dotenv\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst styles = theme => ({\n    content: {\n        margin: theme.spacing(1)\n    },\n    autocomplete:{\n        width: '200px',\n        height: '40px',\n        fontSize: \"14px\",\n        border: \"0\",\n        borderBottom: \"2px solid grey\",\n        outline:\"0\",\n        marginBottom: \"4px\"\n    },\n    root: {\n        display:\"flex\",\n        flexDirection: \"column\",\n        marginTop: \"8px\",\n        padding: theme.spacing(1)\n    }\n});\n\nfunction MapToolbar({classes, isLocked, locationCallback}) {\n\n    const [loading, setIsLoading] = useState(false);\n\n    /**\n     * Handle manual address and coordinates filling with key presses and return location\n     * @param event\n     * @return {boolean}\n     */\n    function handleKeyPress(event){\n        const value = event.target.value;\n        if (event.which === 13 || event.keyCode === 13) {\n            setIsLoading(true);\n            if (/[a-zA-Z]+/.test(value)){\n                geocodeFromAddress(value).then(location=>{\n                    locationCallback(location)\n                    setIsLoading(false)\n                });\n            }else{\n                let position = value.split(/[ ,]+/);\n                if(position.length === 2){\n                    geocodeFromLatLng(parseFloat(position[0]), parseFloat(position[1])).then(location=>{\n                        locationCallback(location);\n                        setIsLoading(false)\n                    })\n                }\n            }\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Handle place selection from google maps autocomplete\n     * @param place\n     * @return {{country: (*|string), address: *, city: (*|string), latitude: *, longitude: *}|null}\n     */\n    const onPlaceSelected = (place) => {\n        setIsLoading(true);\n        const address = place.formatted_address;\n        const addressArray =  place.address_components;\n        if(addressArray !== undefined){\n            const city = getCity( addressArray ),\n                country = getCountry(addressArray),\n                county = getCounty(addressArray),\n                municipality = getMunicipality(addressArray),\n                lat = place.geometry.location.lat(),\n                lng = place.geometry.location.lng();\n                setIsLoading(false)\n                locationCallback({address: address, city: city, country: country, latitude: lat, longitude: lng, county: county, municipality: municipality})\n        }\n        return null\n    };\n\n    /**\n     * Get current location\n     */\n    function getCurrentPosition(){\n        setIsLoading(true)\n        navigator.geolocation.getCurrentPosition(function(position) {\n            let newLat = position.coords.latitude,\n                newLng = position.coords.longitude;\n            geocodeFromLatLng(newLat, newLng).then(location=>{\n                setIsLoading(false)\n                locationCallback(location)\n            });\n        }, error=>{\n            setIsLoading(false)\n            alert(error.message + \"\\n\" + JSON.stringify(error))\n        });\n    }\n\n    return <div className={classes.root}>\n        <div className={classes.content}>\n            <Autocomplete\n                onKeyPress={(event)=>{if(!isLocked)handleKeyPress(event)}}\n                onPlaceSelected={(place)=>{if(!isLocked)onPlaceSelected(place)} }\n                className={classes.autocomplete}\n                types={['(regions)']}\n            />\n            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\">\n                <MyLocationIcon\n                    onClick={()=>{if(!isLocked)getCurrentPosition()}}\n                    fontSize=\"large\"\n                    color=\"primary\"\n                />\n            </IconButton>\n        </div>\n        {loading ? <LinearProgress /> : null}\n\n    </div>\n\n\n}\n\nMapToolbar.propTypes = {\n    isLocked: PropTypes.bool.isRequired,\n    locationCallback: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(MapToolbar)","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n\nconst styles = theme =>({\n    root: {\n        display:\"flex\",\n        flexDirection: \"column\",\n        marginTop: \"8px\",\n        padding: theme.spacing(1)\n    }\n});\n\nfunction MapLock({classes, isLocked, setIsLocked}) {\n    return <div className={classes.root}>\n        <FormControlLabel\n            control={<Switch />}\n            label=\"Lock\"\n            checked={isLocked}\n            onChange={()=>{\n               setIsLocked(old=>!old)\n            }}\n        />\n        {isLocked ?\n            <Alert  severity=\"error\">Map is currently locked. If you want to do any changes unlock it.</Alert> : null}\n    </div>\n}\n\nexport default withStyles(styles)(MapLock)","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { MAP } from 'react-google-maps/lib/constants';\nimport PropTypes from 'prop-types';\n\nexport default function CustomControlsManager(\n    { position = window.google.maps.ControlPosition.TOP_LEFT, children },\n    context\n) {\n    const map = context[MAP];\n\n    const controlDiv = document.createElement('div');\n\n    useEffect(() => {\n        const controls = map.controls[position];\n        const index = controls.length;\n        controls.push(controlDiv);\n        return () => {\n            controls.removeAt(index);\n        };\n    });\n\n    return createPortal(\n        <div style={{ marginBottom: 8 }}>{children}</div>,\n        controlDiv\n    );\n}\n\nCustomControlsManager.contextTypes = {\n    [MAP]: PropTypes.object,\n};","import React, {useCallback, useRef, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer} from \"react-google-maps\"\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\nimport MapToolbar from \"./MapToolbar\";\nimport PropTypes from \"prop-types\";\nimport MapLock from \"./MapLock\";\nimport CustomControlsManager from \"./CustomControlsManager\";\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst styles = theme => ({});\n\nconst MapComponent = withGoogleMap(props =>\n    <GoogleMap\n        defaultZoom={12}\n        ref={props.refInstance}\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\n\n        <Marker\n            name={'Dolores park'}\n            visible={true}\n            draggable={!props.isLocked}\n            onDragEnd={e => onMarkerDragEnd(e, props.setPosition)}\n            position={{lat: props.position.latitude, lng: props.position.longitude}}>\n        </Marker>\n\n        <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\n            <div>\n                <IconButton aria-label=\"delete\" onClick={()=>{\n                    if(!props.isLocked){\n                        const mapCenter = props.refInstance.current.getCenter();\n                        geocodeFromLatLng(mapCenter.lat(), mapCenter.lng()).then(location=>{\n                            props.setPosition(location)\n                        });\n                    }\n                }}>\n                    <ExploreIcon fontSize={\"large\"}/>\n                </IconButton>\n            </div>\n        </CustomControlsManager>\n    </GoogleMap>\n\n);\n\nfunction onMarkerDragEnd(event, setLocationMarker) {\n    let newLat = event.latLng.lat(),\n        newLng = event.latLng.lng();\n    geocodeFromLatLng(newLat, newLng).then(location => {\n        setLocationMarker(location)\n    })\n}\n\nfunction PlaceMap({placeInfo,locationMarker, setLocationMarker}) {\n\n    const [isLocked, setIsLocked] = useState(placeInfo.placeId !== \"\");\n    const refMap = useRef(null);\n\n    function mapToolbarCallback(location) {\n        setLocationMarker(location)\n    }\n    \n    return <React.Fragment>\n        <MapToolbar\n            isLocked={isLocked}\n            locationCallback={mapToolbarCallback}/>\n\n        <MapComponent\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `400px` }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n            refInstance={refMap}\n            isLocked={isLocked}\n            position={locationMarker}\n            setPosition={setLocationMarker}/>\n\n        <MapLock\n            isLocked={isLocked}\n            setIsLocked={setIsLocked}\n        />\n    </React.Fragment>\n\n\n}\n\nPlaceMap.propTypes = {\n    locationMarker: PropTypes.object.isRequired,\n    setLocationMarker: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(PlaceMap)","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlaceMap from \"../maps/PlaceMap\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n});\n\nfunction PlaceLocation({locationData, setLocationData, placeInfo}) {\n\n    function changeLocationData(event){\n        const {name, value} = event.target;\n        let data = Object.assign({}, locationData, {});\n        data[name] = value;\n\n        setLocationData(data)\n    }\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Place location\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select place location from map\n        </Typography>\n        <br/>\n        <PlaceMap\n            placeInfo={placeInfo}\n            locationMarker={locationData}\n            setLocationMarker={setLocationData}\n        />\n        <br/>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Place location\n        </Typography>\n        <br/>\n        <TextField\n            required\n            label=\"Address\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter place address\"\n            fullWidth\n            disabled\n            value={locationData['address']}\n            name='address'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"City\"\n            disabled\n            style={{ margin: 8 }}\n            placeholder=\"Enter place city\"\n            fullWidth\n            value={locationData['city']}\n            name='city'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"County\"\n            disabled\n            style={{ margin: 8 }}\n            placeholder=\"Enter place county\"\n            fullWidth\n            value={locationData['county']}\n            name='county'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"Municipality\"\n            disabled\n            style={{ margin: 8 }}\n            placeholder=\"Enter place municipality\"\n            fullWidth\n            value={locationData['municipality']}\n            name='municipality'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"Country\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter place country\"\n            fullWidth\n            disabled\n            value={locationData['country']}\n            name='country'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            rows={4}\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n    </div>\n}\n\nexport default withStyles(styles)(PlaceLocation)","import React, {useEffect, useRef, useState} from \"react\";\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from \"react-google-maps\";\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\nimport MapToolbar from \"./MapToolbar\";\nimport API from \"../../Networking/API\";\nimport PropTypes, {func} from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CustomControlsManager from \"./CustomControlsManager\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExploreIcon from \"@material-ui/icons/Explore\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Typography from \"@material-ui/core/Typography\";\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\n\n\nconst MapComponent = withGoogleMap(props =>\n    <GoogleMap\n        ref={props.refInstance}\n        defaultZoom={12}\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\n\n        <Marker\n            onClick={()=>{if(!props.isLocked)props.setMainInfoWindow(true)}}\n            name={'Dolores park'}\n            visible={true}\n            draggable={!props.isLocked}\n            onDragEnd={e => onMarkerDragEnd(e, props.setPosition)}\n            position={{lat: props.position.latitude, lng: props.position.longitude}}>\n\n            {props.mainInfoWindow && (\n                <InfoWindow onCloseClick={()=>{props.setMainInfoWindow(false)}}>\n                    <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                        {props.position.address}\n                        <Button\n                            onClick={()=>{\n                                let c = nearestParkingCount(props.position, props.parkingData);\n                                if(c>0){\n                                    props.addAlertConfig(\"Parkings nearby already exist!\", c+\" parking(-s) within 150 meter already exist(-s).\" +\n                                        \" Are you sure you don't want to use already existings parking locations?\",[{name:\"ADD NEW PARKING!\", action: ()=>{\n                                            props.addNewParking(props.position)\n                                        }}])\n                                }\n                            }}\n                            variant=\"text\"\n                            color=\"secondary\"\n                            size=\"large\"\n                            startIcon={<AddIcon />}>\n                            Add new parking\n                        </Button>\n                    </div>\n                </InfoWindow>\n            )}\n        </Marker>\n\n        <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\n            <div>\n                <IconButton aria-label=\"delete\" onClick={()=>{\n                    if(!props.isLocked){\n                        let loc = Object.assign({},props.position, {});\n                        const mapCenter = props.refInstance.current.getCenter();\n                        loc.latitude = mapCenter.lat();\n                        loc.longitude = mapCenter.lng();\n                        props.setPosition(loc)\n                    }\n                }}>\n                    <ExploreIcon fontSize={\"large\"}/>\n                </IconButton>\n            </div>\n        </CustomControlsManager>\n\n        {\n            props.parkingData.map((location, i) =>{\n                const latitude = parseFloat(location.latitude);\n                const longitude = parseFloat(location.longitude);\n                console.log(parkingIsAttached(location, props.selectedParkingData));\n                return <Marker\n                    key={location.parkingId}\n                    position={{ lat: latitude, lng: longitude}}\n                    icon={{\n                        url: parkingIsAttached(location, props.selectedParkingData) ? require('../../res/selectedParking.svg') :\n                            require('../../res/availableParking.svg'),\n                        scaledSize: new window.google.maps.Size(20, 48),\n                        origin: new window.google.maps.Point(0, 0),\n                        anchor: new window.google.maps.Point(10, 35)\n                    }}\n                    onClick={()=>{\n                        if(!props.isLocked){\n                            let markers = Object.assign({},props.parkingInfoWindows, {});\n                            markers[i] = true;\n                            props.setParkingInfoWindows(markers)\n                        }\n                    }}\n                >\n                    {props.parkingInfoWindows[i] && (\n                        <InfoWindow onCloseClick={()=>{\n                                let markers = Object.assign({},props.parkingInfoWindows, {});\n                                markers[i] = false;\n                                props.setParkingInfoWindows(markers)\n                            }\n                        }>\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                                <Typography variant=\"h6\">\n                                    {location.address}\n                                </Typography>\n                                {parkingIsAttached(location, props.selectedParkingData) ? <div>\n                                        <Alert severity=\"success\">This parking location is already attached! See below in \"Selected parking locations\" section.</Alert>\n                                </div> :\n                                <Button\n                                    onClick={()=>{props.addExistingParking(location)}}\n                                    variant=\"text\"\n                                    color=\"secondary\"\n                                    size=\"large\"\n                                    startIcon={<AddIcon />}>\n                                    Add parking\n                                </Button>\n                                }\n                            </div>\n                        </InfoWindow>\n                    )}\n\n                </Marker>\n\n            })\n        }\n\n    </GoogleMap>\n);\n\nfunction parkingIsAttached(parking, selectedParkingData) {\n    for(let i = 0; i<selectedParkingData.length; i++){\n        if(selectedParkingData[i].address === parking.address)\n            return true\n    }\n    return false\n}\n\nfunction calcCrow(lat1, lon1, lat2, lon2)\n{\n    var R = 6371; // km\n    var dLat = toRad(lat2-lat1);\n    var dLon = toRad(lon2-lon1);\n    var lat1 = toRad(lat1);\n    var lat2 = toRad(lat2);\n\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    var d = R * c;\n    return d;\n}\nfunction toRad(Value) {return Value * Math.PI / 180}\n\nfunction nearestParkingCount(parking, parkingData){\n    let count = 0;\n    for(let i = 0; i<parkingData.length; i++){\n        let distance = calcCrow(parking.latitude, parking.longitude, parkingData[i].latitude, parkingData[i].longitude);\n        if(distance<=0.15){\n            count++;\n        }\n    }\n    return count\n}\n\n\nfunction onMarkerDragEnd(event, setLocationMarker) {\n    let newLat = event.latLng.lat(),\n        newLng = event.latLng.lng();\n    geocodeFromLatLng(newLat, newLng).then(location => {\n        setLocationMarker(location)\n    })\n}\n\nfunction ParkingMap({placeInfo,\n                        locationMarker,\n                        setLocationMarker,\n                        addNewParking,\n                        addExistingParking,\n                        selectedParkingData\n                    }) {\n\n    const [parkingData, setParkingData] = useState([]);\n    const [mainInfoWindow, setMainInfoWindow] = useState(false);\n    const [parkingInfoWindows, setParkingInfoWindows] = useState(false);\n    const [isLocked, setIsLocked] = useState(false);\n    const refMap = useRef(null);\n\n    const { addAlertConfig } = UseAlertDialogContext();\n\n    function getClosestParking(){\n        API.Parking.getParkingByLocation(\"?lat=\"+locationMarker.latitude+\"&lng=\"+locationMarker.longitude).then(response=>{\n            setParkingData(response);\n        }).catch(error=>{\n        })\n    }\n\n    useEffect(()=>{\n        console.log(\"Downloading new markers\");\n        getClosestParking()\n    },[locationMarker]);\n\n    function mapToolbarCallback(location) {\n        setMainInfoWindow(true);\n        setLocationMarker(location)\n    }\n\n    return <React.Fragment>\n        <MapToolbar\n            isLocked={isLocked}\n            locationCallback={mapToolbarCallback}/>\n\n        <MapComponent\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `400px` }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n            mainInfoWindow={mainInfoWindow}\n            setMainInfoWindow={setMainInfoWindow}\n            addNewParking={addNewParking}\n            addExistingParking={addExistingParking}\n            parkingInfoWindows={parkingInfoWindows}\n            setParkingInfoWindows={setParkingInfoWindows}\n            parkingData={parkingData}\n            position={locationMarker}\n            setPosition={setLocationMarker}\n            isLocked={isLocked}\n            refInstance={refMap}\n            selectedParkingData={selectedParkingData}\n            addAlertConfig={addAlertConfig}\n        />\n\n    </React.Fragment>\n}\n\n\nParkingMap.propTypes = {\n    placeInfo: PropTypes.object.isRequired,\n    locationMarker: PropTypes.object.isRequired,\n    setLocationMarker: PropTypes.func.isRequired,\n    addNewParking: PropTypes.func.isRequired,\n    addExistingParking: PropTypes.func.isRequired\n};\n\nexport default ParkingMap","import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API from \"../../Networking/API\";\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ParkingMap from \"../maps/ParkingMap\";\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction ParkingLocation({classes, locationData, setLocationData, allSelectedParkingData, setAllSelectedParkingData, placeInfo}) {\n    const { addConfig } = UseSnackbarContext();\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\n    };\n\n    function addNewParking(markerData){\n        if(!parkingExists(markerData)){\n            API.Parking.insertNewParking([markerData]).then(response=>{\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\n                addConfig(true)\n            }).catch(error=>{\n                addConfig(false)\n            })\n        }\n    }\n\n    function addExistingParking(location) {\n        if(!parkingExists(location)){\n            setAllSelectedParkingData(oldArray=> [...oldArray, location])\n        }\n    }\n\n    function parkingExists(markerData){\n        for(let i = 0; i<allSelectedParkingData.length; i++){\n            if(allSelectedParkingData[i].address === markerData.address){\n                addConfig(false, \"This parking is already attached!\");\n                return true;\n            }\n        }\n        return false\n    }\n\n\n    const SortableItem = SortableElement(({value}) => (\n        <Paper className={classes.paper} elevation={3}>\n            <Typography>\n                {value.address}\n            </Typography>\n            <IconButton aria-label=\"delete\" className={classes.margin}\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\n                <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n        </Paper>\n    ));\n\n\n    const SortableList = SortableContainer(({items}) => {\n        return (\n            <ul>\n                {items.map((value, index) => (\n                <SortableItem key={index} index={index} value={value} />\n                ))}\n            </ul>\n        );\n    });\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Add parking\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select parking\n        </Typography>\n\n        <ParkingMap\n            selectedParkingData={allSelectedParkingData}\n            placeInfo={placeInfo}\n            locationMarker={locationData}\n            setLocationMarker={setLocationData}\n            addNewParking={addNewParking}\n            addExistingParking={addExistingParking}\n        />\n\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Selected parking locations\n        </Typography>\n        {allSelectedParkingData.length === 0 ? <Alert severity=\"error\">\n            This place has no selected parking! To select parking for this place do the following:\n            <br/>\n            1. Select your current location or any other location\n            <br/>\n            2. Select already existing nearby parking locations and click add\n            <br/>\n            3. If none of the location is valid, click on the orange marker and add new parking\n            </Alert> :\n            <SortableList pressDelay={200} disableAutoscroll={false} items={allSelectedParkingData} onSortEnd={onSortEnd} />\n        }\n\n\n    </div>\n}\n\nexport default withStyles(styles)(ParkingLocation)","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nfunction AddDialog(props){\n\n    function validateInput(){\n        var error = false;\n        if(text.length <= 3)\n            error = true\n        setError(error)\n        return error\n    }\n\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\n    const [text, setText] = useState(\"\")\n    const [error, setError] = useState(false)\n    return(\n        <div>\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\n                    {header}\n                </DialogTitle>\n                <DialogContent dividers>\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCallback} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button autoFocus color=\"primary\" onClick={() => {\n                        !validateInput() && action(text)\n                    }}>\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nAddDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    action: PropTypes.func.isRequired,\n    onCloseCallback: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(AddDialog)\n","import React, { useState, useCallback } from 'react';\n\nexport const EditDialogContext = React.createContext({\n    dialogConfig: null,\n    dialogOpen: null,\n    setDialogOpen: null,\n    addEditDialogConfig: () => {},\n    removeEditDialogConfig: () => {}\n});\n\nconst defaultOptions = {\n\n    /**\n     * The dialog's title.\n     */\n    title: \"Sample title\",\n\n    /**\n     * Object, that defines an error message for each error returned by validateInput function.\n     * Should follow this structure: {errorCode: \"message\", differentErrorCode: \"Message\"}\n     * Keys of this object are integers (that represent the error code)\n     */\n    errorMessages: {},\n\n    /**\n     * Explanation text for this dialog.\n     */\n    explanation: \"Sample explanation\",\n\n    /**\n     * A callback for when user presses cancel.\n     */\n    onCloseCallback: () => {},\n\n    /**\n     * A callback for when the user input passes error checks and done button is pressed\n     * @param input is the input text\n     */\n    onDoneCallback: (input) => {},\n\n    /**\n     * The label text to be displayed above textfield\n     */\n    textFieldLabel: \"Type here\",\n\n    /**\n     * Should return 0 if input is valid.\n     * If the input is not valid, it should return an error code.\n     * Any returned code, that is not 0 is considered to be an error.\n     * The error code returned may have a message in errorMessages prop.\n     * @param input\n     * @returns {number}\n     */\n    validateInput: (input) => 0,\n\n    /**\n     * The default text to be displayed in TextField\n     */\n    defaultText: \"\"\n}\n\nexport default function EditDialogProvider({ children }) {\n    const [dialogConfig, setDialogConfig] = useState(defaultOptions);\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const contextValue = {\n        dialogConfig,\n        dialogOpen: dialogOpen,\n        setDialogOpen: setDialogOpen,\n        addEditDialogConfig: (options) => {\n            setDialogConfig({\n                ...defaultOptions,\n                ...options\n            })\n            setDialogOpen(true)\n        },\n        removeEditDialogConfig: () => setDialogConfig(null)\n    };\n\n    return (\n        <EditDialogContext.Provider value={contextValue}>\n            {children}\n        </EditDialogContext.Provider>\n    );\n}","import React, {useContext} from \"react\";\nimport {EditDialogContext} from \"./EditDialogContext\";\n\nexport default function UseEditDialogContext() {\n    const { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen } = useContext(EditDialogContext);\n    return { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen};\n}\n","import React, {useEffect, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AutocompleteChip from \"../AutocompleteChip\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddDialog from \"../AddDialog\";\nimport API from \"../../Networking/API\";\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories}) {\n\n    const [availableCategories, setAvailableCategories] = useState([]);\n    const [availableTags, setAvailableTags] = useState([]);\n\n    const {addEditDialogConfig} = UseEditDialogContext();\n    const {addConfig} = UseSnackbarContext();\n\n    const updateTags = () => {\n        API.Tags.getAllTags().then(response=>{\n            setAvailableTags(response);\n            console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n    const updateCategories = () => {\n        API.Categories.getAllCategories().then(response=>{\n            setAvailableCategories(response)\n            console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        });\n    };\n\n    useEffect(()=>{\n        updateTags();\n        updateCategories();\n    },[]);\n\n\n    const promptAddTag = () => {\n        addEditDialogConfig({\n            title: \"Add tag\",\n            explanation: \"Type the tag name\",\n            onDoneCallback: (tagName) => {\n                API.Tags.addTag([{name: tagName}]).then(response=>{\n                    let newTag = {tagId: response[0], name: tagName}\n                    setAvailableTags(\n                        [\n                            ...availableTags,\n                            newTag\n                        ]\n                    );\n                    setSelectedTags([\n                        ...selectedTags,\n                        newTag\n                    ]);\n\n                }).catch(()=>{\n                    addConfig(false, \"Failed to add tag.\")\n                })\n            },\n            errorMessages: {\n                1: \"The tag name is too short\",\n                2: \"A tag with identical name already exists. You should choose the existing tag instead\"\n            },\n            validateInput: (input) => {\n                if(input.length < 4){\n                    return 1 //Input too short\n                }else if(availableTags.filter(item => item.name === input).length !== 0){\n                    return 2 //Identical tag already exists\n                }\n                return 0\n            },\n            textFieldLabel: \"Warm, quick, cozy...\"\n        })\n    }\n\n    const promptAddCategory = () => {\n        addEditDialogConfig({\n            title: \"Add category\",\n            explanation: \"Type the category name\",\n            onDoneCallback: (categoryName) => {\n                API.Categories.addCategory([{name: categoryName}]).then(response=>{\n                    let newCat = {categoryId: response[0], name: categoryName};\n                    setAvailableCategories(\n                        [\n                            ...availableCategories,\n                            newCat\n                        ]\n                    );\n                    setSelectedCategories([\n                        ...selectedCategories,\n                        newCat\n                    ]);\n                }).catch(error=>{\n                    addConfig(false, \"Failed to add category.\")\n                })\n            },\n            errorMessages: {\n                1: \"The category name is too short\",\n                2: \"A category with identical name already exists. You should choose the existing category instead\"\n            },\n            validateInput: (input) => {\n                if(input.length < 4){\n                    return 1 //Input too short\n                }else if(availableCategories.filter(item => item.name === input).length !== 0){\n                    return 2 //Identical category already exists\n                }\n                return 0\n            },\n            textFieldLabel: \"Restaurant, hotel, hiking...\"\n        })\n    }\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Place discovery settings\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select tags\n        </Typography>\n        <AutocompleteChip label=\"Select tags\"\n                          id=\"tagId\"\n                          options={availableTags}\n                          setOptions={setAvailableTags}\n                          selectedOptions={selectedTags}\n                          setSelectedOptions ={setSelectedTags}/>\n\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={promptAddTag}\n            startIcon={<AddIcon />}>\n            Add missing tag\n        </Button>\n\n        <br/>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select categories\n        </Typography>\n        <AutocompleteChip label=\"Select categories\"\n                          id=\"categoryId\"\n                          options={availableCategories}\n                          setOptions={setAvailableCategories}\n                          selectedOptions={selectedCategories} \n                          setSelectedOptions={setSelectedCategories}/>\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={promptAddCategory}\n            startIcon={<AddIcon />}>\n            Add missing category\n        </Button>\n    </div>\n}\n\nexport default withStyles(styles)(PlaceDiscovery)","const initialScheduleData = [\n    {\n        \"scheduleDefault\": true,\n        \"periods\": [\n            {\n                openDay: 0,\n                closeDay: 0,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            },\n            {\n                openDay: 1,\n                closeDay: 1,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            },\n            {\n                openDay: 2,\n                closeDay: 2,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            },\n            {\n                openDay: 3,\n                closeDay: 3,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            },\n            {\n                openDay: 4,\n                closeDay: 4,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            }\n        ]\n    }\n]\n\nexport default initialScheduleData","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport moment from \"moment\";\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        width: \"20%\",\n        padding: \"2px\",\n        marginRight: \"16px\"\n    },\n\n});\nexport default function ReviewCard({review}) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <div style={{display: \"flex\"}} >\n                    <Avatar alt=\"Cindy Baker\" src={!!review.photoUrl ? review.photoUrl : \"/broken-image.jpg\"} />\n                    <div style={{display: \"flex\", flexDirection: \"column\", marginLeft:\"8px\"}}>\n                        <Typography title=\"subtitle1\">\n                            {review.name} {review.surname}\n                        </Typography>\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                            <Rating size=\"small\" name=\"read-only\" value={review.rating} readOnly />\n                            <Typography title=\"subtitle1\">\n                                {\"+\" + review.upvotes}\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n                <Typography title=\"subtitle1\">\n                    {moment(review.timeAdded).format('LL')}\n                </Typography>\n                <div style={{marginTop: \"16px\"}}>\n                    {review.title}\n                </div>\n                <Typography title=\"subtitle1\">\n                        {review.review}\n                </Typography>\n\n            </CardContent>\n        </Card>\n    );\n}\n\n","import React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Rating from '@material-ui/lab/Rating';\nimport ReviewCard from \"../ReviewCard\";\nimport API from \"../../Networking/API\";\nimport debounce from \"lodash/debounce\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\n\nconst styles = theme => ({\n    reviewsInfo:{\n        display: \"flex\",\n    },\n    reviews:{\n        display: \"flex\",\n        width: \"100%\",\n        margin: theme.spacing(2),\n        overflowX: \"scroll\"\n    },\n    sortingButtons: {\n        padding: theme.spacing(2)\n    }\n});\n\nfunction Reviews({classes, placeInfo}) {\n\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [page, setPage] = useState(1);\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const [filterBy, setFilterBy] = useState('mostRated');\n\n    function getReviewsForPlace(urlParams = \"?p=\"+placeInfo.placeId) {\n        API.Reviews.getPlaceReviews(urlParams).then(response=>{\n            setReviews(old=>[...old, ...response.list]);\n            setIsLoading(false)\n        }).catch(error=>{\n            setIsLoading(false)\n        })\n    }\n\n    //Get ordered by new filter\n    useEffect(()=>{\n            getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=1&o=\"+filterBy)\n    },[filterBy]);\n\n\n    const handleScrollDebounced = (e) => {\n        const scrollOffset = 0;\n        const bottom = Math.round(e.target.scrollWidth - e.target.scrollLeft - scrollOffset)  <= e.target.clientWidth;\n        if (bottom && !isLoading && reviews.length>0 && reviews.length<placeInfo.totalReviews) {\n            setIsLoading(true);\n            setPage(old=>{\n                getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=\"+(old+1)+\"&o=\"+filterBy);\n                return old+1\n            });\n        }\n    };\n\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\n\n    const handleScroll = (e) => {\n        e.persist();\n        debounceScroll(e)\n    };\n\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    function changeSorting(e){\n        const {name, value} = e.target;\n        setFilterBy(value);\n        setReviews([]);\n        setPage(1);\n        handleClose()\n    }\n\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Reviews\n            <br/>\n            {\n               reviews.length > 0 ?\n                   <React.Fragment>\n                       <div style={{display:\"flex\", justifyContent: \"space-between\"}}>\n                           <div className={classes.reviewsInfo}>\n                               <Rating name=\"read-only\" value={placeInfo.overallStarRating} precision={0.2} readOnly />\n                               <Typography style={{marginLeft:\"8px\"}} variant=\"subtitle1\">\n                                   {placeInfo.totalReviews} reviews\n                               </Typography>\n                           </div>\n                           <Tooltip aria-describedby={id} title=\"Filter list\">\n                               <IconButton  aria-label=\"filter list\" onClick={handleClick}>\n                                   <FilterListIcon />\n                               </IconButton>\n                           </Tooltip>\n                           <Popover\n                               id={id}\n                               open={open}\n                               anchorEl={anchorEl}\n                               onClose={handleClose}\n                               anchorOrigin={{\n                                   vertical: 'bottom',\n                                   horizontal: 'center',\n                               }}\n                               transformOrigin={{\n                                   vertical: 'top',\n                                   horizontal: 'center',\n                               }}\n                           >\n                               <RadioGroup className={classes.sortingButtons} aria-label=\"gender\" value={filterBy} name=\"gender1\"  onChange={changeSorting}>\n                                   <FormControlLabel value=\"mostRated\" control={<Radio />} label=\"Most rated\" />\n                                   <FormControlLabel value=\"newest\" control={<Radio />} label=\"Newest\" />\n                               </RadioGroup>\n                           </Popover>\n                       </div>\n\n                       <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                           <Typography>\n                               Showing: {reviews.length} out of {placeInfo.totalReviews}\n                           </Typography>\n                           <Typography>\n                               Sorting by: {filterBy}\n                           </Typography>\n                       </div>\n                       <div className={classes.reviews} onScroll={e=>handleScroll(e)}>\n                           {reviews.map(row=>{\n                               return <ReviewCard review={row}/>\n                           })}\n                       </div>\n                   </React.Fragment> : <Typography> No reviews for this place</Typography>\n            }\n\n        </Typography>\n        <br/>\n        {isLoading ? <LinearProgress/> : null }\n    </div>\n}\n\nexport default withStyles(styles)(Reviews)","import React, { useState } from 'react';\n\nexport const AppBarTitleContext = React.createContext({\n    title: \"\",\n    setTitle: () => {},\n});\n\nexport default function AppBarTitleProvider({ children }) {\n    const [title, setTitle] = useState(\"Home\");\n\n    const contextValue = {\n        title,\n        setTitle: (title) => setTitle(title)\n    };\n\n    return (\n        <AppBarTitleContext.Provider value={contextValue}>\n            {children}\n        </AppBarTitleContext.Provider>\n    );\n}","import React, {useContext} from \"react\";\nimport {AppBarTitleContext} from \"./AppBarTitleContext\";\n\nexport default function UseAppBarTitleContext() {\n    const { title, setTitle } = useContext(AppBarTitleContext);\n    return { title, setTitle };\n}\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { TimePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport WarningIcon from '@material-ui/icons/Warning';\nimport Moment from \"react-moment\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\",\n        justifyContent : \"space-between\",\n        margin: theme.spacing(0.5),\n        alignItems: \"center\",\n        flexFlow: \"row wrap\"\n    },\n    picker: {\n        margin: theme.spacing(0.5),\n        width: \"30%\"\n    },\n    intervalRightSide: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    intervalLeftSide: {\n    }\n});\n\nfunction ScheduleInterval({classes, intervals, index, setIntervals}){\n\n    let currentInterval = intervals[index]\n\n    const [lastAccommodationEnabled, setLastAccommodationEnabled] = useState(currentInterval.lastAccommodation != null)\n    const [lastAccommodationTime, setLastAccommodationTime] = useState(currentInterval.lastAccommodation == null ? currentInterval.closeTime : currentInterval.lastAccommodation)\n\n    const getCloseDay = (closeTime, openTime) => {\n        let currentPeriod = intervals[index]\n        if(moment(closeTime, \"HH:mm\").isBefore(moment(openTime, \"HH:mm\")))\n            return (currentPeriod.openDay + 1) > 6 ? 0 : (currentPeriod.openDay +1)\n        else return currentPeriod.openDay\n    }\n\n    let handleUpdateOpenTime = (value) => {\n        setIntervals((oldIntervals) => {\n            return oldIntervals.map((item, i) => {\n                if(index === i){\n                    return {\n                        ...item,\n                        openTime: moment(value).format(\"HH:mm\").toString(),\n                        closeDay: getCloseDay(item.closeTime, value)\n                    }\n                }else return item\n            })\n        })\n    }\n    let handleUpdateCloseTime = (value) => {\n        setIntervals((oldIntervals) => {\n            return oldIntervals.map((item, i) => {\n                if(index === i){\n                    return {\n                        ...item,\n                        closeTime: moment(value).format(\"HH:mm\").toString(),\n                        closeDay: getCloseDay(value, item.openTime)\n                    }\n                }else return item\n            })\n\n        })\n    }\n\n    const handleDelete = () => {\n        setIntervals(oldIntervals => {\n            return oldIntervals.filter((item, i) => i !== index)\n        })\n    }\n\n    useEffect(() => {\n        setIntervals((oldIntervals) => {\n            return oldIntervals.map((item, i) => {\n                if(index === i){\n                    return {\n                        ...item,\n                        lastAccommodation: lastAccommodationEnabled ? lastAccommodationTime.toString() : null\n                    }\n                }else return item\n            })\n\n        })\n    }, [lastAccommodationTime, lastAccommodationEnabled])\n\n    const theme = useTheme();\n    const largeScreen = useMediaQuery(theme.breakpoints.only('lg'));\n\n    return(\n        <div className={classes.root}>\n            <div className={classes.intervalLeftSide}>\n                <TimePicker\n                    margin=\"normal\"\n                    ampm={false}\n                    label=\"Opens\"\n                    className={classes.picker}\n                    format=\"HH:mm\"\n                    value={moment(currentInterval.openTime, \"HH:mm\")}\n                    onChange={handleUpdateOpenTime}\n                    InputProps={{\n                        disableUnderline: true,\n                    }}\n                />\n                <TimePicker\n                    margin=\"normal\"\n                    ampm={false}\n                    className={classes.picker}\n                    label=\"Closes\"\n                    format=\"HH:mm\"\n                    value={moment(currentInterval.closeTime, \"HH:mm\")}\n                    onChange={handleUpdateCloseTime}\n                    InputProps={{\n                        disableUnderline: true,\n                    }}\n                />\n\n                {intervals[index].closeDay !== intervals[index].openDay &&\n                    <React.Fragment>\n                        <Typography variant=\"subtitle1\">\n                            <WarningIcon style={{marginRight: \"10px\"}}/>\n                            Closes the next day\n                        </Typography>\n                    </React.Fragment>}\n\n                {!largeScreen &&\n                <Button color=\"primary\" onClick={handleDelete}>\n                    <DeleteOutlineIcon/>\n                </Button>\n                }\n            </div>\n\n            <div className={classes.intervalRightSide}>\n\n                <Checkbox checked={lastAccommodationEnabled} onChange={() => setLastAccommodationEnabled(state => !state)} />\n\n                <TimePicker\n                    margin=\"normal\"\n                    ampm={false}\n                    label=\"Last accommodation\"\n                    format=\"HH:mm\"\n                    disabled={!lastAccommodationEnabled}\n                    value={moment(lastAccommodationTime.toString(), \"HH:mm\")}\n                    onChange={(value) => setLastAccommodationTime(moment(value).format(\"HH:mm\").toString())}\n                    InputProps={{\n                        disableUnderline: true,\n                    }}\n                />\n\n                {largeScreen &&\n                    <Button color=\"primary\" onClick={handleDelete}>\n                    <DeleteOutlineIcon/>\n                    </Button>\n                }\n\n            </div>\n        </div>\n    )\n}\n\nScheduleInterval.propTypes = {\n    classes: PropTypes.object.isRequired,\n    intervals: PropTypes.array.isRequired,\n    setIntervals: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(ScheduleInterval)\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ScheduleInterval from \"./ScheduleInterval\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst styles = theme => ({\n    header: {\n        display: \"flex\",\n        justifyContent : \"space-between\"\n    },\n    root: {\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(0.5)\n    }\n});\n\nfunction DayComponent({classes, scheduleData, setScheduleData, openDay, onChange, globalTime}){\n\n    let [intervals, setIntervals] = useState(scheduleData.periods.filter(item => item.openDay === openDay))\n    let [ignoreGlobalTime, setIgnoreGlobalTime] = useState({ignoreOpenTime: true, ignoreCloseTime: true})\n    useEffect(() => {\n        onChange(intervals, openDay)\n    }, [intervals])\n\n    useEffect(() => {\n        if(ignoreGlobalTime.ignoreOpenTime){\n            setIgnoreGlobalTime(data => {\n                return {...data, ignoreOpenTime: false}\n            })\n            return\n        }\n        setIntervals(oldIntervals => {\n            return oldIntervals.map(item => {\n                return {...item, openTime: globalTime.openTime}\n            })\n        })\n    }, [globalTime.openTime])\n\n    useEffect(() => {\n        if(ignoreGlobalTime.ignoreCloseTime){\n            setIgnoreGlobalTime(data => {\n                return {...data, ignoreCloseTime: false}\n            })\n            return\n        }\n        setIntervals(oldIntervals => {\n            return oldIntervals.map(item => {\n                return {...item, closeTime: globalTime.closeTime}\n            })\n        })\n    }, [globalTime.closeTime])\n\n    let weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\n    const handleAddPeriod = () => {\n        setIntervals(oldIntervals => {\n            return [\n                ...oldIntervals,\n                {openDay: openDay, closeDay: openDay, openTime: \"08:00\", closeTime: \"18:00\"}\n            ]\n        })\n    }\n\n    return(\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <Typography variant=\"h6\" >\n                    {weekDays[openDay]}\n                </Typography>\n                <Button color=\"secondary\" onClick={handleAddPeriod}>\n                    <AddIcon/>\n                </Button>\n            </div>\n\n            {intervals.map((value, index) => {\n                return <React.Fragment>\n                    <Divider variant=\"middle\" />\n                    <ScheduleInterval index={index} intervals={intervals} setIntervals={setIntervals}/>\n                </React.Fragment>\n            })}\n\n        </div>\n    )\n}\n\nDayComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    scheduleData: PropTypes.object.isRequired,\n    setScheduleData: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(DayComponent)\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, {useEffect, useState} from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {DatePicker, MuiPickersUtilsProvider, TimePicker} from '@material-ui/pickers';\nimport Divider from \"@material-ui/core/Divider\";\nimport DayComponent from \"./DayComponent\";\nimport moment from \"moment\";\n\nconst styles = theme => ({\n    header: {\n        display: \"flex\",\n        justifyContent : \"space-between\"\n    },\n    root: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(1)\n    },\n    pickerStyle: {\n        margin: theme.spacing(1)\n    },\n    headerLeft: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"left\"\n    },\n    globalTimeEditLayout: {\n        display: \"flex\",\n        justifyContent : \"space-between\",\n        margin: theme.spacing(0.5),\n        alignItems: \"center\",\n        flexFlow: \"row wrap\"\n    },\n    globalTimeEditLeft: {\n\n    },\n    globalTimePicker: {\n        margin: theme.spacing(0.5),\n        width: \"30%\"\n    }\n});\n\nfunction Schedule({classes, data, setData, index}){\n\n    const[periods, setPeriods] = useState([...data.periods])\n    const[globalTime, setGlobalTime] = useState({openTime: \"07:00\", closeTime: \"19:00\"})\n\n    const handleIntervalChange = (newIntervals, openDay) => {\n        setPeriods(oldPeriods => {\n            let filtered = oldPeriods.filter(item => item.openDay !== openDay)\n            if(newIntervals.length === 0)\n                return [...filtered]\n            return [\n                ...filtered,\n                ...newIntervals\n            ]\n        })\n    }\n\n    useEffect(() => {\n        setData(oldData => {\n            return oldData.map((schedule, i) => {\n                if( i === index){\n                    return {...schedule, periods: periods}\n                }else return schedule\n            })\n        })\n    }, [periods])\n\n    const generateWeekdayViews = () => {\n        let views = []\n        for(let i =0; i < 7; i++){\n            views.push(<DayComponent globalTime={globalTime} scheduleData={data} onChange={handleIntervalChange} setScheduleData={setData} openDay={i} key={i}/>)\n        }\n        return views\n    }\n\n    const updateFromTime = (value) => {\n        setData(oldData => {\n            return oldData.map((schedule, i) => {\n                if( i === index){\n                    return {...schedule, from: moment(value).format('MM-DD').toString()}\n                }else return schedule\n            })\n        })\n    }\n    const updateToTime = (value) => {\n        setData(oldData => {\n            return oldData.map((schedule, i) => {\n                if( i === index){\n                    return {...schedule, to: moment(value).format('MM-DD').toString()}\n                }else return schedule\n            })\n        })\n    }\n    const removeSchedule = () => {\n        setData(oldData => {\n            return oldData.filter((item, i) => index !== i)\n        })\n    }\n\n    const handleUpdateGlobalOpenTime = (value) => {\n        setGlobalTime(data => {\n            return {...data, openTime: moment(value).format(\"HH:mm\").toString()}\n        })\n    }\n    const handleUpdateGlobalCloseTime = (value) => {\n        setGlobalTime(data => {\n            return {...data, closeTime: moment(value).format(\"HH:mm\").toString()}\n        })\n    }\n\n    return(\n        <Paper className={classes.root}>\n            <div className={classes.header}>\n                <div className={classes.headerLeft}>\n                    {data.scheduleDefault &&\n                    <Typography variant=\"h6\" >\n                        Date: Year round\n                    </Typography>}\n                    {!data.scheduleDefault &&\n                        <React.Fragment>\n                            <DatePicker\n                                className={classes.pickerStyle}\n                                views={[\"month\", \"date\"]}\n                                label=\"From\"\n                                value={moment(data.from, \"MM-DD\")}\n                                onChange={updateFromTime}\n                            />\n                            <DatePicker\n                                className={classes.pickerStyle}\n                                views={[\"month\", \"day\"]}\n                                label=\"To\"\n                                value={moment(data.to, \"MM-DD\")}\n                                onChange={updateToTime}\n                            />\n                        </React.Fragment>\n                    }\n                </div>\n                {!data.scheduleDefault &&\n                <Button color=\"secondary\" onClick = {removeSchedule}>\n                    <RemoveIcon/>\n                </Button>}\n\n            </div>\n            <br/>\n            <div className={classes.globalTimeEditLayout}>\n                <div className={classes.globalTimeEditLeft}>\n                    <TimePicker\n                        margin=\"normal\"\n                        ampm={false}\n                        label=\"Opens\"\n                        className={classes.globalTimePicker}\n                        format=\"HH:mm\"\n                        value={moment(globalTime.openTime, \"HH:mm\")}\n                        onChange={handleUpdateGlobalOpenTime}\n                        InputProps={{\n                            disableUnderline: true,\n                        }}\n                    />\n                    <TimePicker\n                        margin=\"normal\"\n                        ampm={false}\n                        className={classes.globalTimePicker}\n                        label=\"Closes\"\n                        format=\"HH:mm\"\n                        value={moment(globalTime.closeTime, \"HH:mm\")}\n                        onChange={handleUpdateGlobalCloseTime}\n                        InputProps={{\n                            disableUnderline: true,\n                        }}\n                    />\n                </div>\n            </div>\n            {generateWeekdayViews()}\n        </Paper>\n    )\n}\n\nSchedule.propTypes = {\n    classes: PropTypes.object.isRequired,\n    data: PropTypes.object.isRequired,\n    setData: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Schedule)\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, {useEffect, useState} from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from \"@material-ui/core/Button\";\nimport Schedule from \"../Schedule\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {TimePicker} from \"@material-ui/pickers\";\nimport moment from \"moment\";\n\nconst styles = theme => ({\n    header: {\n        display: \"flex\",\n        justifyContent : \"space-between\",\n        flexWrap: \"wrap\"\n    }\n});\n\nfunction SchedulesWrapper({classes, scheduleData, setScheduleData, isScheduleEnabled, setIsScheduleEnabled}){\n\n    const addSchedule = () => {\n        setScheduleData(oldData => {\n            return [\n                ...oldData,\n                {scheduleDefault: false, from: \"01-01\", to: \"01-02\", periods : []}\n            ]\n        })\n    }\n\n    return(\n        <div>\n            <div className={classes.header}>\n                <Typography variant=\"h6\" >\n                    Working schedule\n                </Typography>\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={isScheduleEnabled}\n                            onChange={() => setIsScheduleEnabled(state => !state)}\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"Enable schedule for this place?\"\n                />\n            </div>\n            <br/>\n            {isScheduleEnabled &&\n                <React.Fragment>\n                    {scheduleData.map((value, index) => {\n                        return <Schedule data={value} index={index} setData={setScheduleData}/>\n                    })}\n                    <Button style={{float: \"right\"}}color=\"secondary\" onClick={addSchedule}>\n                        <AddIcon/>\n                    </Button>\n                </React.Fragment>}\n        </div>\n    )\n}\n\nSchedulesWrapper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    scheduleData: PropTypes.array.isRequired,\n    setScheduleData: PropTypes.func.isRequired,\n    isScheduleEnabled: PropTypes.object.isRequired,\n    setIsScheduleEnabled: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SchedulesWrapper)\n","import React, {useEffect, useState} from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes, {func} from \"prop-types\";\nimport {Paper} from '@material-ui/core';\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\nimport initialScheduleData from \"../components/add_place_components/initialScheduleData\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport API from \"../Networking/API\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Strings from \"../helpers/stringResources\";\nimport green from \"@material-ui/core/colors/green\";\nimport Reviews from \"../components/add_place_components/Reviews\";\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\nimport SchedulesWrapper from \"../components/add_place_components/SchedulesWrapper\";\nimport MapToolbar from \"../components/maps/MapToolbar\";\nimport PlaceMap from \"../components/maps/PlaceMap\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    paperContent: {\n        marginTop: theme.spacing(4),\n        [theme.breakpoints.down(\"lg\")]: {\n            width: \"95%\",\n            padding: theme.spacing(2),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            width: \"70%\",\n            padding: theme.spacing(4),\n        },\n    },\n    root: {\n        height: \"100vh\",\n        [theme.breakpoints.down(\"lg\")]: {\n            height: \"100%\",\n        },\n    },\n    loader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100vw\",\n        height: \"100vh\"\n    },\n    content: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        height: `calc(93vh - 64px)`,\n        [theme.breakpoints.down(\"lg\")]: {\n            width: \"100%\",\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            width: \"auto\",\n            padding: theme.spacing(8),\n        },\n        overflowY: \"auto\"\n    },\n    bottom: {\n        [theme.breakpoints.down(\"lg\")]: {\n            position: \"fixed\",\n            height: \"7vh\",\n            bottom: 0,\n            right: 0,\n        },\n        width: \"100%\",\n        zIndex: 5,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        padding: theme.spacing(1),\n    }\n});\n\n\nfunction AddPlace({classes, match}) {\n    const [placeInfo, setPlaceInfo] = useState({\n        placeId: \"\",\n        name: \"\", description: \"\", website: \"\", phoneNumber: \"\",\n        hasSchedule: false, isPublic: false, isVerified: true, overallStarRating: 0, totalReviews: 0,\n        source: \"\", price: \"\", averageTimeSpent: \"0\"\n    });\n\n\n    const [selectedTags, setSelectedTags] = useState([]);\n    const [selectedCategories, setSelectedCategories] = useState([]);\n\n    const [photos, setPhotos] = useState([]);\n\n    const [locationData, setLocationData] = useState({\n        city: '',\n        address: '',\n        country: '',\n        latitude: 54.687157,\n        longitude: 25.279652,\n        county: '',\n        municipality: ''\n    });\n    const [parkingMarkerData, setParkingMarkerData] = useState({\n        city: '',\n        address: '',\n        country: '',\n        latitude: 54.687157,\n        longitude: 25.279652,\n        county: '',\n        municipality: ''\n    });\n    const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\n\n    const [sources, setSources] = useState([]);\n\n    const [scheduleData, setScheduleData] = useState(initialScheduleData);\n    const [isScheduleEnabled, setIsScheduleEnabled] = useState(false);\n\n    const [placeId, setPlaceId] = useState(match.params.placeId);\n\n    const [firstTimeLoading, setFirstTimeLoading] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [error, setError] = useState({name: false});\n    const [checkErrors, setCheckErrors] = useState(false);\n\n\n    const {addConfig} = UseSnackbarContext();\n    const {addAlertConfig} = UseAlertDialogContext();\n\n    const {title, setTitle} = UseAppBarTitleContext();\n\n    const ColorButton = withStyles((theme) => ({\n        root: {\n            color: theme.palette.getContrastText(green[500]),\n            backgroundColor: green[500],\n            '&:hover': {\n                backgroundColor: green[700],\n            },\n        },\n    }))(Button);\n\n    useEffect(()=>{\n        if(placeId!==undefined){\n            console.log(\"Getting place location\");\n            getPlaceInfo()\n        }\n    },[]);\n\n    useEffect(() => {\n        //Loaded place for editing\n        if (placeId === undefined) {\n            setTitle(\"Add new place\");\n            console.log(\"Came here to add new place\");\n            setFirstTimeLoading(false) //Just loaded add place window\n        }\n        //New Place has been just inserted, thus inserting other place info\n        if (placeId !== undefined && firstTimeLoading === false) {\n            console.log(\"Just added new place\");\n            Promise.all([\n                updateTagsData(placeId),\n                updateParkingData(placeId),\n                updateCategoriesData(placeId),\n                updatePhotoData(placeId),\n                updateSchedule(placeId),\n                updateSources(placeId)\n            ]).then(responses => {\n                formFeedback(true, Strings.SNACKBAR_PLACE_INSERTED_SUCCESS)\n            }).catch(error => {\n                formFeedback(false)\n            })\n        }\n\n    }, [placeId]);\n\n    useEffect(() => {\n        if (firstTimeLoading === false) {\n            console.log(\"Making this place public\");\n            updateAll()\n        }\n    }, [placeInfo['isPublic']]);\n\n    function getPlaceInfo() {\n        API.Places.getPlaceById(\"?full=true&p=\" + placeId).then(response => {\n            setAllData(response)\n            setTitle(\"Editing place/\" + response.name);\n        }).catch(error => {\n            formFeedback(false)\n        })\n    }\n\n    function setAllData(place) {\n        setPlaceInfo({\n            placeId: place.placeId,\n            name: place.name,\n            description: place.description,\n            website: place.website,\n            phoneNumber: place.phoneNumber,\n            hasSchedule: place.hasSchedule,\n            isPublic: place.isPublic,\n            isVerified: place.isVerified,\n            overallStarRating: place.overallStarRating,\n            totalReviews: place.totalReviews,\n            price: place.price,\n            averageTimeSpent: place.averageTimeSpent\n        });\n\n        setLocationData({\n            city: place.city,\n            address: place.address,\n            country: place.country,\n            latitude: place.latitude,\n            longitude: place.longitude\n        });\n\n        setParkingMarkerData({\n            city: place.city,\n            address: place.address,\n            country: place.country,\n            latitude: place.latitude,\n            longitude: place.longitude\n        });\n\n        setSources(place.sources);\n        setSelectedTags(place.tags);\n        setSelectedCategories(place.categories);\n        if (place.schedule.length > 0) {\n            setScheduleData([...place.schedule]);\n            setIsScheduleEnabled(true)\n        } else setIsScheduleEnabled(false);\n\n        setAllSelectedParkingData(place.parking);\n        setPhotos(place.photos);\n        setFirstTimeLoading(false)\n    }\n\n    function formFeedback(success, message = Strings.SNACKBAR_ERROR) {\n        addConfig(success, message);\n        setIsLoading(false)\n    }\n\n    function saveChanges() {\n        if (placeId === undefined) {\n            addAlertConfig(Strings.DIALOG_PLACE_INSERT_TITLE, Strings.DIALOG_PLACE_INSERT, [{\n                name: \"Insert\", action: () => {\n                    setIsLoading(true);\n                    insertBasicPlaceInfo()\n                }\n            }])\n        } else {\n            addAlertConfig(Strings.DIALOG_PLACE_UPDATE_TITLE, Strings.DIALOG_PLACE_UPDATE, [{\n                name: \"save and publish\", action: () => {\n                    let plc = Object.assign({}, placeInfo, {});\n                    plc.isPublic = 1;\n                    setPlaceInfo(plc);\n                    setIsLoading(true);\n                    updateAll()\n                }\n            }, {\n                name: \"save\", action: () => {\n                    setIsLoading(true);\n                    updateAll()\n                }\n            }])\n        }\n    }\n\n    function updateAll() {\n        Promise.all([\n            updatePlaceInfo(),\n            updateTagsData(placeId),\n            updatePhotoData(placeId),\n            updateCategoriesData(placeId),\n            updateParkingData(placeId),\n            updateSchedule(placeId),\n            updateSources(placeId)\n        ]).then(response => {\n            formFeedback(true, Strings.SNACKBAR_CHANGES_SAVED);\n        }).catch(err => {\n            formFeedback(false)\n        })\n    }\n\n    function updatePlaceInfo() {\n        API.Places.updatePlace(formPlaceInfo()).then(response => {\n\n        }).catch(error => {\n\n        })\n\n    }\n\n    function insertBasicPlaceInfo() {\n        API.Places.insertPlace(formPlaceInfo()).then(placeId => {\n            setPlaceId(placeId)\n        }).catch(error => {\n\n        })\n    }\n\n    function updateParkingData(id) {\n        API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\" + id).then(response => {\n\n        }).catch(error => {\n\n        })\n    }\n\n    function updateTagsData(id) {\n        API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\" + id).then(response => {\n\n        }).catch(error => {\n\n        })\n    }\n\n    function updateSources(id) {\n        API.SourcePlace.updateSourcesForPlace(sources, \"?p=\" + id).then(response => {\n        }).catch(error => {\n\n        })\n    }\n\n\n    function updateCategoriesData(id) {\n        API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\" + id).then(response => {\n\n        }).catch(error => {\n\n        })\n    }\n\n    function updatePhotoData(id) {\n        API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\" + id).then(response => {\n\n        }).catch(error => {\n\n        })\n    }\n\n\n    function updateSchedule(id) {\n        API.Schedule.updateScheduleForPlace(isScheduleEnabled ? scheduleData : [], \"?id=\" + id).then(response => {\n        }).catch(er => {\n        })\n\n    }\n\n    function formPlaceInfo() {\n        let d = Object.assign(placeInfo, locationData);\n        return d\n    }\n\n\n    function publishPlace() {\n        addAlertConfig(Strings.DIALOG_PLACE_PUBLISH_TITLE, placeInfo['isPublic'] ? Strings.DIALOG_PLACE_UNPUBLISH_MESSAGE : Strings.DIALOG_PLACE_PUBLISH_MESSAGE,\n            [{\n                name: \"Agree\", action: () => {\n                    let obj = Object.assign({}, placeInfo, {});\n                    obj['isPublic'] = !obj['isPublic'];\n                    setPlaceInfo(obj);\n                }\n            }])\n\n    }\n\n    function verifyPlace() {\n        addAlertConfig(Strings.DIALOG_PLACE_VERIFY_TITLE, Strings.DIALOG_PLACE_VERIFY_MESSAGE, [{\n            name: \"agree\", action: () => {\n                let obj = Object.assign({}, placeInfo, {});\n                obj['isPublic'] = 1;\n                obj['isVerified'] = 1;\n                setPlaceInfo(obj);\n            }\n        }])\n    }\n\n    return (\n        <div className={classes.root}>\n\n            {firstTimeLoading ? <div className={classes.loader}><CircularProgress/></div> :\n                <div className={classes.content}>\n\n\n                    <Paper elevation={4} className={classes.paperContent}>\n                        <BasicPlaceInfo\n                            error={error}\n                            setError={setError}\n                            checkErrors={checkErrors}\n                            placeInfo={placeInfo}\n                            setPlaceInfo={setPlaceInfo}\n                            selectedSources={sources}\n                            setSelectedSources={setSources}\n                        />\n\n                    </Paper>\n\n                    {placeId !== undefined ?\n                        <Paper elevation={4} className={classes.paperContent}>\n                            <Reviews\n                                placeInfo={placeInfo}\n                            />\n                        </Paper>\n                        : null}\n\n\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PhotosInfo\n                        photos={photos}\n                        setPhotos={setPhotos}\n                    />\n                </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PlaceLocation\n                        placeInfo={placeInfo}\n                        locationData={locationData}\n                        setLocationData={setLocationData}/>\n                </Paper>\n            <Paper elevation = {4} className={classes.paperContent}>\n                <ParkingLocation\n                    placeInfo={placeInfo}\n                    allSelectedParkingData={allSelectedParkingData}\n                    setAllSelectedParkingData={setAllSelectedParkingData}\n                    locationData={parkingMarkerData}\n                    setLocationData={setParkingMarkerData}/>\n            </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PlaceDiscovery\n                        selectedTags={selectedTags}\n                        setSelectedTags={setSelectedTags}\n                        selectedCategories={selectedCategories}\n                        setSelectedCategories={setSelectedCategories}/>\n                </Paper>\n\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <SchedulesWrapper isScheduleEnabled={isScheduleEnabled} setIsScheduleEnabled={setIsScheduleEnabled} setScheduleData={setScheduleData} scheduleData={scheduleData}/>\n                </Paper>\n            </div> }\n\n\n            {isLoading ? <LinearProgress/> : null}\n\n            <Paper elevation={1} className={classes.bottom}>\n\n                {\n                    placeInfo['isVerified'] === false && placeId !== undefined ?\n                        <ColorButton\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                                verifyPlace()\n                            }}\n                            className={classes.button}\n                        >\n                            Verify place\n                        </ColorButton>\n                        :\n                        <FormControlLabel\n                            control={<Switch checked={placeInfo['isPublic']} onChange={() => {\n                                publishPlace()\n                            }\n                            } name=\"isPublic\"/>}\n                            label=\"Make this place public\"\n                        />}\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => saveChanges()}\n                    className={classes.button}>\n                    Save\n                </Button>\n\n\n            </Paper>\n        </div>)\n\n}\n\nAddPlace.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AddPlace)\n\n\n","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {Fragment, useState} from \"react\"\nimport Typography from \"@material-ui/core/Typography\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Card from \"@material-ui/core/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport red from \"@material-ui/core/colors/red\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = theme => ({\n    root: {\n\n    },\n    media: {\n        height: 0,\n            paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n})\n\nfunction CategoriesDisplay({categories}){\n    return(\n        categories != null &&\n        <Box component=\"ul\"  style={{\n            display: 'flex',\n            justifyContent: 'left',\n            flexWrap: 'wrap',\n            listStyle: 'none',\n            padding: '0px'\n        }}>\n            {categories.map((data, index) => {\n                return (\n                    <li key={index}>\n                        <Chip\n                            variant=\"outlined\"\n                            style={{margin: \"5px\"}}\n                            label={data.name}\n                        />\n                    </li>\n\n                );\n            })}\n        </Box>\n    )\n}\n\nfunction SubheaderDisplay({city, address, priceRange, rating}){\n    return(\n        <div>\n            {rating != null &&\n            <Fragment><Rating\n                readOnly={true}\n                value={rating}\n            /><br/></Fragment>}\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\n\n        </div>\n    )\n}\n\nfunction ApiPlaceCard({classes, placeData, renderActionArea}){\n\n    function truncateText(text){\n        if(text == null)\n            return \"\"\n        if(text.length > 500){\n            return text.substring(0, 500) + \"...\";\n        }else{\n            return text\n        }\n    }\n\n    return(\n        <Card className={classes.root}>\n            <CardHeader\n                action={\n                    renderActionArea != null && renderActionArea()\n                }\n                title={placeData.name}\n                subheader={<SubheaderDisplay  city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\n\n            />\n            {placeData.photos != null && placeData.photos.length > 0 &&\n            <CardMedia\n                className={classes.media}\n                image={placeData.photos[0].url}\n            />}\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {truncateText(placeData.description)}\n                </Typography>\n\n                <CategoriesDisplay categories={placeData.categories}/>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\n                {placeData.website}\n                </Typography>\n\n            </CardContent>\n            <CardActions disableSpacing>\n            </CardActions>\n        </Card>\n    )\n}\n\nApiPlaceCard.propTypes = {\n    placeData: PropTypes.object.isRequired,\n    renderActionArea: PropTypes.func\n};\n\nexport default withStyles(styles)(ApiPlaceCard)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport {debounce} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        margin: theme.spacing(2)\n        // width: 400,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    divider: {\n        // height: 28,\n        margin: 4,\n    },\n}));\n\nexport default function SearchInputComponent({hint, searchCallback}) {\n    const classes = useStyles();\n\n    const debouncedInput = (event) => {\n        searchCallback(event.target.value)\n    }\n\n    const debounceInput = debounce(event => debouncedInput(event), 500)\n\n    const handleInput = (event) => {\n        event.persist()\n        debounceInput(event)\n    }\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <InputBase\n                className={classes.input}\n                placeholder={hint}\n                inputProps={{ 'aria-label': hint }}\n                onChange={handleInput}\n            />\n            <IconButton className={classes.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n            <Divider className={classes.divider} orientation=\"vertical\" />\n        </Paper>\n    );\n}","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {useState} from \"react\"\nimport ApiPlaceCard from \"../components/ApiPlaceCard\";\nimport API from \"../Networking/API\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport debounce from 'lodash/debounce'\nimport Masonry from \"react-masonry-component\";\nimport SearchInputComponent from \"../components/SearchInputComponent\";\nimport Strings from \"../helpers/stringResources\";\nimport Typography from \"@material-ui/core/Typography\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\n\n\n\nconst styles = theme => ({\n    root:{\n        overflow: 'scroll',\n        width: \"100%\",\n        padding: theme.spacing(1),\n        height:`calc(100vh - 64px)`,\n        paddingTop: \"9vh\",\n    },\n    topBar: {\n        height: \"8vh\",\n        position: \"absolute\",\n        width: \"60%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        justifyContent: \"center\",\n        zIndex: 1\n    },\n    searchBox: {\n        margin: theme.spacing(1)\n    },\n    placeApiCard: {\n        [theme.breakpoints.down('lg')]: {\n            width: \"95%\",\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: \"28vw\",\n        },\n        // minWidth: \"400px\",\n        margin: theme.spacing(1)\n    }\n})\n\nfunction ApiPlaces({classes}){\n\n    const [data, setData] = useState([]);\n    const [isLoadingData, setIsLoadingData] = useState(false);\n    const { addConfig } = UseSnackbarContext();\n\n    const loadDataFunc = (query) => {\n        setData([])\n        setIsLoadingData(true)\n        API.Places.searchApiPlaces(\"?keyword=\" + encodeURI(query)).then(response => {\n            setData([...response])\n        }).catch(error => {\n            addConfig(false, \"The request did not go through.\")\n        }).finally(() => {\n            setIsLoadingData(false)\n        })\n    }\n\n    const handleSearch = (word) => {\n        if(word.length > 3)\n            loadDataFunc(word)\n    }\n\n    return(\n        <div style={{position: \"relative\"}}>\n            <div className = {classes.topBar}>\n                <SearchInputComponent searchCallback={handleSearch} hint=\"Search api places\" style={classes.searchBox} />\n            </div>\n\n            <div className={classes.root}>\n                <Masonry\n                    style={{margin: \"0 auto\"}}\n                    elementType={'div'} // default 'div'\n                    options={{\n                        isFitWidth: true\n                    }} // default {}\n                    disableImagesLoaded={false} // default false\n                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n                >\n\n                    {data.map(item => {\n                        return <ApiPlaceCard classes ={{ root: classes.placeApiCard}} key={item.placeId} placeData = {item} style={{boxSizing: 'border-box'}}/>\n                    })}\n\n                    {\n                        data.length === 0 && !isLoadingData &&\n                        <Typography variant=\"subtitle1\">No results</Typography>\n                    }\n                    {\n                        isLoadingData &&\n                        <CircularProgress  />\n                    }\n\n                </Masonry>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(ApiPlaces)","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\">\n            {'Copyright © '}\n            Traveldirection {' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n    main: {\n        marginTop: theme.spacing(8),\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n    },\n}));\n\nexport default function NotFoundPage() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n                    Page not found\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                    {'Try something else'}\n                </Typography>\n            </Container>\n            <footer className={classes.footer}>\n                <Container maxWidth=\"sm\">\n                    <Copyright />\n                </Container>\n            </footer>\n        </div>\n    );\n}","import {withStyles} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst styles = theme => ({\n    cardRoot: {\n        [theme.breakpoints.only(\"lg\")]: {\n            display: 'flex',\n            // alignItems: \"flex-start\"\n        },\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 5\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        [theme.breakpoints.down(\"lg\")]: {\n            height: \"200px\",\n        },\n        [theme.breakpoints.only(\"lg\")]: {\n            flex: 1,\n            height: \"auto\",\n        },\n    },\n    root: {\n        display: \"flex\",\n        flexFlow: \"column wrap\"\n    },\n    addParkingWrapper: {\n        display: \"inline-block\"\n    }\n})\n\n\nfunction TourPlaceComponent({classes, elementData, removeCallback, addTransportCallback, displayNoTransportWarning}) {\n\n    function truncateText(text) {\n        if (text == null)\n            return \"\"\n        if (text.length > 500) {\n            return text.substring(0, 500) + \"...\";\n        } else {\n            return text\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Card className={classes.cardRoot}>\n\n                {elementData.data.details.photos != null && elementData.data.details.photos.length > 0 &&\n                <CardMedia\n                    className={classes.cover}\n                    image={elementData.data.details.photos[0].url}\n\n                />\n                }\n\n                <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                        <Typography component=\"h5\" variant=\"h5\">\n                            {elementData.data.details.name}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                            {truncateText(elementData.data.details.description)}\n                        </Typography>\n                    </CardContent>\n                </div>\n                <CardHeader\n                    action={\n                        <IconButton aria-label=\"remove\" onClick={() => removeCallback(elementData)}>\n                            <RemoveIcon/>\n                        </IconButton>\n                    }\n                />\n            </Card>\n\n            {displayNoTransportWarning &&\n            <Alert severity=\"error\">No transport from this place specified</Alert>}\n\n            <div className={classes.addParkingWrapper}>\n                <Button style={{display: \"inline\"}} color=\"secondary\" onClick={() => addTransportCallback(elementData)}>\n                    <AddIcon/>\n                </Button>\n                <Typography style={{display: \"inline\"}} variant=\"subtitle1\">\n                    Add transport from this place\n                </Typography>\n            </div>\n\n        </div>\n\n    )\n}\n\nTourPlaceComponent.propTypes = {\n    elementData: PropTypes.object.isRequired,\n    removeCallback: PropTypes.func.isRequired,\n    addTransportCallback: PropTypes.func.isRequired,\n    displayNoTransportWarning: PropTypes.bool\n};\n\nexport default withStyles(styles)(TourPlaceComponent)\n","import React, {createRef, useCallback, useEffect, useRef, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MetroIcon from '@material-ui/icons/DirectionsTransit';\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DriveEta';\nimport TrainIcon from '@material-ui/icons/Train';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport TramIcon from '@material-ui/icons/Tram';\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\n\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\",\n        flexFlow: \"column wrap\"\n    },\n    transportSelectWrapper: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    transportSelect: {\n        marginLeft: theme.spacing(1),\n        width: \"100px\"\n    }\n});\n\nconst transportTypes = [\n    {\n        icon: <DirectionsWalkIcon/>,\n        label: \"Walk\"\n    },\n    {\n        icon: <MetroIcon/>,\n        label: \"Metro\"\n    },\n    {\n        icon: <DirectionsBikeIcon/>,\n        label: \"Bike\"\n    },\n    {\n        icon: <DirectionsBusIcon/>,\n        label: \"Bus\"\n    },\n    {\n        icon: <CarIcon/>,\n        label: \"Car\"\n    },\n    {\n        icon: <TrainIcon/>,\n        label: \"Train\"\n    },\n    {\n        icon: <FlightIcon/>,\n        label: \"Plane\"\n    },\n    {\n        icon: <TramIcon/>,\n        label: \"Tram\"\n    }\n]\n\nfunction TransportItem({classes, transportId, transportChangeCallback, transportRemoveCallback}) {\n\n    const [currentTransport, setCurrentTransport] = useState(transportId == null ? 0 : transportId)\n\n    const handleTransportChange = (e) => {\n        setCurrentTransport(e.target.value)\n        transportChangeCallback({transport: parseInt(e.target.value)})\n    }\n\n    return (\n        <div className={classes.root}>\n            <MoreVertIcon/>\n            <div className={classes.transportSelectWrapper}>\n                {transportTypes[currentTransport].icon}\n                <FormControl className={classes.transportSelect} >\n                    <NativeSelect\n                        value={currentTransport}\n                        onChange={handleTransportChange}\n                    >\n                        {transportTypes.map((item, index) => {\n                            return <option key={index} value={index}> {item.label}</option>\n                        })}\n                    </NativeSelect>\n                </FormControl>\n                <IconButton aria-label=\"remove\" onClick={() => transportRemoveCallback()}>\n                    <RemoveIcon />\n                </IconButton>\n            </div>\n            <MoreVertIcon/>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(TransportItem)","import {withStyles} from \"@material-ui/core/styles\";\nimport TourPlaceComponent from \"./TourPlaceComponent\";\nimport React, {useEffect, useMemo} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ElementType} from \"./Tour\";\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport TransportItem from \"./TransportItem\";\nimport shortid from 'shortid';\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst styles = theme => ({\n    tourPlaceComponent: {\n        margin: theme.spacing(2)\n    },\n    root: {\n        display: \"flex\",\n        flexFlow: \"column wrap\",\n        margin: theme.spacing(1)\n    }\n})\n\nconst TourPlaceSortable = SortableElement(({displayNoTransportWarning, elementData, removePlaceCallback, classes, addTransportCallback}) => (\n    <div>\n        <TourPlaceComponent removeCallback={removePlaceCallback} classes={{root: classes.tourPlaceComponent}}\n                            addTransportCallback={addTransportCallback} elementData={elementData}\n                            displayNoTransportWarning={displayNoTransportWarning}/>\n    </div>\n));\nconst TransportItemSortable = SortableElement(({transportId, transportChangeCallback, transportRemoveCallback}) => (\n    <div>\n        <TransportItem transportId={transportId} transportRemoveCallback={transportRemoveCallback} transportChangeCallback={transportChangeCallback}/>\n    </div>\n));\n\nconst SortableList = SortableContainer(({currentDay, removeElementCallback, tourInfo, classes, addTransportCallback, transportChangeCallback}) => {\n\n    const shouldDisplayNoTransportWarning = (index) => {\n        let elements = tourInfo.days[currentDay].tour\n        return ((elements.length -1 ) > index) && elements[index + 1].type !== ElementType.transport\n    }\n\n    return (\n\n        <ul>\n            {tourInfo.days[currentDay].tour.map((item, index) => {\n\n                switch (item.type) {\n                    case ElementType.place:\n                        return <TourPlaceSortable key={item.data.details.placeId} index={index}\n                                                  addTransportCallback={addTransportCallback} elementData={item}\n                                                  classes={classes}\n                                                  displayNoTransportWarning={shouldDisplayNoTransportWarning(index)}\n                                                  removePlaceCallback={() => removeElementCallback(index)}/>\n                    case ElementType.transport:\n                        return <TransportItemSortable key={item.data.elementIdentifier} index={index}\n                                                      transportId={item.data.transport}\n                                                      transportRemoveCallback = {() => removeElementCallback(index)}\n                                                      transportChangeCallback={(transport) => transportChangeCallback(index, transport)}/>\n                }\n            })}\n        </ul>\n    )\n});\n\nfunction TourPlacesWrapper({classes, tourInfo, tourInfoReducer, currentDay, errorInfo, setErrorInfo}) {\n\n    const removeElementCallback = (index) => {\n        tourInfoReducer({\n            type: 'REMOVE_ELEMENT',\n            day: currentDay,\n            index: index\n        })\n    }\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        tourInfoReducer({\n            type: 'MOVE_ELEMENT',\n            day: currentDay,\n            oldIndex: oldIndex,\n            newIndex: newIndex\n        })\n    }\n\n    const handleTransportChange = (index, data) => {\n        tourInfoReducer({\n            type: 'UPDATE_ELEMENT',\n            day: currentDay,\n            index: index,\n            data: data\n        })\n    }\n\n    const addTransportCallback = (details) => {\n        tourInfoReducer({\n            type: 'INSERT_TRANSPORT_FOR_PLACE',\n            placeId: details.data.details.placeId,\n            day: currentDay,\n            data: {type: ElementType.transport, data: {transport: 0, elementIdentifier: shortid.generate()}}\n        })\n    }\n\n    useEffect(() => {\n        console.log(tourInfo.days[currentDay].tour)\n    }, [tourInfo])\n\n\n    return (\n        <div className={classes.root}>\n            {tourInfo.days[currentDay].tour.length === 0 &&\n            <Alert severity=\"warning\">You have not added any places for the currently selected day.</Alert>}\n            <SortableList\n                pressDelay={200}\n                disableAutoscroll={false}\n                currentDay={currentDay}\n                tourInfo={tourInfo}\n                transportChangeCallback={handleTransportChange}\n                onSortEnd={onSortEnd}\n                classes={classes}\n                addTransportCallback={addTransportCallback}\n                removeElementCallback={removeElementCallback}/>\n        </div>\n    )\n}\n\nTourPlacesWrapper.propTypes = {\n    tourInfo: PropTypes.object.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n    currentDay: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(TourPlacesWrapper)\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React, {useState} from \"react\";\nimport SearchInputComponent from \"../SearchInputComponent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\nimport DnsIcon from \"@material-ui/icons/Dns\";\nimport ApiPlaceCard from \"../ApiPlaceCard\";\nimport API from \"../../Networking/API\";\n\nconst styles = theme => ({\n    searchInputComponent: {\n\n    },\n    placeCard: {\n        margin: theme.spacing(1, 8, 1, 8),\n    },\n})\n\n\nfunction PlaceSearch({classes, addPlaceCallback, apiPlacesFound, setApiPlacesFound, localPlacesFound, setLocalPlacesFound}) {\n\n    const [apiPlacesLoading, setApiPlacesLoading] = useState(false)\n    const [localPlacesLoading, setLocalPlacesLoading] = useState(false)\n\n    const placeType = {\n        local: 0,\n        api: 1\n    }\n\n    const generatePlaceCards = () => {\n        let genProps = (placeInfo, type) => {\n            return {\n                classes: {root: classes.placeCard},\n                key: placeInfo.placeId,\n                renderActionArea: () => {\n                    return (\n                        <div>\n                            <Button color=\"primary\" onClick={() => addPlaceCallback(placeInfo, type)}>\n                                <AddIcon/>\n                            </Button>\n                            <Tooltip title={type === placeType.local ? \"This place is from our database\" : \"This place is from API\"} aria-label=\"add\">\n                                {type === placeType.local ? <LocalLibraryIcon/> : <DnsIcon/>}\n                            </Tooltip>\n                        </div>\n                    )\n                },\n                placeData : placeInfo\n            }\n        }\n\n        let mappedPlaces = []\n        localPlacesFound.forEach(item => {\n            mappedPlaces.push(<ApiPlaceCard {...genProps(item, placeType.local)}/>)\n        })\n        apiPlacesFound.forEach(item => {\n            mappedPlaces.push( <ApiPlaceCard {...genProps(item, placeType.api)}/>)\n        })\n        return mappedPlaces\n    }\n\n    const searchCallback = (keyword) => {\n        if(keyword.length < 3)\n            return;\n        setLocalPlacesFound([])\n        setApiPlacesFound([])\n        setApiPlacesLoading(true)\n        setLocalPlacesLoading(true)\n        API.Places.getAllPlacesAdmin(\"?keyword=\" + keyword).then(response=>{\n            setLocalPlacesFound(response.list)\n            setLocalPlacesLoading(false)\n        }).catch(error=>{\n            console.log(error)\n        })\n\n        API.Places.searchApiPlaces(\"?keyword=\" + keyword).then(response => {\n            setApiPlacesFound(response)\n            setApiPlacesLoading(false)\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    return(\n        <React.Fragment>\n            <SearchInputComponent hint=\"Search for a place\" searchCallback={searchCallback} className={classes.searchInputComponent}/>\n            {(localPlacesLoading || apiPlacesLoading) ?\n                <CircularProgress  /> :\n                <React.Fragment>\n                    {generatePlaceCards()}\n                </React.Fragment>\n            }\n        </React.Fragment>\n    )\n}\n\nexport default withStyles(styles)(PlaceSearch)\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Button from \"@material-ui/core/Button\";\n\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\",\n        margin: theme.spacing(1)\n    },\n    radioButtonArea: {\n    },\n    cardArea: {\n        flex: 1,\n        display: \"flex\"\n    },\n    content: {\n        flex: '1 1 auto',\n    },\n    descriptionInput: {\n        marginTop: theme.spacing(2),\n        width: \"100%\",\n        height: \"auto\"\n    },\n    headerWrap: {}\n})\n\nfunction DayCard({classes, onSelectCallback, index, currentDay, tourInfoReducer, description, handleRemoveDay}) {\n\n    const updateDescriptionGlobally = (e) => {\n        tourInfoReducer({\n            type: 'UPDATE_DAY',\n            day: index,\n            data: {\n                description: e\n            }\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.radioButtonArea}>\n                <Radio checked={index === currentDay} onChange={(e) => {\n                    onSelectCallback(index)\n                }}/>\n            </div>\n            <Card className={classes.cardArea}>\n                <CardContent className={classes.content}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                        Day {index + 1}\n                    </Typography>\n\n                    <TextField\n                        className={classes.descriptionInput}\n                        multiline\n                        label=\"Description\"\n                        value={description}\n                        variant=\"outlined\"\n                        onChange={(e) => {\n                            updateDescriptionGlobally(e.target.value)\n                        }}\n                    />\n                </CardContent>\n                <CardHeader\n                    action={\n                        <Button startIcon={<RemoveIcon/>} aria-label=\"remove\" onClick={() => handleRemoveDay(index)}/>\n                    }\n                />\n            </Card>\n        </div>\n    )\n}\n\nDayCard.propTypes = {\n    onSelectCallback: PropTypes.func.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n    currentDay: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(DayCard)\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DayCard from \"./DayCard\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport shortid from 'shortid';\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    addDayButton: {\n        marginTop: theme.spacing(1)\n    },\n    footerWrapper: {\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"flex-end\"\n    }\n})\n\nconst DayCardSortable = SortableElement(({dayInfo, day, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => (\n    <DayCard\n        description={dayInfo.description}\n        currentDay={currentDay}\n        index={day}\n        handleRemoveDay={removeDayCallback}\n        onSelectCallback={onSelectCallback}\n        tourInfoReducer={tourInfoReducer}/>\n));\n\nconst SortableList = SortableContainer(({elements, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => {\n\n    return (\n        <ul style={{padding: \"0px\"}}>\n            {elements.map((item, index) => {\n                return <DayCardSortable\n                    currentDay={currentDay}\n                    day={index}\n                    index={index}\n                    removeDayCallback={removeDayCallback}\n                    key={item.elementIdentifier}\n                    dayInfo={item}\n                    onSelectCallback={onSelectCallback}\n                    tourInfoReducer={tourInfoReducer}/>\n            })}\n        </ul>\n    );\n});\n\nfunction DaysWrapper({classes, currentDay, setCurrentDay, tourInfo, tourInfoReducer}) {\n\n    const { addAlertConfig } = UseAlertDialogContext();\n\n    const handleSelect = (index) => {\n        setCurrentDay(index)\n    }\n\n    const addDayHandler = () => {\n        tourInfoReducer({\n            type: 'ADD_DAY',\n            data: {\n                description: \"\",\n                elementIdentifier: shortid.generate(),\n                tour: []\n            }\n        })\n    }\n\n    const removeDay = (day) => {\n        tourInfoReducer({\n                type: 'REMOVE_DAY',\n                day: day,\n            }\n        )\n        if(day === currentDay)\n            setCurrentDay(day - 1)\n    }\n\n    const removeDayCallback = (day) => {\n        if(tourInfo.days.length === 1){\n            addAlertConfig(\"Warning\", \"The tour has to have at least one day\", [])\n        }else{\n            if(tourInfo.days[day].tour.length > 0){ //This day has at least one place/transport added to it\n                addAlertConfig(\"Warning\", \"Are you sure you want to remove this day?\",[{name: \"yes\", action: ()=>{\n                    removeDay(day)\n                    }}],() => {\n                })\n            }else removeDay(day)\n        }\n    }\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        tourInfoReducer({\n            type: 'MOVE_DAY',\n            oldIndex: oldIndex,\n            newIndex: newIndex\n        })\n        setCurrentDay(newIndex)\n    }\n\n    return (\n        <div className={classes.root}>\n            <SortableList\n                pressDelay={200}\n                disableAutoscroll={false}\n                elements={tourInfo.days}\n                currentDay={currentDay}\n                onSortEnd={onSortEnd}\n                removeDayCallback={removeDayCallback}\n                onSelectCallback={handleSelect}\n                tourInfoReducer={tourInfoReducer}/>\n            <div className={classes.footerWrapper}>\n                <Button\n                    variant=\"text\"\n                    color=\"secondary\"\n                    size=\"large\"\n                    className={classes.addDayButton}\n                    onClick={addDayHandler}\n                    startIcon={<AddIcon/>}>\n                    Add another day\n                </Button>\n            </div>\n\n        </div>\n    )\n}\n\nDaysWrapper.propTypes = {\n    setCurrentDay: PropTypes.func.isRequired,\n    currentDay: PropTypes.number.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n    tourInfo: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DaysWrapper)\n","import {arrayMove} from \"react-sortable-hoc\";\nimport {array} from \"prop-types\";\nimport {ElementType} from \"./Tour\";\n\nexport default function TourDataReducer(state, action) {\n\n    let days = []\n\n    switch (action.type) {\n        case 'ADD_ELEMENT':\n            state.days.forEach((item, index) => {\n                if (index === action.day) {\n                    days.push({\n                        ...item,\n                        tour: [\n                            ...item.tour,\n                            action.data\n                        ]\n                    })\n                } else days.push(item)\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'UPDATE_ELEMENT':\n            state.days.forEach((item, index) => {\n                if (index === action.day) {\n                    let tour = item.tour\n                    tour[action.index] = {...tour[action.index], data: {...tour[action.index].data, ...action.data}}\n                    days.push({\n                        ...item,\n                        tour: tour\n                    })\n                } else days.push(item)\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'INSERT_TRANSPORT_FOR_PLACE':\n            state.days.forEach((item, index) => {\n                if (index === action.day) {\n                    let tour = item.tour\n                    let index = tour.findIndex((item) => item.type === ElementType.place && item.data.details.placeId === action.placeId)\n                    tour.splice(index + 1, 0, action.data)\n                    days.push({\n                        ...item,\n                        tour: tour\n                    })\n                } else days.push(item)\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'ADD_DAY':\n            return {\n                ...state,\n                days: [\n                    ...state.days,\n                    action.data\n                ]\n            }\n        case 'MOVE_DAY':\n            return {\n                ...state,\n                days: arrayMove(state.days, action.oldIndex, action.newIndex)\n            }\n        case 'MOVE_ELEMENT':\n            days = state.days.map((item, index) => {\n                if (index === action.day)\n                    return {...item, tour: arrayMove(item.tour, action.oldIndex, action.newIndex)}\n                else return item\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'UPDATE_DAY':\n            days = state.days.map((item, index) => {\n                if (index === action.day) {\n                    return {...item, ...action.data}\n                } else return item\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'REMOVE_ELEMENT':\n            days = state.days.map((item, index) => {\n                if (index === action.day)\n                    return {...item, tour: item.tour.filter((value, index) => index !== action.index)}\n                else return item\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'REMOVE_DAY':\n            days = state.days.filter((item, index) => index !== action.day)\n            return {\n                ...state,\n                days: days\n            }\n        case 'UPDATE_TOUR':\n            return {\n                ...state,\n                ...action.data\n            }\n        case 'SET_ALL':\n            return action.data\n\n        default:\n            return state\n    }\n\n}\n","import React, {useEffect} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(4),\n    },\n    nameField: {\n        width: \"100%\"\n    },\n    descriptionField: {\n        marginTop: theme.spacing(2),\n        width: \"100%\",\n        height: \"auto\"\n    }\n});\n\nfunction TourInfoComponent({classes, tourInfo, tourInfoReducer, errorInfo, setErrorInfo}) {\n\n    const handleDescriptionChange = (e) => {\n        tourInfoReducer({\n            type: 'UPDATE_TOUR',\n            data: {description: e.target.value}\n        })\n    }\n    const handleTitleChange = (e) => {\n        tourInfoReducer({\n            type: 'UPDATE_TOUR',\n            data:  {name: e.target.value}\n        })\n    }\n\n    useEffect(()=>{\n        if(tourInfo.name === \"\")\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: true}}})\n        else\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: false}}})\n    }, [tourInfo.name])\n\n    let shouldDisplayTitleMissingError = errorInfo.showErrors && errorInfo.errors.titleMissing\n\n    return (\n        <div className={classes.root}>\n            <TextField label=\"Tour name\"\n                       variant=\"outlined\"\n                       error={shouldDisplayTitleMissingError}\n                       helperText={shouldDisplayTitleMissingError ? \"Please provide a title for your tour\" : \"\"}\n                       value={tourInfo.name}\n                       onChange={handleTitleChange}\n                       defaultValue=\"My tour name\" className={classes.nameField}/>\n            <TextField\n                className={classes.descriptionField}\n                multiline\n                label=\"Description\"\n                value={tourInfo.description}\n                variant=\"outlined\"\n                onChange={handleDescriptionChange}\n            />\n        </div>\n    )\n}\n\nTourInfoComponent.propTypes = {\n    tourInfo: PropTypes.object.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(TourInfoComponent)","import React, {useEffect, useMemo, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer } from \"react-google-maps\"\nimport {ElementType} from \"./Tour\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(4),\n    },cover: {\n        [theme.breakpoints.down(\"lg\")]: {\n            height: \"200px\",\n        },\n        [theme.breakpoints.only(\"lg\")]: {\n            flex: 1,\n            height: \"auto\",\n        },\n    },\n});\n\n\n\n/*\nExample of getting 0th place and 0th day lat and lng\nlet lat = tourInfo.days[0].tour[0].details.latitude\nlet lng = tourInfo.days[0].tour[0].details.longitude\n\nKeep in mind, that you want to only look for elements, that are of place (not of transport) type.\nSo you'd do something like this to get current day's places:\nlet places = tourInfo.days[currentDay].tour.filter(item => item.type === ElementType.place)\nand then something like this\nplaces.forEach(item => {\n    let lat = item.details.latitude\n    let lng = item.details.longitude\n})\n*/\n\n\nconst google = window.google;\n\nconst MyMapComponent = withGoogleMap(props =>\n    <GoogleMap\n        defaultZoom={8}\n        defaultCenter={{lat: -34.397, lng: 150.644}}>\n\n        <DirectionsRenderer\n            options={{suppressMarkers: true, draggable: false}}\n            draggable={false}\n            directions={props.directions}/>\n\n        {props.places.map((marker, index) => {\n            const position = { lat: marker.latitude, lng: marker.longitude };\n            return <Marker key={index} position={position} label={`${index+1}`} onClick={\n                ()=>{\n                    let info = Object.assign({}, props.infoWindows, {});\n                    info[index] = true;\n                    props.setInfoWindows(info);\n                }\n            }>\n                {props.infoWindows[index] && (\n                <InfoWindow onCloseClick={()=>{\n                    let info = Object.assign({}, props.infoWindows, {});\n                    info[index] = false;\n                    props.setInfoWindows(info);\n                }}>\n                    <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                        <Card>\n                            <Typography>\n                                {marker.name}\n                            </Typography>\n                            {marker.photo ? <CardMedia\n                                style={{\"height\": \"150px\"}}\n                                image={marker.photo}\n                            />: null}\n                        </Card>\n                    </div>\n                </InfoWindow>\n                )}\n            </Marker>\n        })}\n    </GoogleMap>\n);\n\nfunction TourMap({classes, tourInfo, currentDay}) {\n\n    const [directions, setDirection ] = useState();\n    const [infoWindows, setInfoWindows] = useState([]);\n    const [places, setPlaces] = useState([]);\n\n    const constructPlaceData = () =>{\n        let p = tourInfo.days[currentDay].tour.filter(item => item.type === ElementType.place);\n        let places = [];\n        let markersInfo = [];\n        p.forEach(item => {\n            let lat = item.data.details.latitude;\n            let lng = item.data.details.longitude;\n            let name = item.data.details.name;\n            let photos = item.data.details.photos;\n            places.push({latitude: lat, longitude: lng,name: name, photo: photos.length > 0 ? photos[0].url : null});\n            markersInfo.push(false);\n        });\n        setInfoWindows(markersInfo);\n        setPlaces(places);\n        return places\n    };\n\n    useEffect(()=>{\n        const places = constructPlaceData();\n        if(places.length>0){\n            const waypoints = places.map(p =>({\n                location: {lat: p.latitude, lng:p.longitude},\n                stopover: true\n            }));\n            const origin = waypoints.shift().location;\n            let destination = null\n            if(waypoints.length > 0)\n                destination = waypoints.pop().location;\n            else\n                destination = origin\n\n            const directionsService = new google.maps.DirectionsService();\n\n            directionsService.route(\n                {\n                    origin: origin,\n                    destination: destination,\n                    travelMode: google.maps.TravelMode.DRIVING,\n                    waypoints: waypoints\n                },\n                (result, status) => {\n                    if (status === google.maps.DirectionsStatus.OK) {\n                        setDirection(result)\n                    } else {\n                        alert(status);\n                    }\n                }\n            );\n        }\n    },[currentDay, tourInfo.days]);\n\n\n    return (\n        <div className={classes.root}>\n            <MyMapComponent\n                    loadingElement={<div style={{ height: `100%` }} />}\n                    containerElement={<div style={{ height: `400px` }} />}\n                    mapElement={<div style={{ height: `100%` }} />}\n                    directions={directions}\n                    places={places}\n                    infoWindows={infoWindows}\n                    setInfoWindows={setInfoWindows}\n                />\n\n        </div>\n    )\n}\n\nTourMap.propTypes = {\n    tourInfo: PropTypes.object.isRequired,\n    currentDay: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(TourMap)\n\n\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React, {createRef, useEffect, useMemo, useRef, useState} from \"react\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport TourPlaceComponent from \"./TourPlaceComponent\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TourPlacesWrapper from \"./TourPlacesWrapper\";\nimport PlaceSearch from \"./PlaceSearch\";\nimport DaysWrapper from \"./DaysWrapper\";\nimport TourReducer from \"./TourReducer\";\nimport TourDataReducer from \"./TourReducer\";\nimport TourInfoComponent from \"./TourInfoComponent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TourMap from \"./TourMap\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../Networking/API\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\nimport shortid from 'shortid';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\n\nexport const ElementType = {\n    place: 0,\n    transport: 1\n}\nexport const PlaceType = {\n    api: 1,\n    local: 0\n}\n\nconst styles = theme => ({\n    root: {\n        [theme.breakpoints.down(\"lg\")]: {\n            overflow: \"scroll\",\n        },\n        [theme.breakpoints.only(\"lg\")]: {\n            overflow: \"initial\",\n            display: \"flex\",\n        },\n        height: `calc(100% - 64px)`,\n        width: \"100%\",\n        '&::-webkit-scrollbar': {\n            display: \"none\"\n        },\n    },\n    loader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100vw\",\n        height: \"100vh\"\n    },\n    rightLayout: {\n        flex: 2,\n        '&::-webkit-scrollbar': {\n            display: \"none\"\n        },\n        [theme.breakpoints.only(\"lg\")]: {\n            height: \"100%\",\n            overflowY: \"scroll\",\n\n        },\n    },\n    leftLayout: {\n        [theme.breakpoints.only(\"lg\")]: {\n            height: \"100%\",\n        },\n        overflowY: \"scroll\",\n\n        flex: 1,\n        '&::-webkit-scrollbar': {\n            display: \"none\"\n        },\n    },\n    actionsArea: {\n        padding: theme.spacing(1),\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n    },\n\n})\n\nconst sampleTourData = {\n    name: \"\",\n    description: \"\",\n    days: [\n        {\n            description: \"\",\n            elementIdentifier: \"jkasfbjkdsbjk\",\n            tour: []\n        }\n    ]\n}\n\nfunction Tour({classes, match}) {\n\n    const [localPlacesFound, setLocalPlacesFound] = useState([])\n    const [apiPlacesFound, setApiPlacesFound] = useState([])\n    const [currentDay, setCurrentDay] = useState(0)\n    const [tourId, setTourId] = useState(match.params.tourId)\n    const [isLoading, setIsLoading] = useState(match.params.tourId !== undefined);\n\n    const [errorInfo, setErrorInfo] = useState({\n            errors: {\n                titleMissing: false,\n                /* Any client-side verification errors may by added here, and handled in individual components */\n            },\n            showErrors: false\n        }\n    )\n\n    const [tourInfo, dispatchTourInfo] = React.useReducer(TourDataReducer, sampleTourData)\n    const {addConfig} = UseSnackbarContext();\n\n    const handleAddPlaceClick = (placeInfo, type) => {\n        dispatchTourInfo({\n            type: 'ADD_ELEMENT',\n            day: currentDay,\n            data: {\n                type: ElementType.place,\n                data: {\n                    type: type,\n                    details: {...placeInfo}\n                }\n            }\n        })\n    };\n\n    useEffect(() => {\n        if (tourId !== undefined) {\n            // setIsLoading(true)\n            loadData()\n        }\n    }, [])\n\n    const loadData = () => {\n        API.Tour.getTour(\"?id=\" + tourId).then((response) => {\n            let aggregatedDays = [];\n            response.days.forEach(day => {\n                let aggregatedElements = [];\n                day.data.forEach(place => {\n                    let aggregatedPlace = {\n                        type: ElementType.place,\n                        data: {details: place.place, type: place.place.type}\n                    }\n                    delete aggregatedPlace.data.details.type\n                    aggregatedElements.push(aggregatedPlace)\n                    place.transport.forEach(transport => {\n                        aggregatedElements.push({\n                            type: ElementType.transport,\n                            data: {transport: transport.fk_transportId - 1, elementIdentifier: shortid.generate()}\n                        })\n                    })\n                })\n                let aggregatedDay = {...day, tour: aggregatedElements, elementIdentifier: shortid.generate()}\n                delete aggregatedDay.data\n                aggregatedDays.push(aggregatedDay)\n            })\n            let aggregatedTour = {...response, days: aggregatedDays}\n            dispatchTourInfo({type: 'SET_ALL', data: aggregatedTour})\n        }).catch((error) => {\n            addConfig(false, \"Tour has failed to load\")\n            setTourId(undefined)\n        }).finally(() => {\n            setIsLoading(false)\n        })\n    }\n\n    const handleSave = () => {\n        let containsErrors = false;\n        Object.keys(errorInfo.errors).map(function(keyName, keyIndex) {\n            if(errorInfo.errors[keyName]){\n                setErrorInfo(state => {return {...state, showErrors: true}})\n                containsErrors = true;\n            }\n        })\n        if(containsErrors) return\n        setErrorInfo(state => {return {...state, showErrors: false}})\n\n        const aggregatedDays = []\n        tourInfo.days.forEach(day => {\n            let aggregatedDay = {...day, data: []}\n            delete aggregatedDay.tour\n            delete aggregatedDay.elementIdentifier\n            for (let i = 0; i < day.tour.length; i++) {\n                let element = day.tour[i]\n                if (element.type !== ElementType.place)\n                    continue;\n                let transport = []\n                for (let j = i + 1; j < day.tour.length && day.tour[j].type === ElementType.transport; j++) {\n                    transport.push({fk_transportId: day.tour[j].data.transport + 1})\n                }\n                let aggregatedPlace = {\n                    place: {\n                        type: element.data.type,\n                        placeId: element.data.details.placeId\n                    },\n                    transport: transport\n                }\n                aggregatedDay.data.push(aggregatedPlace)\n            }\n            aggregatedDays.push(aggregatedDay)\n        })\n        let aggregatedTour = {...tourInfo, days: aggregatedDays}\n\n        if (tourId === undefined) {\n            API.Tour.insertTour(aggregatedTour).then((response) => {\n                addConfig(true, \"Tour has been inserted successfully!\")\n                setTourId(response)\n            }).catch((error) => {\n                addConfig(false, \"Something went wrong while saving this tour.\")\n            })\n        } else {\n            API.Tour.updateTour(aggregatedTour, \"?id=\" + tourId).then((response) => {\n                addConfig(true, \"Tour has been updated successfully!\")\n            }).catch((error) => {\n                addConfig(false, \"Something went wrong while saving this tour.\")\n            })\n        }\n\n    }\n\n    const leftLayout = useMemo(() => (\n        <div className={classes.leftLayout}>\n            <PlaceSearch addPlaceCallback={handleAddPlaceClick} localPlacesFound={localPlacesFound}\n                         setLocalPlacesFound={setLocalPlacesFound} apiPlacesFound={apiPlacesFound}\n                         setApiPlacesFound={setApiPlacesFound}/>\n        </div>\n    ), [localPlacesFound, apiPlacesFound, currentDay])\n\n\n    const tourDaysComponents = useMemo(() => (\n        <div>\n            <DaysWrapper currentDay={currentDay} setCurrentDay={setCurrentDay} tourInfo={tourInfo}\n                         tourInfoReducer={dispatchTourInfo}/>\n            <Divider variant=\"middle\"/>\n            <TourPlacesWrapper errorInfo={errorInfo} setErrorInfo={setErrorInfo}\n                               currentDay={currentDay} tourInfoReducer={dispatchTourInfo} tourInfo={tourInfo}/>\n            <TourMap tourInfo={tourInfo} currentDay={currentDay}/>\n        </div>\n    ), [tourInfo.days, currentDay, errorInfo]);\n\n    const rightLayout = useMemo(() => (\n        <Paper className={classes.rightLayout} >\n            <TourInfoComponent tourInfo={tourInfo} tourInfoReducer={dispatchTourInfo} errorInfo={errorInfo} setErrorInfo={setErrorInfo}/>\n            <Divider variant=\"middle\"/>\n            {tourDaysComponents}\n            <div className={classes.actionsArea}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\n                    Save this tour\n                </Button>\n            </div>\n        </Paper>\n    ), [tourInfo, currentDay, errorInfo]);\n\n    const theme = useTheme();\n    const largeScreen = useMediaQuery(theme.breakpoints.only('lg'));\n\n    const content = (\n        <React.Fragment>\n            {largeScreen ?\n                <React.Fragment>\n                    {leftLayout}\n                    {rightLayout}\n                </React.Fragment> :\n                <React.Fragment>\n                    {rightLayout}\n                    {leftLayout}\n                </React.Fragment>\n            }\n        </React.Fragment>\n    );\n\n    return (\n        <div className={classes.root}>\n            {isLoading ? <div className={classes.loader}><CircularProgress/></div> : content}\n        </div>\n    )\n}\n\n\nexport default withStyles(styles)(Tour)\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TableComponent from \"../components/TableComponent\";\nimport API from \"../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Box from \"@material-ui/core/Box\";\nimport history from \"../helpers/history\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Popover from \"@material-ui/core/Popover\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    input: {\n        display: \"none\"\n    },\n\n    sortingButtons: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\"\n\n    },\n    root:{\n        height:\"100vh\",\n        width:\"100%\",\n        overflow: \"auto\"\n    },\n    buttonsDiv: {\n        backgroundColor: \"red\",\n        justifyContent: \"flex-end\"\n    },\n    content:{\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    }\n});\n\n\nconst headCells = [\n    { id: 'name', numeric: false, disablePadding: false, label: 'Tour name', isId: true},\n    { id: 'description', numeric: false, disablePadding: false, label: 'Tour description',isId: false},\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\n];\n\nfunction Tours(props) {\n\n    const [data, setData] = useState([]);\n    const [pageData, setPageData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { classes } = props;\n\n    const [filterOptions, setFilterOptions] = useState([\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\n\n    const [filterQuery, setFilterQuery] = useState(\"\");\n\n\n    const { addAlertConfig } = UseAlertDialogContext();\n    const { addConfig } = UseSnackbarContext();\n\n    useEffect(()=>{\n        if(!isLoading){\n            getAllTours(\"?o=\"+filterQuery);\n        }\n    },[filterQuery]);\n\n    function parseData(data){\n        console.log(\"deita\", data.list)\n        setIsLoading(false);\n        let placesData = [];\n        data.list.map(row => {\n            placesData.push(row)\n        });\n\n        delete data.list;\n        setData(placesData);\n        setPageData(data);\n    }\n\n    function updateTourCallback(id){\n        history.push(\"/app/addtour/\"+id)\n    }\n    function removePlaceCallback(id){\n        console.log(\"tour id\", id)\n\n        addAlertConfig(Strings.DIALOG_TOUR_DELETE_TITLE, Strings.DIALOG_TOUR_DELETE_MESSAGE, [{name: \"Delete\", action: () => {\n                setIsLoading(true);\n                API.Tour.removeTour(\"?id=\"+id).then(response=>{\n                    let tmp = [];\n                    data.map(row=>{\n                        if(row[\"tourId\"] !== id){\n                            tmp.push(row)\n                        }\n                    });\n                    setData(tmp);\n                    addConfig(true, Strings.SNACKBAR_TOUR_REMOVE_SUCCESS)\n                    setIsLoading(false)\n                }).catch(error=>{\n                    setIsLoading(false);\n                    addConfig(false, Strings.SNACKBAR_ERROR)\n                })\n            }}],  ()=>{setIsLoading(false)})\n    }\n\n    const changePageCallback = (p=0, keyword=\"\") => {\n        setIsLoading(true);\n        getAllTours(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword+\"&o=\"+filterQuery)\n    };\n\n\n    //Sorting stuff\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const filterOptionsChanged = (name) =>{\n        let filters = [];\n        let fq = [];\n        filterOptions.map(row=>{\n            if(row.filterName === name){\n                row.filter = !row.filter\n            }\n            if(row.filter){\n                fq.push(row.filterName)\n            }\n            filters.push(row)\n        });\n\n        setFilterQuery(fq.join(\",\"));\n        setFilterOptions(filters)\n    };\n\n    const customToolbarElements = () =>{\n        return <div>\n            <Tooltip aria-describedby={id} title=\"Filter list\">\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\n                    <FilterListIcon />\n                </IconButton>\n            </Tooltip>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={()=>{setAnchorEl(null)}}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <div className={classes.sortingButtons}>\n                    {filterOptions.map(row=>{\n                        return <FormControlLabel\n                            control={<Checkbox checked={row.filter} onChange={()=>filterOptionsChanged(row.filterName)} name={row.filterName} />}\n                            label={row.filterLabel}\n                        />\n                    })}\n                </div>\n\n            </Popover>\n        </div>\n    };\n    /*------------------------------------------------------------------------------------------------------*/\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content} >\n                <TableComponent\n                    title={\"Tours\"}\n                    headCells={headCells}\n                    data={data}\n                    pagingInfo={pageData}\n                    checkable={false}\n                    changePageCallback={changePageCallback}\n                    updateCallback={updateTourCallback}\n                    removeCallback={removePlaceCallback}\n                    id={\"tourId\"}\n                    isLoading={isLoading}\n                    customToolbarElements={customToolbarElements()}\n                />\n\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <Button\n                        onClick={()=>{history.push(\"/app/addtour\")}}\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        startIcon={<AddIcon />}>\n                        Add\n                    </Button>\n                </Box>\n            </div>\n\n        </div>\n    );\n\n    function getAllTours(urlParams=\"\") {\n        API.Tour.getAllToursAdmin(urlParams).then(response=>{\n            console.log(response);\n            parseData(response)\n        }).catch(error=>{\n            console.log(error)\n        })\n    }\n}\n\nTours.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Tours);","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useState} from \"react\";\nimport TableComponent from \"./TableComponent\";\nimport API from \"../Networking/API\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../helpers/history\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddDialog from \"./AddDialog\";\nimport UseEditDialogContext from \"../contexts/UseEditDialogContext\";\n\nconst styles = theme => ({\n    root: {\n        height: \"100vh\",\n        width: \"100%\",\n        overflow: \"auto\",\n    },\n    content: {\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    },\n    buttonWrapper: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        width: \"100%\",\n    }\n})\n\nconst categoriesHeadCells = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Category name', isId: false},\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\n]\nconst tagsHeadCells = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Tag name', isId: false},\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\n]\n\nfunction Resources({classes}) {\n\n    const {addAlertConfig} = UseAlertDialogContext();\n    const {addConfig} = UseSnackbarContext();\n    const {addEditDialogConfig} = UseEditDialogContext();\n\n    const [loading, setIsLoading] = useState({\n        categories: false,\n        tags: false\n    })\n\n    const [categories, setCategories] = useState([])\n    const [tags, setTags] = useState([])\n\n    useEffect(() => {\n        setIsLoading({categories: true, tags: true})\n        Promise.all([\n                API.Categories.getAllCategories(),\n                API.Tags.getAllTags()\n            ]\n        ).then(response => {\n            setCategories(response[0])\n            setTags(response[1])\n        }).catch(() => {\n            addConfig(false, \"Could not retrieve data!\")\n        }).finally(() => {\n            setIsLoading(oldData => {return{ ...oldData, categories: false, tags: false}})\n        })\n    }, [])\n\n    const handleAddCategory = () => {\n        addEditDialogConfig({\n            title: \"Add category\",\n            explanation: \"Type the category name\",\n            onDoneCallback: (text) => {\n               API.Categories.addCategory([{name: text}]).then((response)=>{\n                   addConfig(true, \"Category inserted successfully\")\n                   setCategories(oldData => [...oldData, {name: text, categoryId: response[0]}])\n                }).catch(error=>{\n                   addConfig(false, \"Failed to add category.\")\n               })\n            },\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\n            textFieldLabel: \"Restaurants, hiking, etc...\"\n        })\n    }\n\n    const removeCategoryCallback = (categoryId) => {\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\n        addAlertConfig(\"Warning\", \"Are you sure you want the category, named '\" + categoryName + \"'?\", [{\n            name: \"yes\", action: () => {\n                setIsLoading(oldData => {\n                    return {...oldData, categories: true}\n                })\n                API.Categories.removeCategory([{categoryId: categoryId}]).then(() => {\n                    addConfig(true, \"Category successfully removed.\")\n                    setCategories(oldData => oldData.filter(item => item.categoryId !== categoryId))\n                }).catch(() => {\n                    addConfig(false, \"An error has occurred while removing category.\")\n                }).finally(() => {\n                    setIsLoading(oldData => {\n                        return {...oldData, categories: false}\n                    })\n                })\n            }\n        }], () => {\n        })\n    }\n\n    const updateCategoryHandler = (categoryId) => {\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\n        addEditDialogConfig({\n            title: \"Edit category\",\n            explanation: \"Type the category name\",\n            defaultText: categoryName,\n            onDoneCallback: (text) => {\n                API.Categories.updateCategory([{name: text, categoryId: categoryId}]).then(()=>{\n                    addConfig(true, \"Category updated successfully\")\n                    setCategories(oldData => {return oldData.map(item => {\n                        if(item.categoryId === categoryId)\n                            return {...item, name: text}\n                        else return item\n                    })})\n                }).catch(()=>{\n                    addConfig(false, \"Failed to update category.\")\n                })\n            },\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\n            textFieldLabel: \"Restaurants, hiking, etc...\"\n        })\n    }\n\n    const updateTagHandler = (id) => {\n        let tagName = tags.filter(item => item.tagId === id)[0].name\n        addEditDialogConfig({\n            title: \"Edit tag\",\n            explanation: \"Type the tag name\",\n            defaultText: tagName,\n            onDoneCallback: (text) => {\n                API.Tags.updateTags([{name: text, tagId: id}]).then(()=>{\n                    addConfig(true, \"Tag updated successfully\")\n                    setTags(oldData => {return oldData.map(item => {\n                        if(item.tagId === id)\n                            return {...item, name: text}\n                        else return item\n                    })})\n                }).catch(()=>{\n                    addConfig(false, \"Failed to update tag.\")\n                })\n            },\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\n            textFieldLabel: \"Warm, quick, cozy...\"\n        })\n    }\n\n    const removeTagHandler = (id) => {\n        let tagName = tags.filter(item => item.tagId === id)[0].name\n        addAlertConfig(\"Warning\", \"Are you sure you want the tag, named '\" + tagName + \"'?\", [{\n            name: \"yes\", action: () => {\n                setIsLoading(oldData => {\n                    return {...oldData, tags: true}\n                })\n                API.Tags.removeTags([{tagId: id}]).then(() => {\n                    addConfig(true, \"Tag successfully removed.\")\n                    setTags(oldData => oldData.filter(item => item.tagId !== id))\n                }).catch(() => {\n                    addConfig(false, \"An error has occurred while removing tag.\")\n                }).finally(() => {\n                    setIsLoading(oldData => {\n                        return {...oldData, tags: false}\n                    })\n                })\n            }\n        }], () => {\n        })\n    }\n\n    const handleAddTag = () => {\n        addEditDialogConfig({\n            title: \"Add tag\",\n            explanation: \"Type the tag name\",\n            onDoneCallback: (text) => {\n                API.Tags.addTag([{name: text}]).then((response)=>{\n                    addConfig(true, \"Tag inserted successfully\")\n                    setTags(oldData => [...oldData, {name: text, tagId: response[0]}])\n                }).catch(()=>{\n                    addConfig(false, \"Failed to add tag.\")\n                })\n            },\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\n            textFieldLabel: \"Warm, quick, cozy...\"\n        })\n    }\n\n    const searchFunction = (keyword, item) => {\n        if(keyword.length < 3) return true\n        return item.name.includes(keyword)\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content}>\n\n                <TableComponent\n                    title={\"Categories\"}\n                    headCells={categoriesHeadCells}\n                    data={categories}\n                    pagingInfo={null}\n                    checkable={false}\n                    searchFunction={searchFunction}\n                    changePageCallback={() => {}}\n                    updateCallback={updateCategoryHandler}\n                    removeCallback={removeCategoryCallback}\n                    id={\"categoryId\"}\n                    isLoading={loading.categories}\n                />\n\n                <Box className={classes.buttonWrapper}>\n                    <Button\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        onClick={handleAddCategory}\n                        startIcon={<AddIcon/>}>\n                        Add a new category\n                    </Button>\n                </Box>\n\n                <br/>\n\n                <TableComponent\n                    title={\"Tags\"}\n                    headCells={tagsHeadCells}\n                    data={tags}\n                    pagingInfo={null}\n                    checkable={false}\n                    searchFunction={searchFunction}\n                    changePageCallback={() => {}}\n                    updateCallback={updateTagHandler}\n                    removeCallback={removeTagHandler}\n                    id={\"tagId\"}\n                    isLoading={loading.tags}\n                />\n\n                <Box className={classes.buttonWrapper}>\n                    <Button\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        onClick={handleAddTag}\n                        startIcon={<AddIcon/>}>\n                        Add a new tag\n                    </Button>\n                </Box>\n            </div>\n\n        </div>\n    )\n}\n\nResources.propTypes = {\n};\n\nexport default withStyles(styles)(Resources)\n","import React, {Fragment, useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Places from \"../pages/Places\";\nimport AddPlace from \"../pages/AddPlace\";\nimport history from \"../helpers/history\";\nimport ApiPlaces from \"../pages/ApiPlaces\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\nimport NotFoundPage from \"../pages/NotFoundPage\";\nimport Redirect from \"react-router-dom/es/Redirect\";\n\nimport Tour from \"./tour_components/Tour\";\nimport { useLocation } from 'react-router-dom'\nimport Tours from \"../pages/Tours\";\nimport Resources from \"./Resources\";\nimport {PlacesFilterProvider} from \"../contexts/PlacesFilterContext\";\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles((theme) => ({\n    root1: {\n        overflow: \"hidden\",\n        display: 'flex',\n        height: \"100vh\",\n        background: \"#F1F1F1\"\n    },\n    appBar: {\n        height: \"64px\",\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        width: \"100vw\",\n        height: \"100%\",\n        //padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        width: \"100vw\",\n        height: \"100%\",\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0\n    },\n}));\n\n\nexport default function Appbar(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n    const { title, setTitle } = UseAppBarTitleContext();\n    let location = useLocation();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const handleListItemClick = (url,title) =>{\n        handleDrawerClose();\n        setTitle(title);\n\n        // console.log(\"Current url\",location.pathname);\n        // console.log(\"Requested new url\", url);\n        let re = new RegExp(url+'([0-9]*)?');\n        // console.log(re);\n\n        if(re.test(location.pathname)){\n            history.go(0)\n        }\n    };\n\n    return (\n        <div className={classes.root1}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n\n                <Divider />\n                <List>\n                    <ListItem button component={Link} to=\"/app/\" onClick={()=>handleListItemClick(\"/app/\",\"Home\")}>\n                        <ListItemText>Home</ListItemText>\n                    </ListItem>\n                    <Divider light />\n                    <ListItem button component={Link} to=\"/app/places\" onClick={()=>handleListItemClick(\"/app/places\",\"Places\")} >\n                        <ListItemText>Places</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/tours\" onClick={()=>handleListItemClick(\"/app/tours\",\"Tours\")} >\n                        <ListItemText>Tours</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/apiplaces\" onClick={()=>handleListItemClick(\"/app/apiplaces\",\"Api places\")} >\n                        <ListItemText>Explore API places</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/addplace\" onClick={()=>handleListItemClick(\"/app/addplace\",\"Add Place\")} >\n                        <ListItemText>Add place</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/addtour\" onClick={()=>setTitle(\"Add tour\")} >\n                        <ListItemText>Add tour</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/resources\" onClick={()=>setTitle(\"Manage resources\")} >\n                        <ListItemText>Resources</ListItemText>\n                    </ListItem>\n                </List>\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n                <Switch>\n                    <Route exact path=\"/app\" component={Home} />\n                    <Route path=\"/app/places\" component={Places} />\n                    <Route path=\"/app/tours\" component={Tours} />\n                    <Route path=\"/app/addplace/:placeId?\" component={AddPlace} />\n                    <Route path=\"/app/apiplaces\" component={ApiPlaces} />\n                    <Route path=\"/app/addtour/:tourId?\" component={Tour} />\n                    <Route path=\"/app/resources\" component={Resources} />\n                    <Redirect from=\"*\" to=\"/404\"/>\n                </Switch>\n\n            </main>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport Appbar from './components/Appbar.js';\nimport AppBarTitleProvider from \"./contexts/AppBarTitleContext\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\n\nclass App extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <AppBarTitleProvider>\n                        <Appbar />\n                    </AppBarTitleProvider>\n                    </MuiPickersUtilsProvider>\n            </React.Fragment>\n        );\n    }\n}\nexport default App;","import React, {useEffect, useState} from \"react\";\nimport app from \"../helpers/firebaseInit\"\nimport Cookies from \"js-cookie\"\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({children}) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(()=>{\n        app.auth().onAuthStateChanged(function (user) {\n            if (user) {\n                setCurrentUser(user);\n                app.auth().currentUser.getIdToken(true).then(function (idToken) {\n                    Cookies.set(\"access_token\", idToken);\n                }).catch(function (error) {\n\n                });\n            }\n            setIsLoading(false)\n        });\n    },[]);\n\n\n    return (\n        <AuthContext.Provider\n            value={{\n                currentUser,\n                isLoading\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};","import React, {useContext, useEffect, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Cookies from 'js-cookie'\nimport * as firebase from \"firebase\";\nimport history from \"../helpers/history\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport app from \"../helpers/firebaseInit\";\nimport {AuthContext} from \"../contexts/AuthContext\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {isAuthenticated} from \"../helpers/tokens\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n                Traveldirection {' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    loaderMain: {\n        width: \"100%\",\n        height: \"100%\",\n        alignItems:\"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"red\"\n    }\n}));\n\n\nexport default function LoginPage() {\n    const classes = useStyles();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loading, setIsLoading] = useState(false);\n    const { addConfig } = UseSnackbarContext();\n    const { currentUser, isLoading } = useContext(AuthContext);\n\n\n    const handleLogin = () =>{\n        setIsLoading(true);\n        app.auth().signInWithEmailAndPassword(email , password)\n            .then(function(user) {\n                setIsLoading(false)\n                app.auth().currentUser.getIdToken(true).then(function (idToken) {\n                    console.log(\"Getting new access token\");\n                    Cookies.set(\"access_token\", idToken);\n                    history.push(\"/app\");\n                }).catch(function (error) {\n                    addConfig(false, \"Error receiving access token\")\n                });\n            })\n            .catch(function(error) {\n                setIsLoading(false);\n                addConfig(false, error.message)\n            });\n    };\n\n\n    if (isAuthenticated()) {\n        return <Redirect to=\"/app\" />;\n    }\n\n    const handleKeyPress = (event) =>{\n        if (event.which === 13 || event.keyCode === 13) {\n            handleLogin();\n            return false;\n        }\n        return true;\n    };\n\n    return <Container component=\"main\" maxWidth=\"xs\" onKeyPress={(e)=>handleKeyPress(e)}>\n\n                            {loading && <LinearProgress />}\n                            <CssBaseline />\n                            <div className={classes.paper}>\n                                <Avatar className={classes.avatar}>\n                                    <LockOutlinedIcon />\n                                </Avatar>\n                                <Typography component=\"h1\" variant=\"h5\">\n                                    Sign in\n                                </Typography>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    value={email}\n                                    onChange={(e)=>{setEmail(e.target.value)}}\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    value={password}\n                                    onChange={(e)=>{setPassword(e.target.value)}}\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                />\n                                <Button\n                                    onClick={()=>{handleLogin()}}\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                >\n                                    Sign In\n                                </Button>\n                            </div>\n                            <Box mt={8}>\n                                <Copyright />\n                            </Box>\n                        </Container>\n\n}","import Route from \"react-router-dom/es/Route\";\nimport React, {useContext} from \"react\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport {isAuthenticated} from \"../helpers/tokens\";\n\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={routeProps =>\n                isAuthenticated() === true ? (\n                    <Component {...routeProps} />\n                ) : (\n                    <Redirect to={\"/login\"} />\n                )\n            }\n        />\n    );\n};","import React, {useState} from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\n\n\nexport default function SnackbarFeedback(props){\n\n    const { config, removeConfig } = UseSnackbarContext();\n\n    return(\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"error\") : \"\"}>\n                {!!config && config.message}\n            </Alert>\n        </Snackbar>\n    )\n}\n","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\"\n\nconst AlertDialogFeedback = () => {\n\n    const {alertConfig, removeAlertConfig} = UseAlertDialogContext();\n\n    function remove() {\n        if(alertConfig.onClose !== undefined){\n            alertConfig.onClose()\n        }\n        removeAlertConfig()\n    }\n\n    return(\n        <Dialog\n            open={!!alertConfig}\n            onClose={remove}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{!!alertConfig ? alertConfig.title : \"\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {!!alertConfig ? alertConfig.message : \"\"}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={remove}\n                        color=\"primary\">\n                    Close\n                </Button>\n                {!!alertConfig && alertConfig.actions.map(row=>{\n                    return <Button onClick={()=>{\n                        remove();\n                        row.action();\n                    }}\n                    color=\"primary\"\n                    >\n                            {row.name}\n                    </Button>\n                })}\n            </DialogActions>\n        </Dialog>\n    )\n};\n\n\nexport default AlertDialogFeedback\n","import Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport React, {useEffect, useState} from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\n\n\nexport const TextInputDialog = () => {\n\n    const {dialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen} = UseEditDialogContext();\n    const [inputText, setInputText] = useState(\"\")\n    const [error, setError] = useState(0)\n\n    const deInit = () => {\n        setError(0)\n        setDialogOpen(false)\n        setInputText(\"\")\n    }\n\n    const handleClose = () => {\n        deInit()\n    }\n\n    const handleDone = () => {\n        let errorCode = dialogConfig.validateInput(inputText)\n        setError(errorCode)\n        if(errorCode !== 0) return\n\n        if(dialogConfig.onDoneCallback !== undefined)\n            dialogConfig.onDoneCallback(inputText)\n        deInit()\n    }\n    const handleInput = (e) => {\n        setInputText(e.target.value)\n    }\n\n    return (\n        <div>\n            <Dialog open={dialogOpen} aria-labelledby=\"form-dialog-title\" fullWidth>\n                <DialogTitle id=\"form-dialog-title\">{dialogConfig.title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {dialogConfig.explanation}\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        helperText={error !== 0 && dialogConfig.errorMessages[error] !== null ? dialogConfig.errorMessages[error] : \"\"}\n                        error={error !== 0}\n                        margin=\"dense\"\n                        id=\"name\"\n                        onInput={handleInput}\n                        label={dialogConfig.textFieldLabel}\n                        defaultValue={dialogConfig.defaultText}\n                        type=\"email\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleDone} color=\"primary\">\n                        Done\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport history from \"./helpers/history\";\nimport LoginPage from \"./pages/LoginPage\";\nimport {Router, Route, Link, Switch} from \"react-router-dom\";\nimport {AuthenticatedRoute} from \"./components/AuthenticatedRoute\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\nimport AlertDialogProvider from \"./contexts/AlertDialogContext\";\nimport AlertDialogFeedback from \"./components/feedback/AlertDialogFeedback\";\nimport {AuthProvider} from \"./contexts/AuthContext\";\nimport {PlacesFilterProvider} from \"./contexts/PlacesFilterContext\";\nimport EditDialogProvider from \"./contexts/EditDialogContext\";\nimport {TextInputDialog} from \"./components/feedback/TextInputDialog\";\n\nrequire('dotenv').config();\n\nReactDOM.render(\n    <AuthProvider>\n        <Router history={history}>\n            <PlacesFilterProvider>\n            <SnackbarProvider>\n                <AlertDialogProvider>\n                    <EditDialogProvider>\n                        <SnackbarFeedback/>\n                        <AlertDialogFeedback/>\n                        <TextInputDialog/>\n                        <Switch>\n                            <Redirect exact from=\"/\" to=\"/app\"/>\n                            <AuthenticatedRoute path=\"/app\" component={App}/>\n                            <Route path=\"/login\" component={LoginPage}/>\n                            <Route path=\"*\" component={NotFoundPage}/>\n                            <Redirect from=\"*\" to=\"/404\"/>\n                        </Switch>\n                    </EditDialogProvider>\n                </AlertDialogProvider>\n            </SnackbarProvider>\n            </PlacesFilterProvider>\n        </Router>\n    </AuthProvider>\n    , document.getElementById('root'));\n"],"sourceRoot":""}