{"version":3,"sources":["res/selectedTourIcon.svg","res/selectedParking.svg","res/availableParking.svg","pages/Home.js","components/TableComponent.js","helpers/debounce.js","helpers/history.js","helpers/tokens.js","Networking/NetworkLayerCentral.js","Networking/API.js","contexts/AlertDialogContext.js","contexts/UseAlertDialogContext.js","helpers/stringResources.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","components/AutocompleteChip.js","contexts/PlacesFilterContext.js","components/add_place_components/FilterBlock.js","contexts/AppStateStorageContext.js","pages/Places.js","helpers/priceRange.js","helpers/averageTimeSpent.js","components/AddSourceDialog.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/maps/MapGeolocation.js","components/maps/MapToolbar.js","components/maps/MapLock.js","components/maps/CustomControlsManager.js","components/maps/PlaceMap.js","components/add_place_components/PlaceLocation.js","components/maps/ParkingMap.js","components/add_place_components/ParkingLocation.js","contexts/EditDialogContext.js","contexts/UseEditDialogContext.js","components/add_place_components/PlaceDiscovery.js","components/ReviewCard.js","components/add_place_components/Reviews.js","contexts/AppBarTitleContext.js","contexts/UseAppBarTitleContext.js","components/recomendation/AddRecommendationDialog.js","components/recomendation/RecommendationListDialog.js","components/ApiPlaceCard.js","components/recomendation/Recommendation.js","components/schedule_components/WorkingShift.js","components/schedule_components/WorkingHoursVariant.js","components/schedule_components/ScheduleWorkingHours.js","components/schedule_components/Schedule.js","components/schedule_components/SchedulesContainer.js","pages/AddPlace.js","components/SearchInputComponent.js","pages/ApiPlaces.js","pages/NotFoundPage.js","components/tour_components/TourPlaceComponent.js","components/tour_components/TransportItem.js","components/tour_components/TourPlacesWrapper.js","components/tour_components/PlaceSearch.js","components/tour_components/DayCard.js","components/tour_components/DaysWrapper.js","components/tour_components/TourReducer.js","components/tour_components/TourInfoComponent.js","components/tour_components/TourMap.js","components/tour_components/Tour.js","pages/Tours.js","components/AddDialog.js","components/Resources.js","components/UpdateUserDialog.js","components/AddUserDialog.js","pages/ManageUsers.js","contexts/AuthContext.js","contexts/EditRecommendationContext.js","components/recomendation/EditRecommendationDialog.js","pages/RecommendationsPage.js","components/Appbar.js","App.js","pages/LoginPage.js","components/AuthenticatedRoute.js","components/feedback/SnackbarFeedback.js","components/feedback/AlertDialogFeedback.js","components/feedback/TextInputDialog.js","index.js"],"names":["module","exports","withStyles","theme","button","margin","spacing","input","display","props","classes","descendingComparator","a","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","checkable","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","customToolbarElements","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","style","alignItems","TextField","target","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","centerCell","textAlign","rowNotPublished","rowNotVerified","rowBasic","TableComponent","searchFunction","pagingInfo","data","updateCallback","removeCallback","isLoading","initialKeyword","defaultProps","React","setOrder","setOrderBy","selected","setSelected","dense","rowsPerPage","setRowsPerPage","page","setPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","filter","item","undefined","slice","row","isItemSelected","indexOf","labelId","rowStyle","hover","rowId","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckboxChange","header","isId","scope","e","stopPropagation","preventDefault","fontSize","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","pageNum","onChangePage","newPage","onChangeRowsPerPage","parseInt","console","log","history","getAccessToken","localStorage","getItem","getRefreshToken","isAuthenticated","request","options","contentType","authorize","client","axios","create","baseURL","headers","interceptors","response","use","error","originalRequest","config","url","status","code","Promise","reject","removeItem","push","startsWith","_retry","API","Auth","refreshToken","then","token","access_token","Authorization","setItem","catch","err","onSuccess","onError","debug","message","RequestType","getRequest","path","urlData","method","postRequest","postMultipartRequest","formData","Explore","getExplorePage","updateExplorePage","Recommendation","removeRecommendation","updateRecommendation","removePlaceFromRecommendation","addObjectToRecommendation","getAllRecommendations","urlParams","createRecommendation","User","setRoles","getAllRoles","getAllUsers","getUserProfile","register","login","Tour","insertTour","getTour","updateTour","getAllToursAdmin","removeTour","getTourCategories","updateTourCategories","SourcePlace","updateSourcesForPlace","Source","getSources","addSource","Places","getClosesPlacesAdmin","getAllCities","getAllCounties","getAllCountries","getAllMunicipalities","getAllPlaces","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","removePlace","Tags","getAllTags","addTag","params","removeTags","updateTags","Categories","addCategory","getAllCategories","removeCategory","updateCategory","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","Reviews","getPlaceReviews","AlertDialogContext","createContext","alertConfig","addAlertConfig","removeAlertConfig","AlertDialogProvider","children","setAlertConfig","contextValue","actions","onClose","Provider","UseAlertDialogContext","useContext","Strings","DIALOG_PLACE_PUBLISH_TITLE","DIALOG_PLACE_PUBLISH_MESSAGE","DIALOG_PLACE_UNPUBLISH_MESSAGE","DIALOG_PLACE_INSERT_TITLE","DIALOG_PLACE_INSERT","DIALOG_PLACE_UPDATE_TITLE","DIALOG_PLACE_UPDATE","DIALOG_PLACE_VERIFY_TITLE","DIALOG_PLACE_VERIFY_MESSAGE","DIALOG_PLACE_DELETE_TITLE","DIALOG_PLACE_DELETE_MESSAGE","DIALOG_TOUR_DELETE_TITLE","DIALOG_TOUR_DELETE_MESSAGE","SNACKBAR_PLACE_INSERTED_SUCCESS","SNACKBAR_PLACE_REMOVE_SUCCESS","SNACKBAR_TOUR_INSERTED_SUCCESS","SNACKBAR_TOUR_REMOVE_SUCCESS","SNACKBAR_ERROR","SNACKBAR_CHANGES_SAVED","SnackbarContext","addConfig","removeConfig","SnackbarProvider","setConfig","success","UseSnackbarContext","autoComplete","chip","justifyContent","flexWrap","listStyle","autoCompleteChipContainer","setOptions","selectedOptions","setSelectedOptions","initialData","setInitialData","getCurrentVal","setCurrentVal","firstLoad","setFirstLoad","handleDelete","found","row1","JSON","stringify","Box","option","Chip","onDelete","Autocomplete","disableClearable","getOptionLabel","renderInput","PlacesFilterContext","buildUrl","require","initialDates","insertionStart","moment","Date","format","insertionEnd","add","modificationStart","modificationEnd","PlacesFilterProvider","categories","setCategories","selectedCategories","setSelectedCategories","cities","setCities","selectedCities","setSelectedCities","countries","setCountries","selectedCountries","setSelectedCountries","municipalities","setMunicipalities","selectedMunicipalities","setSelectedMunicipalities","counties","setCounties","selectedCounties","setSelectedCounties","initialLoading","setInitialLoading","resetFilterOptions","setResetFilterOptions","filterLabel","filterName","filterOptions","setFilterOptions","dates","setDates","queryParams","di","dm","parseFilterOptions","parseCategories","filterQuery","setFilterQuery","getCategories","restrictions","res","cats","countryRestrictions","munRestrictions","all","filterOptionsCleared","areFiltersCleared","o","c","filterDiv","flexDirection","sortingButtons","rightLayout","boxShadow","datesLayout","flexGrow","setOpen","filterDateChange","date","cDate","Object","assign","Grid","container","xs","sm","FormControlLabel","control","generalOptions","filterOptionsChanged","AutocompleteChip","justify","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","Button","marginTop","filters","clearFilters","AppStateStorageContext","AppStateStorageProvider","placesPageConfig","setPlacesPageConfig","savePlacesTableInfo","buttonsDiv","content","breakpoints","down","up","autocomplete","borderBottom","outline","setData","pageData","setPageData","setIsLoading","requestAllPlaces","p","parseData","placesData","list","i","placeId","getPlaceNameById","action","tmp","startIcon","priceRange","averageTimeSpent","closeButton","right","grey","open","setDialogOpen","setText","setUrl","setError","Dialog","fullWidth","DialogTitle","DialogContent","dividers","ev","DialogActions","autoFocus","validateInput","placeInfo","setPlaceInfo","selectedSources","setSelectedSources","updatePlaceInfo","newValue","place","valuetext","setAvailableSources","dialogOpen","availableSources","val","required","placeholder","InputLabelProps","shrink","multiline","rows","Slider","marginLeft","defaultValue","getAriaValueText","step","max","marks","FormControl","InputLabel","Select","native","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","pressDelay","disableAutoscroll","onSortEnd","oldIndex","newIndex","arrayMove","axis","acceptedFileFormats","dropzoneArea","onCloseCallback","onFinishCallback","loading","selectedFiles","setSelectedFiles","acceptedFiles","maxFileSize","showAlerts","dropzoneProps","disabled","filesLimit","onDrop","files","existingFiles","file","existingFile","imagefile","FormData","append","finally","addImageDialogOpen","setAddImageDialogOpen","handleAddPhoto","Geocode","setApiKey","geocodeFromLatLng","newLat","newLng","fromLatLng","address","results","formatted_address","addressArray","address_components","city","types","long_name","getCity","country","getCountry","county","getCounty","municipality","getMunicipality","latitude","longitude","isLocked","locationCallback","errorParsingLocation","handleKeyPress","which","keyCode","test","fromAddress","geometry","location","lat","lng","loc","split","parseFloat","onKeyPress","onPlaceSelected","navigator","geolocation","getCurrentPosition","coords","alert","setIsLocked","Switch","old","Alert","severity","CustomControlsManager","context","window","google","maps","ControlPosition","TOP_LEFT","MAP","controlDiv","document","createElement","controls","removeAt","createPortal","contextTypes","PropTypes","object","MapComponent","withGoogleMap","defaultZoom","ref","refInstance","center","defaultCenter","largeIcon","locationMarker","setLocationMarker","setParkingLocationMarker","otherPlacesData","setOtherPlacesData","infoWindows","setInfoWindows","refMap","useRef","s","range","l","Fragment","loadingElement","containerElement","mapElement","zIndex","icon","scaledSize","Size","origin","Point","markers","onCloseClick","Avatar","alt","visible","draggable","onDragEnd","latLng","BOTTOM_CENTER","mapCenter","current","getCenter","locationData","setLocationData","setParkingLocation","changeLocationData","setMainInfoWindow","onMarkerDragEnd","setPosition","mainInfoWindow","parking","parkingData","calcCrow","nearestParkingCount","addNewParking","parkingIsAttached","selectedParkingData","parkingId","anchor","parkingInfoWindows","setParkingInfoWindows","addExistingParking","lat1","lon1","lat2","lon2","dLat","toRad","dLon","sin","cos","atan2","sqrt","Value","PI","ParkingMap","setParkingData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","SortableItem","elevation","SortableList","oldArray","EditDialogContext","dialogConfig","addEditDialogConfig","removeEditDialogConfig","defaultOptions","errorMessages","explanation","onDoneCallback","textFieldLabel","defaultText","EditDialogProvider","setDialogConfig","UseEditDialogContext","selectedTags","setSelectedTags","availableCategories","setAvailableCategories","availableTags","setAvailableTags","tagName","newTag","tagId","1","2","categoryName","newCat","categoryId","marginRight","ReviewCard","review","CardContent","photoUrl","surname","Rating","rating","readOnly","upvotes","timeAdded","reviewsInfo","reviews","overflowX","setReviews","anchorEl","setAnchorEl","Boolean","filterBy","setFilterBy","getReviewsForPlace","debounceScroll","debounce","round","scrollWidth","scrollLeft","clientWidth","totalReviews","handleScrollDebounced","handleClose","overallStarRating","precision","aria-describedby","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","RadioGroup","Radio","onScroll","persist","handleScroll","AppBarTitleContext","setTitle","AppBarTitleProvider","UseAppBarTitleContext","textField","formControl","addCallback","subtitle","description","setLoading","dataChanged","recData","addRecommendation","errors","hasErrors","checkErrors","insertedData","maxWidth","FormLabel","objectId","recommendations","setRecommendations","pagingData","setPagingData","showAddNewRecommendation","setShowAddNewRecommendation","getRecommendations","keywordChange","scrollHeight","scrollTop","clientHeight","pages","List","overflowY","maxHeight","ListItem","rec","recommendationId","ListItemIcon","ListItemText","Divider","recommendation","unshift","CategoriesDisplay","SubheaderDisplay","media","expand","transform","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","renderActionArea","CardHeader","subheader","substring","website","RecommendationType","paperContent","onEditCallback","objects","intervalContainer","pickerStyle","scheduleData","setScheduleData","scheduleOpenIndex","variantId","enableLastAccommodation","currentSchedule","currentVariant","variants","find","x","elementId","shifts","shift","lastShift","firstShift","TimePicker","ampm","openTime","shiftId","time","oldData","newData","closeTime","lastAccommodation","pop","shiftToPush","shortid","generate","weekdays","fullName","weekdayPickerContainer","weekdayButton","minHeight","removeButtonContainer","weekdayPicker","weekDayIndex","dayActive","days","some","day","newScheduleData","includes","splice","WorkingShift","findIndex","generateDefaultPeriod","weekdayButtonContainer","pickerInput","schedule","setSchedule","dayIndex","periods","period","openDay","splitSchedule","minutesStep","InputProps","changeOpenTime","changeCloseTime","lastperiod","orientation","flexItem","schedules","newSchedules","scheduleDateContainer","setScheduleOpenIndex","seasonalScheduleEnabled","DatePicker","views","from","to","defaultScheduleData","tabContainer","tabsLayout","addScheduleButtonContainer","setSeasonalScheduleEnabled","isScheduleEnabled","setIsScheduleEnabled","setLastAccommodation","Tabs","indicatorColor","textColor","Tab","state","enabled","loader","bottom","match","phoneNumber","isPublic","isVerified","source","price","parkingMarkerData","setParkingMarkerData","sources","setSources","setPlaceId","firstTimeLoading","setFirstTimeLoading","showRecommendationDialog","setShowRecommendationDialog","ColorButton","green","formFeedback","saveChanges","formPlaceInfo","plc","updateAll","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","updateSources","newSchedule","newPeriod","subtract","closeDay","scheduleDefault","er","hasSchedule","minutes","tags","setAllData","responses","basicPlaceInfo","useMemo","placePhotos","placeLocation","parkingLocation","placeDiscovery","scheduleContainer","CircularProgress","obj","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debouncedInput","InputBase","topBar","searchBox","placeApiCard","isLoadingData","setIsLoadingData","word","query","encodeURI","elementType","isFitWidth","disableImagesLoaded","updateOnEachImageLoad","boxSizing","Copyright","getFullYear","footer","cardRoot","only","details","cover","flexFlow","addParkingWrapper","elementData","addTransportCallback","displayNoTransportWarning","transportTypes","transportSelectWrapper","transportSelect","transportId","transportChangeCallback","transportRemoveCallback","currentTransport","setCurrentTransport","NativeSelect","transport","TourPlaceSortable","removePlaceCallback","tourPlaceComponent","TransportItemSortable","currentDay","removeElementCallback","tourInfo","shouldDisplayNoTransportWarning","elements","tour","ElementType","elementIdentifier","tourInfoReducer","errorInfo","setErrorInfo","searchInputComponent","placeCard","addPlaceCallback","setApiPlacesFound","apiPlacesFound","localPlacesFound","setLocalPlacesFound","localPlacesLoading","setLocalPlacesLoading","placeType","mappedPlaces","forEach","generatePlaceCards","radioButtonArea","cardArea","descriptionInput","headerWrap","onSelectCallback","handleRemoveDay","updateDescriptionGlobally","DayCardSortable","dayInfo","removeDayCallback","addDayButton","footerWrapper","setCurrentDay","removeDay","TourDataReducer","nameField","descriptionField","publicityDiv","tourId","titleMissing","shouldDisplayTitleMissingError","showErrors","helperText","isPublished","MyMapComponent","addPlace","directions","setDirection","directionPlaces","setDirectionPlaces","places","setPlaces","placesInfoWindows","setPlacesInfoWindows","loadingArea","setLoadingArea","fetchPlaces","locations","Array","fill","PlacesMarkers","constructPlaceData","waypoints","stopover","destination","DirectionsService","route","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","searchAreaComponent","TOP_CENTER","suppressMarkers","marker","labelOrigin","info","sampleTourData","leftLayout","actionsArea","setTourId","recommendationsDialogOpen","setRecommendationsDialogOpen","useReducer","dispatchTourInfo","handleAddPlaceClick","loadData","aggregatedDays","aggregatedElements","aggregatedPlace","fk_transportId","aggregatedDay","aggregatedTour","parseTourInfoResponse","handleSave","containsErrors","keys","keyIndex","element","j","dayInfoWithoutDesc","dayCopy","mapComponent","tourDaysComponents","useTheme","largeScreen","useMediaQuery","getAllTours","handleClick","fq","join","categoriesHeadCells","tagsHeadCells","buttonWrapper","setTags","UpdateUserDialog","userData","availableRoles","setAvailableRoles","selectedRoles","setSelectedRoles","roles","roleId","userId","password","email","user","setUser","userDataChanged","addUser","medium","userTmp","FormHelperText","gutterBottom","selectedUser","setSelectedUser","allRoles","setAllRoles","openUpdateDialog","setOpenUpdateDialog","openAddDialog","setOpenAddDialog","requestUsers","usersData","rolesList","parsedRoles","AuthContext","AuthProvider","currentUser","setCurrentUser","EditRecommendationContext","EditRecommendationProvider","currentlyEditing","rootList","setRootList","startEditing","conf","finishEditing","removedId","tempRootList","setRecommendation","newRec","RecommendationPlaceSortable","removeObjectFromRecommendation","recommendedPlaceCard","RecommendationPlaceSortableContainer","alignContent","editRecommendation","constructRecommendationForUpdate","leftTop","leftContent","borderStyle","rightTop","rightContent","homeRecommendations","setHomeRecommendations","unique","newList","existingRecommendations","uniqueList","RecommendationSkeleton","Skeleton","animation","explorable","setList","group","sortable","evt","onEnd","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","TourWithContext","RecommendationsWithContext","Appbar","useLocation","handleDrawerClose","handleListItemClick","RegExp","pathname","go","hasPermission","perm","permissions","permission","CssBaseline","AppBar","edge","Drawer","Link","exact","Home","Tours","AddPlace","Resources","ManageUsers","Redirect","App","Component","form","submit","loaderMain","AuthenticatedRoute","rest","Route","render","routeProps","SnackbarFeedback","Snackbar","autoHideDuration","AlertDialogFeedback","remove","DialogContentText","TextInputDialog","inputText","setInputText","deInit","onInput","errorCode","ReactDOM","setEmail","setPassword","handleLogin","identifier","hasAccess","authority","checkAccess","authorities","refresh_token","Container","mt","getElementById"],"mappings":"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","file":"static/js/main.098be623.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/selectedTourIcon.4acac106.svg\";","module.exports = __webpack_public_path__ + \"static/media/selectedParking.102bdd14.svg\";","module.exports = __webpack_public_path__ + \"static/media/availableParking.6ac3f9ec.svg\";","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(1)\n    },\n    input: {\n        display: \"none\"\n    }\n});\n\n\n\nconst Home = props => {\n    const { classes } = props;\n\n    return (\n        <div>\n\n        </div>\n    );\n};\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit'\nimport TextField from \"@material-ui/core/TextField\"\nimport useDebounce from \"../helpers/debounce\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, checkable} = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n\n                {checkable ? <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell> : null}\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right'  : 'left' }\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n    headCells: PropTypes.object.isRequired,\n    checkable: PropTypes.bool.isRequired\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, title, changePageCallback, keyword, setKeyword, customToolbarElements} = props;\n\n\n    const debouncedSearch = useDebounce(keyword, 300);\n\n\n    useEffect( () => {\n            changePageCallback(1,keyword)\n        },\n        [debouncedSearch]\n    );\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    {title}\n                </Typography>\n            )}\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : <div style={{display: \"flex\", alignItems: \"center\"}}>\n                <TextField id=\"standard-basic\" label=\"Search\" value={keyword} onChange={ event =>{setKeyword(event.target.value)}}/>\n                {!!customToolbarElements ? customToolbarElements : null}\n            </div>}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n};\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    centerCell: {\n        textAlign: \"center\",\n        width: '100%'\n    },\n    rowNotPublished:{\n        backgroundColor: \"#ffcdd2\"\n    },\n    rowNotVerified:{\n        backgroundColor: \"#fff9c4\"\n    },\n    rowBasic: {\n        backgroundColor: \"#FFFFFF\"\n    }\n\n}));\n\nexport default function TableComponent({title,\n                                           searchFunction,\n                                           headCells,\n                                           pagingInfo,\n                                           data,\n                                           checkable,\n                                           changePageCallback,\n                                           updateCallback,\n                                           removeCallback,\n                                           id,\n                                           isLoading,\n                                           customToolbarElements,\n                                           initialKeyword\n}) {\n\n    TableComponent.propTypes = {\n        title: PropTypes.string.isRequired,\n        headCells: PropTypes.object.isRequired,\n        pagingInfo: PropTypes.object,\n        data: PropTypes.object.isRequired,\n        checkable: PropTypes.bool.isRequired,\n        changePageCallback: PropTypes.func,\n        updateCallback: PropTypes.func,\n        removeCallback: PropTypes.func,\n        id: PropTypes.string.isRequired,\n        isLoading: PropTypes.bool,\n        customToolbarElements: PropTypes.object,\n        initialKeyword: PropTypes.string,\n    };\n\n    TableComponent.defaultProps = {\n        initialKeyword: ''\n    }\n\n\n\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const [page, setPage] = useState(0);\n    const [keyword, setKeyword] = useState(initialKeyword);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = data.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleCheckboxChange = (event, name) =>{\n\n            const selectedIndex = selected.indexOf(name);\n            let newSelected = [];\n\n            if (selectedIndex === -1) {\n                newSelected = newSelected.concat(selected, name);\n            } else if (selectedIndex === 0) {\n                newSelected = newSelected.concat(selected.slice(1));\n            } else if (selectedIndex === selected.length - 1) {\n                newSelected = newSelected.concat(selected.slice(0, -1));\n            } else if (selectedIndex > 0) {\n                newSelected = newSelected.concat(\n                    selected.slice(0, selectedIndex),\n                    selected.slice(selectedIndex + 1),\n                );\n            }\n\n            setSelected(newSelected);\n\n    };\n\n    const handleClick = (event, rowId) => {\n        if(updateCallback !== undefined){\n            updateCallback(rowId)\n        }\n    };\n\n\n    const handleChangePage = (event, newPage) => {\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n        console.log(\"handleChangeRowsPerPage\")\n\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                {isLoading ? <LinearProgress/> : null }\n                <EnhancedTableToolbar\n                    title={title}\n                    numSelected={selected.length}\n                    changePageCallback={changePageCallback}\n                    keyword={keyword}\n                    setKeyword={setKeyword}\n                    customToolbarElements={customToolbarElements}\n                />\n                 <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={data.length}\n                            headCells={headCells}\n                            checkable={checkable}\n                        />\n\n\n                        <TableBody>\n                            {stableSort(data, getComparator(order, orderBy))\n                                .filter(item => searchFunction === undefined ? true : searchFunction(keyword, item))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    const rowStyle = row['isVerified'] !== undefined  && row['isVerified'] === false ? classes.rowNotVerified :\n                                        row['isPublic'] !== undefined && row['isPublic'] === false ? classes.rowNotPublished :  classes.rowBasic;\n\n                                    return (\n                                        <TableRow\n                                            className={rowStyle}\n                                            hover\n                                            onClick={(event) => handleClick(event, row[id])}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row[id]}\n                                            selected={isItemSelected}\n                                        >\n                                            {checkable ? <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    onChange={(event)=>handleCheckboxChange(event, row.name)}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell> : null}\n\n                                            {headCells.map(header=>{\n                                                if(header.isId){\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\n                                                            {row[header.id]}\n                                                        </TableCell>\n                                                }else if(header.id === 'actions' ){\n                                                        return <TableCell >\n                                                            <div onClick={e => {e.stopPropagation(); e.preventDefault()}}>\n                                                                {updateCallback !== undefined ? <IconButton onClick={(event)=>{\n                                                                    updateCallback(row[id])\n                                                                    return 0\n                                                                }} size=\"small\" aria-label=\"edit\" >\n                                                                    <EditIcon fontSize=\"small\" />\n                                                                </IconButton> : null}\n\n                                                                {removeCallback !== undefined ? <IconButton size=\"small\" aria-label=\"delete\" onClick={()=>removeCallback(row[id])}>\n                                                                    <DeleteIcon  fontSize=\"small\" />\n                                                                </IconButton> : null}\n\n                                                            </div>\n                                                            </TableCell>\n                                                }else{\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\n                                                }\n\n                                            })}\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows}}>\n\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\n                                        <TableCell colSpan={6} className={classes.centerCell}>\n                                            <Typography variant=\"h6\" noWrap>\n                                                No results\n                                            </Typography>\n                                        </TableCell>}\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <TablePagination\n                    rowsPerPageOptions={[10]}\n                    component=\"div\"\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\n\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\nexport default function useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n\n        [value]\n    );\n\n    return debouncedValue;\n}","import { createBrowserHistory as history} from 'history';\n\nexport default history();","export const getAccessToken = () => localStorage.getItem('access_token');\nexport const getRefreshToken = () => localStorage.getItem('refresh_token');\nexport const isAuthenticated = () => !!getAccessToken();","import React from \"react\";\nimport axios from \"axios\"\nimport history from \"../helpers/history\";\nimport {getAccessToken, getRefreshToken} from \"../helpers/tokens\";\nimport API from \"./API\";\n\nconst request = async function (options, contentType, authorize= true) {\n\n    const header = {\n        'Content-Type': (contentType == null) ? 'application/json' : contentType,\n        'Accept': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Authorization': \"Bearer \" + getAccessToken(),\n        'device': 'web'\n    };\n\n    if(!authorize){\n        delete header['Authorization']\n    }\n\n    const client = axios.create({\n        baseURL: false ? \"http://192.168.0.102:8080/\" : \"https://www.traveldirection.ax.lt:8080/\",\n        headers: header\n    });\n\n\n\n    // Add a response interceptor\n    client.interceptors.response.use(function (response) {\n        return response;\n    },  function (error) {\n\n        // console.log(\"Interceptor error\", error);\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        // Do something with response error\n        const originalRequest = error.config;\n        const url = originalRequest.url;\n        const status = error.response.status;\n\n\n        if (error.response.status === 408 || error.code === 'ECONNABORTED' || error.code === \"ERR_INTERNET_DISCONNECTED\") {\n            console.log(`A timeout happend on url ${error.config.url}`)\n            return Promise.reject(error)\n        }\n\n        // Logout user if token refresh didn't work or user is disabled\n        if (url === 'api/v1/auth/refresh') {\n            console.log(\"Asking for refresh token\");\n            console.log(\"Unable to issue new JWT token. Redirecting to login page!\");\n            localStorage.removeItem(\"access_token\");\n            localStorage.removeItem(\"refresh_token\");\n            history.push(\"/login\");\n            return Promise.reject(error);\n        }else if(url.startsWith(\"api/v1/auth\")){\n            return Promise.reject(error);\n        }\n\n        //Do not request for new JWT if response code is not Authorized\n        if (status !== 403) {\n            return Promise.reject(error);\n        }\n\n        if (status === 403 && originalRequest._retry === undefined) {\n            console.log(\"Users token has expired!\");\n\n            originalRequest._retry = true;\n\n            return API.Auth.refreshToken(getRefreshToken()).then(response=>{\n                    console.log(\"Retrieving new token and making the same request!\");\n                    let token = response.access_token;\n                    originalRequest.headers.Authorization = \"Bearer \" + token;\n                    localStorage.setItem(\"access_token\", token);\n                    return axios(originalRequest)\n            }).catch(err=>{\n                return Promise.reject(error)\n            })\n        }\n\n        return Promise.reject(error)\n    });\n\n    const onSuccess = function (response) {\n        // console.log('Request Successful!', response);\n        return response.data;\n    };\n\n    const onError = function (error) {\n        if (error.response) {\n            console.debug('Status:', error.response.status);\n            if (error.response.status === 403) {\n                history.push(\"/login\")\n            }\n            console.debug('Data:', error.response.data);\n            console.debug('Headers:', error.response.headers);\n        } else {\n            console.debug('Error Message:', error.message);\n        }\n\n        return Promise.reject(error.response.data);\n    };\n\n    return client(options)\n        .then(onSuccess)\n        .catch(onError);\n};\n\nconst getRequest = function (path, urlData = \"\") {\n    return request({\n        url: path + urlData,\n        method: 'GET'\n    });\n};\n\nconst postRequest = function (path, data, urlData = \"\", authorize=true) {\n    console.log(\"Authorize\",authorize);\n    return request({\n        url: path + urlData,\n        method: 'POST',\n        data: data\n    }, null, authorize);\n};\n\nconst postMultipartRequest = function (path, formData) {\n    return request({\n        url: path,\n        method: 'POST',\n        data: formData\n    }, 'multipart/form-data');\n};\n\nconst RequestType = {\n    getRequest, postRequest, postMultipartRequest\n};\n\nexport default RequestType\n\n\n","import RequestType from '../Networking/NetworkLayerCentral'\n\n//Places\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\nconst getClosesPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin/closest\", urlParams);\n\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\nconst removePlace = (urlParams) => RequestType.getRequest(\"api/v1/place/delete\", urlParams);\n\nconst getAllCities = (urlParams) =>RequestType.getRequest(\"api/v1/place/city/all\",urlParams);\nconst getAllCounties = (urlParams) =>RequestType.getRequest(\"api/v1/place/county/all\",urlParams);\nconst getAllCountries = (urlParams) =>RequestType.getRequest(\"api/v1/place/country/all\",urlParams);\nconst getAllMunicipalities = (urlParams) =>RequestType.getRequest(\"api/v1/place/municipality/all\",urlParams);\n\nconst Places = {getClosesPlacesAdmin,getAllCities,getAllCounties, getAllCountries, getAllMunicipalities, getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces, removePlace};\n\n//Tags\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\nconst removeTags = (params) => RequestType.postRequest(\"api/v1/tags/delete\", params);\nconst updateTags = (params) => RequestType.postRequest(\"api/v1/tags/update\", params);\nconst Tags = {getAllTags, addTag, removeTags, updateTags};\n\n//Category\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\nconst removeCategory = (params) => RequestType.postRequest(\"api/v1/categories/delete\", params);\nconst updateCategory = (params) => RequestType.postRequest(\"api/v1/categories/update\", params);\nconst getAllCategories = (params) => RequestType.getRequest(\"api/v1/categories/all\", params);\nconst Categories = {addCategory, getAllCategories, removeCategory, updateCategory};\n\n//Photo\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\nconst Photos = {addPhoto, uploadPhoto};\n\n\n//Parking\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\nconst Parking = {getParkingByLocation, insertNewParking};\n\n\n//TagsPlace\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\nconst TagsPlace = {updateTagsForPlace};\n\n//CategoriesPlace\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\nconst CategoriesPlace = {updateCategoriesForPlace};\n\n//PhotoPlace\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\nconst ParkingPlace = {updateParkingForPlace};\n\n//PhotoPlace\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\nconst PhotoPlace = {updatePhotoForPlace};\n\n//Schedule\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\nconst Schedule = {updateScheduleForPlace};\n\n//ReviewsPlace\nconst getPlaceReviews = (urlParams) => RequestType.getRequest(\"api/v1/reviews/all\", urlParams);\nconst Reviews = {getPlaceReviews};\n\n//Sources\nconst getSources = () => RequestType.getRequest(\"api/v1/source/all\");\nconst addSource = (data) => RequestType.postRequest(\"api/v1/source/insert\",data);\nconst Source = {getSources, addSource};\n\n//SourcePlace\nconst updateSourcesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/sourceplace/update\", data, urlParams);\nconst SourcePlace = {updateSourcesForPlace};\n\n//Tours\nconst insertTour = (data) => RequestType.postRequest(\"api/v1/tour/insert\",data)\nconst updateTour = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/update\",data, urlParams)\nconst updateTourCategories = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/categories/update\",data, urlParams)\nconst getTour = (urlParams) => RequestType.getRequest(\"api/v1/tour\",urlParams)\nconst getTourCategories = (urlParams) => RequestType.getRequest(\"api/v1/tour/categories\",urlParams)\nconst removeTour = (urlParams) => RequestType.getRequest(\"api/v1/tour/delete\", urlParams);\nconst getAllToursAdmin = (urlParams) => RequestType.getRequest(\"api/v1/tour/searchadmin\", urlParams);\nconst Tour = {insertTour, getTour, updateTour, getAllToursAdmin, removeTour, getTourCategories, updateTourCategories}\n\n//Auth\nconst login = (data) => RequestType.postRequest(\"api/v1/auth/login\", data, \"\", false);\nconst register = (data) => RequestType.postRequest(\"api/v1/auth/registration\",data, \"\", false);\nconst refreshToken = (data) => RequestType.postRequest(\"api/v1/auth/refresh\", data, \"\", false);\n\nconst Auth = {register, login, refreshToken};\n\n//User\nconst getUserProfile = () => RequestType.getRequest(\"api/v1/user/info\");\nconst getAllUsers = (urlParams) => RequestType.getRequest(\"api/v1/user/search\", urlParams);\nconst getAllRoles = () => RequestType.getRequest(\"api/v1/user/roles/all\");\nconst setRoles = (data) => RequestType.postRequest(\"api/v1/user/setRoles\", data);\n\nconst User = {setRoles, getAllRoles, getAllUsers, getUserProfile};\n\n//Recommendation\nconst createRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/create\", data);\nconst getAllRecommendations = (urlParams) => RequestType.getRequest(\"api/v1/recommendation/search\", urlParams);\nconst addPlaceToRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/addObject\", data);\nconst removePlaceFromRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/removeObject\", data);\nconst updateRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/update\", data)\nconst removeRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/remove\", data)\n\nconst Recommendation = { removeRecommendation, updateRecommendation, removePlaceFromRecommendation, addObjectToRecommendation: addPlaceToRecommendation, getAllRecommendations, createRecommendation }\n\n//Explore\n\nconst updateExplorePage = (data) => RequestType.postRequest(\"api/v1/explore/update\", data)\nconst getExplorePage = () => RequestType.getRequest(\"api/v1/explore/\")\n\nconst Explore = { getExplorePage, updateExplorePage }\n\nconst API = {Explore, Recommendation, User, Auth, Tour, SourcePlace, Source,Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule, Reviews};\n\nexport default API\n\n","// src/common/providers/APIErrorProvider/index.js\nimport React, { useState, useCallback } from 'react';\n\nexport const AlertDialogContext = React.createContext({\n    alertConfig: null,\n    addAlertConfig: () => {},\n    removeAlertConfig: () => {}\n});\n\nexport default function AlertDialogProvider({ children }) {\n    const [alertConfig, setAlertConfig] = useState(null);\n    const contextValue = {\n        alertConfig,\n        addAlertConfig: (title, message, actions, onClose = undefined) => setAlertConfig({ title, message, actions, onClose}),\n        removeAlertConfig: () => setAlertConfig(null)\n    };\n\n    return (\n        <AlertDialogContext.Provider value={contextValue}>\n            {children}\n        </AlertDialogContext.Provider>\n    );\n}","import React, {useContext} from \"react\";\nimport {AlertDialogContext} from \"./AlertDialogContext\";\n\nexport default function UseAlertDialogContext() {\n    const { alertConfig, addAlertConfig, removeAlertConfig } = useContext(AlertDialogContext);\n    return { alertConfig, addAlertConfig, removeAlertConfig };\n}\n","const Strings = {\n    DIALOG_PLACE_PUBLISH_TITLE : 'Place publicity',\n    DIALOG_PLACE_PUBLISH_MESSAGE: \"This place will be visible for all users. Are you sure?\",\n    DIALOG_PLACE_UNPUBLISH_MESSAGE :\"This place will not be visible anymore. Are you sure?\",\n\n    DIALOG_PLACE_INSERT_TITLE: \"Insert place\",\n    DIALOG_PLACE_INSERT: \"Are you sure you want to insert this place?\",\n\n    DIALOG_PLACE_UPDATE_TITLE: \"Update place\",\n    DIALOG_PLACE_UPDATE: \"Are you sure you want to make changes to this place?\",\n\n    DIALOG_PLACE_VERIFY_TITLE: \"Place verification\",\n    DIALOG_PLACE_VERIFY_MESSAGE: \"This is a user's suggested place. Are you sure you want to verify this place and make it visible to others?\",\n\n    DIALOG_PLACE_DELETE_TITLE: \"Delete place\",\n    DIALOG_PLACE_DELETE_MESSAGE: \"This action will remove this place permanently. Are you sure you want to proceed?\",\n\n    DIALOG_TOUR_DELETE_TITLE: \"Delete tour\",\n    DIALOG_TOUR_DELETE_MESSAGE: \"This action will remove this tour permanently. Are you sure you want to proceed?\",\n\n    SNACKBAR_PLACE_INSERTED_SUCCESS: \"Place inserted successfully\",\n    SNACKBAR_PLACE_REMOVE_SUCCESS: \"Place was removed successfully\",\n\n    SNACKBAR_TOUR_INSERTED_SUCCESS: \"Tour inserted successfully\",\n    SNACKBAR_TOUR_REMOVE_SUCCESS: \"Tour was removed successfully\",\n\n    SNACKBAR_ERROR: \"Something went wrong!\",\n    SNACKBAR_CHANGES_SAVED: \"All changes saved!\"\n};\n\nexport default Strings;","import React, { useState, useCallback } from 'react';\nimport { useContext } from 'react';\n\nexport const SnackbarContext = React.createContext({\n    config: null,\n    addConfig: () => {},\n    removeConfig: () => {}\n});\n\n\nexport default function SnackbarProvider({ children }) {\n    const [config, setConfig] = useState(null);\n\n    const removeConfig = () => setConfig(null);\n    const addConfig = (success, message) => setConfig({ success, message });\n\n    const contextValue = {\n        config,\n        addConfig: (success, message) => addConfig(success, message),\n        removeConfig: () => removeConfig()\n    };\n\n    return (\n        <SnackbarContext.Provider value={contextValue}>\n            {children}\n        </SnackbarContext.Provider>\n    );\n}","import { useContext } from 'react';\nimport {SnackbarContext} from \"./SnackbarContext\";\n\nexport default function UseSnackbarContext() {\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\n    return { config, addConfig, removeConfig };\n}\n","\nimport React, {useEffect, useState} from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Paper from \"@material-ui/core/Paper\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = theme => ({\n    autoComplete: {\n        margin: theme.spacing(1)\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'left',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(1),\n        margin: 0,\n    },\n    autoCompleteChipContainer: {\n        padding: theme.spacing(1)\n    }\n});\n\nfunction AutoCompleteChip(props){\n\n    const {options, setOptions, selectedOptions, setSelectedOptions, classes, label, id, name} = props;\n    const [initialData, setInitialData] = useState([]);\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\n    const [firstLoad, setFirstLoad] = useState(true);\n\n    function handleDelete(data) {\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\n        setOptions(\n            [\n                ...options,\n                data\n            ]\n        )\n    }\n\n    useEffect(()=>{\n        if(selectedOptions.length===0){\n\n            setOptions(\n                initialData\n            )\n        }\n    },[selectedOptions]);\n\n    useEffect(()=>{\n        if(firstLoad && options.length>0){\n            let data = [];\n            options.map(row=>{\n                let found = false;\n                selectedOptions.map(row1=>{\n                    if(JSON.stringify(row) === JSON.stringify(row1)){\n                        found = true\n                    }\n                });\n                if(!found){\n                   data.push(row)\n                }\n            });\n            setOptions(data);\n            setInitialData(data);\n            setFirstLoad(false)\n        }\n    },[options]);\n\n    function handleInput(event, value){\n        setCurrentVal({\"name\": \"\"});\n        setSelectedOptions(\n            [\n                ...selectedOptions,\n                value\n            ]\n        );\n        setOptions(options.filter(item => item !== value))\n    }\n\n    return(\n        <div>\n            <Box  className={classes.autoCompleteChipContainer}>\n                {selectedOptions.length !== 0 &&\n                <Box component=\"ul\" className={classes.root}>\n                    {\n                        selectedOptions.map(option => {\n                            return id !== undefined ?\n                                <li key={option[id]}>\n                                    <Chip\n                                        variant=\"outlined\"\n                                        label={name!== undefined ? option[name] : option.name}\n                                        onDelete={() => handleDelete(option)}\n                                        className={classes.chip}\n                                    />\n                                </li>\n                                :\n                                <li key={option}>\n                                        <Chip\n                                            variant=\"outlined\"\n                                            label={option}\n                                            onDelete={() => handleDelete(option)}\n                                            className={classes.chip}\n                                        />\n                                </li>\n                                }\n\n                            )\n                    }\n                </Box>\n                }\n\n                <Autocomplete\n                    className={classes.autoComplete}\n                    value={getCurrentVal}\n                    options={options}\n                    onChange={handleInput}\n                    disableClearable\n                    getOptionLabel={(option) =>  id!==undefined ? name!== undefined ? option[name] : option.name : option}\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n                />\n            </Box>\n        </div>\n    )\n}\n\nAutoCompleteChip.propTypes = {\n    setSelectedOptions: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired,\n    setOptions: PropTypes.func.isRequired,\n    selectedOptions: PropTypes.array.isRequired,\n    classes: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(AutoCompleteChip)","import React, {useEffect, useState} from \"react\";\nimport API from \"../Networking/API\";\nimport * as moment from \"moment\";\nimport {func} from \"prop-types\";\nexport const PlacesFilterContext = React.createContext();\nvar buildUrl = require('build-url');\n\n\nconst initialDates = {\n    insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\n    insertionEnd: moment(new Date()).add(1,'day').format(),\n    modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\n    modificationEnd: moment(new Date()).add(1,'day').format()\n};\n\nexport const PlacesFilterProvider = ({children}) => {\n    const [categories, setCategories] = useState([]);\n    const [selectedCategories, setSelectedCategories] = useState([]);\n\n    const [cities, setCities] = useState([]);\n    const [selectedCities, setSelectedCities] = useState([]);\n\n    const [countries, setCountries] = useState([]);\n    const [selectedCountries, setSelectedCountries] = useState([]);\n\n    const [municipalities, setMunicipalities] = useState([]);\n    const [selectedMunicipalities, setSelectedMunicipalities] = useState([]);\n\n    const [counties, setCounties] = useState([]);\n    const [selectedCounties, setSelectedCounties] = useState([]);\n\n    const [initialLoading, setInitialLoading] = useState(true);\n    const [resetFilterOptions, setResetFilterOptions] = useState(false);\n\n    const [filterOptions, setFilterOptions] = useState([\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\n\n    const [dates, setDates] = useState(initialDates);\n\n    const [filterQuery, setFilterQuery] = useState( buildUrl(null, {\n        queryParams: {\n            di: [dates.insertionStart, dates.insertionEnd],\n            dm: [dates.modificationStart, dates.modificationEnd],\n            filterOptions: parseFilterOptions(),\n            categories: parseCategories(),\n            countries: selectedCountries,\n            cities: selectedCities,\n            municipalities: selectedMunicipalities\n        }\n    }));\n\n    const getCategories = (params=\"\") => {\n        API.Categories.getAllCategories().then(response=>{\n            setCategories(response);\n            // console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        });\n    };\n\n    const getAllCities = (restrictions=\"\") =>{\n        API.Places.getAllCities(restrictions).then(res=>{\n            setCities(res)\n        }).catch(err=>{\n        })\n    };\n\n    const getAllCounties = () =>{\n        API.Places.getAllCounties().then(res=>{\n            setCounties(res)\n        }).catch(err=>{\n        })\n    };\n\n    const getAllCountries = () =>{\n        API.Places.getAllCountries().then(res=>{\n            setCountries(res)\n        }).catch(err=>{\n        })\n    };\n\n    const getAllMunicipalities = (restrictions=\"\") =>{\n        API.Places.getAllMunicipalities(restrictions).then(res=>{\n            setMunicipalities(res)\n        }).catch(err=>{\n        })\n    };\n\n\n\n    useEffect(()=>{\n        if(!initialLoading){\n            // console.log(\"Selected countries changed\")\n            getAllMunicipalities(buildUrl(null, {\n                queryParams: {\n                    countryRestrictions: selectedCountries\n                }\n            }));\n            getAllCities(buildUrl(null, {\n                queryParams: {\n                    munRestrictions: selectedMunicipalities,\n                    countryRestrictions: selectedCountries\n                }\n            }))\n        }\n    },[selectedCountries]);\n\n\n    useEffect(()=>{\n        if(!initialLoading){\n            // console.log(\"Selected munis changed\")\n            getAllCities(buildUrl(null, {\n                queryParams: {\n                    munRestrictions: selectedMunicipalities,\n                    countryRestrictions: selectedCountries\n                }\n            }))\n        }\n    }, [selectedMunicipalities]);\n\n    useEffect(()=>{\n        console.log(\"Fetching...\");\n        Promise.all([\n            getCategories(),\n            getAllCities(),\n            getAllCountries(),\n            getAllCounties(),\n            getAllMunicipalities()\n        ]).then(response => {\n            setInitialLoading(false);\n            // console.log(\"All data received!\")\n        }).catch(err => {\n        })\n    },[]);\n\n    useEffect(()=>{\n        if(!initialLoading){\n            if(!resetFilterOptions){\n                setFilterQuery(buildUrl(null, {\n                    queryParams: {\n                        di: [dates.insertionStart, dates.insertionEnd],\n                        dm: [dates.modificationStart, dates.modificationEnd],\n                        o: parseFilterOptions(),\n                        c: parseCategories(),\n                        countries: selectedCountries,\n                        cities: selectedCities,\n                        municipalities: selectedMunicipalities\n                    }\n                }))\n            }else{\n                if(areFiltersCleared()){\n                    setResetFilterOptions(false)\n                }\n            }\n        }\n    },[selectedCategories, selectedCities,selectedCountries,selectedMunicipalities,dates,filterOptions,resetFilterOptions]);\n\n    function areFiltersCleared() {\n        let filterOptionsCleared = true;\n        filterOptions.map(row=>{\n            if(row.filter){\n                filterOptionsCleared = false\n            }\n        });\n        return filterOptionsCleared &&\n            selectedCategories.length === 0 &&\n            selectedCities.length === 0 &&\n            selectedCountries.length ===0 &&\n            dates.insertionStart === initialDates.insertionStart &&\n            dates.modificationStart === initialDates.modificationStart\n    }\n\n    function parseCategories(){\n        let cats = [];\n        selectedCategories.map(row=>{\n            cats.push(row.name)\n        });\n        return cats\n    }\n\n    function parseFilterOptions(){\n        let options = [];\n        filterOptions.map(row=>{\n            if(row.filter === true)\n                options.push(row.filterName)\n        });\n        return options\n    }\n\n    const contextValue = {\n        filterQuery,\n        setResetFilterOptions,\n\n        dates,\n        setDates,\n\n        filterOptions,\n        setFilterOptions,\n\n        categories,\n        setCategories,\n        selectedCategories,\n        setSelectedCategories,\n\n        counties,\n        setCounties,\n        selectedCounties,\n        setSelectedCounties,\n\n        cities,\n        setCities,\n        selectedCities,\n        setSelectedCities,\n\n        countries,\n        setCountries,\n        selectedCountries,\n        setSelectedCountries,\n\n        municipalities,\n        setMunicipalities,\n        selectedMunicipalities,\n        setSelectedMunicipalities\n    };\n\n    return (\n        <PlacesFilterContext.Provider value={contextValue}>\n            {children}\n        </PlacesFilterContext.Provider>\n    );\n};","import React, {useContext, useEffect, useState} from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\nimport AutocompleteChip from \"../AutocompleteChip\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport moment from \"moment\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport MuiPickersUtilsProvider from \"@material-ui/pickers/MuiPickersUtilsProvider\";\nimport Button from \"@material-ui/core/Button\";\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst style = theme =>({\n    filterDiv: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    sortingButtons: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: theme.spacing(1),\n        height: \"100%\"\n\n    },\n    rightLayout: {\n        boxShadow: \"0 0 1px 0 #666\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: theme.spacing(1)\n    },\n    datesLayout:{\n        padding: theme.spacing(1),\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n    },\n    root: {\n        flexGrow: 1,\n        width: \"100%\",\n        marginBottom: \"8px\",\n        boxShadow: \"0 0 1px 0 #666\",\n        padding: theme.spacing(1)\n    },\n    paper: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: theme.spacing(2),\n        textAlign: 'center'\n\n    }\n});\n\n\n\nfunction FilterBlock({classes, setOpen}) {\n    const {\n        categories, setCategories, selectedCategories, setSelectedCategories,\n        cities, setCities, selectedCities, setSelectedCities,\n        countries, setCountries, selectedCountries, setSelectedCountries,\n        municipalities, setMunicipalities, selectedMunicipalities, setSelectedMunicipalities,\n        filterOptions, setFilterOptions, setResetFilterOptions,\n        dates, setDates} = useContext(PlacesFilterContext);\n\n    const filterOptionsChanged = (name) =>{\n        let generalOptions = Object.assign([], filterOptions);\n        generalOptions.map(row=>{\n            if(row.filterName === name){\n                row.filter = !row.filter\n            }\n        });\n        setFilterOptions(generalOptions)\n    };\n\n    function filterDateChange(date, id) {\n        let cDate = Object.assign( {}, dates);\n        cDate[id] = moment(date).format('YYYY-MM-DD');\n        setDates(cDate)\n    }\n\n    function clearFilters() {\n        setResetFilterOptions(true);\n\n        setSelectedCities([]);\n        setSelectedCountries([]);\n        setSelectedCategories([]);\n        setSelectedMunicipalities([]);\n\n        let filters = Object.assign(filterOptions, []);\n        filters.map(row=>{\n            row.filter = false\n        });\n        setFilterOptions(filters);\n\n        setDates({\n            insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\n            insertionEnd: moment(new Date()).add(1,'day').format(),\n            modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\n            modificationEnd: moment(new Date()).add(1,'day').format()\n        })\n    }\n\n    return <Paper className={classes.root}>\n        <Grid container direction=\"row\" spacing={3}>\n            <Grid item xs={12} sm={4}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"h6\">\n                        General options\n                    </Typography>\n                    <div className={classes.sortingButtons}>\n                        {filterOptions.map(row=>{\n                            return <FormControlLabel\n                                control={<Checkbox\n                                    checked={row.filter}\n                                    onChange={()=>filterOptionsChanged(row.filterName)}\n                                    name={row.filterName} />}\n                                label={row.filterLabel}\n                            />\n                        })}\n                    </div>\n                    <Typography variant=\"h6\">\n                        Filter by categories\n                    </Typography>\n                    <AutocompleteChip label=\"Select categories\"\n                                      id=\"categoryId\"\n                                      options={categories}\n                                      setOptions={setCategories}\n                                      selectedOptions={selectedCategories}\n                                      setSelectedOptions={setSelectedCategories}/>\n\n                </Paper>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n                <Paper className={classes.paper}>\n                            <Typography variant=\"h6\">\n                                Filter by dates\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                Insertion dates\n                            </Typography>\n                    <Grid container justify=\"space-around\">\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM-dd-yyyy\"\n                            margin=\"normal\"\n                            id=\"insertionStart\"\n                            onChange={(date)=>filterDateChange(date,\"insertionStart\")}\n                            value={dates.insertionStart}\n                            label=\"Date start\"\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM-dd-yyyy\"\n                            margin=\"normal\"\n                            value={dates.insertionEnd}\n                            onChange={(date)=>filterDateChange(date,\"insertionEnd\")}\n                            id=\"insertionEnd\"\n                            label=\"Date end\"\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Typography variant=\"subtitle1\">\n                        Modification dates\n                    </Typography>\n                    <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM-dd-yyyy\"\n                            margin=\"normal\"\n                            value={dates.modificationStart}\n                            onChange={(date)=>filterDateChange(date,\"modificationStart\")}\n                            id=\"modificationStart\"\n                            label=\"Date start\"\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM-dd-yyyy\"\n                            margin=\"normal\"\n                            value={dates.modificationEnd}\n                            onChange={(date)=>filterDateChange(date,\"modificationEnd\")}\n                            id=\"modificationEnd\"\n                            label=\"Date end\"\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </Grid>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"h6\">\n                        Filter by countries\n                    </Typography>\n                    <AutocompleteChip label=\"Select countries\"\n                                      options={countries}\n                                      setOptions={setCountries}\n                                      selectedOptions={selectedCountries}\n                                      setSelectedOptions={setSelectedCountries}/>\n                            <Typography variant=\"h6\">\n                                Filter by municipalities\n                            </Typography>\n                            <AutocompleteChip label=\"Select municipalities\"\n                                              options={municipalities}\n                                              setOptions={setMunicipalities}\n                                              selectedOptions={selectedMunicipalities}\n                                              setSelectedOptions={setSelectedMunicipalities}/>\n                            <Typography variant=\"h6\">\n                                Filter by cities\n                            </Typography>\n                            <AutocompleteChip label=\"Select cities\"\n                                              options={cities}\n                                              setOptions={setCities}\n                                              selectedOptions={selectedCities}\n                                              setSelectedOptions={setSelectedCities}/>\n                </Paper>\n            </Grid>\n        </Grid>\n        <Button\n            style={{marginTop: 8}}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => clearFilters()}>\n            Clear filters\n        </Button>\n    </Paper>\n}\n\nexport default withStyles(style)(FilterBlock)","import React, {useEffect, useState} from 'react';\n\nexport const AppStateStorageContext = React.createContext();\n\nexport default function AppStateStorageProvider({ children }) {\n\n    const [placesPageConfig, setPlacesPageConfig] = useState({keyword: '', page: 1})\n\n    function savePlacesTableInfo(keyword, page){\n        const config = { ...placesPageConfig }\n        config.keyword = keyword;\n        config.page = page;\n        console.log(\"Saving\", {keyword, page})\n        setPlacesPageConfig(config)\n    }\n\n\n    return (\n        <AppStateStorageContext.Provider value={{\n            savePlacesTableInfo,\n            placesPageConfig\n\n        }}>\n            {children}\n        </AppStateStorageContext.Provider>\n    );\n}","import React, {useContext, useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TableComponent from \"../components/TableComponent\";\nimport API from \"../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Box from \"@material-ui/core/Box\";\nimport history from \"../helpers/history\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport FilterBlock from \"../components/add_place_components/FilterBlock\";\nimport {PlacesFilterContext} from \"../contexts/PlacesFilterContext\";\nimport {AppStateStorageContext} from \"../contexts/AppStateStorageContext\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    input: {\n        display: \"none\"\n    },\n    root: {\n        height: \"100vh\",\n        width: \"100%\",\n        overflow: \"auto\"\n    },\n    buttonsDiv: {\n        backgroundColor: \"red\",\n        justifyContent: \"flex-end\"\n    },\n    content: {\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    },\n    autocomplete: {\n        width: '200px',\n        height: '40px',\n        fontSize: \"14px\",\n        border: \"0\",\n        borderBottom: \"2px solid grey\",\n        outline: \"0\",\n        marginBottom: \"4px\"\n    }\n});\n\n\nconst headCells = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\n    {id: 'address', numeric: false, disablePadding: false, label: 'Address', isId: false},\n    {id: 'city', numeric: false, disablePadding: false, label: 'City', isId: false},\n    {id: 'country', numeric: false, disablePadding: false, label: 'Country', isId: false},\n    {id: 'dateModified', numeric: false, disablePadding: false, label: 'Date modified', isId: false},\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\n];\n\nfunction Places(props) {\n\n    const [data, setData] = useState([]);\n    const [pageData, setPageData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const {classes} = props;\n\n\n    const {filterQuery} = useContext(PlacesFilterContext);\n    const {addAlertConfig} = UseAlertDialogContext();\n    const {addConfig} = UseSnackbarContext();\n\n    const {placesPageConfig, savePlacesTableInfo} = useContext(AppStateStorageContext)\n\n    useEffect(() => {\n        setIsLoading(true);\n        requestAllPlaces();\n    }, [filterQuery]);\n\n\n    function getPlaceNameById(id) {\n        for (var i = 0; i < data.length; i++) {\n            if (data[i].placeId === id)\n                return data[i].name\n        }\n    }\n\n    function requestAllPlaces(p = placesPageConfig.page, keyword = placesPageConfig.keyword) {\n        console.log(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\n        getAllPlaces(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\n    }\n\n    function parseData(data) {\n        setIsLoading(false);\n        let placesData = [];\n        data.list.map(row => {\n            placesData.push(row)\n        });\n\n        delete data.list;\n        setData(placesData);\n        console.log(placesData);\n        setPageData(data);\n    }\n\n    function updatePlaceCallback(id) {\n        history.push(\"/app/addplace/\" + id)\n    }\n\n    function removePlaceCallback(id) {\n        setIsLoading(true);\n        addAlertConfig(Strings.DIALOG_PLACE_DELETE_TITLE + \" - \" + getPlaceNameById(id), Strings.DIALOG_PLACE_DELETE_MESSAGE, [{\n            name: \"Remove\",\n            action: () => {\n                API.Places.removePlace(\"?p=\" + id).then(response => {\n                    let tmp = [];\n                    data.map(row => {\n                        if (row.placeId !== id) {\n                            tmp.push(row)\n                        }\n                    });\n                    setData(tmp);\n                    addConfig(true, Strings.SNACKBAR_PLACE_REMOVE_SUCCESS)\n                    setIsLoading(false)\n                }).catch(error => {\n                    setIsLoading(false);\n                    addConfig(false, Strings.SNACKBAR_ERROR)\n                })\n            }\n        }], () => {\n            setIsLoading(false)\n        })\n    }\n\n    const changePageCallback = (p = 0, keyword = \"\") => {\n        if(!isLoading){\n            setIsLoading(true);\n            savePlacesTableInfo(keyword, p)\n            requestAllPlaces(p, keyword)\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content}>\n                <FilterBlock setOpen={true}/>\n\n                <TableComponent\n                    title={\"Places\"}\n                    headCells={headCells}\n                    data={data}\n                    pagingInfo={pageData}\n                    checkable={false}\n                    changePageCallback={changePageCallback}\n                    updateCallback={updatePlaceCallback}\n                    removeCallback={removePlaceCallback}\n                    initialKeyword={placesPageConfig.keyword}\n                    id={\"placeId\"}\n                    isLoading={isLoading}\n                />\n\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <Button\n                        onClick={() => {\n                            history.push(\"/app/addplace\")\n                        }}\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        startIcon={<AddIcon/>}>\n                        Add\n                    </Button>\n                </Box>\n            </div>\n            <Button>\n                Clear filters\n            </Button>\n        </div>\n    );\n\n    function getAllPlaces(urlParams = \"\") {\n        API.Places.getAllPlacesAdmin(urlParams).then(response => {\n            setIsLoading(false);\n            parseData(response)\n        }).catch(error => {\n            setIsLoading(false);\n            console.log(error)\n        })\n    }\n}\n\nPlaces.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Places);","export const priceRange = [\n    {\n        value: 0,\n        label: \"FREE\",\n    },\n    {\n        value: 25,\n        label: \"$\",\n    },\n    {\n        value: 50,\n        label: \"$$\",\n    },\n    {\n        value: 75,\n        label: \"$$$\",\n    },\n    {\n        value: 100,\n        label: \"$$$$\",\n    },\n    {\n        value: 125,\n        label: \"$$$$$\",\n    }\n];\n","export const averageTimeSpent = [\n    {\n        value: 5,\n        label: 5,\n    },\n    {\n        value: 10,\n        label: 10,\n    },\n    {\n        value: 15,\n        label: 15,\n    },\n    {\n        value: 30,\n        label: 30,\n    },\n    {\n        value: 45,\n        label: 45,\n    },\n    {\n        value: 60,\n        label: 60,\n    },\n    {\n        value: 90,\n        label: 90,\n    },\n    {\n        value: 120,\n        label: 120,\n    },\n    {\n        value: 150,\n        label: 150,\n    },\n    {\n        value: 180,\n        label: 180,\n    },\n    {\n        value: 210,\n        label: 210,\n    },\n    {\n        value: 240,\n        label: 240,\n    },\n    {\n        value: 270,\n        label: 270,\n    },\n];","import {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    }\n});\n\nfunction AddSourceDialog(props){\n\n    function validateInput(){\n        let error = false;\n        if(text.length <= 3 || url.length <=3)\n            error = true;\n        setError(error);\n        return error\n    }\n\n    let {classes, open, action, setDialogOpen} = props;\n    const [text, setText] = useState(\"\");\n    const [url, setUrl] = useState(\"\");\n    const [error, setError] = useState(false);\n    return(\n        <div>\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\">\n                    Insert source\n                </DialogTitle>\n                <DialogContent dividers>\n                        <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}\n                                   label=\"Source name\" variant=\"outlined\" fullWidth />\n                        <TextField style={{marginTop:\"16px\"}} error={error} onChange = {(ev) => {setUrl(ev.target.value)}}\n                                   label=\"Source url\" variant=\"outlined\" fullWidth />\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={()=>setDialogOpen(false)} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button autoFocus color=\"primary\" onClick={() => {\n                        !validateInput() && action(text, url);\n                        setDialogOpen(false)\n                    }}>\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\nexport default withStyles(styles)(AddSourceDialog)","import React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {withStyles} from \"@material-ui/core\";\nimport Slider from \"@material-ui/core/Slider\";\nimport {priceRange} from \"../../helpers/priceRange\";\nimport {averageTimeSpent} from \"../../helpers/averageTimeSpent\"\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport AutoCompleteChip from \"../AutocompleteChip\";\nimport API from \"../../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddSourceDialog from \"../AddSourceDialog\";\n\n\nconst styles = theme => ({});\nlet previousPrice = \"\";\n\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo, selectedSources, setSelectedSources}) {\n\n    const updatePlaceInfo = (event, newValue) => {\n        const {name, value, id} = event.target;\n        let place = Object.assign({}, placeInfo, {});\n        if (id !== \"\") {\n            place[id] = valuetext(newValue[0]);\n        } else {\n            place[name] = value\n        }\n        setPlaceInfo(place)\n    };\n\n    const getSources = () =>{\n        API.Source.getSources().then(response=>{\n            setAvailableSources(response)\n        }).catch(error=>{\n\n        })\n    };\n\n    const handleAddSource = (name, url) =>{\n        API.Source.addSource({name: name, url: url}).then(response=>{\n            setAvailableSources(\n                [\n                    ...availableSources,\n                    response\n                ]\n            );\n            setSelectedSources([\n                ...selectedSources,\n                response\n            ]);\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n\n    useEffect(()=>{\n        getSources()\n    },[]);\n\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [availableSources, setAvailableSources] = useState([]);\n\n    function valuetext(value) {\n        let val = \"\";\n        priceRange.map(row => {\n            if (row.value === value)\n                val = row.label\n        });\n        return val\n    }\n\n    return <div>\n        <Typography variant=\"h6\">\n            Basic place information\n        </Typography>\n        <br/>\n        <TextField\n            required\n            label=\"Place name\"\n            style={{margin: 8}}\n            placeholder=\"Enter the place name\"\n            fullWidth\n            value={placeInfo['name']}\n            name=\"name\"\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Place description\"\n            style={{margin: 8}}\n            placeholder=\"Describe the place thoroughly\"\n            fullWidth\n            multiline\n            name=\"description\"\n            value={placeInfo['description']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            rows={15}\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Phone number\"\n            style={{margin: 8}}\n            placeholder=\"Enter phone number\"\n            fullWidth\n            name=\"phoneNumber\"\n            value={placeInfo['phoneNumber']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Website\"\n            style={{margin: 8}}\n            placeholder=\"Enter website\"\n            fullWidth\n            name=\"website\"\n            value={placeInfo['website']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n\n        <br/>\n        <br/>\n       <AutoCompleteChip\n                id=\"source\"\n                label=\"Select sources\"\n                options={availableSources}\n                setOptions={setAvailableSources}\n                setSelectedOptions={setSelectedSources}\n                selectedOptions={selectedSources}\n       />\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => setDialogOpen(true)}\n            startIcon={<AddIcon />}>\n            Add missing source\n        </Button>\n        <AddSourceDialog\n            action={handleAddSource}\n            open={dialogOpen}\n            setDialogOpen={setDialogOpen}\n        />\n\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <div style={{display: \"flex\"}}>\n            <Typography>\n                Price\n            </Typography>\n            <Slider\n                id=\"price\"\n                onChange={updatePlaceInfo}\n                value={priceRange.map(row => {\n                    if (row.label === placeInfo['price']) return row.value\n                })}\n                style={{width: \"60%\", marginLeft: \"48px\"}}\n                defaultValue={0}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider-always\"\n                step={25}\n                max={125}\n                marks={priceRange}\n            />\n        </div>\n        <br/>\n        <br/>\n        <div style={{display: \"flex\"}}>\n            <Typography>\n                Average time spent\n            </Typography>\n            <FormControl variant=\"outlined\" style={{width: \"60%\", marginLeft: \"48px\"}}>\n                <InputLabel>Minutes</InputLabel>\n                <Select\n                    native\n                    value={parseInt(placeInfo['averageTimeSpent'], 10)}\n                    onChange={updatePlaceInfo}\n                    label=\"Average Time spent\"\n                    inputProps={{\n                        name: 'averageTimeSpent'\n                    }}\n                >\n                    <option value=\"-1\">None</option>\n                    {\n                        averageTimeSpent.map(row=>{\n                            return <option value={parseInt(row.value, 10)}> {row.value}</option>\n                        })\n                    }\n                </Select>\n            </FormControl>\n        </div>\n    </div>\n}\n\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport React, {useMemo, useState} from \"react\"\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Gallery from \"react-photo-gallery\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Delete from \"@material-ui/icons/Delete\"\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst imgWithClick = {cursor: \"pointer\"};\n\nconst Photo = ({index, onItemDelete, photo, margin, direction, top, left}) => {\n\n    const styles = {\n        imgContainer: {\n            margin: margin,\n            display: 'inline',\n            position: 'relative',\n            width: '300px',\n            height: '300px',\n        }\n    }\n    if (direction === \"column\") {\n        styles.imgContainer.position = \"absolute\";\n        styles.imgContainer.imgStyle.left = left;\n        styles.imgContainer.imgStyle.top = top;\n    }\n\n    const handleDelete = event => {\n        onItemDelete(photo);\n    }\n\n    return (\n\n        <Card style={styles.imgContainer}>\n            <CardMedia\n                style={{height: 0, paddingTop: '80%'}}\n                image={photo.src}\n            />\n            <CardActions disableSpacing>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon/>}\n                    onClick={(event) => {\n                        handleDelete(event)\n                    }}\n                >\n                    Delete\n                </Button>\n            </CardActions>\n\n        </Card>\n    )\n\n};\n\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\nconst SortableGallery = SortableContainer(({items, onItemDelete}) => (\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>}/>\n));\n\nfunction ReorderablePhotos(props) {\n    let {setPhotos, photos, srcName, keyName} = props\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\n    };\n\n    function handleItemDelete(photo) {\n        setPhotos(photos.filter(item => {\n            return item[keyName].toString() !== photo.key\n        }))\n    }\n\n    let modifiedData = photos.map(item => {\n        return (\n            {\n                key: item[keyName].toString(),\n                src: item[srcName],\n                width: 1,\n                height: 1\n            })\n\n    })\n    return (\n        <div>\n            <SortableGallery pressDelay={200}\n                             disableAutoscroll={false} items={modifiedData} onSortEnd={onSortEnd}\n                             axis={\"xy\"} onItemDelete={handleItemDelete}/>\n        </div>\n    );\n\n}\n\n\nexport default ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useEffect, useState} from \"react\";\nimport {DropzoneArea} from \"material-ui-dropzone\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport PropTypes from \"prop-types\";\nimport API from \"../Networking/API\";\n\nconst styles = theme => ({\n    dropzoneArea: {\n        overflow: \"hidden\"\n    }\n});\n\nconst acceptedFileFormats = ['image/jpeg', 'image/png', 'image/bmp', 'image/jpg']\n\nfunction AddImageDialog(props) {\n\n    const {onCloseCallback, open, onFinishCallback, classes} = props\n    const [loading, setIsLoading] = useState(false)\n    const [selectedFiles, setSelectedFiles] = useState([])\n\n    const submitCallback = () => {\n        setIsLoading(true)\n\n        Promise.all(selectedFiles.map(imagefile => {\n            let formData = new FormData()\n            formData.append(\"image\", imagefile)\n            console.log('image', imagefile)\n            return API.Photos.uploadPhoto(formData)\n        })).then(response => {\n            console.log(response)\n            onFinishCallback(response)\n        }).catch(error => {\n            onFinishCallback()\n        }).finally(() => {\n            setIsLoading(false)\n        })\n    }\n\n    const handleDrop = (files )=> {\n        setSelectedFiles(existingFiles => [...existingFiles, ...files])\n    }\n\n    useEffect(() => {\n        console.log(selectedFiles)\n\n    }, [selectedFiles])\n\n    const handleDelete = (file) => {\n        console.log(file.name)\n        setSelectedFiles(files => {return files.filter(existingFile => existingFile !== file)})\n    }\n\n    return (\n        <div>\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\">\n                    Photo upload\n                </DialogTitle>\n                {loading && <LinearProgress variant=\"query\"/>}\n                <DialogContent dividers>\n                    <DropzoneArea\n                        className={classes.dropzoneArea}\n                        acceptedFiles={acceptedFileFormats}\n                        maxFileSize={25000000}\n                        showAlerts={false}\n                        dropzoneProps={{disabled: loading}} filesLimit={5} onDrop={handleDrop}\n                    onDelete={handleDelete}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCallback} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={submitCallback} color=\"primary\">\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nAddImageDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onFinishCallback: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(AddImageDialog)\n","import React, {useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ReorderablePhotos from \"../ReorderablePhotos\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddImageDialog from \"../AddImageDialog\";\nimport {Card} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n});\n\nfunction PhotosInfo({classes, setPhotos, photos}) {\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\n\n    function handleAddPhoto(files) {\n        setAddImageDialogOpen(false);\n        if(files == null)\n            return;\n\n        setPhotos([\n            ...photos,\n            ...files]\n        )\n    }\n\n    return(\n        <div>\n            <Typography variant=\"h6\" >\n                Photos\n            </Typography>\n            <Card variant={\"outlined\"} className={classes.outline}>\n\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\n\n                <Button\n                    variant=\"text\"\n                    color=\"primary\"\n                    size=\"small\"\n                    style={{width: '15%'}}\n                    className={classes.button}\n                    onClick={() => setAddImageDialogOpen(true)}\n                    startIcon={<AddIcon />}>\n                    Add photo\n                </Button>\n\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(files) => handleAddPhoto(files)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\n\n\n            </Card>\n        </div>\n\n    )\n}\n\nexport default withStyles(styles)(PhotosInfo)\n\n\n","import React from \"react\";\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\n\n/**\n * Get country from google maps address array\n * @param addressArray\n * @returns {*|string}\n */\nexport const getCountry = (addressArray) =>{\n    if(addressArray!==undefined){\n        let country = '';\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\n                country = addressArray[ i ].long_name;\n                return country;\n            }\n        }\n    }\n};\n\n/**\n * Get country from google maps address array\n * @param addressArray\n * @returns {*|string}\n */\nexport const getCity = ( addressArray ) => {\n    if(addressArray !== undefined){\n        let city = '';\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'locality' === addressArray[ i ].types[0] ) {\n                city = addressArray[ i ].long_name;\n                return city;\n            }\n        }\n        return city;\n    }\n};\n\n/**\n * Get district from google maps address array\n * @param addressArray\n * @returns {*|string}\n */\nexport const getCounty = ( addressArray ) => {\n        if(addressArray !== undefined){\n            let county = '';\n            for( let i = 0; i < addressArray.length; i++ ) {\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\n                    county = addressArray[ i ].long_name;\n                    return county;\n                }\n            }\n            return county\n        }\n    };\n/**\n * Get district from google maps address array\n * @param addressArray\n * @returns {*|string}\n */\nexport const getMunicipality = ( addressArray ) => {\n    if(addressArray !== undefined){\n        let municipality = '';\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\n                municipality = addressArray[ i ].long_name;\n                return municipality;\n            }\n        }\n        return municipality;\n    }\n};\n\n/**\n * Geocode location from address\n * @param address\n * @type string\n * @return location object\n */\nexport function geocodeFromAddress(address){\n    return Geocode.fromAddress( address ).then(\n        response => {\n            const { lat, lng } = response.results[0].geometry.location;\n            if(lat !== undefined && lng !== undefined){\n                return geocodeFromLatLng(lat, lng).then(loc=>{\n                    return loc\n                })\n            }else{\n                return null\n            }\n        },\n        err=>{\n            return null\n        }\n    )\n}\n\n/**\n * Geocode location from latitude and longitude\n * @param newLat\n * @param newLng\n * @return location object\n */\n\n\nexport function geocodeFromLatLng(newLat, newLng){\n    return Geocode.fromLatLng( newLat , newLng ).then(\n        response => {\n            const address = response.results[0].formatted_address\n            const addressArray =  response.results[0].address_components\n            if(addressArray!==undefined){\n                const city = getCity( addressArray ),\n                    country = getCountry( addressArray ),\n                    county = getCounty(addressArray),\n                    municipality = getMunicipality(addressArray);\n                let loc = {address: address, city: city, country: country, latitude: newLat, longitude: newLng, county: county, municipality: municipality};\n                return loc;\n            }\n            return null\n        },\n        error => {\n            return null\n        }\n    );\n}","import React, {useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\nimport PropTypes from \"prop-types\";\nimport {geocodeFromAddress, geocodeFromLatLng} from \"./MapGeolocation\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\n\nconst styles = theme => ({\n    content: {\n        margin: theme.spacing(1)\n    },\n    autocomplete:{\n        width: '200px',\n        height: '40px',\n        fontSize: \"14px\",\n        border: \"0\",\n        borderBottom: \"2px solid grey\",\n        outline:\"0\",\n        marginBottom: \"4px\"\n    },\n    root: {\n        display:\"flex\",\n        flexDirection: \"column\",\n        marginTop: \"8px\",\n        padding: theme.spacing(1)\n    }\n});\n\nfunction MapToolbar({classes, isLocked, locationCallback}) {\n\n    const [loading, setIsLoading] = useState(false);\n    const { addAlertConfig } = UseAlertDialogContext();\n    /**\n     * Handle manual address and coordinates filling with key presses and return location\n     * @param event\n     * @return {boolean}\n     */\n\n    function errorParsingLocation(){\n        addAlertConfig(\"Error parsing location!\", \"Make sure that address you provided is correct!\",[])\n    }\n\n    function handleKeyPress(event){\n        const value = event.target.value;\n        if (event.which === 13 || event.keyCode === 13) {\n            setIsLoading(true);\n            if (/[a-zA-Z]+/.test(value)){\n                geocodeFromAddress(value).then(location=>{\n                    location!==null ? locationCallback(location) : errorParsingLocation();\n                    setIsLoading(false)\n                })\n            }else{\n                let position = value.split(/[ ,]+/);\n                if(position.length === 2){\n                    geocodeFromLatLng(parseFloat(position[0]), parseFloat(position[1])).then(location=>{\n                        location!==null ? locationCallback(location) : errorParsingLocation();\n                        setIsLoading(false)\n                    })\n                }\n            }\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Handle place selection from google maps autocomplete\n     * @param place\n     * @return {{country: (*|string), address: *, city: (*|string), latitude: *, longitude: *}|null}\n     */\n    const onPlaceSelected = (place) => {\n        setIsLoading(true);\n        const addressArray = place.address_components;\n        if (addressArray !== undefined) {\n            const lat = place.geometry.location.lat(),\n                lng = place.geometry.location.lng();\n            geocodeFromLatLng(lat, lng).then(location => {\n                location !== null ? locationCallback(location) : errorParsingLocation();\n                setIsLoading(false)\n            });\n        }\n        return null\n    };\n\n    /**\n     * Get current location\n     */\n    function getCurrentPosition(){\n        setIsLoading(true)\n        navigator.geolocation.getCurrentPosition(function(position) {\n            let newLat = position.coords.latitude,\n                newLng = position.coords.longitude;\n            geocodeFromLatLng(newLat, newLng).then(location=>{\n                location!==null ? locationCallback(location) : errorParsingLocation();\n\n                setIsLoading(false)\n            });\n        }, error=>{\n            setIsLoading(false)\n            alert(error.message + \"\\n\" + JSON.stringify(error))\n        });\n    }\n\n    return <div className={classes.root}>\n        <div className={classes.content}>\n            <Autocomplete\n                onKeyPress={(event)=>{if(!isLocked)handleKeyPress(event)}}\n                onPlaceSelected={(place)=>{if(!isLocked)onPlaceSelected(place)} }\n                className={classes.autocomplete}\n                types={['(regions)']}\n            />\n            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\">\n                <MyLocationIcon\n                    onClick={()=>{if(!isLocked)getCurrentPosition()}}\n                    fontSize=\"large\"\n                    color=\"primary\"\n                />\n            </IconButton>\n        </div>\n        {loading ? <LinearProgress /> : null}\n\n    </div>\n\n\n}\n\nMapToolbar.propTypes = {\n    isLocked: PropTypes.bool.isRequired,\n    locationCallback: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(MapToolbar)","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n\nconst styles = theme =>({\n    root: {\n        display:\"flex\",\n        flexDirection: \"column\",\n        marginTop: \"8px\",\n        padding: theme.spacing(1)\n    }\n});\n\nfunction MapLock({classes, isLocked, setIsLocked}) {\n    return <div className={classes.root}>\n        <FormControlLabel\n            control={<Switch />}\n            label=\"Lock\"\n            checked={isLocked}\n            onChange={()=>{\n               setIsLocked(old=>!old)\n            }}\n        />\n        {isLocked ?\n            <Alert  severity=\"error\">Map is currently locked. If you want to do any changes unlock it.</Alert> : null}\n    </div>\n}\n\nexport default withStyles(styles)(MapLock)","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { MAP } from 'react-google-maps/lib/constants';\nimport PropTypes from 'prop-types';\n\nexport default function CustomControlsManager(\n    { position = window.google.maps.ControlPosition.TOP_LEFT, children },\n    context\n) {\n    const map = context[MAP];\n\n    const controlDiv = document.createElement('div');\n\n    useEffect(() => {\n        const controls = map.controls[position];\n        const index = controls.length;\n        controls.push(controlDiv);\n        return () => {\n            controls.removeAt(index);\n        };\n    });\n\n    return createPortal(\n        <div style={{ marginBottom: 8, marginTop: 8 }}>{children}</div>,\n        controlDiv\n    );\n}\n\nCustomControlsManager.contextTypes = {\n    [MAP]: PropTypes.object,\n};","import React, {useEffect, useRef, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow} from \"react-google-maps\"\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\nimport MapToolbar from \"./MapToolbar\";\nimport PropTypes from \"prop-types\";\nimport MapLock from \"./MapLock\";\nimport CustomControlsManager from \"./CustomControlsManager\";\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API from \"../../Networking/API\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from \"@material-ui/core/Card\";\nvar buildUrl = require('build-url');\nconst styles = theme => ({ largeIcon: {\n        width: theme.spacing(14),\n        height: theme.spacing(14),\n    }});\n\nconst MapComponent = withGoogleMap(props =>\n    <GoogleMap\n        defaultZoom={15}\n        ref={props.refInstance}\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\n\n        {props.children}\n\n    </GoogleMap>\n\n);\n\n\n\nfunction PlaceMap({classes, placeInfo,locationMarker,setLocationMarker,setParkingLocationMarker}) {\n\n    const [otherPlacesData, setOtherPlacesData] = useState([]);\n    const [infoWindows, setInfoWindows] = useState([]);\n\n    const [isLocked, setIsLocked] = useState(placeInfo.placeId !== \"\");\n    const refMap = useRef(null);\n\n    function mapToolbarCallback(location) {\n        setParkingLocationMarker(location);\n        setLocationMarker(location)\n    }\n\n    useEffect(()=>{\n        getClosestPlaces()\n    },[locationMarker]);\n\n    function getClosestPlaces(){\n        API.Places.getAllPlacesAdmin(buildUrl(null, {\n            queryParams: {\n                p: \"0\",\n                s: \"10\",\n                range: 3,\n                l: [locationMarker.latitude, locationMarker.longitude]\n            }\n        })).then(response=>{\n            setOtherPlacesData(response.list);\n        }).catch(error=>{\n\n        })\n    }\n\n    function onMarkerDragEnd(event) {\n        let newLat = event.latLng.lat(),\n            newLng = event.latLng.lng();\n        geocodeFromLatLng(newLat, newLng).then(location => {\n            setLocationMarker(location);\n            setParkingLocationMarker(location)\n        })\n    }\n    \n    return <React.Fragment>\n        <MapToolbar\n            isLocked={isLocked}\n            locationCallback={mapToolbarCallback}/>\n\n        <MapComponent\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `400px` }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n            refInstance={refMap}\n            position={locationMarker}\n        >\n            {\n                otherPlacesData.map((location, i) =>{\n                    const latitude = parseFloat(location.latitude);\n                    const longitude = parseFloat(location.longitude);\n                        return placeInfo.placeId === \"\" ? <Marker\n                            key={location.placeId}\n                            zIndex={1}\n                            position={{lat: latitude, lng: longitude}}\n                            icon={{\n                                url: require('../../res/selectedTourIcon.svg'),\n                                scaledSize: new window.google.maps.Size(48, 48),\n                                origin: new window.google.maps.Point(0, 0)\n                            }}\n                            onClick={() => {\n                                if (!isLocked) {\n                                    let markers = Object.assign([], infoWindows);\n                                    markers[i] = true;\n                                    setInfoWindows(markers)\n                                }\n                            }}\n                        >\n                            {infoWindows[i] && (\n                                <InfoWindow onCloseClick={() => {\n                                    let markers = Object.assign([], infoWindows);\n                                    markers[i] = false;\n                                    setInfoWindows(markers)\n                                }\n                                }>\n\n                                    <Card style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n                                        {location.photos.length > 0 ? <Avatar alt=\"Remy Sharp\" src={location.photos[0].url}\n                                                                          className={classes.largeIcon}/> : null}\n                                        <Typography variant=\"h6\">\n                                            {location.name}\n                                        </Typography>\n\n                                    </Card>\n                                </InfoWindow>\n                            )}\n                        </Marker> : null\n\n                })\n            }\n\n            <Marker\n                name={'Dolores park'}\n                visible={true}\n                draggable={!isLocked}\n                zIndex={2}\n                onDragEnd={e => onMarkerDragEnd(e)}\n                position={{lat: locationMarker.latitude, lng: locationMarker.longitude}}>\n            </Marker>\n\n            <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\n                <div>\n                    <IconButton aria-label=\"delete\" onClick={()=>{\n                        if(!isLocked){\n                            const mapCenter = refMap.current.getCenter();\n                            geocodeFromLatLng(mapCenter.lat(), mapCenter.lng()).then(location=>{\n                                setLocationMarker(location)\n                                setParkingLocationMarker(location)\n                            });\n                        }\n                    }}>\n                        <ExploreIcon fontSize={\"large\"}/>\n                    </IconButton>\n                </div>\n            </CustomControlsManager>\n        </MapComponent>\n\n\n\n        <MapLock\n            isLocked={isLocked}\n            setIsLocked={setIsLocked}\n        />\n    </React.Fragment>\n\n\n}\n\nPlaceMap.propTypes = {\n    locationMarker: PropTypes.object.isRequired,\n    setLocationMarker: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(PlaceMap)","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlaceMap from \"../maps/PlaceMap\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n});\n\nfunction PlaceLocation({locationData, setLocationData, setParkingLocation, placeInfo}) {\n\n    function changeLocationData(event){\n        const {name, value} = event.target;\n        let data = Object.assign({}, locationData, {});\n        data[name] = value;\n\n        setParkingLocation(data);\n        setLocationData(data)\n    }\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Place location\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select place location from map\n        </Typography>\n        <br/>\n        <PlaceMap\n            placeInfo={placeInfo}\n            locationMarker={locationData}\n            setParkingLocationMarker={setParkingLocation}\n            setLocationMarker={setLocationData}\n        />\n        <br/>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Place location\n        </Typography>\n        <br/>\n        <TextField\n            required\n            label=\"Address\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter place address\"\n            fullWidth\n            disabled\n            value={locationData['address']}\n            name='address'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"City\"\n            disabled\n            style={{ margin: 8 }}\n            placeholder=\"Enter place city\"\n            fullWidth\n            value={locationData['city']}\n            name='city'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"County\"\n            disabled\n            style={{ margin: 8 }}\n            placeholder=\"Enter place county\"\n            fullWidth\n            value={locationData['county']}\n            name='county'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"Municipality\"\n            disabled\n            style={{ margin: 8 }}\n            placeholder=\"Enter place municipality\"\n            fullWidth\n            value={locationData['municipality']}\n            name='municipality'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"Country\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter place country\"\n            fullWidth\n            disabled\n            value={locationData['country']}\n            name='country'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            rows={4}\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n    </div>\n}\n\nexport default withStyles(styles)(PlaceLocation)","import React, {useEffect, useRef, useState} from \"react\";\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from \"react-google-maps\";\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\nimport MapToolbar from \"./MapToolbar\";\nimport API from \"../../Networking/API\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CustomControlsManager from \"./CustomControlsManager\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExploreIcon from \"@material-ui/icons/Explore\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Typography from \"@material-ui/core/Typography\";\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\n\n\nconst MapComponent = withGoogleMap(props =>\n    <GoogleMap\n        ref={props.refInstance}\n        defaultZoom={12}\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\n\n        <Marker\n            onClick={()=>{if(!props.isLocked)props.setMainInfoWindow(true)}}\n            name={'Dolores park'}\n            visible={true}\n            draggable={!props.isLocked}\n            onDragEnd={e => onMarkerDragEnd(e, props.setPosition)}\n            position={{lat: props.position.latitude, lng: props.position.longitude}}>\n\n            {props.mainInfoWindow && (\n                <InfoWindow onCloseClick={()=>{props.setMainInfoWindow(false)}}>\n                    <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                        {props.position.address}\n                        <Button\n                            onClick={()=>{\n                                let c = nearestParkingCount(props.position, props.parkingData);\n                                if(c>0){\n                                    props.addAlertConfig(\"Parkings nearby already exist!\", c+\" parking(-s) within 150 meter already exist(-s).\" +\n                                        \" Are you sure you don't want to use already existings parking locations?\",[{name:\"ADD NEW PARKING!\", action: ()=>{\n                                            props.addNewParking(props.position)\n                                        }}])\n                                }else{\n                                    props.addNewParking(props.position)\n                                }\n                            }}\n                            variant=\"text\"\n                            color=\"secondary\"\n                            size=\"large\"\n                            startIcon={<AddIcon />}>\n                            Add new parking\n                        </Button>\n                    </div>\n                </InfoWindow>\n            )}\n        </Marker>\n\n        <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\n            <div>\n                <IconButton aria-label=\"delete\" onClick={()=>{\n                    if(!props.isLocked){\n                        let loc = Object.assign({},props.position, {});\n                        const mapCenter = props.refInstance.current.getCenter();\n                        loc.latitude = mapCenter.lat();\n                        loc.longitude = mapCenter.lng();\n                        props.setPosition(loc)\n                    }\n                }}>\n                    <ExploreIcon fontSize={\"large\"}/>\n                </IconButton>\n            </div>\n        </CustomControlsManager>\n\n        {\n            props.parkingData.map((location, i) =>{\n                const latitude = parseFloat(location.latitude);\n                const longitude = parseFloat(location.longitude);\n                console.log(parkingIsAttached(location, props.selectedParkingData));\n                return <Marker\n                    key={location.parkingId}\n                    position={{ lat: latitude, lng: longitude}}\n                    icon={{\n                        url: parkingIsAttached(location, props.selectedParkingData) ? require('../../res/selectedParking.svg') :\n                            require('../../res/availableParking.svg'),\n                        scaledSize: new window.google.maps.Size(20, 48),\n                        origin: new window.google.maps.Point(0, 0),\n                        anchor: new window.google.maps.Point(10, 35)\n                    }}\n                    onClick={()=>{\n                        if(!props.isLocked){\n                            let markers = Object.assign({},props.parkingInfoWindows, {});\n                            markers[i] = true;\n                            props.setParkingInfoWindows(markers)\n                        }\n                    }}\n                >\n                    {props.parkingInfoWindows[i] && (\n                        <InfoWindow onCloseClick={()=>{\n                                let markers = Object.assign({},props.parkingInfoWindows, {});\n                                markers[i] = false;\n                                props.setParkingInfoWindows(markers)\n                            }\n                        }>\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                                <Typography variant=\"h6\">\n                                    {location.address}\n                                </Typography>\n                                {parkingIsAttached(location, props.selectedParkingData) ? <div>\n                                        <Alert severity=\"success\">This parking location is already attached! See below in \"Selected parking locations\" section.</Alert>\n                                </div> :\n                                <Button\n                                    onClick={()=>{props.addExistingParking(location)}}\n                                    variant=\"text\"\n                                    color=\"secondary\"\n                                    size=\"large\"\n                                    startIcon={<AddIcon />}>\n                                    Add parking\n                                </Button>\n                                }\n                            </div>\n                        </InfoWindow>\n                    )}\n\n                </Marker>\n\n            })\n        }\n\n    </GoogleMap>\n);\n\nfunction parkingIsAttached(parking, selectedParkingData) {\n    for(let i = 0; i<selectedParkingData.length; i++){\n        if(selectedParkingData[i].address === parking.address)\n            return true\n    }\n    return false\n}\n\nfunction calcCrow(lat1, lon1, lat2, lon2)\n{\n    var R = 6371; // km\n    var dLat = toRad(lat2-lat1);\n    var dLon = toRad(lon2-lon1);\n    var lat1 = toRad(lat1);\n    var lat2 = toRad(lat2);\n\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    var d = R * c;\n    return d;\n}\nfunction toRad(Value) {return Value * Math.PI / 180}\n\nfunction nearestParkingCount(parking, parkingData){\n    let count = 0;\n    for(let i = 0; i<parkingData.length; i++){\n        let distance = calcCrow(parking.latitude, parking.longitude, parkingData[i].latitude, parkingData[i].longitude);\n        if(distance<=0.15){\n            count++;\n        }\n    }\n    return count\n}\n\n\nfunction onMarkerDragEnd(event, setLocationMarker) {\n    let newLat = event.latLng.lat(),\n        newLng = event.latLng.lng();\n    geocodeFromLatLng(newLat, newLng).then(location => {\n        setLocationMarker(location)\n    })\n}\n\nfunction ParkingMap({placeInfo,\n                        locationMarker,\n                        setLocationMarker,\n                        addNewParking,\n                        addExistingParking,\n                        selectedParkingData\n                    }) {\n\n    const [parkingData, setParkingData] = useState([]);\n    const [mainInfoWindow, setMainInfoWindow] = useState(false);\n    const [parkingInfoWindows, setParkingInfoWindows] = useState(false);\n    const [isLocked, setIsLocked] = useState(false);\n    const refMap = useRef(null);\n\n    const { addAlertConfig } = UseAlertDialogContext();\n\n    function getClosestParking(){\n        API.Parking.getParkingByLocation(\"?lat=\"+locationMarker.latitude+\"&lng=\"+locationMarker.longitude).then(response=>{\n            setParkingData(response);\n        }).catch(error=>{\n        })\n    }\n\n    useEffect(()=>{\n        getClosestParking()\n    },[locationMarker]);\n\n    function mapToolbarCallback(location) {\n        setMainInfoWindow(true);\n        setLocationMarker(location)\n    }\n\n    return <React.Fragment>\n        <MapToolbar\n            isLocked={isLocked}\n            locationCallback={mapToolbarCallback}/>\n\n        <MapComponent\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `400px` }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n            mainInfoWindow={mainInfoWindow}\n            setMainInfoWindow={setMainInfoWindow}\n            addNewParking={addNewParking}\n            addExistingParking={addExistingParking}\n            parkingInfoWindows={parkingInfoWindows}\n            setParkingInfoWindows={setParkingInfoWindows}\n            parkingData={parkingData}\n            position={locationMarker}\n            setPosition={setLocationMarker}\n            isLocked={isLocked}\n            refInstance={refMap}\n            selectedParkingData={selectedParkingData}\n            addAlertConfig={addAlertConfig}\n        />\n\n    </React.Fragment>\n}\n\n\nParkingMap.propTypes = {\n    placeInfo: PropTypes.object.isRequired,\n    locationMarker: PropTypes.object.isRequired,\n    setLocationMarker: PropTypes.func.isRequired,\n    addNewParking: PropTypes.func.isRequired,\n    addExistingParking: PropTypes.func.isRequired\n};\n\nexport default ParkingMap","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API from \"../../Networking/API\";\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ParkingMap from \"../maps/ParkingMap\";\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction ParkingLocation({classes, locationData, setLocationData, allSelectedParkingData, setAllSelectedParkingData, placeInfo}) {\n    const { addConfig } = UseSnackbarContext();\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\n    };\n\n    function addNewParking(markerData){\n        if(!parkingExists(markerData)){\n            API.Parking.insertNewParking([markerData]).then(response=>{\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\n                addConfig(true)\n            }).catch(error=>{\n                addConfig(false)\n            })\n        }\n    }\n\n    function addExistingParking(location) {\n        if(!parkingExists(location)){\n            setAllSelectedParkingData(oldArray=> [...oldArray, location])\n        }\n    }\n\n    function parkingExists(markerData){\n        for(let i = 0; i<allSelectedParkingData.length; i++){\n            if(allSelectedParkingData[i].address === markerData.address){\n                addConfig(false, \"This parking is already attached!\");\n                return true;\n            }\n        }\n        return false\n    }\n\n\n    const SortableItem = SortableElement(({value}) => (\n        <Paper className={classes.paper} elevation={3}>\n            <Typography>\n                {value.address}\n            </Typography>\n            <IconButton aria-label=\"delete\" className={classes.margin}\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\n                <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n        </Paper>\n    ));\n\n\n    const SortableList = SortableContainer(({items}) => {\n        return (\n            <ul>\n                {items.map((value, index) => (\n                <SortableItem key={index} index={index} value={value} />\n                ))}\n            </ul>\n        );\n    });\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Add parking\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select parking\n        </Typography>\n\n        <ParkingMap\n            selectedParkingData={allSelectedParkingData}\n            placeInfo={placeInfo}\n            locationMarker={locationData}\n            setLocationMarker={setLocationData}\n            addNewParking={addNewParking}\n            addExistingParking={addExistingParking}\n        />\n\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Selected parking locations\n        </Typography>\n        {allSelectedParkingData.length === 0 ? <Alert severity=\"error\">\n            This place has no selected parking! To select parking for this place do the following:\n            <br/>\n            1. Select your current location or any other location\n            <br/>\n            2. Select already existing nearby parking locations and click add\n            <br/>\n            3. If none of the location is valid, click on the orange marker and add new parking\n            </Alert> :\n            <SortableList pressDelay={200} disableAutoscroll={false} items={allSelectedParkingData} onSortEnd={onSortEnd} />\n        }\n\n\n    </div>\n}\n\nexport default withStyles(styles)(ParkingLocation)","import React, { useState, useCallback } from 'react';\n\nexport const EditDialogContext = React.createContext({\n    dialogConfig: null,\n    dialogOpen: null,\n    setDialogOpen: null,\n    addEditDialogConfig: () => {},\n    removeEditDialogConfig: () => {}\n});\n\nconst defaultOptions = {\n\n    /**\n     * The dialog's title.\n     */\n    title: \"Sample title\",\n\n    /**\n     * Object, that defines an error message for each error returned by validateInput function.\n     * Should follow this structure: {errorCode: \"message\", differentErrorCode: \"Message\"}\n     * Keys of this object are integers (that represent the error code)\n     */\n    errorMessages: {},\n\n    /**\n     * Explanation text for this dialog.\n     */\n    explanation: \"Sample explanation\",\n\n    /**\n     * A callback for when user presses cancel.\n     */\n    onCloseCallback: () => {},\n\n    /**\n     * A callback for when the user input passes error checks and done button is pressed\n     * @param input is the input text\n     */\n    onDoneCallback: (input) => {},\n\n    /**\n     * The label text to be displayed above textfield\n     */\n    textFieldLabel: \"Type here\",\n\n    /**\n     * Should return 0 if input is valid.\n     * If the input is not valid, it should return an error code.\n     * Any returned code, that is not 0 is considered to be an error.\n     * The error code returned may have a message in errorMessages prop.\n     * @param input\n     * @returns {number}\n     */\n    validateInput: (input) => 0,\n\n    /**\n     * The default text to be displayed in TextField\n     */\n    defaultText: \"\"\n}\n\nexport default function EditDialogProvider({ children }) {\n    const [dialogConfig, setDialogConfig] = useState(defaultOptions);\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const contextValue = {\n        dialogConfig,\n        dialogOpen: dialogOpen,\n        setDialogOpen: setDialogOpen,\n        addEditDialogConfig: (options) => {\n            setDialogConfig({\n                ...defaultOptions,\n                ...options\n            })\n            setDialogOpen(true)\n        },\n        removeEditDialogConfig: () => setDialogConfig(null)\n    };\n\n    return (\n        <EditDialogContext.Provider value={contextValue}>\n            {children}\n        </EditDialogContext.Provider>\n    );\n}","import React, {useContext} from \"react\";\nimport {EditDialogContext} from \"./EditDialogContext\";\n\nexport default function UseEditDialogContext() {\n    const { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen } = useContext(EditDialogContext);\n    return { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen};\n}\n","import React, {useEffect, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AutocompleteChip from \"../AutocompleteChip\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport API from \"../../Networking/API\";\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories}) {\n\n    const [availableCategories, setAvailableCategories] = useState([]);\n    const [availableTags, setAvailableTags] = useState([]);\n\n    const {addEditDialogConfig} = UseEditDialogContext();\n    const {addConfig} = UseSnackbarContext();\n\n    const updateTags = () => {\n        API.Tags.getAllTags().then(response=>{\n            setAvailableTags(response);\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n    const updateCategories = () => {\n        API.Categories.getAllCategories().then(response=>{\n            setAvailableCategories(response)\n        }).catch(error=>{\n            console.log(error)\n        });\n    };\n\n    useEffect(()=>{\n        updateTags();\n        updateCategories();\n    },[]);\n\n\n    const promptAddTag = () => {\n        addEditDialogConfig({\n            title: \"Add tag\",\n            explanation: \"Type the tag name\",\n            onDoneCallback: (tagName) => {\n                API.Tags.addTag([{name: tagName}]).then(response=>{\n                    let newTag = {tagId: response[0], name: tagName}\n                    setAvailableTags(\n                        [\n                            ...availableTags,\n                            newTag\n                        ]\n                    );\n                    setSelectedTags([\n                        ...selectedTags,\n                        newTag\n                    ]);\n\n                }).catch(()=>{\n                    addConfig(false, \"Failed to add tag.\")\n                })\n            },\n            errorMessages: {\n                1: \"The tag name is too short\",\n                2: \"A tag with identical name already exists. You should choose the existing tag instead\"\n            },\n            validateInput: (input) => {\n                if(input.length < 0){\n                    return 1 //Input too short\n                }else if(availableTags.filter(item => item.name === input).length !== 0){\n                    return 2 //Identical tag already exists\n                }\n                return 0\n            },\n            textFieldLabel: \"Warm, quick, cozy...\"\n        })\n    }\n\n    const promptAddCategory = () => {\n        addEditDialogConfig({\n            title: \"Add category\",\n            explanation: \"Type the category name\",\n            onDoneCallback: (categoryName) => {\n                API.Categories.addCategory([{name: categoryName}]).then(response=>{\n                    let newCat = {categoryId: response[0], name: categoryName};\n                    setAvailableCategories(\n                        [\n                            ...availableCategories,\n                            newCat\n                        ]\n                    );\n                    setSelectedCategories([\n                        ...selectedCategories,\n                        newCat\n                    ]);\n                }).catch(error=>{\n                    addConfig(false, \"Failed to add category.\")\n                })\n            },\n            errorMessages: {\n                1: \"The category name is too short\",\n                2: \"A category with identical name already exists. You should choose the existing category instead\"\n            },\n            validateInput: (input) => {\n                if(input.length < 0){\n                    return 1 //Input too short\n                }else if(availableCategories.filter(item => item.name === input).length !== 0){\n                    return 2 //Identical category already exists\n                }\n                return 0\n            },\n            textFieldLabel: \"Restaurant, hotel, hiking...\"\n        })\n    }\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Place discovery settings\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select tags\n        </Typography>\n        <AutocompleteChip label=\"Select tags\"\n                          id=\"tagId\"\n                          options={availableTags}\n                          setOptions={setAvailableTags}\n                          selectedOptions={selectedTags}\n                          setSelectedOptions ={setSelectedTags}/>\n\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={promptAddTag}\n            startIcon={<AddIcon />}>\n            Add missing tag\n        </Button>\n\n        <br/>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select categories\n        </Typography>\n        <AutocompleteChip label=\"Select categories\"\n                          id=\"categoryId\"\n                          options={availableCategories}\n                          setOptions={setAvailableCategories}\n                          selectedOptions={selectedCategories} \n                          setSelectedOptions={setSelectedCategories}/>\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={promptAddCategory}\n            startIcon={<AddIcon />}>\n            Add missing category\n        </Button>\n    </div>\n}\n\nexport default withStyles(styles)(PlaceDiscovery)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport moment from \"moment\";\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        width: \"20%\",\n        padding: \"2px\",\n        marginRight: \"16px\"\n    },\n\n});\nexport default function ReviewCard({review}) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <div style={{display: \"flex\"}} >\n                    <Avatar alt=\"Cindy Baker\" src={!!review.photoUrl ? review.photoUrl : \"/broken-image.jpg\"} />\n                    <div style={{display: \"flex\", flexDirection: \"column\", marginLeft:\"8px\"}}>\n                        <Typography title=\"subtitle1\">\n                            {review.name} {review.surname}\n                        </Typography>\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                            <Rating size=\"small\" name=\"read-only\" value={review.rating} readOnly />\n                            <Typography title=\"subtitle1\">\n                                {\"+\" + review.upvotes}\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n                <Typography title=\"subtitle1\">\n                    {moment(review.timeAdded).format('LL')}\n                </Typography>\n                <div style={{marginTop: \"16px\"}}>\n                    {review.title}\n                </div>\n                <Typography title=\"subtitle1\">\n                        {review.review}\n                </Typography>\n\n            </CardContent>\n        </Card>\n    );\n}\n\n","import React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Rating from '@material-ui/lab/Rating';\nimport ReviewCard from \"../ReviewCard\";\nimport API from \"../../Networking/API\";\nimport debounce from \"lodash/debounce\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\n\nconst styles = theme => ({\n    reviewsInfo:{\n        display: \"flex\",\n    },\n    reviews:{\n        display: \"flex\",\n        width: \"100%\",\n        margin: theme.spacing(2),\n        overflowX: \"scroll\"\n    },\n    sortingButtons: {\n        padding: theme.spacing(2)\n    }\n});\n\nfunction Reviews({classes, placeInfo}) {\n\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [page, setPage] = useState(1);\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const [filterBy, setFilterBy] = useState('mostRated');\n\n    function getReviewsForPlace(urlParams = \"?p=\"+placeInfo.placeId) {\n        API.Reviews.getPlaceReviews(urlParams).then(response=>{\n            setReviews(old=>[...old, ...response.list]);\n            setIsLoading(false)\n        }).catch(error=>{\n            setIsLoading(false)\n        })\n    }\n\n    //Get ordered by new filter\n    useEffect(()=>{\n            getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=1&o=\"+filterBy)\n    },[filterBy]);\n\n\n    const handleScrollDebounced = (e) => {\n        const scrollOffset = 0;\n        const bottom = Math.round(e.target.scrollWidth - e.target.scrollLeft - scrollOffset)  <= e.target.clientWidth;\n        if (bottom && !isLoading && reviews.length>0 && reviews.length<placeInfo.totalReviews) {\n            setIsLoading(true);\n            setPage(old=>{\n                getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=\"+(old+1)+\"&o=\"+filterBy);\n                return old+1\n            });\n        }\n    };\n\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\n\n    const handleScroll = (e) => {\n        e.persist();\n        debounceScroll(e)\n    };\n\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    function changeSorting(e){\n        const {name, value} = e.target;\n        setFilterBy(value);\n        setReviews([]);\n        setPage(1);\n        handleClose()\n    }\n\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Reviews\n            <br/>\n            {\n               reviews.length > 0 ?\n                   <React.Fragment>\n                       <div style={{display:\"flex\", justifyContent: \"space-between\"}}>\n                           <div className={classes.reviewsInfo}>\n                               <Rating name=\"read-only\" value={placeInfo.overallStarRating} precision={0.2} readOnly />\n                               <Typography style={{marginLeft:\"8px\"}} variant=\"subtitle1\">\n                                   {placeInfo.totalReviews} reviews\n                               </Typography>\n                           </div>\n                           <Tooltip aria-describedby={id} title=\"Filter list\">\n                               <IconButton  aria-label=\"filter list\" onClick={handleClick}>\n                                   <FilterListIcon />\n                               </IconButton>\n                           </Tooltip>\n                           <Popover\n                               id={id}\n                               open={open}\n                               anchorEl={anchorEl}\n                               onClose={handleClose}\n                               anchorOrigin={{\n                                   vertical: 'bottom',\n                                   horizontal: 'center',\n                               }}\n                               transformOrigin={{\n                                   vertical: 'top',\n                                   horizontal: 'center',\n                               }}\n                           >\n                               <RadioGroup className={classes.sortingButtons} aria-label=\"gender\" value={filterBy} name=\"gender1\"  onChange={changeSorting}>\n                                   <FormControlLabel value=\"mostRated\" control={<Radio />} label=\"Most rated\" />\n                                   <FormControlLabel value=\"newest\" control={<Radio />} label=\"Newest\" />\n                               </RadioGroup>\n                           </Popover>\n                       </div>\n\n                       <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                           <Typography>\n                               Showing: {reviews.length} out of {placeInfo.totalReviews}\n                           </Typography>\n                           <Typography>\n                               Sorting by: {filterBy}\n                           </Typography>\n                       </div>\n                       <div className={classes.reviews} onScroll={e=>handleScroll(e)}>\n                           {reviews.map(row=>{\n                               return <ReviewCard review={row}/>\n                           })}\n                       </div>\n                   </React.Fragment> : <Typography> No reviews for this place</Typography>\n            }\n\n        </Typography>\n        <br/>\n        {isLoading ? <LinearProgress/> : null }\n    </div>\n}\n\nexport default withStyles(styles)(Reviews)","import React, { useState } from 'react';\n\nexport const AppBarTitleContext = React.createContext({\n    title: \"\",\n    setTitle: () => {},\n});\n\nexport default function AppBarTitleProvider({ children }) {\n    const [title, setTitle] = useState(\"Home\");\n\n    const contextValue = {\n        title,\n        setTitle: (title) => setTitle(title)\n    };\n\n    return (\n        <AppBarTitleContext.Provider value={contextValue}>\n            {children}\n        </AppBarTitleContext.Provider>\n    );\n}","import React, {useContext} from \"react\";\nimport {AppBarTitleContext} from \"./AppBarTitleContext\";\n\nexport default function UseAppBarTitleContext() {\n    const { title, setTitle } = useContext(AppBarTitleContext);\n    return { title, setTitle };\n}\n","import React, {useEffect, useState} from \"react\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport API from \"../../Networking/API\";\n\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    textField:{\n        marginTop: 16\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    }\n\n});\n\nfunction AddRecommendationDialog({classes, open, setOpen, addCallback}){\n\n\n    const {addConfig} = UseSnackbarContext();\n    const {addAlertConfig} = UseAlertDialogContext();\n\n    const [data, setData] = useState({name: \"\", subtitle: \"\", description: \"\", type: \"1\"});\n    const [error, setError] = useState({name: false, subtitle: false, description: false});\n\n    const [loading, setLoading] = useState(false)\n\n    const dataChanged = (event) => {\n        const {name, value} = event.target;\n        let recData = { ...data }\n        recData[name] = value\n        setData(recData)\n    };\n\n    function addRecommendation(){\n        if(checkErrors()){\n            return\n        }\n        setLoading(true)\n        addAlertConfig(\"Add new recommendation\", \"Are you sure you want to add this recommendation?\", [{\n            name: \"Yes\",\n            action: () => {\n                setLoading(true);\n                API.Recommendation.createRecommendation(data).then(id=>{\n                    let insertedData = { ...data }\n                    insertedData.id = id\n                    addConfig(true, \"Recommendation added successfully\")\n                    addCallback(insertedData)\n                    setOpen(false)\n                }).catch((error)=>{\n                    console.log('recommendation error', error)\n                    addConfig(false, \"Something went wrong. Please try again.\")\n                }).finally(()=>{\n                    setLoading(false)\n                })\n            }\n        }])\n    }\n\n\n    function checkErrors(){\n        let errors = Object.assign({}, error)\n        let hasErrors = false;\n        for (let key in data) {\n            errors[key] = data[key] === \"\" || data[key] === -1;\n            if(errors[key] === true){\n                hasErrors = true\n            }\n        }\n        setError(errors);\n        return hasErrors\n    }\n\n    function recommendationTypeChanged(event) {\n        let recData = { ...data }\n        recData.type = event.target.value\n\n        setData(recData)\n    }\n\n    return(\n        <Dialog\n            open={open}\n            fullWidth={true}\n            maxWidth={\"md\"}\n            onClose={()=>{setOpen(false)}}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            {loading ? <LinearProgress /> : null}\n            <DialogTitle id=\"alert-dialog-title\">Add new recommendation</DialogTitle>\n            <DialogContent>\n                <div className={classes.root}>\n                    <TextField id=\"outlined-basic\"\n                               error={error.title}\n                               required\n                               label=\"Title\"\n                               name=\"name\"\n                               value={data['name']}\n                               onChange={dataChanged}\n                               variant=\"outlined\"\n                               className={classes.textField}\n                    />\n\n                    <TextField id=\"outlined-basic\"\n                               required\n                               error={error.subtitle}\n                               label=\"Subtitle\"\n                               name=\"subtitle\"\n                               value={data['subtitle']}\n                               onChange={dataChanged}\n                               variant=\"outlined\"\n                               className={classes.textField}\n                    />\n                    <TextField id=\"outlined-basic\"\n                               required\n                               error={error.description}\n                               label=\"Description\"\n                               name=\"description\"\n                               value={data['description']}\n                               onChange={dataChanged}\n                               variant=\"outlined\"\n                               className={classes.textField}\n                    />\n\n                    <FormControl component=\"fieldset\" style={{marginTop: 32}}>\n                        <FormLabel component=\"legend\">Recommendation type</FormLabel>\n                        <RadioGroup aria-label=\"rec\" name=\"rec1\" value={data.type} onChange={recommendationTypeChanged}>\n                            <FormControlLabel value=\"1\" control={<Radio />} label=\"Places recommendation\" />\n                            <FormControlLabel value=\"2\" control={<Radio />} label=\"Tours recommendation\" />\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={()=>setOpen(false)}\n                        color=\"primary\">\n                    Close\n                </Button>\n                <Button\n                    color=\"primary\"\n                    onClick={()=>{\n                        addRecommendation()\n                    }}\n                >\n                    Create recommendation\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default withStyles(styles)(AddRecommendationDialog)\n","import React, {useEffect, useState} from \"react\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport API from \"../../Networking/API\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport history from \"../../helpers/history\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Box from \"@material-ui/core/Box\";\nimport AddRecommendationDialog from \"./AddRecommendationDialog\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport debounce from \"lodash/debounce\";\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start'\n    }\n});\n\nfunction RecommendationListDialog({classes, open, setOpen, objectId, type}){\n\n    const {addConfig} = UseSnackbarContext();\n    const {addAlertConfig} = UseAlertDialogContext();\n\n    const [recommendations, setRecommendations] = useState([]);\n    const [pagingData, setPagingData] = useState({pageNum: 1})\n\n    const [loading, setLoading] = useState(false)\n    const [showAddNewRecommendation, setShowAddNewRecommendation] = useState(false)\n    const [keyword, setKeyword] = useState('')\n\n    function getRecommendations(page, keywordChange = false) {\n        API.Recommendation.getAllRecommendations(\"?p=\"+page+\"&keyword=\"+keyword+\"&type=\"+type).then(response=>{\n            if(keywordChange){\n                setRecommendations(response.list)\n            }else{\n                setRecommendations(old=>[...old, ...response.list])\n            }\n            delete response.list\n            setPagingData(response)\n        }).catch().finally(()=>{\n            setLoading(false)\n        })\n    }\n\n    const handleScrollDebounced = (e) => {\n        console.log(\"Handle scroll\")\n        const scrollOffset = 0;\n        const bottom = Math.round(e.target.scrollHeight - e.target.scrollTop - scrollOffset)  <= e.target.clientHeight;\n        if (bottom && !loading && recommendations.length>0 && pagingData.pageNum<pagingData.pages) {\n            setLoading(true);\n            console.log(\"Requesting new page\")\n            getRecommendations(pagingData.pageNum+1);\n        }\n    };\n\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\n    const handleScroll = (e) => {\n        e.persist();\n        debounceScroll(e)\n    };\n\n    useEffect(()=>{\n        console.log(\"Keyword changed\")\n        getRecommendations(1, true);\n    }, [keyword])\n\n\n    function addPlaceToRecommendation(rec) {\n      API.Recommendation.addObjectToRecommendation({id: objectId, recommendationId: rec.id}).then(()=>{\n              addConfig(true, \"Added object to recommendation successfully!\")\n      }).catch(()=>{\n              addConfig(true, \"Failed to add!\")\n          }\n      ).finally(()=>{\n          setOpen(false)\n      })\n    }\n\n    function addNewRecommendationCallback(recommendation){\n        let recData = [ ...recommendations ]\n        recData.unshift(recommendation)\n\n        setRecommendations(recData)\n    }\n\n    return(\n        <Dialog\n            open={open}\n            fullWidth={true}\n            maxWidth={\"sm\"}\n            onClose={()=>{setOpen(false)}}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            {loading ? <LinearProgress /> : null}\n            <DialogTitle id=\"alert-dialog-title\">Add to recommendation</DialogTitle>\n            <DialogContent>\n                <div className={classes.root}>\n                    <div className={classes.root} >\n                        <TextField id=\"standard-search\" label=\"Search field\" value={keyword} type=\"search\" onChange={e=>{\n                            setKeyword(e.target.value)\n                        }} />\n                        {recommendations.length > 0 ?\n                            <React.Fragment>\n                                <List component=\"nav\" style={{ overflowY: \"scroll\", width: '100%', maxHeight: 400}} onScroll={handleScroll} aria-label=\"main mailbox folders\">\n                                    {recommendations.map(row=>{\n                                        return <ListItem style={{width: '100%'}} button onClick={()=>{addPlaceToRecommendation(row)}}>\n                                            <ListItemIcon>\n                                                <CheckBoxOutlineBlankIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={row.name} />\n                                        </ListItem>\n                                    })}\n\n                                </List>\n                            </React.Fragment>\n                            :\n\n                            <Alert severity=\"info\">Recommendations list is empty. You can add new recommendation below.</Alert>\n                        }\n\n\n                    </div>\n                    <Divider style={{width: '100%'}} />\n                    <Button\n                        onClick={()=>setShowAddNewRecommendation(true)}\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        startIcon={<AddIcon/>}>\n                        Create new recommendation\n                    </Button>\n                </div>\n            <AddRecommendationDialog\n                open={showAddNewRecommendation}\n                setOpen={setShowAddNewRecommendation}\n                addCallback={addNewRecommendationCallback}\n            />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={()=>setOpen(false)}\n                        color=\"primary\">\n                    Close\n                </Button>\n\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default withStyles(styles)(RecommendationListDialog)\n","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {Fragment, useState} from \"react\"\nimport Typography from \"@material-ui/core/Typography\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Card from \"@material-ui/core/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport red from \"@material-ui/core/colors/red\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = theme => ({\n    root: {\n\n    },\n    media: {\n        height: 0,\n            paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n})\n\nfunction CategoriesDisplay({categories}){\n    return(\n        categories != null &&\n        <Box component=\"ul\"  style={{\n            display: 'flex',\n            justifyContent: 'left',\n            flexWrap: 'wrap',\n            listStyle: 'none',\n            padding: '0px'\n        }}>\n            {categories.map((data, index) => {\n                return (\n                    <li key={index}>\n                        <Chip\n                            variant=\"outlined\"\n                            style={{margin: \"5px\"}}\n                            label={data.name}\n                        />\n                    </li>\n\n                );\n            })}\n        </Box>\n    )\n}\n\nfunction SubheaderDisplay({city, address, priceRange, rating}){\n    return(\n        <div>\n            {rating != null &&\n            <Fragment><Rating\n                readOnly={true}\n                value={rating}\n            /><br/></Fragment>}\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\n\n        </div>\n    )\n}\n\nfunction ApiPlaceCard({classes, placeData, renderActionArea}){\n\n    function truncateText(text){\n        if(text == null)\n            return \"\"\n        if(text.length > 500){\n            return text.substring(0, 500) + \"...\";\n        }else{\n            return text\n        }\n    }\n\n    return(\n        <Card className={classes.root}>\n            <CardHeader\n                action={\n                    renderActionArea != null && renderActionArea()\n                }\n                title={placeData.name}\n                subheader={<SubheaderDisplay  city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\n\n            />\n            {placeData.photos != null && placeData.photos.length > 0 &&\n            <CardMedia\n                className={classes.media}\n                image={placeData.photos[0].url}\n            />}\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {truncateText(placeData.description)}\n                </Typography>\n\n                <CategoriesDisplay categories={placeData.categories}/>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\n                {placeData.website}\n                </Typography>\n\n            </CardContent>\n            <CardActions disableSpacing>\n            </CardActions>\n        </Card>\n    )\n}\n\nApiPlaceCard.propTypes = {\n    placeData: PropTypes.object.isRequired,\n    renderActionArea: PropTypes.func\n};\n\nexport default withStyles(styles)(ApiPlaceCard)","import React, {Fragment, useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {withStyles} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ApiPlaceCard from \"../ApiPlaceCard\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Chip from \"@material-ui/core/Chip\";\n\n\nconst styles = theme => ({\n    paperContent: {\n        marginTop: theme.spacing(4),\n        width: \"100%\",\n        padding: theme.spacing(2)\n    },\n});\n\nexport const RecommendationType = {\n    place: 1,\n    tour: 2\n}\n\nfunction Recommendation({classes, recommendation, onEditCallback}) {\n\n    return <Paper elevation = {4} className={classes.paperContent}>\n            <Chip\n                label={recommendation.type === 1 ? \"Place recommendation\" : \"Tour recommendation\"} />\n            <Typography variant=\"h6\">\n                {recommendation.name}\n            </Typography>\n            <Typography variant=\"subtitle1\">\n                {recommendation.subtitle}\n            </Typography>\n\n            <div style={{display: \"flex\", flexDirection: 'row', overflowX: 'auto', width: '100%'}}>\n                <div style={{display:\"flex\", flexDirection: \"row\"}}>\n                    {recommendation.objects.length > 0 ?\n\n                        recommendation.objects.map((place, index)=>{\n                            delete place.description\n\n                            return <div style={{width: 300, padding: 16}}>\n                                <ApiPlaceCard placeData={place}/>\n                            </div>\n                        }) :\n\n                        <Alert severity=\"info\">This recommendation does not have any objects attached. You can attach\n                            Places or Tours by browsing in Places and Tours tables\n                        </Alert>\n                    }\n\n                </div>\n            </div>\n\n        <Fragment>\n            <Button\n                style={{marginTop: 16}}\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => onEditCallback()}\n                className={classes.button}>\n                Edit\n            </Button>\n        </Fragment>\n\n        </Paper>\n\n\n}\n\nexport default withStyles(styles)(Recommendation)","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {useState} from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {DatePicker, TimePicker} from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport shortid from 'shortid';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: 5,\n  },\n  intervalContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    margin: 0,\n    flexWrap: 'wrap',\n  },\n  pickerStyle: {\n    width: 50,\n    marginLeft: 3,\n    margin: 0,\n  }\n});\n\nfunction WorkingDayIntervals({classes, scheduleData, setScheduleData, scheduleOpenIndex, variantId, enableLastAccommodation}) {\n\n  const currentSchedule = scheduleData[scheduleOpenIndex];\n  const currentVariant = currentSchedule.variants.find(x => x.elementId === variantId)\n\n  const toggleSplitSchedule = () => {\n    if (currentVariant.shifts.length > 1)\n      setScheduleData(oldData => {\n        const newData = [...oldData];\n        const shifts = newData[scheduleOpenIndex].variants.find(variant => variantId === variant.elementId).shifts\n        while (shifts.length > 1)\n          shifts.pop()\n        return newData;\n      })\n    else\n      setScheduleData(oldData => {\n        const newData = [...oldData];\n        const shiftToPush = {\n          openTime: \"08:00\",\n          closeTime: \"18:00\",\n          elementId: shortid.generate()\n        }\n        if(enableLastAccommodation)\n          shiftToPush['lastAccommodation'] = \"18:00\"\n        newData[scheduleOpenIndex]\n            .variants\n            .find(variant => variantId === variant.elementId)\n            .shifts\n            .push(shiftToPush)\n        return newData;\n      })\n  }\n\n  const changeOpenTime = (shiftId, time) => {\n    setScheduleData(oldData => {\n      const newData = [...oldData]\n      currentSchedule\n          .variants\n          .find(x => x.elementId === variantId)\n          .shifts\n          .find(shift => shift.elementId === shiftId)\n          .openTime = moment(time).format('HH:mm') ;\n      return newData;\n    })\n  }\n\n  const changeCloseTime = (shiftId, time) => {\n    setScheduleData(oldData => {\n      const newData = [...oldData]\n      currentSchedule\n          .variants\n          .find(x => x.elementId === variantId)\n          .shifts\n          .find(shift => shift.elementId === shiftId)\n          .closeTime = moment(time).format('HH:mm');\n      return newData;\n    })\n  }\n  const changeLastAccommodationTime = (shiftId, time) => {\n    setScheduleData(oldData => {\n      const newData = [...oldData]\n      currentSchedule\n          .variants\n          .find(x => x.elementId === variantId)\n          .shifts\n          .find(shift => shift.elementId === shiftId)\n          .lastAccommodation = moment(time).format('HH:mm');\n      return newData;\n    })\n  }\n\n  const shifts = currentVariant.shifts.map((shift, index) => {\n    const lastShift = index !== currentVariant.shifts.length - 1\n    const firstShift = index === 0\n    return (\n        <>\n          <div className={classes.intervalContainer}>\n\n            <Typography variant=\"h7\">\n              {firstShift ? 'O' : 'o'}pens at\n            </Typography>\n            <TimePicker\n                margin=\"normal\"\n                ampm={false}\n                className={classes.pickerStyle}\n                format=\"HH:mm\"\n                value={moment(shift.openTime, \"HH:mm\")}\n                onChange={(date) => changeOpenTime(shift.elementId, date)}\n            />\n            <Typography variant=\"h7\">\n              and closes at\n            </Typography>\n            <TimePicker\n                margin=\"normal\"\n                ampm={false}\n                className={classes.pickerStyle}\n                format=\"HH:mm\"\n                value={moment(shift.closeTime, \"HH:mm\")}\n                onChange={(date) => changeCloseTime(shift.elementId, date)}\n            />\n            {enableLastAccommodation &&\n            <>\n              <Typography variant=\"h7\">\n                last accommodation at\n              </Typography>\n              <TimePicker\n                  margin=\"normal\"\n                  ampm={false}\n                  className={classes.pickerStyle}\n                  format=\"HH:mm\"\n                  value={moment(shift.lastAccommodation, \"HH:mm\")}\n                  onChange={(date) => changeLastAccommodationTime(shift.elementId, date)}\n              />\n            </>\n            }\n\n          </div>\n          {lastShift && <Typography variant=\"h7\" style={{marginRight: 5}}>\n            THEN\n          </Typography>}\n        </>)\n  })\n\n  return (\n      <div className={classes.root}>\n        {shifts}\n        <FormControlLabel\n            control={\n              <Checkbox\n                  name=\"checkedB\"\n                  color=\"primary\"\n                  checked={currentVariant.shifts.length > 1}\n                  onChange={toggleSplitSchedule}\n              />\n            }\n            label=\"Split schedule\"\n        />\n      </div>\n  )\n}\n\nexport default withStyles(styles)(WorkingDayIntervals)\n\n\n","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport WorkingShift from \"./WorkingShift\";\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\n\nconst styles = theme => ({\n  root: {\n    flex: 1,\n    marginTop: 10,\n    border: '1px dashed black',\n    padding: 8\n  },\n  weekdayPickerContainer: {\n    display: 'flex',\n    width: '100%'\n  },\n  weekdayButton: {\n    flex: 1,\n    margin: 5,\n    padding: 0,\n    minHeight: 0,\n    minWidth: 0,\n  },\n  removeButtonContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }\n});\n\nexport const weekdays = [\n  {\n    id: 0,\n    name: \"Mon\",\n    fullName: \"Monday\",\n  },\n  {\n    id: 1,\n    name: \"Tue\",\n    fullName: \"Tuesday\",\n  },\n  {\n    id: 2,\n    name: \"Wed\",\n    fullName: \"Wednesday\",\n  },\n  {\n    id: 3,\n    name: \"Thu\",\n    fullName: \"Thursday\",\n  },\n  {\n    id: 4,\n    name: \"Fri\",\n    fullName: \"Friday\",\n  },\n  {\n    id: 5,\n    name: \"Sat\",\n    fullName: \"Saturday\",\n  },\n  {\n    id: 6,\n    name: \"Sun\",\n    fullName: \"Sunday\",\n  }\n]\n\n\nfunction WorkingHoursVariant({classes, enableLastAccommodation, scheduleData, setScheduleData, scheduleOpenIndex, variantId}) {\n\n  const currentSchedule = scheduleData[scheduleOpenIndex];\n  const currentVariant = currentSchedule.variants.filter(x => x.elementId === variantId)[0]\n\n  const toggleWeekday = (weekDayIndex) => {\n    setScheduleData(scheduleData => {\n      const newScheduleData = [...scheduleData];\n      let days = newScheduleData[scheduleOpenIndex].variants.find(item => item.elementId === variantId).days\n      if (days.includes(weekDayIndex))\n        days.splice(days.indexOf(weekDayIndex), 1);\n      else\n        days.push(weekDayIndex);\n      return newScheduleData\n    })\n  }\n\n  const weekdayReserved = (weekDayIndex) => {\n    return currentSchedule.variants.some(variant => variant.days.includes(weekDayIndex));\n  }\n\n  const weekdayPicker = (\n      <div className={classes.weekdayPickerContainer}>\n        {weekdays.map((item) => {\n          const dayActive = currentVariant.days.some(day => day === item.id);\n          return(\n              <Button onClick={() => toggleWeekday(item.id)}\n                      className={classes.weekdayButton}\n                      variant={\"contained\"}\n                      color={dayActive ? \"primary\" : \"secondary\"}\n                      disabled={!dayActive && weekdayReserved(item.id)}>\n                {item.name}\n              </Button>\n          )}\n        )\n        }\n      </div>\n  )\n\n  const handleDeleteVariant = () => {\n    setScheduleData(oldData => {\n      const newData = [...oldData];\n      const variants = newData[scheduleOpenIndex].variants;\n      variants.splice(variants.findIndex(variant => variant.elementId === variantId), 1)\n      return newData;\n    })\n  }\n\n  return (\n      <div className={classes.root}>\n        {/*<Divider light/>*/}\n\n        {weekdayPicker}\n        <WorkingShift\n            enableLastAccommodation={enableLastAccommodation}\n            scheduleData={scheduleData}\n            scheduleOpenIndex={scheduleOpenIndex}\n            setScheduleData={setScheduleData}\n            variantId={variantId}/>\n        <div className={classes.removeButtonContainer}>\n          <Button\n              variant=\"text\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={handleDeleteVariant}\n              startIcon={<DeleteOutlineIcon/>}\n              style={{display: 'absolute'}}>Remove this variant</Button>\n        </div>\n      </div>\n  )\n}\n\nexport default withStyles(styles)(WorkingHoursVariant)\n\n\n","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {TimePicker} from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport shortid from 'shortid';\n\nconst styles = theme => ({\n  root: {\n    flex: 1,\n    marginTop: 10,\n    border: '1px dashed black',\n    padding: 8\n  },\n  weekdayPickerContainer: {\n    display: 'flex',\n    width: '100%',\n  },\n  weekdayButtonContainer: {\n    flex: 1,\n    // margin: 5,\n    padding: 0,\n    minHeight: 0,\n    minWidth: 0,\n  },\n  button: {\n    flex: 1,\n    margin: 5,\n    padding: 0,\n    minHeight: 0,\n    minWidth: 0,\n    width: '90%'\n  },\n  intervalContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    margin: 0,\n    flexWrap: 'wrap',\n  },\n  pickerStyle: {\n    width: 35,\n    marginLeft: 3,\n    margin: 0,\n  },\n  pickerInput: {\n    fontSize: 13,\n    padding: 0,\n  },\n})\n\nexport const weekdays = [\n  {\n    id: 0,\n    name: \"Mon\",\n    fullName: \"Monday\",\n  },\n  {\n    id: 1,\n    name: \"Tue\",\n    fullName: \"Tuesday\",\n  },\n  {\n    id: 2,\n    name: \"Wed\",\n    fullName: \"Wednesday\",\n  },\n  {\n    id: 3,\n    name: \"Thu\",\n    fullName: \"Thursday\",\n  },\n  {\n    id: 4,\n    name: \"Fri\",\n    fullName: \"Friday\",\n  },\n  {\n    id: 5,\n    name: \"Sat\",\n    fullName: \"Saturday\",\n  },\n  {\n    id: 6,\n    name: \"Sun\",\n    fullName: \"Sunday\",\n  }\n]\n\nconst generateDefaultPeriod = () => {\n  return {\n    openTime: \"08:00\",\n    closeTime: \"18:00\",\n    elementId: shortid.generate()\n  }\n}\n\nfunction ScheduleWorkingHours({schedule, setSchedule, scheduleOpenIndex, classes}) {\n\n  const findPeriods = (dayIndex) => {\n    return schedule[scheduleOpenIndex].periods.filter(period => period.openDay === dayIndex)\n  }\n\n  const changeOpenTime = (elementId, time) => {\n    setSchedule(oldData => {\n      const newData = [...oldData]\n      newData[scheduleOpenIndex].periods.find(period => period.elementId === elementId).openTime = moment(time).format('HH:mm');\n      return newData;\n    })\n  }\n  const changeCloseTime = (elementId, time) => {\n    setSchedule(oldData => {\n      const newData = [...oldData]\n      newData[scheduleOpenIndex].periods.find(period => period.elementId === elementId).closeTime = moment(time).format('HH:mm');\n      return newData;\n    })\n  }\n\n  const determineGlobalCloseTime = () => {\n    if(schedule[scheduleOpenIndex].periods == null || schedule[scheduleOpenIndex].length === 0)\n      return \"08:00\"\n    else\n      return moment(schedule[scheduleOpenIndex].periods[0].closeTime, \"HH:mm\")\n  }\n  const determineGlobalOpenTime = () => {\n    if(schedule[scheduleOpenIndex].periods == null || schedule[scheduleOpenIndex].length === 0)\n      return \"18:00\"\n    else\n      return moment(schedule[scheduleOpenIndex].periods[0].openTime, \"HH:mm\")\n  }\n\n  return (\n      <div>\n        <div className={classes.root}>\n          <div className={classes.weekdayPickerContainer}>\n            {weekdays.map((item, index) => {\n              const periods = findPeriods(index)\n              const splitSchedule = periods.length > 1\n\n              const toggleWorkday = () => {\n                if (periods.length > 0) {\n                  setSchedule(oldData => {\n                    const newData = [...oldData]\n                    newData[scheduleOpenIndex].periods = newData[scheduleOpenIndex].periods.filter(period => period.openDay !== index)\n                    return newData\n                  })\n                } else {\n                  setSchedule(oldData => {\n                    const newData = [...oldData]\n                    newData[scheduleOpenIndex].periods.push({...generateDefaultPeriod(), openDay: index})\n                    return newData\n                  })\n                }\n              }\n\n              const toggleSplitSchedule = () => {\n                if (splitSchedule)\n                  setSchedule(oldData => {\n                    const newData = [...oldData];\n                    const periods = newData[scheduleOpenIndex].periods.filter(period => period.openDay === index)\n                    const lastperiod = periods.pop()\n                    newData[scheduleOpenIndex].periods = newData[scheduleOpenIndex].periods.filter(period => period.elementId != lastperiod.elementId)\n                    return newData;\n                  })\n                else\n                  setSchedule(oldData => {\n                    const newData = [...oldData];\n                    newData[scheduleOpenIndex].periods.push({...generateDefaultPeriod(), openDay: index})\n                    return newData;\n                  })\n              }\n\n              return (\n                  <>\n                    <div className={classes.weekdayButtonContainer}>\n                      <Button variant={\"contained\"}\n                              color={periods.length !== 0 ? \"primary\" : \"secondary\"}\n                              className={classes.button}\n                              onClick={toggleWorkday}>\n                        {item.name}\n                      </Button>\n                      {periods.map((period) => {\n                        return <>\n                          <div className={classes.intervalContainer}>\n                            <TimePicker\n                                margin=\"normal\"\n                                ampm={false}\n                                className={classes.pickerStyle}\n                                format=\"HH:mm\"\n                                minutesStep={30}\n                                InputProps={{\n                                  classes: {\n                                    input: classes.pickerInput,\n                                  },\n                                }}\n                                value={moment(period.openTime, \"HH:mm\")}\n                                onChange={(time) => changeOpenTime(period.elementId, time)}\n                            />\n                            <Typography variant=\"h7\">\n                              -\n                            </Typography>\n                            <TimePicker\n                                margin=\"normal\"\n                                ampm={false}\n                                className={classes.pickerStyle}\n                                format=\"HH:mm\"\n                                minutesStep={30}\n                                InputProps={{\n                                  classes: {\n                                    input: classes.pickerInput,\n                                  },\n                                }}\n                                value={moment(period.closeTime, \"HH:mm\")}\n                                onChange={(time) => changeCloseTime(period.elementId, time)}\n                            />\n                          </div>\n                        </>\n                      })}\n                      {periods.length !== 0 && <FormControlLabel\n                          style={{width: '100%'}}\n                          control={\n                            <Checkbox\n                                name=\"checkedB\"\n                                color=\"primary\"\n                                checked={splitSchedule}\n                                onChange={toggleSplitSchedule}\n                            />\n                          }\n                          label={<span style={{fontSize: 13}}>Split</span>}\n                      />}\n\n                    </div>\n                    <Divider orientation=\"vertical\" flexItem/>\n                  </>\n              )\n            })}\n          </div>\n\n        </div>\n        <Typography variant=\"h7\">\n          Global time\n        </Typography>\n        <TimePicker\n            margin=\"normal\"\n            ampm={false}\n            format=\"HH:mm\"\n            className={classes.pickerStyle}\n            minutesStep={30}\n            InputProps={{\n              classes: {\n                input: classes.pickerInput,\n              },\n            }}\n            onChange={(e) => {\n              setSchedule(schedules => {\n                const newSchedules = [...schedules]\n                newSchedules[scheduleOpenIndex].periods = newSchedules[scheduleOpenIndex].periods.map(period => {\n                  return {\n                    ...period,\n                    openTime: moment(e).format(\"HH:mm\")\n                  }\n                })\n                return newSchedules\n              })\n            }}\n            value={determineGlobalOpenTime()}\n        />\n        <Typography variant=\"h7\">\n          -\n        </Typography>\n        <TimePicker\n            margin=\"normal\"\n            ampm={false}\n            format=\"HH:mm\"\n            className={classes.pickerStyle}\n            minutesStep={30}\n            InputProps={{\n              classes: {\n                input: classes.pickerInput,\n              },\n            }}\n            onChange={(e) => {\n              setSchedule(schedules => {\n                const newSchedules = [...schedules]\n                newSchedules[scheduleOpenIndex].periods = newSchedules[scheduleOpenIndex].periods.map(period => {\n                  return {\n                    ...period,\n                    closeTime: moment(e).format(\"HH:mm\")\n                }\n                })\n                return newSchedules\n              })\n            }}\n            value={determineGlobalCloseTime()}\n        />\n      </div>\n  )\n}\n\nexport default withStyles(styles)(ScheduleWorkingHours)\n","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {DatePicker, TimePicker} from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport WorkingHoursVariant, {weekdays} from \"./WorkingHoursVariant\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../../helpers/history\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport shortid from 'shortid';\nimport Alert from \"@material-ui/lab/Alert\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport ScheduleWorkingHours from \"./ScheduleWorkingHours\";\n\nconst styles = theme => ({\n  root: {\n    flex: 1,\n    marginTop: 10,\n    width: '100%',\n  },\n  scheduleDateContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flexWrap: 'wrap',\n  },\n  pickerStyle: {\n    width: 100,\n    padding: 5,\n  }\n});\n\n\nfunction Schedule({classes, scheduleData, setScheduleData, scheduleOpenIndex, setScheduleOpenIndex, seasonalScheduleEnabled}) {\n\n  const currentSchedule = scheduleData[scheduleOpenIndex]\n\n  const changeFromDate = (date, value) => {\n    setScheduleData(oldData => {\n      const newData = [...oldData];\n      newData[scheduleOpenIndex].from = moment(date).format('MM-DD');\n      return newData;\n    })\n  }\n\n  const changeToDate = (date, value) => {\n    setScheduleData(oldData => {\n      const newData = [...oldData];\n      newData[scheduleOpenIndex].to = moment(date).format('MM-DD');\n      return newData;\n    })\n  }\n\n  const scheduleDateContainer = (\n      <div className={classes.scheduleDateContainer}>\n        <Typography variant=\"h8\">\n          This schedule applies from\n        </Typography>\n        <DatePicker\n            className={classes.pickerStyle}\n            views={[\"month\", \"date\"]}\n            // maxDate={currentSchedule.to}\n            value={moment(currentSchedule.from, \"MM-DD\")}\n            onChange={changeFromDate}\n        />\n        <Typography variant=\"h8\">\n          to\n        </Typography>\n        <DatePicker\n            className={classes.pickerStyle}\n            views={[\"month\", \"date\"]}\n            // minDate={currentSchedule.from}\n            value={moment(currentSchedule.to, \"MM-DD\")}\n            onChange={changeToDate}\n        />\n      </div>\n  )\n\n  const handleRemoveSchedule = () => {\n    setScheduleOpenIndex(index => {\n      setScheduleData(oldData => {\n        return  [...oldData].filter((item, i) => index !== i)\n      })\n      return index - 1;\n    })\n  }\n\n  return (\n      <div className={classes.root}>\n        {seasonalScheduleEnabled && scheduleDateContainer}\n        {scheduleOpenIndex !== 0 && <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={handleRemoveSchedule}\n            startIcon={<DeleteOutlineIcon/>}\n            style={{display: 'absolute'}}>Remove this schedule</Button>}\n\n        <ScheduleWorkingHours schedule={scheduleData} setSchedule={setScheduleData} scheduleOpenIndex={scheduleOpenIndex} />\n\n      </div>\n  )\n}\n\nexport default withStyles(styles)(Schedule)\n\n\n","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../../helpers/history\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Schedule from \"./Schedule\";\nimport moment from \"moment\";\nimport Switch from \"@material-ui/core/Switch\";\nimport shortid from 'shortid';\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start'\n  },\n  tabContainer: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  tabsLayout: {\n    flex: 9,\n  },\n  addScheduleButtonContainer: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  header: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-between'\n  }\n});\n\nexport const defaultScheduleData = [\n  {\n    from: \"01-25\",\n    to: \"02-20\",\n    periods: [\n      {\n        openTime: \"08:00\",\n        closeTime: \"18:00\",\n        openDay: 0,\n        elementId: shortid.generate()\n      },\n      {\n        openTime: \"08:00\",\n        closeTime: \"18:00\",\n        openDay: 1,\n        elementId: shortid.generate()\n      },\n      {\n        openTime: \"08:00\",\n        closeTime: \"18:00\",\n        openDay: 2,\n        elementId: shortid.generate()\n      },\n      {\n        openTime: \"08:00\",\n        closeTime: \"18:00\",\n        openDay: 3,\n        elementId: shortid.generate()\n      },\n      {\n        openTime: \"08:00\",\n        closeTime: \"18:00\",\n        openDay: 4,\n        elementId: shortid.generate()\n      },\n      {\n        openTime: \"08:00\",\n        closeTime: \"17:00\",\n        openDay: 5,\n        elementId: shortid.generate()\n      },\n    ],\n\n  }\n]\n\nfunction SchedulesContainer({classes, scheduleData, setScheduleData, scheduleOpenIndex, setScheduleOpenIndex, seasonalScheduleEnabled, setSeasonalScheduleEnabled, isScheduleEnabled, setIsScheduleEnabled, lastAccommodation, setLastAccommodation}) {\n\n  const handleAddSchedule = () => {\n    setScheduleData(oldData => {\n      const newData = [...oldData]\n      newData.push({\n        from: \"01-01\",\n        to: \"05-01\",\n        periods: [...defaultScheduleData[0].periods]\n      })\n      setScheduleOpenIndex(newData.length - 1)\n      return newData;\n    })\n  }\n\n  const tabsLayout = (\n      <div className={classes.tabContainer}>\n        <Tabs\n            value={scheduleOpenIndex}\n            onChange={(event, newValue) => setScheduleOpenIndex(newValue)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            className={classes.tabsLayout}\n        >\n          {\n            scheduleData.map((item, index) =>\n                <Tab onClick={() => setScheduleOpenIndex(index)}\n                     label={`${moment(item.from, \"MM-DD\").format(\"MMMM \")}-${moment(item.to, \"MM-DD\").format(\"MMMM \")}`}/>\n            )\n          }\n        </Tabs>\n        <div className={classes.addScheduleButtonContainer}>\n          <IconButton\n              onClick={handleAddSchedule}\n              variant=\"text\"\n              color=\"secondary\"\n              size=\"large\">\n            <AddIcon/>\n          </IconButton>\n        </div>\n\n      </div>\n  )\n\n  const handleToggleSeasonalSchedule = () => {\n    const enabled = !seasonalScheduleEnabled\n    setSeasonalScheduleEnabled(() => {\n      setScheduleOpenIndex(0)\n      return enabled\n    })\n    if(enabled){\n      setScheduleData(schedule => {\n        return [...schedule].map(item => {\n          return {\n            ...item,\n            from: \"01-01\",\n            to: \"02-01\"\n          }\n        })\n      })\n    }\n  }\n\n  const handleEnableLastAccommodation = () => {\n    let accommodationTimeEnabled = lastAccommodation != null;\n    setLastAccommodation(accommodationTimeEnabled ? null : 30)\n  }\n\n  return (\n      <div className={classes.root}>\n        <div className={classes.header}>\n          <Typography variant=\"h6\">\n            Working hours\n          </Typography>\n\n          <FormControlLabel\n              control={\n                <Switch\n                    checked={isScheduleEnabled}\n                    onChange={() => setIsScheduleEnabled(state => !state)}\n                    color=\"primary\"\n                />\n              }\n              label=\"Enable schedule for this place?\"\n          />\n        </div>\n\n\n        { isScheduleEnabled &&\n        <>\n        <FormControlLabel\n            control={\n              <Checkbox\n                  checked={seasonalScheduleEnabled}\n                  onChange={handleToggleSeasonalSchedule}\n                  name=\"checkedB\"\n                  color=\"primary\"\n              />\n            }\n            label=\"Enable seasonal schedule\"\n        />\n          <FormControlLabel\n          control={\n          <Checkbox\n              name=\"checkedB\"\n              color=\"primary\"\n              checked={lastAccommodation != null}\n              onChange={handleEnableLastAccommodation}\n          />\n        }\n          label=\"Specify last accommodation times\"\n          />\n          {lastAccommodation != null &&\n          <>\n            {/*<Typography variant=\"h8\">*/}\n            {/*  Minutes before close time*/}\n            {/*</Typography>*/}\n            <TextField\n                id=\"standard-number\"\n                label=\"Minutes to closing time\"\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={lastAccommodation}\n                onChange={(e) => setLastAccommodation(e.target.value)}\n            />\n          </>\n          }\n\n        {seasonalScheduleEnabled && tabsLayout}\n\n          <Schedule scheduleData={scheduleData}\n          seasonalScheduleEnabled={seasonalScheduleEnabled}\n          setScheduleData={setScheduleData} scheduleOpenIndex={scheduleOpenIndex} setScheduleOpenIndex={setScheduleOpenIndex}/>\n          </>}\n      </div>\n  )\n}\n\nexport default withStyles(styles)(SchedulesContainer)\n\n\n","import React, {useEffect, useMemo, useState} from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\nimport {Paper} from '@material-ui/core';\nimport shortid from 'shortid';\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport API from \"../Networking/API\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Strings from \"../helpers/stringResources\";\nimport green from \"@material-ui/core/colors/green\";\nimport Reviews from \"../components/add_place_components/Reviews\";\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\nimport RecommendationListDialog from \"../components/recomendation/RecommendationListDialog\";\nimport {RecommendationType} from \"../components/recomendation/Recommendation\";\nimport SchedulesContainer, {defaultScheduleData} from \"../components/schedule_components/SchedulesContainer\";\nimport moment from \"moment\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing(2)\n  },\n  paperContent: {\n    marginTop: theme.spacing(4),\n    [theme.breakpoints.down(\"lg\")]: {\n      width: \"95%\",\n      padding: theme.spacing(2),\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      width: \"70%\",\n      padding: theme.spacing(4),\n    },\n  },\n  root: {\n    height: \"100vh\",\n    [theme.breakpoints.down(\"lg\")]: {\n      height: \"100%\",\n    },\n  },\n  loader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100vw\",\n    height: \"100vh\"\n  },\n  content: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    height: `calc(93vh - 64px)`,\n    [theme.breakpoints.down(\"lg\")]: {\n      width: \"100%\",\n      padding: theme.spacing(1),\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      width: \"auto\",\n      padding: theme.spacing(8),\n    },\n    overflowY: \"auto\"\n  },\n  bottom: {\n    [theme.breakpoints.down(\"lg\")]: {\n      position: \"fixed\",\n      height: \"7vh\",\n      bottom: 0,\n      right: 0,\n    },\n    width: \"100%\",\n    zIndex: 5,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    padding: theme.spacing(1),\n  }\n});\n\n\nfunction AddPlace({classes, match}) {\n  const [placeInfo, setPlaceInfo] = useState({\n    placeId: \"\",\n    name: \"\", description: \"\", website: \"\", phoneNumber: \"\",\n    isPublic: false, isVerified: true, overallStarRating: 0, totalReviews: 0,\n    source: \"\", price: \"\", averageTimeSpent: \"0\"\n  });\n\n\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n\n  const [scheduleData, setScheduleData] = useState(defaultScheduleData);\n  const [scheduleOpenIndex, setScheduleOpenIndex] = useState(0);\n  const [seasonalScheduleEnabled, setSeasonalScheduleEnabled] = useState(false);\n  const [lastAccommodation, setLastAccommodation] = useState(null);\n\n  const [photos, setPhotos] = useState([]);\n\n  const [locationData, setLocationData] = useState({\n    city: '',\n    address: '',\n    country: '',\n    latitude: 54.687157,\n    longitude: 25.279652,\n    county: '',\n    municipality: ''\n  });\n  const [parkingMarkerData, setParkingMarkerData] = useState({\n    city: '',\n    address: '',\n    country: '',\n    latitude: 54.687157,\n    longitude: 25.279652,\n    county: '',\n    municipality: ''\n  });\n  const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\n\n  const [sources, setSources] = useState([]);\n\n  const [isScheduleEnabled, setIsScheduleEnabled] = useState(false);\n\n  const [placeId, setPlaceId] = useState(match.params.placeId);\n\n  const [firstTimeLoading, setFirstTimeLoading] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [error, setError] = useState({name: false});\n  const [checkErrors, setCheckErrors] = useState(false);\n\n  const [showRecommendationDialog, setShowRecommendationDialog] = useState(false)\n\n  const {addConfig} = UseSnackbarContext();\n  const {addAlertConfig} = UseAlertDialogContext();\n\n  const {title, setTitle} = UseAppBarTitleContext();\n\n  const ColorButton = withStyles((theme) => ({\n    root: {\n      color: \"white\",\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700],\n      },\n    },\n  }))(Button);\n\n  useEffect(() => {\n    if (placeId !== undefined) {\n      getPlaceInfo()\n    }\n  }, []);\n\n  useEffect(() => {\n    //Loaded place for editing\n    if (placeId === undefined) {\n      setTitle(\"Add new place\");\n      setFirstTimeLoading(false) //Just loaded add place window\n    }\n    //New Place has been just inserted, thus inserting other place info\n    if (placeId !== undefined && firstTimeLoading === false) {\n      Promise.all([\n        updateTagsData(placeId),\n        updateParkingData(placeId),\n        updateCategoriesData(placeId),\n        updatePhotoData(placeId),\n        updateSchedule(placeId),\n        updateSources(placeId)\n      ]).then(responses => {\n        formFeedback(true, Strings.SNACKBAR_PLACE_INSERTED_SUCCESS)\n      }).catch(error => {\n        formFeedback(false)\n      })\n    }\n\n  }, [placeId]);\n\n  useEffect(() => {\n    if (firstTimeLoading === false) {\n      updateAll()\n    }\n  }, [placeInfo['isPublic']]);\n\n  function addToRecommendation() {\n    setShowRecommendationDialog(true)\n  }\n\n  function getPlaceInfo() {\n    API.Places.getPlaceById(\"?full=true&p=\" + placeId).then(response => {\n      setAllData(response)\n      setTitle(\"Editing place/\" + response.name);\n    }).catch(error => {\n      formFeedback(false)\n    })\n  }\n\n  const parseScheduleData = (data) => {\n\n    data.some(schedule => {\n      return schedule.periods.some(period => {\n        if (period.lastAccommodation != null) {\n          setLastAccommodation(moment(period.lastAccommodation, 'HH:mm').minutes() - moment(period.closeTime, 'HH:mm').minutes())\n          return true\n        }\n        return false\n      })\n    })\n\n    if (data.length > 1 || data.some(schedule => schedule.from != null && schedule.to != null))\n      setSeasonalScheduleEnabled(true)\n\n    return (data.map(schedule => {\n      const newData = {...schedule}\n      newData.periods = newData.periods.map(period => {\n        const newPeriod = {...period}\n        newPeriod.elementId = shortid.generate()\n        return newPeriod\n      })\n      return newData\n    }))\n  }\n\n  const convertSchedule = (data) => {\n    return (data.map(schedule => {\n      const newSchedule = {...schedule}\n      if (!seasonalScheduleEnabled) {\n        delete newSchedule.from;\n        delete newSchedule.to;\n      }\n      newSchedule.periods = newSchedule.periods.map(period => {\n        const newPeriod = {...period}\n        if (lastAccommodation != null)\n          newPeriod.lastAccommodation = moment(newPeriod.closeTime, 'HH:mm').subtract(lastAccommodation, 'minutes').format('HH:mm')\n        newPeriod.closeDay = newPeriod.openDay\n        return newPeriod\n      })\n\n      newSchedule.scheduleDefault = false;\n      console.log(newSchedule)\n      return newSchedule\n    }))\n  }\n\n  function setAllData(place) {\n    setPlaceInfo({\n      placeId: place.placeId,\n      name: place.name,\n      description: place.description,\n      website: place.website,\n      phoneNumber: place.phoneNumber,\n      hasSchedule: place.hasSchedule,\n      isPublic: place.isPublic,\n      isVerified: place.isVerified,\n      overallStarRating: place.overallStarRating,\n      totalReviews: place.totalReviews,\n      price: place.price,\n      averageTimeSpent: place.averageTimeSpent,\n    });\n\n    setLocationData({\n      city: place.city,\n      address: place.address,\n      country: place.country,\n      latitude: place.latitude,\n      longitude: place.longitude,\n      county: place.county,\n      municipality: place.municipality,\n    });\n\n    setParkingMarkerData({\n      city: place.city,\n      address: place.address,\n      country: place.country,\n      latitude: place.latitude,\n      longitude: place.longitude,\n      county: place.county,\n      municipality: place.municipality,\n    });\n\n    setScheduleData(place.schedule.length === 0 ? defaultScheduleData : parseScheduleData(place.schedule))\n    if (place.schedule.length === 0)\n      setIsScheduleEnabled(false)\n\n    setSources(place.sources);\n    setSelectedTags(place.tags);\n    setSelectedCategories(place.categories);\n\n    setAllSelectedParkingData(place.parking);\n    setPhotos(place.photos);\n    setFirstTimeLoading(false)\n  }\n\n  function formFeedback(success, message = Strings.SNACKBAR_ERROR) {\n    addConfig(success, message);\n    setIsLoading(false)\n  }\n\n  function saveChanges() {\n    if (placeId === undefined) {\n      addAlertConfig(Strings.DIALOG_PLACE_INSERT_TITLE, Strings.DIALOG_PLACE_INSERT, [{\n        name: \"Insert\", action: () => {\n          setIsLoading(true);\n          insertBasicPlaceInfo()\n        }\n      }])\n    } else {\n      addAlertConfig(Strings.DIALOG_PLACE_UPDATE_TITLE, Strings.DIALOG_PLACE_UPDATE, [{\n        name: \"save and publish\", action: () => {\n          let plc = Object.assign({}, placeInfo, {});\n          plc.isPublic = 1;\n          setPlaceInfo(plc);\n          setIsLoading(true);\n          updateAll()\n        }\n      }, {\n        name: \"save\", action: () => {\n          setIsLoading(true);\n          updateAll()\n        }\n      }])\n    }\n  }\n\n  function updateAll() {\n    Promise.all([\n      updatePlaceInfo(),\n      updateTagsData(placeId),\n      updatePhotoData(placeId),\n      updateCategoriesData(placeId),\n      updateParkingData(placeId),\n      updateSchedule(placeId),\n      updateSources(placeId)\n    ]).then(response => {\n      formFeedback(true, Strings.SNACKBAR_CHANGES_SAVED);\n    }).catch(err => {\n      formFeedback(false)\n    })\n  }\n\n  function updatePlaceInfo() {\n    API.Places.updatePlace(formPlaceInfo()).then(response => {\n\n    }).catch(error => {\n\n    })\n\n  }\n\n  function insertBasicPlaceInfo() {\n    API.Places.insertPlace(formPlaceInfo()).then(placeId => {\n      setPlaceId(placeId)\n    }).catch(error => {\n\n    })\n  }\n\n  function updateParkingData(id) {\n    API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\" + id).then(response => {\n\n    }).catch(error => {\n\n    })\n  }\n\n  function updateTagsData(id) {\n    API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\" + id).then(response => {\n\n    }).catch(error => {\n\n    })\n  }\n\n  function updateSources(id) {\n    API.SourcePlace.updateSourcesForPlace(sources, \"?p=\" + id).then(response => {\n    }).catch(error => {\n\n    })\n  }\n\n\n  function updateCategoriesData(id) {\n    API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\" + id).then(response => {\n\n    }).catch(error => {\n\n    })\n  }\n\n  function updatePhotoData(id) {\n    API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\" + id).then(response => {\n\n    }).catch(error => {\n\n    })\n  }\n\n\n  function updateSchedule(id) {\n    API.Schedule.updateScheduleForPlace(isScheduleEnabled ? convertSchedule(scheduleData) : [], \"?id=\" + id).then(response => {\n    }).catch(er => {\n    })\n\n  }\n\n  function formPlaceInfo() {\n    let d = Object.assign(placeInfo, locationData);\n    return d\n  }\n\n\n  function publishPlace() {\n    addAlertConfig(Strings.DIALOG_PLACE_PUBLISH_TITLE, placeInfo['isPublic'] ? Strings.DIALOG_PLACE_UNPUBLISH_MESSAGE : Strings.DIALOG_PLACE_PUBLISH_MESSAGE,\n        [{\n          name: \"Agree\", action: () => {\n            let obj = Object.assign({}, placeInfo, {});\n            obj['isPublic'] = !obj['isPublic'];\n            setPlaceInfo(obj);\n          }\n        }])\n\n  }\n\n  function verifyPlace() {\n    addAlertConfig(Strings.DIALOG_PLACE_VERIFY_TITLE, Strings.DIALOG_PLACE_VERIFY_MESSAGE, [{\n      name: \"agree\", action: () => {\n        let obj = Object.assign({}, placeInfo, {});\n        obj['isPublic'] = 1;\n        obj['isVerified'] = 1;\n        setPlaceInfo(obj);\n      }\n    }])\n  }\n\n  const basicPlaceInfo = useMemo(() => {\n    return <Paper elevation={4} className={classes.paperContent}>\n      <BasicPlaceInfo\n          error={error}\n          setError={setError}\n          checkErrors={checkErrors}\n          placeInfo={placeInfo}\n          setPlaceInfo={setPlaceInfo}\n          selectedSources={sources}\n          setSelectedSources={setSources}\n      />\n    </Paper>\n  }, [placeInfo.name,\n    placeInfo.description,\n    placeInfo.averageTimeSpent,\n    placeInfo.phoneNumber,\n    placeInfo.price,\n    placeInfo.website,\n    sources\n  ])\n\n  const placePhotos = useMemo(() => {\n    return (\n        <Paper elevation={4} className={classes.paperContent}>\n          <PhotosInfo\n              photos={photos}\n              setPhotos={setPhotos}\n          />\n        </Paper>\n    )\n  }, [photos])\n\n  const placeLocation = useMemo(() => {\n    return (\n        <Paper elevation={4} className={classes.paperContent}>\n          <PlaceLocation\n              placeInfo={placeInfo}\n              locationData={locationData}\n              setParkingLocation={setParkingMarkerData}\n              setLocationData={setLocationData}/>\n        </Paper>\n    )\n  }, [locationData])\n\n  const parkingLocation = useMemo(() => {\n    return (\n        <Paper elevation={4} className={classes.paperContent}>\n          <ParkingLocation\n              placeInfo={placeInfo}\n              allSelectedParkingData={allSelectedParkingData}\n              setAllSelectedParkingData={setAllSelectedParkingData}\n              locationData={parkingMarkerData}\n              setLocationData={setParkingMarkerData}/>\n        </Paper>\n    )\n  }, [allSelectedParkingData, parkingMarkerData])\n\n  const placeDiscovery = useMemo(() => {\n    return (\n        <Paper elevation={4} className={classes.paperContent}>\n          <PlaceDiscovery\n              selectedTags={selectedTags}\n              setSelectedTags={setSelectedTags}\n              selectedCategories={selectedCategories}\n              setSelectedCategories={setSelectedCategories}/>\n        </Paper>\n    )\n  }, [selectedCategories, selectedTags])\n\n\n  const scheduleContainer = useMemo(() => {\n    return (\n        <Paper elevation={4} className={classes.paperContent}>\n          {<SchedulesContainer scheduleData={scheduleData} setScheduleData={setScheduleData}\n                               scheduleOpenIndex={scheduleOpenIndex}\n                               setScheduleOpenIndex={setScheduleOpenIndex}\n                               seasonalScheduleEnabled={seasonalScheduleEnabled}\n                               setSeasonalScheduleEnabled={setSeasonalScheduleEnabled}\n                               setLastAccommodation={setLastAccommodation}\n                               isScheduleEnabled={isScheduleEnabled}\n                               setIsScheduleEnabled={setIsScheduleEnabled}\n                               lastAccommodation={lastAccommodation}/>}\n        </Paper>\n    )\n  }, [scheduleData, scheduleOpenIndex, lastAccommodation, seasonalScheduleEnabled, isScheduleEnabled])\n\n  return (\n      <div className={classes.root}>\n\n        {firstTimeLoading ? <div className={classes.loader}><CircularProgress/></div> :\n            <div className={classes.content}>\n\n              {basicPlaceInfo}\n\n              {placeId !== undefined ?\n                  <Paper elevation={4} className={classes.paperContent}>\n                    <Reviews\n                        placeInfo={placeInfo}\n                    />\n                  </Paper>\n                  : null}\n\n              {placePhotos}\n              {placeLocation}\n              {parkingLocation}\n              {placeDiscovery}\n              {scheduleContainer}\n            </div>}\n\n\n        {isLoading ? <LinearProgress/> : null}\n\n        <Paper elevation={1} className={classes.bottom}>\n\n          {\n            placeInfo['isVerified'] === false && placeId !== undefined ?\n                <ColorButton\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                      verifyPlace()\n                    }}\n                    className={classes.button}\n                >\n                  Verify place\n                </ColorButton>\n                :\n                <FormControlLabel\n                    control={<Switch checked={placeInfo['isPublic']} onChange={() => {\n                      publishPlace()\n                    }\n                    } name=\"isPublic\"/>}\n                    label=\"Make this place public\"\n                />}\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => saveChanges()}\n              className={classes.button}>\n            Save\n          </Button>\n\n          {placeId != null ?\n              <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => addToRecommendation()}\n                  className={classes.button}>\n                Add to recommendation\n              </Button> : null\n          }\n\n\n          <RecommendationListDialog\n              open={showRecommendationDialog}\n              setOpen={setShowRecommendationDialog}\n              objectId={placeInfo.placeId}\n              type={RecommendationType.place}\n          />\n\n        </Paper>\n      </div>)\n\n}\n\nAddPlace.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AddPlace)\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport {debounce} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        margin: theme.spacing(2)\n        // width: 400,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    divider: {\n        // height: 28,\n        margin: 4,\n    },\n}));\n\nexport default function SearchInputComponent({hint, searchCallback}) {\n    const classes = useStyles();\n\n    const debouncedInput = (event) => {\n        searchCallback(event.target.value)\n    }\n\n    const debounceInput = debounce(event => debouncedInput(event), 500)\n\n    const handleInput = (event) => {\n        event.persist()\n        debounceInput(event)\n    }\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <InputBase\n                className={classes.input}\n                placeholder={hint}\n                inputProps={{ 'aria-label': hint }}\n                onChange={handleInput}\n            />\n            <IconButton className={classes.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n            <Divider className={classes.divider} orientation=\"vertical\" />\n        </Paper>\n    );\n}","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {useState} from \"react\"\nimport ApiPlaceCard from \"../components/ApiPlaceCard\";\nimport API from \"../Networking/API\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Masonry from \"react-masonry-component\";\nimport SearchInputComponent from \"../components/SearchInputComponent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\n\n\n\nconst styles = theme => ({\n    root:{\n        overflow: 'scroll',\n        width: \"100%\",\n        padding: theme.spacing(1),\n        height:`calc(100vh - 64px)`,\n        paddingTop: \"9vh\",\n    },\n    topBar: {\n        height: \"8vh\",\n        position: \"absolute\",\n        width: \"60%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        justifyContent: \"center\",\n        zIndex: 1\n    },\n    searchBox: {\n        margin: theme.spacing(1)\n    },\n    placeApiCard: {\n        [theme.breakpoints.down('lg')]: {\n            width: \"95%\",\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: \"28vw\",\n        },\n        // minWidth: \"400px\",\n        margin: theme.spacing(1)\n    }\n})\n\nfunction ApiPlaces({classes}){\n\n    const [data, setData] = useState([]);\n    const [isLoadingData, setIsLoadingData] = useState(false);\n    const { addConfig } = UseSnackbarContext();\n\n    const loadDataFunc = (query) => {\n        setData([])\n        setIsLoadingData(true)\n        API.Places.searchApiPlaces(\"?keyword=\" + encodeURI(query)).then(response => {\n            setData([...response])\n        }).catch(error => {\n            addConfig(false, \"The request did not go through.\")\n        }).finally(() => {\n            setIsLoadingData(false)\n        })\n    }\n\n    const handleSearch = (word) => {\n        if(word.length > 3)\n            loadDataFunc(word)\n    }\n\n    return(\n        <div style={{position: \"relative\"}}>\n            <div className = {classes.topBar}>\n                <SearchInputComponent searchCallback={handleSearch} hint=\"Search api places\" style={classes.searchBox} />\n            </div>\n\n            <div className={classes.root}>\n                <Masonry\n                    style={{margin: \"0 auto\"}}\n                    elementType={'div'} // default 'div'\n                    options={{\n                        isFitWidth: true\n                    }} // default {}\n                    disableImagesLoaded={false} // default false\n                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n                >\n\n                    {data.map(item => {\n                        return <ApiPlaceCard classes ={{ root: classes.placeApiCard}} key={item.placeId} placeData = {item} style={{boxSizing: 'border-box'}}/>\n                    })}\n\n                    {\n                        data.length === 0 && !isLoadingData &&\n                        <Typography variant=\"subtitle1\">No results</Typography>\n                    }\n                    {\n                        isLoadingData &&\n                        <CircularProgress  />\n                    }\n\n                </Masonry>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(ApiPlaces)","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\">\n            {'Copyright © '}\n            Traveldirection {' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n    main: {\n        marginTop: theme.spacing(8),\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n    },\n}));\n\nexport default function NotFoundPage() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n                    Page not found\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                    {'Try something else'}\n                </Typography>\n            </Container>\n            <footer className={classes.footer}>\n                <Container maxWidth=\"sm\">\n                    <Copyright />\n                </Container>\n            </footer>\n        </div>\n    );\n}","import {withStyles} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst styles = theme => ({\n    cardRoot: {\n        [theme.breakpoints.only(\"lg\")]: {\n            display: 'flex',\n            // alignItems: \"flex-start\"\n        },\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 5\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        [theme.breakpoints.down(\"lg\")]: {\n            height: \"200px\",\n        },\n        [theme.breakpoints.only(\"lg\")]: {\n            flex: 1,\n            height: \"auto\",\n        },\n    },\n    root: {\n        display: \"flex\",\n        flexFlow: \"column wrap\"\n    },\n    addParkingWrapper: {\n        display: \"inline-block\"\n    }\n})\n\n\nfunction TourPlaceComponent({classes, elementData, removeCallback, addTransportCallback, displayNoTransportWarning}) {\n\n    function truncateText(text) {\n        if (text == null)\n            return \"\"\n        if (text.length > 500) {\n            return text.substring(0, 500) + \"...\";\n        } else {\n            return text\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Card className={classes.cardRoot}>\n\n                {elementData.data.details.photos != null && elementData.data.details.photos.length > 0 &&\n                <CardMedia\n                    className={classes.cover}\n                    image={elementData.data.details.photos[0].url}\n\n                />\n                }\n\n                <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                        <Typography component=\"h5\" variant=\"h5\">\n                            {elementData.data.details.name}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                            {truncateText(elementData.data.details.description)}\n                        </Typography>\n                    </CardContent>\n                </div>\n                <CardHeader\n                    action={\n                        <IconButton aria-label=\"remove\" onClick={() => removeCallback(elementData)}>\n                            <RemoveIcon/>\n                        </IconButton>\n                    }\n                />\n            </Card>\n\n            {displayNoTransportWarning &&\n            <Alert severity=\"error\">No transport from this place specified</Alert>}\n\n            <div className={classes.addParkingWrapper}>\n                <Button style={{display: \"inline\"}} color=\"secondary\" onClick={() => addTransportCallback(elementData)}>\n                    <AddIcon/>\n                </Button>\n                <Typography style={{display: \"inline\"}} variant=\"subtitle1\">\n                    Add transport from this place\n                </Typography>\n            </div>\n\n        </div>\n\n    )\n}\n\nTourPlaceComponent.propTypes = {\n    elementData: PropTypes.object.isRequired,\n    removeCallback: PropTypes.func.isRequired,\n    addTransportCallback: PropTypes.func.isRequired,\n    displayNoTransportWarning: PropTypes.bool\n};\n\nexport default withStyles(styles)(TourPlaceComponent)\n","import React, { useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MetroIcon from '@material-ui/icons/DirectionsTransit';\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DriveEta';\nimport TrainIcon from '@material-ui/icons/Train';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport TramIcon from '@material-ui/icons/Tram';\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\n\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\",\n        flexFlow: \"column wrap\"\n    },\n    transportSelectWrapper: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    transportSelect: {\n        marginLeft: theme.spacing(1),\n        width: \"100px\"\n    }\n});\n\nconst transportTypes = [\n    {\n        icon: <MetroIcon/>,\n        label: \"Metro\"\n    },\n    {\n        icon: <DirectionsBikeIcon/>,\n        label: \"Bike\"\n    },\n    {\n        icon: <DirectionsBusIcon/>,\n        label: \"Bus\"\n    },\n    {\n        icon: <CarIcon/>,\n        label: \"Car\"\n    },\n    {\n        icon: <TrainIcon/>,\n        label: \"Train\"\n    },\n    {\n        icon: <FlightIcon/>,\n        label: \"Plane\"\n    },\n    {\n        icon: <DirectionsWalkIcon/>,\n        label: \"Walk\"\n    },\n    {\n        icon: <TramIcon/>,\n        label: \"Tram\"\n    }\n]\n\nfunction TransportItem({classes, transportId, transportChangeCallback, transportRemoveCallback}) {\n\n    const [currentTransport, setCurrentTransport] = useState(transportId == null ? 0 : transportId)\n\n    const handleTransportChange = (e) => {\n        setCurrentTransport(e.target.value)\n        transportChangeCallback({transport: parseInt(e.target.value)})\n    }\n\n    return (\n        <div className={classes.root}>\n            <MoreVertIcon/>\n            <div className={classes.transportSelectWrapper}>\n                {transportTypes[currentTransport].icon}\n                <FormControl className={classes.transportSelect} >\n                    <NativeSelect\n                        value={currentTransport}\n                        onChange={handleTransportChange}\n                    >\n                        {transportTypes.map((item, index) => {\n                            return <option key={index} value={index}> {item.label}</option>\n                        })}\n                    </NativeSelect>\n                </FormControl>\n                <IconButton aria-label=\"remove\" onClick={() => transportRemoveCallback()}>\n                    <RemoveIcon />\n                </IconButton>\n            </div>\n            <MoreVertIcon/>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(TransportItem)","import {withStyles} from \"@material-ui/core/styles\";\nimport TourPlaceComponent from \"./TourPlaceComponent\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ElementType} from \"./Tour\";\nimport { SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport TransportItem from \"./TransportItem\";\nimport shortid from 'shortid';\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst styles = theme => ({\n    tourPlaceComponent: {\n        margin: theme.spacing(2)\n    },\n    root: {\n        display: \"flex\",\n        flexFlow: \"column wrap\",\n        margin: theme.spacing(1)\n    }\n})\n\nconst TourPlaceSortable = SortableElement(({displayNoTransportWarning, elementData, removePlaceCallback, classes, addTransportCallback}) => (\n    <div>\n        <TourPlaceComponent removeCallback={removePlaceCallback} classes={{root: classes.tourPlaceComponent}}\n                            addTransportCallback={addTransportCallback} elementData={elementData}\n                            displayNoTransportWarning={displayNoTransportWarning}/>\n    </div>\n));\nconst TransportItemSortable = SortableElement(({transportId, transportChangeCallback, transportRemoveCallback}) => (\n    <div>\n        <TransportItem transportId={transportId} transportRemoveCallback={transportRemoveCallback} transportChangeCallback={transportChangeCallback}/>\n    </div>\n));\n\nconst SortableList = SortableContainer(({currentDay, removeElementCallback, tourInfo, classes, addTransportCallback, transportChangeCallback}) => {\n\n    const shouldDisplayNoTransportWarning = (index) => {\n        let elements = tourInfo.days[currentDay].tour\n        return ((elements.length -1 ) > index) && elements[index + 1].type !== ElementType.transport\n    }\n\n    return (\n\n        <ul>\n            {tourInfo.days[currentDay].tour.map((item, index) => {\n\n                switch (item.type) {\n                    case ElementType.place:\n                        return <TourPlaceSortable key={item.data.details.placeId} index={index}\n                                                  addTransportCallback={addTransportCallback} elementData={item}\n                                                  classes={classes}\n                                                  displayNoTransportWarning={shouldDisplayNoTransportWarning(index)}\n                                                  removePlaceCallback={() => removeElementCallback(index)}/>\n                    case ElementType.transport:\n                        return <TransportItemSortable key={item.data.elementIdentifier} index={index}\n                                                      transportId={item.data.transport}\n                                                      transportRemoveCallback = {() => removeElementCallback(index)}\n                                                      transportChangeCallback={(transport) => transportChangeCallback(index, transport)}/>\n                }\n            })}\n        </ul>\n    )\n});\n\nfunction TourPlacesWrapper({classes, tourInfo, tourInfoReducer, currentDay, errorInfo, setErrorInfo}) {\n\n    const removeElementCallback = (index) => {\n        tourInfoReducer({\n            type: 'REMOVE_ELEMENT',\n            day: currentDay,\n            index: index\n        })\n    };\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        tourInfoReducer({\n            type: 'MOVE_ELEMENT',\n            day: currentDay,\n            oldIndex: oldIndex,\n            newIndex: newIndex\n        })\n    }\n\n    const handleTransportChange = (index, data) => {\n        tourInfoReducer({\n            type: 'UPDATE_ELEMENT',\n            day: currentDay,\n            index: index,\n            data: data\n        })\n    }\n\n    const addTransportCallback = (details) => {\n        tourInfoReducer({\n            type: 'INSERT_TRANSPORT_FOR_PLACE',\n            placeId: details.data.details.placeId,\n            day: currentDay,\n            data: {type: ElementType.transport, data: {transport: 0, elementIdentifier: shortid.generate()}}\n        })\n    }\n\n\n\n    return (\n        <div className={classes.root}>\n            {tourInfo.days[currentDay].tour.length === 0 &&\n            <Alert severity=\"warning\">You have not added any places for the currently selected day.</Alert>}\n            <SortableList\n                pressDelay={200}\n                disableAutoscroll={false}\n                currentDay={currentDay}\n                tourInfo={tourInfo}\n                transportChangeCallback={handleTransportChange}\n                onSortEnd={onSortEnd}\n                classes={classes}\n                addTransportCallback={addTransportCallback}\n                removeElementCallback={removeElementCallback}/>\n        </div>\n    )\n}\n\nTourPlacesWrapper.propTypes = {\n    tourInfo: PropTypes.object.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n    currentDay: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(TourPlacesWrapper)\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React, {useState} from \"react\";\nimport SearchInputComponent from \"../SearchInputComponent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\nimport DnsIcon from \"@material-ui/icons/Dns\";\nimport ApiPlaceCard from \"../ApiPlaceCard\";\nimport API from \"../../Networking/API\";\n\nconst styles = theme => ({\n    searchInputComponent: {\n\n    },\n    placeCard: {\n        margin: theme.spacing(1, 8, 1, 8),\n    },\n})\n\n\nfunction PlaceSearch({classes, addPlaceCallback, apiPlacesFound, setApiPlacesFound, localPlacesFound, setLocalPlacesFound}) {\n\n    // const [apiPlacesLoading, setApiPlacesLoading] = useState(false)\n    const [localPlacesLoading, setLocalPlacesLoading] = useState(false)\n\n    const placeType = {\n        local: 0,\n        api: 1\n    }\n\n    const generatePlaceCards = () => {\n        let genProps = (placeInfo, type) => {\n            return {\n                classes: {root: classes.placeCard},\n                key: placeInfo.placeId,\n                renderActionArea: () => {\n                    return (\n                        <div>\n                            <Button color=\"primary\" onClick={() => addPlaceCallback(placeInfo, type)}>\n                                <AddIcon/>\n                            </Button>\n                            <Tooltip title={type === placeType.local ? \"This place is from our database\" : \"This place is from API\"} aria-label=\"add\">\n                                {type === placeType.local ? <LocalLibraryIcon/> : <DnsIcon/>}\n                            </Tooltip>\n                        </div>\n                    )\n                },\n                placeData : placeInfo\n            }\n        }\n\n        let mappedPlaces = []\n        localPlacesFound.forEach(item => {\n            mappedPlaces.push(<ApiPlaceCard {...genProps(item, placeType.local)}/>)\n        })\n        // apiPlacesFound.forEach(item => {\n        //     mappedPlaces.push( <ApiPlaceCard {...genProps(item, placeType.api)}/>)\n        // })\n        return mappedPlaces\n    }\n\n    const searchCallback = (keyword) => {\n        if(keyword.length < 3)\n            return;\n        setLocalPlacesFound([])\n        setApiPlacesFound([])\n        // setApiPlacesLoading(true)\n        setLocalPlacesLoading(true)\n        API.Places.getAllPlacesAdmin(\"?keyword=\" + keyword).then(response=>{\n            setLocalPlacesFound(response.list)\n            setLocalPlacesLoading(false)\n        }).catch(error=>{\n            console.log(error)\n        })\n\n        // API.Places.searchApiPlaces(\"?keyword=\" + keyword).then(response => {\n        //     setApiPlacesFound(response)\n        //     setApiPlacesLoading(false)\n        // }).catch(error => {\n        //     console.log(error)\n        // })\n    }\n\n    return(\n        <React.Fragment>\n            <SearchInputComponent hint=\"Search for a place\" searchCallback={searchCallback} className={classes.searchInputComponent}/>\n            {(localPlacesLoading) ?\n                <CircularProgress  /> :\n                <React.Fragment>\n                    {generatePlaceCards()}\n                </React.Fragment>\n            }\n        </React.Fragment>\n    )\n}\n\nexport default withStyles(styles)(PlaceSearch)\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Button from \"@material-ui/core/Button\";\n\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\",\n        margin: theme.spacing(1)\n    },\n    radioButtonArea: {\n    },\n    cardArea: {\n        flex: 1,\n        display: \"flex\"\n    },\n    content: {\n        flex: '1 1 auto',\n    },\n    descriptionInput: {\n        marginTop: theme.spacing(2),\n        width: \"100%\",\n        height: \"auto\"\n    },\n    headerWrap: {}\n})\n\nfunction DayCard({classes, onSelectCallback, index, currentDay, tourInfoReducer, description, handleRemoveDay}) {\n\n    const updateDescriptionGlobally = (e) => {\n        tourInfoReducer({\n            type: 'UPDATE_DAY',\n            day: index,\n            data: {\n                description: e\n            }\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.radioButtonArea}>\n                <Radio checked={index === currentDay} onChange={(e) => {\n                    onSelectCallback(index)\n                }}/>\n            </div>\n            <Card className={classes.cardArea}>\n                <CardContent className={classes.content}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                        Day {index + 1}\n                    </Typography>\n\n                    <TextField\n                        className={classes.descriptionInput}\n                        multiline\n                        label=\"Description\"\n                        value={description}\n                        variant=\"outlined\"\n                        onChange={(e) => {\n                            updateDescriptionGlobally(e.target.value)\n                        }}\n                    />\n                </CardContent>\n                <CardHeader\n                    action={\n                        <Button startIcon={<RemoveIcon/>} aria-label=\"remove\" onClick={() => handleRemoveDay(index)}/>\n                    }\n                />\n            </Card>\n        </div>\n    )\n}\n\nDayCard.propTypes = {\n    onSelectCallback: PropTypes.func.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n    currentDay: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(DayCard)\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DayCard from \"./DayCard\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport shortid from 'shortid';\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    addDayButton: {\n        marginTop: theme.spacing(1)\n    },\n    footerWrapper: {\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"flex-end\"\n    }\n})\n\nconst DayCardSortable = SortableElement(({dayInfo, day, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => (\n    <DayCard\n        description={dayInfo.description}\n        currentDay={currentDay}\n        index={day}\n        handleRemoveDay={removeDayCallback}\n        onSelectCallback={onSelectCallback}\n        tourInfoReducer={tourInfoReducer}/>\n));\n\nconst SortableList = SortableContainer(({elements, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => {\n\n    return (\n        <ul style={{padding: \"0px\"}}>\n            {elements.map((item, index) => {\n                return <DayCardSortable\n                    currentDay={currentDay}\n                    day={index}\n                    index={index}\n                    removeDayCallback={removeDayCallback}\n                    key={item.elementIdentifier}\n                    dayInfo={item}\n                    onSelectCallback={onSelectCallback}\n                    tourInfoReducer={tourInfoReducer}/>\n            })}\n        </ul>\n    );\n});\n\nfunction DaysWrapper({classes, currentDay, setCurrentDay, tourInfo, tourInfoReducer}) {\n\n    const { addAlertConfig } = UseAlertDialogContext();\n\n    const handleSelect = (index) => {\n        setCurrentDay(index)\n    }\n\n    const addDayHandler = () => {\n        tourInfoReducer({\n            type: 'ADD_DAY',\n            data: {\n                description: \"\",\n                elementIdentifier: shortid.generate(),\n                tour: []\n            }\n        })\n    }\n\n    const removeDay = (day) => {\n        tourInfoReducer({\n                type: 'REMOVE_DAY',\n                day: day,\n            }\n        )\n        if(day === currentDay)\n            setCurrentDay(day - 1)\n    }\n\n    const removeDayCallback = (day) => {\n        if(tourInfo.days.length === 1){\n            addAlertConfig(\"Warning\", \"The tour has to have at least one day\", [])\n        }else{\n            if(tourInfo.days[day].tour.length > 0){ //This day has at least one place/transport added to it\n                addAlertConfig(\"Warning\", \"Are you sure you want to remove this day?\",[{name: \"yes\", action: ()=>{\n                    removeDay(day)\n                    }}],() => {\n                })\n            }else removeDay(day)\n        }\n    }\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        tourInfoReducer({\n            type: 'MOVE_DAY',\n            oldIndex: oldIndex,\n            newIndex: newIndex\n        })\n        setCurrentDay(newIndex)\n    }\n\n    return (\n        <div className={classes.root}>\n            <SortableList\n                pressDelay={200}\n                disableAutoscroll={false}\n                elements={tourInfo.days}\n                currentDay={currentDay}\n                onSortEnd={onSortEnd}\n                removeDayCallback={removeDayCallback}\n                onSelectCallback={handleSelect}\n                tourInfoReducer={tourInfoReducer}/>\n            <div className={classes.footerWrapper}>\n                <Button\n                    variant=\"text\"\n                    color=\"secondary\"\n                    size=\"large\"\n                    className={classes.addDayButton}\n                    onClick={addDayHandler}\n                    startIcon={<AddIcon/>}>\n                    Add another day\n                </Button>\n            </div>\n\n        </div>\n    )\n}\n\nDaysWrapper.propTypes = {\n    setCurrentDay: PropTypes.func.isRequired,\n    currentDay: PropTypes.number.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n    tourInfo: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DaysWrapper)\n","import {arrayMove} from \"react-sortable-hoc\";\nimport {ElementType} from \"./Tour\";\n\nexport default function TourDataReducer(state, action) {\n\n    let days = []\n\n    switch (action.type) {\n        case 'ADD_ELEMENT':\n            if(state.days !== null && action.data.type === ElementType.place && state.days.some(day => day.tour !== null && day.tour.some(place => place.type === ElementType.place && place.data.details.placeId === action.data.data.details.placeId))){\n                if(action.onError !== null && action.onError !== undefined){\n                    action.onError()\n                }\n                return state\n            }\n\n            state.days.forEach((item, index) => {\n                if (index === action.day) {\n                    days.push({\n                        ...item,\n                        tour: [\n                            ...item.tour,\n                            action.data\n                        ]\n                    })\n                } else days.push(item)\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'UPDATE_ELEMENT':\n            state.days.forEach((item, index) => {\n                if (index === action.day) {\n                    let tour = item.tour\n                    tour[action.index] = {...tour[action.index], data: {...tour[action.index].data, ...action.data}}\n                    days.push({\n                        ...item,\n                        tour: tour\n                    })\n                } else days.push(item)\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'INSERT_TRANSPORT_FOR_PLACE':\n            state.days.forEach((item, index) => {\n                if (index === action.day) {\n                    let tour = item.tour\n                    let index = tour.findIndex((item) => item.type === ElementType.place && item.data.details.placeId === action.placeId)\n                    tour.splice(index + 1, 0, action.data)\n                    days.push({\n                        ...item,\n                        tour: tour\n                    })\n                } else days.push(item)\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'ADD_DAY':\n            return {\n                ...state,\n                days: [\n                    ...state.days,\n                    action.data\n                ]\n            }\n        case 'MOVE_DAY':\n            return {\n                ...state,\n                days: arrayMove(state.days, action.oldIndex, action.newIndex)\n            }\n        case 'MOVE_ELEMENT':\n            days = state.days.map((item, index) => {\n                if (index === action.day)\n                    return {...item, tour: arrayMove(item.tour, action.oldIndex, action.newIndex)}\n                else return item\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'UPDATE_DAY':\n            days = state.days.map((item, index) => {\n                if (index === action.day) {\n                    return {...item, ...action.data}\n                } else return item\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'REMOVE_ELEMENT':\n            days = state.days.map((item, index) => {\n                if (index === action.day)\n                    return {...item, tour: item.tour.filter((value, index) => index !== action.index)}\n                else return item\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'REMOVE_DAY':\n            days = state.days.filter((item, index) => index !== action.day)\n            return {\n                ...state,\n                days: days\n            }\n        case 'UPDATE_TOUR':\n            return {\n                ...state,\n                ...action.data\n            }\n        case 'SET_ALL':\n            return action.data\n\n        default:\n            return state\n    }\n\n}\n","import React, {useEffect} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport AutoCompleteChip from \"../AutocompleteChip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport green from \"@material-ui/core/colors/green\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(4),\n    },\n    nameField: {\n        width: \"100%\"\n    },\n    descriptionField: {\n        marginTop: theme.spacing(2),\n        width: \"100%\",\n        height: \"auto\"\n    },\n    publicityDiv: {\n        width: \"100%\",\n\n    },\n    button: {\n        margin: theme.spacing(2),\n        color: \"#ffffff\"\n    },\n});\n\nfunction TourInfoComponent({classes, tourInfo, tourInfoReducer, errorInfo, setErrorInfo, availableCategories, selectedCategories, setSelectedCategories, setAvailableCategories, tourId}) {\n\n    const handleDescriptionChange = (e) => {\n        tourInfoReducer({\n            type: 'UPDATE_TOUR',\n            data: {description: e.target.value}\n        })\n    }\n    const handleTitleChange = (e) => {\n        tourInfoReducer({\n            type: 'UPDATE_TOUR',\n            data:  {name: e.target.value}\n        })\n    }\n\n    useEffect(()=>{\n        if(tourInfo.name === \"\")\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: true}}})\n        else\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: false}}})\n    }, [tourInfo.name])\n\n    let shouldDisplayTitleMissingError = errorInfo.showErrors && errorInfo.errors.titleMissing\n\n    const verifyTour = () => {\n        tourInfoReducer({\n            type: 'UPDATE_TOUR',\n            data:  {isVerified: true}\n        })\n    }\n\n    const publishTour = () => {\n        tourInfoReducer({\n            type: 'UPDATE_TOUR',\n            data:  {isPublished: !tourInfo.isPublished}\n        })\n\n    }\n\n    const ColorButton = withStyles((theme) => ({\n        root: {\n            color: \"white\",\n            backgroundColor: green[500],\n            '&:hover': {\n                backgroundColor: green[700],\n            },\n        },\n    }))(Button);\n\n\n    return (\n        <div className={classes.root}>\n            <TextField label=\"Tour name\"\n                       variant=\"outlined\"\n                       error={shouldDisplayTitleMissingError}\n                       helperText={shouldDisplayTitleMissingError ? \"Please provide a title for your tour\" : \"\"}\n                       value={tourInfo.name}\n                       onChange={handleTitleChange}\n                       defaultValue=\"My tour name\" className={classes.nameField}/>\n            <TextField\n                className={classes.descriptionField}\n                multiline\n                label=\"Description\"\n                value={tourInfo.description}\n                variant=\"outlined\"\n                onChange={handleDescriptionChange}\n            />\n            <br/><br/>\n            <Typography component=\"h6\" variant=\"h6\">\n                Categories for this tour\n            </Typography>\n            <AutoCompleteChip\n                options={availableCategories}\n                id=\"categoryId\"\n                setOptions={setAvailableCategories}\n                setSelectedOptions={setSelectedCategories}\n                selectedOptions={selectedCategories}\n            />\n\n            {tourId !== undefined &&\n                <div className={classes.publicityDiv}>\n                    {tourInfo.isVerified ?\n                        <div>\n                            <FormControlLabel\n                                control={<Switch checked={tourInfo.isPublished} onChange={publishTour} name=\"isPublic\"/>}\n                                label=\"Make this tour public?\"\n                            />\n                        </div>\n                        :\n                    <ColorButton\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={verifyTour}\n                        className={classes.button}\n                    >\n                        Verify tour\n                    </ColorButton>\n                    }\n\n\n                </div>\n            }\n\n        </div>\n    )\n}\n\nTourInfoComponent.propTypes = {\n    tourInfo: PropTypes.object.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n    availableTags: PropTypes.array.isRequired,\n    setAvailableTags: PropTypes.func.isRequired,\n    selectedTags: PropTypes.array.isRequired,\n    setSelectedTags: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(TourInfoComponent)","import React, {useContext, useEffect, useMemo, useRef, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer} from \"react-google-maps\"\nimport {ElementType} from \"./Tour\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FilterBlock from \"../add_place_components/FilterBlock\";\nimport CustomControlsManager from \"../maps/CustomControlsManager\";\nimport API from \"../../Networking/API\";\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst google = window.google;\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(4),\n    }, cover: {\n        [theme.breakpoints.down(\"lg\")]: {\n            height: \"200px\",\n        },\n        [theme.breakpoints.only(\"lg\")]: {\n            flex: 1,\n            height: \"auto\",\n        },\n    },\n    largeIcon: {\n        width: theme.spacing(14),\n        height: theme.spacing(14),\n    },\n});\n\n\n/**\n * Tours map component\n * @type {React.ComponentClass<WithGoogleMapProps>}\n */\nconst MyMapComponent = withGoogleMap(props =>\n    <GoogleMap\n        ref={props.refMap}\n        defaultZoom={8}\n        defaultCenter={{lat: 55.2983804, lng: 23.9132164}}>\n\n        {props.children}\n\n    </GoogleMap>\n);\n\n\nfunction TourMap({classes, tourInfo, currentDay, addPlace, removePlace}) {\n\n    const [directions, setDirection] = useState();\n\n    const [infoWindows, setInfoWindows] = useState([]);\n    const [directionPlaces, setDirectionPlaces] = useState([])\n\n\n    const [places, setPlaces] = useState([]);\n    const [placesInfoWindows, setPlacesInfoWindows] = useState([]);\n\n    const [loadingArea, setLoadingArea] = useState(false);\n    const refMap = useRef(null);\n\n    const {filterQuery} = useContext(PlacesFilterContext);\n\n    const constructPlaceData = () => {\n        let p = tourInfo.days[currentDay].tour.filter(item => item.type === ElementType.place);\n        let places = [];\n        p.forEach(item => {\n            let placeId = item.data.details.placeId;\n            let lat = item.data.details.latitude;\n            let lng = item.data.details.longitude;\n            let name = item.data.details.name;\n            let photos = item.data.details.photos;\n            places.push({placeId: placeId, latitude: lat, longitude: lng, name: name, photo: photos.length > 0 ? photos[0].url : null});\n        });\n        setInfoWindows(Array(places.length).fill(false))\n        setDirectionPlaces(places);\n        return places\n    };\n\n    useEffect(() => {\n        const places = constructPlaceData();\n        if(places.length>1){\n            const waypoints = places.map(p =>({\n                location: {lat: p.latitude, lng:p.longitude},\n                stopover: true\n            }));\n\n            const origin = waypoints.shift().location;\n            let destination = null;\n\n            if (waypoints.length > 0)\n                destination = waypoints.pop().location;\n            else\n                destination = origin;\n\n            const directionsService = new google.maps.DirectionsService();\n\n            directionsService.route(\n                {\n                    origin: origin,\n                    destination: destination,\n                    travelMode: google.maps.TravelMode.DRIVING,\n                    waypoints: waypoints\n                },\n                (result, status) => {\n                    if (status === google.maps.DirectionsStatus.OK) {\n                        setDirection(result)\n                    } else {\n                        alert(status);\n                    }\n                }\n            );\n        } else {\n            setDirection(null)\n        }\n    }, [currentDay, tourInfo.days]);\n\n\n    function fetchPlaces(){\n        console.log(\"Getting all places...\", refMap.current.getCenter().lat())\n        getAllPlaces(filterQuery + \"&p=\" + 0 + \"&s=\" + 100 + \"&l=\" + refMap.current.getCenter().lat() + \",\" + refMap.current.getCenter().lng() + \"range=\" + 50)\n    }\n\n    useEffect(() => {\n        if(!loadingArea){\n            if(refMap.current != null){\n                fetchPlaces()\n            }\n        }\n    }, [filterQuery]);\n\n    function getAllPlaces(query) {\n        setLoadingArea(true);\n        API.Places.getAllPlacesAdmin(query).then(locations => {\n            setPlacesInfoWindows(Array(locations.list.length).fill(false));\n            setPlaces(locations.list)\n            setLoadingArea(false)\n        }).catch(err => {\n            console.log(err);\n            setLoadingArea(false)\n        })\n    }\n\n    function addPlaceToTourDay(place) {\n        setPlacesInfoWindows(Array(places.length).fill(false));\n        addPlace(place, ElementType.place)\n    }\n\n    function removePlaceFromTourDay(place) {\n        tourInfo.days[currentDay].tour.map((row, index)=>{\n            if(row.type === ElementType.place){\n                if(row.data.details.placeId === place.placeId){\n                    removePlace(index)\n                }\n            }\n        })\n    }\n\n    /**\n     * Renders places markers on the map\n     * @return {*[]}\n     */\n    function PlacesMarkers() {\n        return places.map((location, i) => {\n            const latitude = parseFloat(location.latitude);\n            const longitude = parseFloat(location.longitude);\n            return <Marker\n                zIndex={1}\n                key={location.placeId}\n                position={{lat: latitude, lng: longitude}}\n                onClick={() => {\n                    let markers = Object.assign({}, placesInfoWindows);\n                    markers[i] = true;\n                    setPlacesInfoWindows(markers)\n                }}\n            >\n                {placesInfoWindows[i] && (\n                    <InfoWindow onCloseClick={() => {\n                        let markers = Object.assign({}, placesInfoWindows);\n                        markers[i] = false;\n                        setPlacesInfoWindows(markers)\n                    }\n                    }>\n                        <div style={{display: \"flex\", flexDirection: \"column\"}}>\n                            <Typography variant=\"h6\">\n                                {location.name}\n                            </Typography>\n\n                            <Button\n                                onClick={()=>{addPlaceToTourDay(location)}}\n                                variant=\"text\"\n                                color=\"secondary\"\n                                size=\"large\"\n                                startIcon={<AddIcon/>}>\n                                Add this place to tour!\n                            </Button>\n                        </div>\n                    </InfoWindow>\n                )}\n            </Marker>\n        })\n    }\n\n\n    const searchAreaComponent = useMemo(() => (\n        <CustomControlsManager position={window.google.maps.ControlPosition.TOP_CENTER}>\n            <div>\n                {loadingArea ?\n                    <CircularProgress />\n                    :\n                    <Button variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                               fetchPlaces()\n                            }}\n                    >\n                        Search area...\n                    </Button>\n                }\n\n            </div>\n        </CustomControlsManager>\n    ), [loadingArea]);\n\n    return (\n        <div className={classes.root}>\n            <FilterBlock/>\n            <MyMapComponent\n                loadingElement={<div style={{height: `100%`}}/>}\n                containerElement={<div style={{height: `400px`}}/>}\n                mapElement={<div style={{height: `100%`}}/>}\n                refMap={refMap}>\n\n                {searchAreaComponent}\n                <PlacesMarkers/>\n\n                {/* Rendering direction path*/}\n                {directions ?\n                    <DirectionsRenderer\n                        options={{suppressMarkers: true, draggable: false}}\n                        draggable={false}\n                        directions={directions}/> : null}\n\n                {/* Rendering direction places markers*/}\n                {directionPlaces.map((marker, index) => {\n                    const position = { lat: marker.latitude, lng: marker.longitude };\n                    return <Marker\n                        zIndex={2}\n                        icon={{\n                            url: require('../../res/selectedTourIcon.svg'),\n                            scaledSize: new window.google.maps.Size(48, 48),\n                            origin: new window.google.maps.Point(0, 0),\n                            labelOrigin: new window.google.maps.Point(24, 16),\n                        }}\n                        key={index}\n                        position={position}\n                        label={{text: `${index+1}`, color: \"white\"}}\n                        onClick={\n                        ()=>{\n                            let info = Object.assign({}, infoWindows);\n                            info[index] = true;\n                            setInfoWindows(info);\n                        }\n                    }>\n                        {infoWindows[index] && (\n                        <InfoWindow onCloseClick={()=>{\n                            let info = Object.assign({}, infoWindows);\n                            info[index] = false;\n                            setInfoWindows(info);\n                        }}>\n                                <Card style={{display:\"flex\", flexDirection: \"column\",alignItems:\"center\"}}>\n                                    {marker.photo ?<Avatar alt=\"Remy Sharp\" src={marker.photo} className={classes.largeIcon}/> : null}\n\n                                    <Typography>\n                                        {marker.name}\n                                    </Typography>\n                                    <Button\n                                        onClick={()=>removePlaceFromTourDay(marker)}\n                                        style={{marginTop: 12}}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        startIcon={<DeleteIcon />}\n                                    >\n                                        Remove from tour\n                                    </Button>\n\n                                </Card>\n                        </InfoWindow>\n                        )}\n                    </Marker>\n                })}\n\n            </MyMapComponent>\n\n        </div>\n    )\n}\n\nTourMap.propTypes = {\n    tourInfo: PropTypes.object.isRequired,\n    currentDay: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(TourMap)\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TourPlacesWrapper from \"./TourPlacesWrapper\";\nimport PlaceSearch from \"./PlaceSearch\";\nimport DaysWrapper from \"./DaysWrapper\";\nimport TourDataReducer from \"./TourReducer\";\nimport TourInfoComponent from \"./TourInfoComponent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TourMap from \"./TourMap\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../Networking/API\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\nimport shortid from 'shortid';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport RecommendationListDialog from \"../recomendation/RecommendationListDialog\";\nimport {RecommendationType} from \"../recomendation/Recommendation\";\n\nexport const ElementType = {\n    place: 0,\n    transport: 1\n}\nexport const PlaceType = {\n    api: 1,\n    local: 0\n}\n\nconst styles = theme => ({\n    root: {\n        [theme.breakpoints.down(\"lg\")]: {\n            overflow: \"scroll\",\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            overflow: \"initial\",\n            display: \"flex\",\n        },\n        height: `calc(100% - 64px)`,\n        width: \"100%\",\n        '&::-webkit-scrollbar': {\n            display: \"none\"\n        },\n    },\n    loader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100vw\",\n        height: \"100vh\"\n    },\n    rightLayout: {\n        flex: 2,\n        '&::-webkit-scrollbar': {\n            display: \"none\"\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            height: \"100%\",\n            overflowY: \"scroll\",\n\n        },\n    },\n    leftLayout: {\n        [theme.breakpoints.up(\"lg\")]: {\n            height: \"100%\",\n        },\n        overflowY: \"scroll\",\n\n        flex: 1,\n        '&::-webkit-scrollbar': {\n            display: \"none\"\n        },\n    },\n    actionsArea: {\n        padding: theme.spacing(1),\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n    },\n\n})\n\nconst sampleTourData = {\n    name: \"\",\n    description: \"\",\n    isVerified: true,\n    isPublished: false,\n    days: [\n        {\n            description: \"\",\n            elementIdentifier: \"jkasfbjkdsbjk\",\n            tour: []\n        }\n    ]\n}\n\nfunction Tour({classes, match}) {\n\n    const [localPlacesFound, setLocalPlacesFound] = useState([])\n    const [apiPlacesFound, setApiPlacesFound] = useState([])\n    const [currentDay, setCurrentDay] = useState(0)\n    const [tourId, setTourId] = useState(match.params.tourId)\n    const [isLoading, setIsLoading] = useState(match.params.tourId !== undefined);\n    const [recommendationsDialogOpen, setRecommendationsDialogOpen] = useState(false)\n\n    const [selectedCategories, setSelectedCategories] = useState([])\n    const [availableCategories, setAvailableCategories] = useState([])\n\n    const [errorInfo, setErrorInfo] = useState({\n            errors: {\n                titleMissing: false,\n                /* Any client-side verification errors may by added here, and handled in individual components */\n            },\n            showErrors: false\n        }\n    )\n\n    const [tourInfo, dispatchTourInfo] = React.useReducer(TourDataReducer, sampleTourData)\n    const {addConfig} = UseSnackbarContext();\n\n    const handleAddPlaceClick = (placeInfo, type) => {\n        dispatchTourInfo({\n            type: 'ADD_ELEMENT',\n            day: currentDay,\n            data: {\n                type: ElementType.place,\n                data: {\n                    type: type,\n                    details: {...placeInfo}\n                },\n            },\n            onError: () => {\n                addConfig(false, \"This place already exists in this tour.\")\n            }\n        })\n    }\n\n    const removeElementCallback = (index) => {\n        dispatchTourInfo({\n            type: 'REMOVE_ELEMENT',\n            day: currentDay,\n            index: index\n        })\n    };\n\n    useEffect(() => {\n        if (tourId !== undefined) { //If user wants to edit a tour, we download all tour data. loadData also downloads categories\n            loadData()\n        }else{ //Otherwise, we just download categories instead.\n            API.Categories.getAllCategories().then(response => {\n                setAvailableCategories(response)\n            }).catch(() => {\n                addConfig(false, \"Categories failed to load\")\n            })\n        }\n    }, [])\n\n    const parseTourInfoResponse = (response) => {\n        let aggregatedDays = [];\n        response.days.forEach(day => {\n            let aggregatedElements = [];\n            day.data.forEach(place => {\n                let aggregatedPlace = {\n                    type: ElementType.place,\n                    data: {details: place.place, type: place.place.type}\n                }\n                delete aggregatedPlace.data.details.type\n                aggregatedElements.push(aggregatedPlace)\n                place.transport.forEach(transport => {\n                    aggregatedElements.push({\n                        type: ElementType.transport,\n                        data: {transport: transport.fk_transportId - 1, elementIdentifier: shortid.generate()}\n                    })\n                })\n            })\n            let aggregatedDay = {...day, tour: aggregatedElements, elementIdentifier: shortid.generate()}\n            delete aggregatedDay.data\n            aggregatedDays.push(aggregatedDay)\n        })\n        let aggregatedTour = {...response, days: aggregatedDays}\n        dispatchTourInfo({type: 'SET_ALL', data: aggregatedTour})\n    }\n\n    const loadData = () => {\n        Promise.all([\n            API.Tour.getTour(\"?id=\" + tourId),\n            API.Categories.getAllCategories(),\n            API.Tour.getTourCategories(\"?id=\" + tourId),\n            ]\n        ).catch(() => {\n            addConfig(false, \"Tour has failed to load\")\n            setTourId(undefined)\n        }).then((response) => {\n            parseTourInfoResponse(response[0])\n            setAvailableCategories(response[1])\n            setSelectedCategories(response[2])\n        }).finally(() => {\n            setIsLoading(false)\n        })\n    }\n\n    const handleSave = () => {\n        let containsErrors = false;\n        Object.keys(errorInfo.errors).map(function (keyName, keyIndex) {\n            if (errorInfo.errors[keyName]) {\n                setErrorInfo(state => {\n                    return {...state, showErrors: true}\n                })\n                containsErrors = true;\n            }\n        })\n        if (containsErrors) return\n        setErrorInfo(state => {\n            return {...state, showErrors: false}\n        })\n\n        const aggregatedDays = []\n        tourInfo.days.forEach(day => {\n            let aggregatedDay = {...day, data: []}\n            delete aggregatedDay.tour\n            delete aggregatedDay.elementIdentifier\n            for (let i = 0; i < day.tour.length; i++) {\n                let element = day.tour[i]\n                if (element.type !== ElementType.place)\n                    continue;\n                let transport = []\n                for (let j = i + 1; j < day.tour.length && day.tour[j].type === ElementType.transport; j++) {\n                    transport.push({fk_transportId: day.tour[j].data.transport + 1})\n                }\n                let aggregatedPlace = {\n                    place: {\n                        type: element.data.type,\n                        placeId: element.data.details.placeId\n                    },\n                    transport: transport\n                }\n                aggregatedDay.data.push(aggregatedPlace)\n            }\n            aggregatedDays.push(aggregatedDay)\n        })\n        let aggregatedTour = {...tourInfo, days: aggregatedDays}\n\n        if (tourId === undefined) {\n            API.Tour.insertTour(aggregatedTour).then((response) => {\n                setTourId(response)\n                return response\n            }).then((response) => Promise.all(\n                [\n                    API.Tour.updateTourCategories(selectedCategories, \"?p=\" + response)\n                ]\n            )).then((() => {\n                addConfig(true, \"Tour has been inserted successfully!\")\n            })).catch((error) => {\n                addConfig(false, \"Something went wrong while saving this tour.\")\n            })\n        } else {\n            Promise.all([\n                API.Tour.updateTour(aggregatedTour, \"?id=\" + tourId),\n                API.Tour.updateTourCategories(selectedCategories, \"?p=\" + tourId)\n            ])\n            .then(() => {\n                addConfig(true, \"Tour has been updated successfully!\")\n            }).catch((error) => {\n                addConfig(false, \"Something went wrong while saving this tour.\")\n            })\n        }\n\n    };\n\n    const leftLayout = useMemo(() => (\n        <div className={classes.leftLayout}>\n            <PlaceSearch addPlaceCallback={handleAddPlaceClick} localPlacesFound={localPlacesFound}\n                         setLocalPlacesFound={setLocalPlacesFound} apiPlacesFound={apiPlacesFound}\n                         setApiPlacesFound={setApiPlacesFound}/>\n        </div>\n    ), [localPlacesFound, apiPlacesFound, currentDay])\n\n\n    let dayInfoWithoutDesc = JSON.stringify(tourInfo.days.map(day => {\n        let dayCopy = {...day}\n        delete dayCopy.description\n        return dayCopy\n    }))\n\n    const mapComponent = useMemo(() => (\n        <React.Fragment>\n            <TourMap tourInfo={tourInfo}\n                     currentDay={currentDay}\n                     addPlace={handleAddPlaceClick}\n                     removePlace={removeElementCallback}\n            />\n            <TourPlacesWrapper errorInfo={errorInfo} setErrorInfo={setErrorInfo}\n                               currentDay={currentDay} tourInfoReducer={dispatchTourInfo} tourInfo={tourInfo}/>\n        </React.Fragment>\n    ), [dayInfoWithoutDesc, currentDay])\n\n    const tourDaysComponents = useMemo(() => (\n        <div>\n            <DaysWrapper currentDay={currentDay} setCurrentDay={setCurrentDay} tourInfo={tourInfo}\n                         tourInfoReducer={dispatchTourInfo}/>\n            <Divider variant=\"middle\"/>\n            {mapComponent}\n\n        </div>\n    ), [tourInfo.days, currentDay, errorInfo]);\n\n    const rightLayout = useMemo(() => (\n        <Paper className={classes.rightLayout}>\n            <TourInfoComponent tourInfo={tourInfo} tourInfoReducer={dispatchTourInfo} errorInfo={errorInfo}\n                               setErrorInfo={setErrorInfo}\n                               tourId={tourId}\n                               setSelectedCategories={setSelectedCategories} selectedCategories={selectedCategories} availableCategories={availableCategories} setAvailableCategories={setAvailableCategories}/>\n            <Divider variant=\"middle\"/>\n            {tourDaysComponents}\n            <div className={classes.actionsArea}>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => setRecommendationsDialogOpen(true)} disabled={tourId === null}>\n                    Add tour to recommendation\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\n                    Save this tour\n                </Button>\n            </div>\n        </Paper>\n    ), [tourInfo, currentDay, errorInfo, availableCategories, selectedCategories]);\n\n    const theme = useTheme();\n    const largeScreen = useMediaQuery(theme.breakpoints.up('lg'));\n\n    const content = (\n        <React.Fragment>\n            {largeScreen ?\n                <React.Fragment>\n                    {leftLayout}\n                    {rightLayout}\n                </React.Fragment> :\n                <React.Fragment>\n                    {rightLayout}\n                    {leftLayout}\n                </React.Fragment>\n            }\n        </React.Fragment>\n    );\n\n    return (\n        <div className={classes.root}>\n            <RecommendationListDialog\n                setOpen={setRecommendationsDialogOpen}\n                open={recommendationsDialogOpen}\n                objectId={tourId}\n                type={RecommendationType.tour}/>\n            {isLoading ? <div className={classes.loader}><CircularProgress/></div> : content}\n        </div>\n    )\n}\n\n\nexport default withStyles(styles)(Tour)\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TableComponent from \"../components/TableComponent\";\nimport API from \"../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Box from \"@material-ui/core/Box\";\nimport history from \"../helpers/history\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Popover from \"@material-ui/core/Popover\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    input: {\n        display: \"none\"\n    },\n\n    sortingButtons: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\"\n\n    },\n    root:{\n        height:\"100vh\",\n        width:\"100%\",\n        overflow: \"auto\"\n    },\n    buttonsDiv: {\n        backgroundColor: \"red\",\n        justifyContent: \"flex-end\"\n    },\n    content:{\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    }\n});\n\n\nconst headCells = [\n    { id: 'name', numeric: false, disablePadding: false, label: 'Tour name', isId: true},\n    { id: 'description', numeric: false, disablePadding: false, label: 'Tour description',isId: false},\n    { id: 'lastModified', numeric: false, disablePadding: false, label: 'Date modified',isId: false},\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\n];\n\nfunction Tours(props) {\n\n    const [data, setData] = useState([]);\n    const [pageData, setPageData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { classes } = props;\n\n    const [filterOptions, setFilterOptions] = useState([\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\n\n    const [filterQuery, setFilterQuery] = useState(\"\");\n\n\n    const { addAlertConfig } = UseAlertDialogContext();\n    const { addConfig } = UseSnackbarContext();\n\n    useEffect(()=>{\n        if(!isLoading){\n            getAllTours(\"?o=\"+filterQuery);\n        }\n    },[filterQuery]);\n\n    function parseData(data){\n        console.log(\"deita\", data.list)\n        setIsLoading(false);\n        let placesData = [];\n        data.list.map(row => {\n            placesData.push(row)\n        });\n\n        delete data.list;\n        setData(placesData);\n        setPageData(data);\n    }\n\n    function updateTourCallback(id){\n        history.push(\"/app/addtour/\"+id)\n    }\n    function removePlaceCallback(id){\n        console.log(\"tour id\", id)\n\n        addAlertConfig(Strings.DIALOG_TOUR_DELETE_TITLE, Strings.DIALOG_TOUR_DELETE_MESSAGE, [{name: \"Delete\", action: () => {\n                setIsLoading(true);\n                API.Tour.removeTour(\"?id=\"+id).then(response=>{\n                    let tmp = [];\n                    data.map(row=>{\n                        if(row[\"tourId\"] !== id){\n                            tmp.push(row)\n                        }\n                    });\n                    setData(tmp);\n                    addConfig(true, Strings.SNACKBAR_TOUR_REMOVE_SUCCESS)\n                    setIsLoading(false)\n                }).catch(error=>{\n                    setIsLoading(false);\n                    addConfig(false, Strings.SNACKBAR_ERROR)\n                })\n            }}],  ()=>{setIsLoading(false)})\n    }\n\n    const changePageCallback = (p=0, keyword=\"\") => {\n        setIsLoading(true);\n        getAllTours(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword+\"&o=\"+filterQuery)\n    };\n\n\n    //Sorting stuff\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const filterOptionsChanged = (name) =>{\n        let filters = [];\n        let fq = [];\n        filterOptions.map(row=>{\n            if(row.filterName === name){\n                row.filter = !row.filter\n            }\n            if(row.filter){\n                fq.push(row.filterName)\n            }\n            filters.push(row)\n        });\n\n        setFilterQuery(fq.join(\",\"));\n        setFilterOptions(filters)\n    };\n\n    const customToolbarElements = () =>{\n        return <div>\n            <Tooltip aria-describedby={id} title=\"Filter list\">\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\n                    <FilterListIcon />\n                </IconButton>\n            </Tooltip>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={()=>{setAnchorEl(null)}}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <div className={classes.sortingButtons}>\n                    {filterOptions.map(row=>{\n                        return <FormControlLabel\n                            control={<Checkbox checked={row.filter} onChange={()=>filterOptionsChanged(row.filterName)} name={row.filterName} />}\n                            label={row.filterLabel}\n                        />\n                    })}\n                </div>\n\n            </Popover>\n        </div>\n    };\n    /*------------------------------------------------------------------------------------------------------*/\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content} >\n                <TableComponent\n                    title={\"Tours\"}\n                    headCells={headCells}\n                    data={data}\n                    pagingInfo={pageData}\n                    checkable={false}\n                    changePageCallback={changePageCallback}\n                    updateCallback={updateTourCallback}\n                    removeCallback={removePlaceCallback}\n                    id={\"tourId\"}\n                    isLoading={isLoading}\n                    customToolbarElements={customToolbarElements()}\n                />\n\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <Button\n                        onClick={()=>{history.push(\"/app/addtour\")}}\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        startIcon={<AddIcon />}>\n                        Add\n                    </Button>\n                </Box>\n            </div>\n\n        </div>\n    );\n\n    function getAllTours(urlParams=\"\") {\n        API.Tour.getAllToursAdmin(urlParams).then(response=>{\n            console.log(response);\n            parseData(response)\n        }).catch(error=>{\n            console.log(error)\n        })\n    }\n}\n\nTours.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Tours);","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nfunction AddDialog(props){\n\n    function validateInput(){\n        var error = false;\n        if(text.length <= 3)\n            error = true\n        setError(error)\n        return error\n    }\n\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\n    const [text, setText] = useState(\"\")\n    const [error, setError] = useState(false)\n    return(\n        <div>\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\n                    {header}\n                </DialogTitle>\n                <DialogContent dividers>\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCallback} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button autoFocus color=\"primary\" onClick={() => {\n                        !validateInput() && action(text)\n                    }}>\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nAddDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    action: PropTypes.func.isRequired,\n    onCloseCallback: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(AddDialog)\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useState} from \"react\";\nimport TableComponent from \"./TableComponent\";\nimport API from \"../Networking/API\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../helpers/history\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddDialog from \"./AddDialog\";\nimport UseEditDialogContext from \"../contexts/UseEditDialogContext\";\n\nconst styles = theme => ({\n    root: {\n        height: \"100vh\",\n        width: \"100%\",\n        overflow: \"auto\",\n    },\n    content: {\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    },\n    buttonWrapper: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        width: \"100%\",\n    }\n})\n\nconst categoriesHeadCells = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Category name', isId: false},\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\n]\nconst tagsHeadCells = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Tag name', isId: false},\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\n]\n\nfunction Resources({classes}) {\n\n    const {addAlertConfig} = UseAlertDialogContext();\n    const {addConfig} = UseSnackbarContext();\n    const {addEditDialogConfig} = UseEditDialogContext();\n\n    const [loading, setIsLoading] = useState({\n        categories: false,\n        tags: false\n    })\n\n    const [categories, setCategories] = useState([])\n    const [tags, setTags] = useState([])\n\n    useEffect(() => {\n        setIsLoading({categories: true, tags: true})\n        Promise.all([\n                API.Categories.getAllCategories(),\n                API.Tags.getAllTags()\n            ]\n        ).then(response => {\n            setCategories(response[0])\n            setTags(response[1])\n        }).catch(() => {\n            addConfig(false, \"Could not retrieve data!\")\n        }).finally(() => {\n            setIsLoading(oldData => {return{ ...oldData, categories: false, tags: false}})\n        })\n    }, [])\n\n    const handleAddCategory = () => {\n        addEditDialogConfig({\n            title: \"Add category\",\n            explanation: \"Type the category name\",\n            onDoneCallback: (text) => {\n               API.Categories.addCategory([{name: text}]).then((response)=>{\n                   addConfig(true, \"Category inserted successfully\")\n                   setCategories(oldData => [...oldData, {name: text, categoryId: response[0]}])\n                }).catch(error=>{\n                   addConfig(false, \"Failed to add category.\")\n               })\n            },\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\n            textFieldLabel: \"Restaurants, hiking, etc...\"\n        })\n    }\n\n    const removeCategoryCallback = (categoryId) => {\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\n        addAlertConfig(\"Warning\", \"Are you sure you want the category, named '\" + categoryName + \"'?\", [{\n            name: \"yes\", action: () => {\n                setIsLoading(oldData => {\n                    return {...oldData, categories: true}\n                })\n                API.Categories.removeCategory([{categoryId: categoryId}]).then(() => {\n                    addConfig(true, \"Category successfully removed.\")\n                    setCategories(oldData => oldData.filter(item => item.categoryId !== categoryId))\n                }).catch(() => {\n                    addConfig(false, \"An error has occurred while removing category.\")\n                }).finally(() => {\n                    setIsLoading(oldData => {\n                        return {...oldData, categories: false}\n                    })\n                })\n            }\n        }], () => {\n        })\n    }\n\n    const updateCategoryHandler = (categoryId) => {\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\n        addEditDialogConfig({\n            title: \"Edit category\",\n            explanation: \"Type the category name\",\n            defaultText: categoryName,\n            onDoneCallback: (text) => {\n                API.Categories.updateCategory([{name: text, categoryId: categoryId}]).then(()=>{\n                    addConfig(true, \"Category updated successfully\")\n                    setCategories(oldData => {return oldData.map(item => {\n                        if(item.categoryId === categoryId)\n                            return {...item, name: text}\n                        else return item\n                    })})\n                }).catch(()=>{\n                    addConfig(false, \"Failed to update category.\")\n                })\n            },\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\n            textFieldLabel: \"Restaurants, hiking, etc...\"\n        })\n    }\n\n    const updateTagHandler = (id) => {\n        let tagName = tags.filter(item => item.tagId === id)[0].name\n        addEditDialogConfig({\n            title: \"Edit tag\",\n            explanation: \"Type the tag name\",\n            defaultText: tagName,\n            onDoneCallback: (text) => {\n                API.Tags.updateTags([{name: text, tagId: id}]).then(()=>{\n                    addConfig(true, \"Tag updated successfully\")\n                    setTags(oldData => {return oldData.map(item => {\n                        if(item.tagId === id)\n                            return {...item, name: text}\n                        else return item\n                    })})\n                }).catch(()=>{\n                    addConfig(false, \"Failed to update tag.\")\n                })\n            },\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\n            textFieldLabel: \"Warm, quick, cozy...\"\n        })\n    }\n\n    const removeTagHandler = (id) => {\n        let tagName = tags.filter(item => item.tagId === id)[0].name\n        addAlertConfig(\"Warning\", \"Are you sure you want the tag, named '\" + tagName + \"'?\", [{\n            name: \"yes\", action: () => {\n                setIsLoading(oldData => {\n                    return {...oldData, tags: true}\n                })\n                API.Tags.removeTags([{tagId: id}]).then(() => {\n                    addConfig(true, \"Tag successfully removed.\")\n                    setTags(oldData => oldData.filter(item => item.tagId !== id))\n                }).catch(() => {\n                    addConfig(false, \"An error has occurred while removing tag.\")\n                }).finally(() => {\n                    setIsLoading(oldData => {\n                        return {...oldData, tags: false}\n                    })\n                })\n            }\n        }], () => {\n        })\n    }\n\n    const handleAddTag = () => {\n        addEditDialogConfig({\n            title: \"Add tag\",\n            explanation: \"Type the tag name\",\n            onDoneCallback: (text) => {\n                API.Tags.addTag([{name: text}]).then((response)=>{\n                    addConfig(true, \"Tag inserted successfully\")\n                    setTags(oldData => [...oldData, {name: text, tagId: response[0]}])\n                }).catch(()=>{\n                    addConfig(false, \"Failed to add tag.\")\n                })\n            },\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\n            textFieldLabel: \"Warm, quick, cozy...\"\n        })\n    }\n\n    const searchFunction = (keyword, item) => {\n        console.log(\"Keyword is what\", keyword)\n        if(keyword == null || keyword.length < 1) return true\n        return item.name.includes(keyword)\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content}>\n\n                <TableComponent\n                    title={\"Categories\"}\n                    headCells={categoriesHeadCells}\n                    data={categories}\n                    pagingInfo={null}\n                    checkable={false}\n                    searchFunction={searchFunction}\n                    changePageCallback={() => {}}\n                    updateCallback={updateCategoryHandler}\n                    removeCallback={removeCategoryCallback}\n                    id={\"categoryId\"}\n                    isLoading={loading.categories}\n                />\n\n                <Box className={classes.buttonWrapper}>\n                    <Button\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        onClick={handleAddCategory}\n                        startIcon={<AddIcon/>}>\n                        Add a new category\n                    </Button>\n                </Box>\n\n                <br/>\n\n                <TableComponent\n                    title={\"Tags\"}\n                    headCells={tagsHeadCells}\n                    data={tags}\n                    pagingInfo={null}\n                    checkable={false}\n                    searchFunction={searchFunction}\n                    changePageCallback={() => {}}\n                    updateCallback={updateTagHandler}\n                    removeCallback={removeTagHandler}\n                    id={\"tagId\"}\n                    isLoading={loading.tags}\n                />\n\n                <Box className={classes.buttonWrapper}>\n                    <Button\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        onClick={handleAddTag}\n                        startIcon={<AddIcon/>}>\n                        Add a new tag\n                    </Button>\n                </Box>\n            </div>\n\n        </div>\n    )\n}\n\nResources.propTypes = {\n};\n\nexport default withStyles(styles)(Resources)\n","import React, {useEffect, useState} from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from \"@material-ui/core/Typography\";\nimport AutoCompleteChip from \"./AutocompleteChip\";\nimport API from \"../Networking/API\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\n\nconst UpdateUserDialog = ({open, setOpen, userData, availableRoles, setAvailableRoles}) => {\n\n    const [selectedRoles, setSelectedRoles] = useState([]);\n\n    const {addConfig} = UseSnackbarContext();\n    const {addAlertConfig} = UseAlertDialogContext();\n\n    useEffect(()=>{\n        setSelectedRoles(userData.roles)\n    },[userData.roles]);\n\n    function setRoles() {\n        addAlertConfig(\"Update user\", \"Are you sure you want to update this user's permissions?\", [{\n            name: \"Yes\",\n            action: () => {\n                let roles = []\n                selectedRoles.map(row=>{\n                    roles.push(row.roleId)\n                });\n                API.User.setRoles({userId: userData.id, roles: roles}).then(response=>{\n                    addConfig(true, \"Updated user successfully\");\n                    setOpen(false)\n                }).catch(error=>{\n                    addConfig(false, \"Could not update user\")\n                })\n            }\n        }])\n    }\n\n    const renderRoles = <div>\n\n    </div>\n\n    return(\n        <Dialog\n            open={open}\n            fullWidth={true}\n            maxWidth={'lg'}\n            onClose={()=>{setOpen(false)}}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">Update user - {userData.name + \" \" + userData.surname}</DialogTitle>\n            <DialogContent>\n                <Typography variant=\"h6\">\n                    Change user permissions\n                </Typography>\n\n                <AutoCompleteChip\n                    id=\"roleId\"\n                    name=\"role\"\n                    label=\"Select sources\"\n                    options={availableRoles}\n                    setOptions={setAvailableRoles}\n                    setSelectedOptions={setSelectedRoles}\n                    selectedOptions={selectedRoles}\n                />\n\n                {\n                    selectedRoles.map(row=>{\n                        return <div>\n                            <b>{row.role}</b> - {row.description}\n                            <br/>\n                        </div>\n                    })\n                }\n\n\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={()=>setOpen(false)}\n                        color=\"primary\">\n                    Close\n                </Button>\n\n                <Button onClick={()=>setRoles()}\n                        color=\"primary\">\n                    Update user\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n};\n\n\nexport default UpdateUserDialog\n","import React, {useEffect, useState} from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from \"@material-ui/core/Typography\";\nimport AutoCompleteChip from \"./AutocompleteChip\";\nimport API from \"../Networking/API\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport {averageTimeSpent} from \"../helpers/averageTimeSpent\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {load} from \"dotenv\";\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    textField:{\n        marginTop: 16\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    }\n\n});\n\nfunction AddUserDialog({classes, open, setOpen, availableRoles}){\n\n\n    const {addConfig} = UseSnackbarContext();\n    const {addAlertConfig} = UseAlertDialogContext();\n\n    const [user, setUser] = useState({name: \"\", surname: \"\", password: \"\", email: \"\", role: -1});\n    const [error, setError] = useState({name: false, surname: false, password: false, email: false, role: false});\n\n    const [loading, setLoading] = useState(false)\n\n    const userDataChanged = (event) => {\n        const {name, value} = event.target;\n        let userData = Object.assign({}, user);\n        userData[name] = value\n        setUser(userData)\n    };\n\n    function parseRoleFromId(id){\n        return availableRoles.map(row=>{\n            if(row.roleId===id){\n                return  row.role + \" - \" + row.description\n            }\n        })\n    }\n\n    function checkErrors(){\n        let errors = Object.assign({}, error)\n        let hasErrors = false;\n        for (let key in user) {\n            errors[key] = user[key] === \"\" || user[key] === -1;\n            if(errors[key] === true){\n                hasErrors = true\n            }\n        }\n        setError(errors);\n        return hasErrors\n    }\n\n    function addUser(){\n        if(checkErrors()){\n            return\n        }\n        addAlertConfig(\"Add new editor\", \"Are you sure you want to add new editor?. This user has role: \" + parseRoleFromId(user.role), [{\n            name: \"Yes\",\n            action: () => {\n                setLoading(true);\n                API.Auth.register(user).then(userId=>{\n                    API.User.setRoles({userId: userId, roles: [user.role]}).then(response=>{\n                        addConfig(true, \"User was added successfully!\")\n                        setOpen(false);\n                        setLoading(false)\n                    }).catch(error=>{\n                        setOpen(false);\n                        addConfig(false, \"Could not map user permissions!\");\n                        setLoading(false)\n                    })\n                }).catch(error=>{\n                    addConfig(false, error.message);\n                    setLoading(false)\n                })\n            }\n        }])\n    }\n\n\n    return(\n        <Dialog\n            open={open}\n            fullWidth={true}\n            maxWidth={\"md\"}\n            onClose={()=>{setOpen(false)}}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            {loading ? <LinearProgress /> : null}\n            <DialogTitle id=\"alert-dialog-title\">Add new editor</DialogTitle>\n            <DialogContent>\n                    <div className={classes.root}>\n                        <TextField id=\"outlined-basic\"\n                                   error={error.name}\n                                   required\n                                   label=\"Name\"\n                                   name=\"name\"\n                                   value={user['name']}\n                                   onChange={userDataChanged}\n                                   variant=\"outlined\"\n                                   className={classes.textField}\n                        />\n\n                        <TextField id=\"outlined-basic\"\n                                   required\n                                   error={error.surname}\n                                   label=\"Surname\"\n                                   name=\"surname\"\n                                   value={user['surname']}\n                                   onChange={userDataChanged}\n                                   variant=\"outlined\"\n                                   className={classes.textField}\n                        />\n                        <TextField id=\"outlined-basic\"\n                                   required\n                                   error={error.email}\n                                   label=\"Email\"\n                                   name=\"email\"\n                                   value={user['email']}\n                                   onChange={userDataChanged}\n                                   variant=\"outlined\"\n                                   className={classes.textField}\n                        />\n                        <TextField id=\"outlined-basic\"\n                                   required\n                                   error={error.password}\n                                   autoComplete='new-password'\n                                   label=\"Password\"\n                                   name=\"password\"\n                                   value={user['password']}\n                                   onChange={userDataChanged}\n                                   variant=\"outlined\"\n                                   type=\"password\"\n                                   className={classes.textField}\n                        />\n                        <br/>\n                        <Alert severity=\"info\">\n                            Make sure to use secure password as it will give access to modify data in admin panel.\n                            <br/>\n                            *Password must contain between 8 and 30 characters\n                            <br/>\n                            *Password must have atleast one digit\n                            <br/>\n                            *Password must have atleast one upper character\n                        </Alert>\n\n                        <Divider className={classes.textField} medium />\n\n                        <FormControl error={error.role} variant=\"outlined\" className={classes.textField}>\n                            <InputLabel>User role</InputLabel>\n                            <Select\n                                onChange={(e, value) =>{\n                                    let userTmp = Object.assign({},user);\n                                    userTmp.role = value.props.value\n                                    setUser(userTmp)\n                                }}\n                                value={user.role}\n                                label=\"Select user role\"\n                            >\n                                <option value=\"-1\">None</option>\n                                {\n                                    availableRoles.map(row=>{\n                                        return <option value={row.roleId}> {row.role}</option>\n                                    })\n                                }\n                            </Select>\n                            <FormHelperText>Select one of the available user roles</FormHelperText>\n                        </FormControl>\n\n                        {user.role === 1 ? <Alert className={classes.textField}\n                            severity=\"warning\">\n                            ROLE_ADMIN will have full access to the system. Make sure you know this person!\n                            </Alert> :\n                        null\n                        }\n\n                        <Typography variant=\"h6\" style={{marginTop: 48}}>\n                            Available roles\n                        </Typography>\n                        <div className={classes.textField}>\n                            {\n                                availableRoles.map(row=>{\n                                    return (\n                                        <Typography variant=\"subtitle1\" gutterBottom>\n                                            {row.role} - {row.description}\n                                        </Typography>\n                                    )\n\n                                })\n                            }\n                        </div>\n\n                    </div>\n\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={()=>setOpen(false)}\n                        color=\"primary\">\n                    Close\n                </Button>\n\n                <Button\n                    color=\"primary\"\n                    onClick={()=>{\n                        addUser()\n                    }}\n                >\n                    Add user\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n};\n\nexport default withStyles(styles)(AddUserDialog)\n","import React, {useContext, useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TableComponent from \"../components/TableComponent\";\nimport API from \"../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Box from \"@material-ui/core/Box\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UpdateUserDialog from \"../components/UpdateUserDialog\";\nimport AddUserDialog from \"../components/AddUserDialog\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    input: {\n        display: \"none\"\n    },\n    root: {\n        height: \"100vh\",\n        width: \"100%\",\n        overflow: \"auto\"\n    },\n    buttonsDiv: {\n        backgroundColor: \"red\",\n        justifyContent: \"flex-end\"\n    },\n    content: {\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    },\n    autocomplete: {\n        width: '200px',\n        height: '40px',\n        fontSize: \"14px\",\n        border: \"0\",\n        borderBottom: \"2px solid grey\",\n        outline: \"0\",\n        marginBottom: \"4px\"\n    }\n});\n\n\nconst headCells = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Name', isId: true},\n    {id: 'surname', numeric: false, disablePadding: false, label: 'Surname', isId: false},\n    {id: 'email', numeric: false, disablePadding: false, label: 'Contact email', isId: false},\n    {id: 'phoneNumber', numeric: false, disablePadding: false, label: 'Phone number', isId: false},\n    {id: 'parsedRoles', numeric: false, disablePadding: false, label: 'Roles', isId: false},\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\n];\n\nfunction Places(props) {\n\n    const [data, setData] = useState([]);\n    const [selectedUser, setSelectedUser] = useState({});\n    const [allRoles, setAllRoles] = useState([])\n    const [pageData, setPageData] = useState([])\n    const [isLoading, setIsLoading] = useState(true);\n    const {classes} = props;\n\n    const [openUpdateDialog, setOpenUpdateDialog] = useState(false);\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n\n\n    // const {filterQuery} = useContext(PlacesFilterContext)\n    const {addAlertConfig} = UseAlertDialogContext();\n    const {addConfig} = UseSnackbarContext();\n\n\n    useEffect(()=>{\n        API.User.getAllRoles().then(roles=>{\n            console.log(roles);\n            setAllRoles(roles);\n        }).catch(error=>{\n            addConfig(false, error.message)\n        })\n    },[]);\n\n\n\n    function requestUsers(p = 1, keyword = \"\") {\n        getAllUsers(\"\" + \"?p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\n    }\n\n    function parseData(data) {\n\n        setIsLoading(false);\n        let usersData = [];\n        data.list.map(row => {\n            let rolesList = [];\n            row.roles.map(role =>{\n                rolesList.push(role.role)\n            });\n            row.parsedRoles = rolesList.join(',');\n            usersData.push(row)\n        });\n\n        delete data.list;\n        setData(usersData);\n        console.log(usersData);\n        setPageData(data);\n    }\n\n    function updatePlaceCallback(id) {\n        data.map(row=>{\n            if(row.id === id ){\n                setSelectedUser(row)\n            }\n        });\n        setOpenUpdateDialog(true)\n    }\n\n    const changePageCallback = (p = 0, keyword = \"\") => {\n            setIsLoading(true);\n            requestUsers(p, keyword)\n    };\n\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content}>\n\n                {openUpdateDialog ? <UpdateUserDialog open={openUpdateDialog}\n                                                      setOpen={setOpenUpdateDialog}\n                                                      availableRoles={allRoles}\n                                                      setAvailableRoles={setAllRoles}\n                                                      userData={selectedUser}/>\n                                                      :\n                    null\n                }\n\n                {openAddDialog ? <AddUserDialog open={openAddDialog}\n                                                availableRoles={allRoles}\n                                                setOpen={setOpenAddDialog}/> : null}\n\n                <TableComponent\n                    title={\"Users\"}\n                    headCells={headCells}\n                    data={data}\n                    pagingInfo={pageData}\n                    checkable={false}\n                    changePageCallback={changePageCallback}\n                    updateCallback={updatePlaceCallback}\n                    id={\"id\"}\n                    isLoading={isLoading}\n                />\n\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <Button\n                        onClick={() => {\n                                setOpenAddDialog(true)\n                        }}\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        startIcon={<AddIcon/>}>\n                        Add user\n                    </Button>\n                </Box>\n            </div>\n            <Button>\n                Clear filters\n            </Button>\n        </div>\n    );\n\n    function getAllUsers(urlParams = \"\") {\n        API.User.getAllUsers(urlParams).then(response=>{\n            console.log(response)\n                setIsLoading(false);\n                parseData(response)\n        }).catch(error=>{\n                setIsLoading(false);\n                console.log(error)\n        })\n    }\n}\n\nPlaces.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Places);\n\n","import React, {useEffect, useState} from \"react\";\nimport {getRefreshToken} from \"../helpers/tokens\";\nimport API from \"../Networking/API\";\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({children}) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(()=>{\n        let refreshToken = getRefreshToken();\n        if(refreshToken !== \"\" && refreshToken !== undefined){\n            // console.log(\"Refresh token\", refreshToken)\n                API.User.getUserProfile().then(user=>{\n                    // console.log(\"Fetched user\", user);\n                    setCurrentUser(user);\n                    setIsLoading(false)\n                }).catch(error=>{\n                    console.log(error);\n                    setIsLoading(false)\n                })\n        }else{\n            console.log(\"Refresh token is empty. No actions taken.\")\n        }\n    },[]);\n\n    return (\n        <AuthContext.Provider\n            value={{\n                currentUser,\n                setCurrentUser,\n                isLoading\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};","import React, { useState, useCallback } from 'react';\nimport { useContext } from 'react';\n\nexport const EditRecommendationContext = React.createContext()\n\n\nexport default function EditRecommendationProvider({ children }) {\n    const [config, setConfig] = useState({\n        open: false,\n        currentlyEditing: undefined,\n        rootList: [],\n        setRootList: ()=>{}\n    });\n\n    function startEditing(recommendation, rootList, setRootList) {\n        let conf = { ...config }\n\n        conf.open = true\n        conf.currentlyEditing = recommendation\n\n        conf.rootList = rootList\n        conf.setRootList = setRootList\n\n        setConfig(conf)\n    }\n\n    function removeRecommendation(){\n        let conf = { ...config }\n        conf.open = false\n\n        let tempRootList = [...conf.rootList]\n        for(let i = 0; i<tempRootList.length; i++){\n            console.log(tempRootList[i].id)\n            if(tempRootList[i].id === conf.currentlyEditing.id){\n                tempRootList.splice(i, 1)\n            }\n        }\n        config.setRootList(tempRootList)\n        setConfig(conf)\n    }\n\n    function finishEditing(success=false, removedId= undefined) {\n        let conf = { ...config }\n        conf.open = false\n\n        if(removedId !== undefined){\n            for(let i = 0; i<conf.currentlyEditing.objects.length; i++){\n                if(conf.currentlyEditing.objects[i].id === removedId){\n                    conf.currentlyEditing.objects.splice(i, 1)\n                }\n            }\n        }\n\n        if(success){\n            let tempRootList = [...config.rootList]\n            for(let i = 0; i<tempRootList.length; i++){\n                if(tempRootList[i].id === conf.currentlyEditing.id){\n                    tempRootList[i] = conf.currentlyEditing\n                    break;\n                }\n            }\n            config.setRootList(tempRootList)\n        }\n\n        setConfig(conf)\n    }\n\n    function setRecommendation(newRec){\n        let conf = { ...config }\n        conf.currentlyEditing = newRec\n\n        setConfig(conf)\n    }\n\n    return (\n        <EditRecommendationContext.Provider value={{\n            config,\n            startEditing,\n            finishEditing,\n            removeRecommendation,\n            setRecommendation\n        }}>\n            {children}\n        </EditRecommendationContext.Provider>\n    );\n}","import React, {useContext, useEffect, useState} from \"react\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport ApiPlaceCard from \"../ApiPlaceCard\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {EditRecommendationContext} from \"../../contexts/EditRecommendationContext\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport API from \"../../Networking/API\";\nimport {func} from \"prop-types\";\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    textField:{\n        marginTop: 16\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    recommendedPlaceCard: {\n        width: 300,\n        height: 300,\n        padding: 16,\n        display: \"flex\",\n        flexDirection: 'column',\n        alignContent: 'flex-end',\n        zIndex: 999999\n    }\n\n});\n\nconst RecommendationPlaceSortable = SortableElement(({classes, place, removeObjectFromRecommendation}) => (\n    <div className={classes.recommendedPlaceCard}>\n        <ApiPlaceCard\n            placeData={place}\n            renderActionArea={() => {\n                return (\n                    <div>\n                        <IconButton aria-label=\"delete\" onClick={()=>removeObjectFromRecommendation(place.id)}>\n                            <DeleteIcon color=\"secondary\" fontSize=\"small\" />\n                        </IconButton>\n                    </div>\n                )\n            }\n            }\n        />\n    </div>)\n)\n\nconst RecommendationPlaceSortableContainer = SortableContainer(({classes, config, removeObjectFromRecommendation}) => {\n    return (\n        <div style={{display:\"flex\", flexDirection: \"row\"}}>\n            {config.currentlyEditing.objects.length > 0 ?\n\n                config.currentlyEditing.objects.map((place, index)=>{\n                    delete place.description\n\n                    return <RecommendationPlaceSortable\n                        classes={classes}\n                        removeObjectFromRecommendation={removeObjectFromRecommendation}\n                        key={place.id}\n                        index={index}\n                        place={place}\n                    />\n                }) :\n\n                <Alert severity=\"info\">This recommendation does not have any objects attached. You can attach\n                    Places or Tours by browsing in Places and Tours tables\n                </Alert>\n            }\n\n        </div>\n    )\n});\n\nfunction EditRecommendationDialog({classes}){\n\n\n    const {addConfig} = UseSnackbarContext();\n    const {addAlertConfig} = UseAlertDialogContext();\n\n    const { config, setRecommendation, finishEditing, removeRecommendation } = useContext(EditRecommendationContext)\n\n    const [loading, setLoading] = useState(false)\n\n    const dataChanged = (event) => {\n        const {name, value} = event.target;\n        let recData = {...config.currentlyEditing}\n        recData[name] = value\n\n        setRecommendation(recData)\n    };\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        console.log(\"OnSortEnd\")\n        let data = { ...config.currentlyEditing }\n        data.objects = arrayMove(data.objects, oldIndex, newIndex)\n\n        setRecommendation(data)\n    }\n\n    function removeObjectFromRecommendation(placeId) {\n        addAlertConfig(\"Remove object from recommendation\", \"Are you sure you want to remove this object from recommendation?\", [{\n            name: \"Yes\",\n            action: () => {\n                setLoading(true)\n                API.Recommendation.removePlaceFromRecommendation(\n                    {id: placeId,\n                        recommendationId: config.currentlyEditing.id,\n                        type: config.currentlyEditing.type}\n                ).then(()=>{\n                    addConfig(true, \"Object removed from recommendation\")\n                    finishEditing(true, placeId)\n                }).catch(()=>{\n                    addConfig(false, \"Something went wrong!\")\n                }).finally(()=>{\n                    setLoading(false)\n                })\n            }\n        }])\n\n    }\n\n    function deleteRecommendation(){\n        addAlertConfig(\"Remove recommendation\", \"Are you sure you want to remove this recommendation?\", [{\n            name: \"Yes\",\n            action: () => {\n                setLoading(true);\n                API.Recommendation.removeRecommendation(config.currentlyEditing.id).then(()=>{\n                    addConfig(true, \"Removed recommendation successfully\")\n                    removeRecommendation()\n                }).catch(()=>{\n                    addConfig(false, \"Something went wrong. Please try again!\")\n                }).finally(()=>{\n                    setLoading(false)\n                })\n            }\n        }])\n    }\n\n    function constructRecommendationForUpdate(){\n        let rec = { ...config.currentlyEditing }\n        const objects = []\n        config.currentlyEditing.objects.map(row=>{\n            objects.push({id: row.id, type: rec.type})\n        })\n\n        rec.objects = objects\n\n        return rec\n    }\n\n\n    function editRecommendation(){\n        addAlertConfig(\"Edit recommendation\", \"Are you sure you want to edit this recommendation?\", [{\n            name: \"Yes\",\n            action: () => {\n                setLoading(true);\n                const rec = constructRecommendationForUpdate()\n                API.Recommendation.updateRecommendation(rec).then(()=>{\n                    addConfig(true, \"Updated recommendation successfuly\")\n                    finishEditing(true)\n                }).catch(()=>{\n                    addConfig(false, \"Something went wrong. Please try again!\")\n                }).finally(()=>{\n                    setLoading(false)\n                })\n            }\n        }])\n    }\n\n\n    return(\n        <Dialog\n            open={config.open}\n            fullWidth={true}\n            maxWidth={\"md\"}\n            onClose={()=>{\n                finishEditing()\n            }}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            {loading ? <LinearProgress /> : null}\n            <DialogTitle id=\"alert-dialog-title\">Edit recommendation</DialogTitle>\n            <DialogContent>\n                {config.currentlyEditing !== undefined ? <div className={classes.root}>\n                    <TextField id=\"outlined-basic\"\n                               required\n                               label=\"Title\"\n                               name=\"name\"\n                               value={config.currentlyEditing['name']}\n                               onChange={dataChanged}\n                               variant=\"outlined\"\n                               className={classes.textField}\n                    />\n\n                    <TextField id=\"outlined-basic\"\n                               required\n                               label=\"Subtitle\"\n                               name=\"subtitle\"\n                               value={config.currentlyEditing['subtitle']}\n                               onChange={dataChanged}\n                               variant=\"outlined\"\n                               className={classes.textField}\n                    />\n                    <TextField id=\"outlined-basic\"\n                               required\n                               label=\"Description\"\n                               name=\"description\"\n                               value={config.currentlyEditing['description']}\n                               onChange={dataChanged}\n                               variant=\"outlined\"\n                               className={classes.textField}\n                    />\n\n                    <div style={{display: \"flex\", flexDirection: 'row', overflowX: 'auto', width: '100%'}}>\n                        <RecommendationPlaceSortableContainer\n                            removeObjectFromRecommendation={removeObjectFromRecommendation}\n                            classes={classes}\n                            config={config}\n                            axis={'xy'}\n                            pressDelay={200}\n                            disableAutoscroll={false}\n                            onSortEnd={onSortEnd}/>\n                    </div>\n                </div> : null }\n\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={()=>finishEditing()}\n                        color=\"primary\">\n                    Close\n                </Button>\n\n                <Button\n                    color=\"primary\"\n                    onClick={()=>{\n                        editRecommendation()\n                    }}\n                >\n                    Save\n                </Button>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={()=>{\n                        deleteRecommendation()\n                    }}\n                >\n                    Delete recommendation\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default withStyles(styles)(EditRecommendationDialog)","import React, {useContext, useEffect, useState} from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { ReactSortable } from \"react-sortablejs\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API from \"../Networking/API\";\nimport Recommendation from \"../components/recomendation/Recommendation\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport EditRecommendationDialog from \"../components/recomendation/EditRecommendationDialog\";\nimport {EditRecommendationContext} from \"../contexts/EditRecommendationContext\";\nimport TextField from \"@material-ui/core/TextField\";\nimport debounce from \"lodash/debounce\";\nimport Button from \"@material-ui/core/Button\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst styles = theme => ({\n    root:{\n        flexWrap: 'wrap',\n        display: 'flex',\n        flexDirection: 'row',\n        flex: 1,\n        justifyContent: 'center',\n        alignContent: 'center',\n        width: '100%',\n        height: '100%'\n    },\n    left: {\n        width: '50%',\n        height: '100%',\n        padding: 16,\n    },\n    leftTop:{\n        alignItems: 'flex-start',\n        height: '10%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    leftContent:{\n        padding: 16,\n        borderStyle: 'dashed',\n        height: '80%',\n        overflowY: 'auto',\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n    },\n    right:{\n        width: '50%',\n        height: '100%',\n        padding: 16,\n    },\n    rightTop: {\n        alignItems: 'flex-start',\n        height: '10%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n\n    rightContent: {\n        padding: 16,\n        borderStyle: 'dashed',\n        height: '80%',\n        overflowY: 'auto',\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n    }\n});\n\nfunction RecommendationsPage({classes}) {\n\n    const [recommendations, setRecommendations] = useState([]);\n    const [homeRecommendations, setHomeRecommendations] = useState([]);\n\n    const [keyword, setKeyword] = useState('')\n    const [loading, setLoading] = useState(true)\n    const [pagingData, setPagingData] = useState({pageNum: 1})\n\n    const { startEditing } = useContext(EditRecommendationContext)\n    const {addConfig} = UseSnackbarContext();\n\n    function getRecommendations(page, keywordChange = false) {\n        API.Recommendation.getAllRecommendations(\"?full=true&p=\"+page+\"&keyword=\"+keyword).then(response=>{\n            if(keywordChange){\n                setRecommendations(unique(response.list, homeRecommendations))\n            }else{\n                setRecommendations(old=>[...old, ...unique(response.list, homeRecommendations)])\n            }\n\n            delete response.list\n            setPagingData(response)\n        }).catch(()=>{\n\n        }).finally(()=>{\n            setLoading(false)\n        })\n    }\n\n    useEffect(()=>{\n        setLoading(true)\n        Promise.all([\n            API.Explore.getExplorePage(\"?s=100\"),\n            API.Recommendation.getAllRecommendations(\"?full=true\")\n        ]).then((responses)=>{\n            setHomeRecommendations(responses[0].list)\n            setRecommendations(unique(responses[1].list, responses[0].list))\n        }).catch(()=>{\n\n        }).finally(()=>{\n            setLoading(false)\n        })\n\n    },[])\n\n\n    useEffect(()=>{\n        if(!loading){\n            getRecommendations(1, true)\n        }\n    }, [keyword])\n\n    function unique(newList, existingRecommendations){\n        const uniqueList = []\n        let found = false;\n        for(let i = 0; i<newList.length; i++){\n            for(let j = 0; j<existingRecommendations.length; j++){\n                if(newList[i].id === existingRecommendations[j].id){\n                    found = true\n                    break;\n                }\n            }\n            if(!found){\n                uniqueList.push(newList[i])\n            }\n            found = false\n        }\n\n\n        return uniqueList\n    }\n\n    const handleScrollDebounced = (e) => {\n        console.log(\"Handle scroll\")\n        const scrollOffset = 0;\n        const bottom = Math.round(e.target.scrollHeight - e.target.scrollTop - scrollOffset)  <= e.target.clientHeight;\n        if (bottom && !loading && recommendations.length>0 && pagingData.pageNum<pagingData.pages) {\n            setLoading(true);\n            console.log(\"Requesting new page\")\n            getRecommendations(pagingData.pageNum+1);\n        }\n    };\n\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\n    const handleScroll = (e) => {\n        e.persist();\n        debounceScroll(e)\n    };\n\n\n    function RecommendationSkeleton(){\n        return(\n            <div>\n                <Skeleton animation='wave' variant=\"rect\" width={200} height={40} />\n                <Skeleton animation='wave' variant=\"text\" width={180}/>\n                <Skeleton animation='wave' variant=\"text\" width={250}/>\n                <div style={{display: 'flex', margin: 16, flexDirection: 'row'}}>\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\n                </div>\n                <Skeleton animation='wave' variant=\"text\" width={1000}/>\n            </div>\n        )\n    }\n\n\n\n    function updateExplorePage() {\n        const explorable = []\n        homeRecommendations.map(row=>{\n            explorable.push(row.id)\n        })\n\n        // setLoading(true)\n        API.Explore.updateExplorePage(explorable).then(()=>{\n            addConfig(true, \"Updated explore page successfully!\")\n\n        }).catch(()=>{\n            addConfig(false, \"Unexpected error!\")\n        }).finally(()=>{\n            // setLoading(false)\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.left}>\n                <div className={classes.leftTop}>\n                    <Typography variant=\"h4\">\n                        Home recommendations\n                    </Typography>\n\n                    <Button\n                        onClick={updateExplorePage}\n                        variant=\"contained\"\n                        color=\"primary\">\n                        Save feed\n                    </Button>\n                </div>\n\n                <div className={classes.leftContent}>\n                    {loading ? <>\n                            <RecommendationSkeleton />\n                            <RecommendationSkeleton style={{marginTop: 48}}/>\n                        </> :\n                        homeRecommendations.length > 0 ?\n                        <ReactSortable\n                            style={{width: '100%', height: '100%'}}\n                            list={homeRecommendations}\n                            setList={setHomeRecommendations}\n                            animation={150}\n                            group=\"cards\"\n                            onChange={(order, sortable, evt) => {}}\n                            onEnd={evt => {}}\n                        >\n                            {homeRecommendations.map(rec => (\n                                <Recommendation\n                                    key={rec.id}\n                                    recommendation={rec}\n                                    onEditCallback={()=> {\n                                        startEditing(rec, homeRecommendations, setHomeRecommendations)\n                                    }}\n                                />\n                            ))}\n                        </ReactSortable> : <Alert style={{marginTop: 48}} severity=\"info\">No recommendations are put in home tab. Click and Drag existing recommendations from right side.</Alert>\n                    }\n\n                </div>\n\n            </div>\n\n            <div className={classes.right}>\n                <div className={classes.rightTop}>\n                    <Typography variant=\"h4\">\n                        Existing recommendations\n                    </Typography>\n\n                </div>\n                <div className={classes.rightContent} onScroll={handleScroll}>\n                    <TextField id=\"standard-search\" label=\"Search\" value={keyword} type=\"search\" onChange={e=>{\n                        setKeyword(e.target.value)\n                    }} />\n                    {loading ? <>\n                       <RecommendationSkeleton />\n                       <RecommendationSkeleton style={{marginTop: 16}}/>\n                    </> :\n                        recommendations.length > 0 ?\n\n                           <ReactSortable\n                           style={{width: '100%', height: '100%'}}\n                           list={recommendations}\n                           setList={setRecommendations}\n                           animation={150}\n                           group=\"cards\"\n                           onChange={(order, sortable, evt) => {}}\n                           onEnd={evt => {}}\n                           >\n                           {recommendations.map(rec => (\n                               <Recommendation\n                                   onEditCallback={()=>{\n                                       startEditing(rec, recommendations, setRecommendations)\n                                   }}\n                                   key={rec.id}\n                                   recommendation={rec}/>\n                           ))}\n                           </ReactSortable> :  <Alert style={{marginTop: 48}} severity=\"info\">Currently there are no available recommendations.</Alert>\n                       }\n\n                </div>\n            </div>\n\n            <EditRecommendationDialog />\n        </div>\n    )\n}\n\n\nexport default withStyles(styles)(RecommendationsPage);\n","import React, {Fragment, useContext, useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Places from \"../pages/Places\";\nimport AddPlace from \"../pages/AddPlace\";\nimport history from \"../helpers/history\";\nimport ApiPlaces from \"../pages/ApiPlaces\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\nimport NotFoundPage from \"../pages/NotFoundPage\";\nimport Redirect from \"react-router-dom/es/Redirect\";\n\nimport Tour from \"./tour_components/Tour\";\nimport { useLocation } from 'react-router-dom'\nimport Tours from \"../pages/Tours\";\nimport Resources from \"./Resources\";\nimport {PlacesFilterProvider} from \"../contexts/PlacesFilterContext\";\nimport ManageUsers from \"../pages/ManageUsers\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport API from \"../Networking/API\";\nimport {AuthContext} from \"../contexts/AuthContext\";\nimport RecommendationsPage from \"../pages/RecommendationsPage\";\nimport EditRecommendationProvider, {EditRecommendationContext} from \"../contexts/EditRecommendationContext\";\nimport AppStateStorageProvider from \"../contexts/AppStateStorageContext\";\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles((theme) => ({\n    root1: {\n        overflow: \"hidden\",\n        display: 'flex',\n        height: \"100vh\",\n        background: \"#F1F1F1\"\n    },\n    appBar: {\n        height: \"64px\",\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        width: \"100vw\",\n        height: \"100%\",\n        //padding: theme.spacing(3),\n        // transition: theme.transitions.create('margin', {\n        //     easing: theme.transitions.easing.sharp,\n        //     duration: theme.transitions.duration.leavingScreen,\n        // }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        width: \"100vw\",\n        height: \"100%\",\n        // transition: theme.transitions.create('margin', {\n        //     easing: theme.transitions.easing.easeOut,\n        //     duration: theme.transitions.duration.enteringScreen,\n        // }),\n        marginLeft: 0\n    },\n}));\n\n// const PlacesWithContext = () =>  (\n//     <AppStateStorageProvider>\n//         <Places/>\n//     </AppStateStorageProvider>\n// );\n\nconst TourWithContext = (props) =>  (\n    <PlacesFilterProvider>\n        <Tour {...props}/>\n    </PlacesFilterProvider>\n);\n\nconst RecommendationsWithContext = (props) =>  (\n    <EditRecommendationProvider>\n        <RecommendationsPage {...props}/>\n    </EditRecommendationProvider>\n);\n\n\nexport default function Appbar(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n    const { title, setTitle } = UseAppBarTitleContext();\n    const {addAlertConfig} = UseAlertDialogContext();\n    let location = useLocation();\n\n    const { currentUser } = useContext(AuthContext);\n\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const handleListItemClick = (url,title) =>{\n        handleDrawerClose();\n        setTitle(title);\n\n        let re = new RegExp(url+'([0-9]*)?');\n        if(re.test(location.pathname)){\n            history.push(url);\n            history.go(0);\n        }\n    };\n\n    function handleLogout() {\n        addAlertConfig(\"Logout\", \"Are you sure you want to logout\", [{\n            name: \"Yes\",\n            action: () => {\n                localStorage.removeItem(\"access_token\");\n                localStorage.removeItem(\"refresh_token\")\n                history.push(\"/login\")\n            }\n        }])\n    }\n\n    const hasPermission = (perm) => {\n        return currentUser != null && currentUser.permissions.some(permission => permission.permission === perm)\n    };\n\n    return (\n        <div className={classes.root1}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <Typography variant=\"h6\" style={{width: \"100%\"}}>\n                        {currentUser != null ? currentUser.name : \"Loading user profile\"}\n                    </Typography>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n\n                <Divider />\n                <List>\n                    <ListItem button component={Link} to=\"/app/home\" onClick={()=>handleListItemClick(\"/app/home\",\"Home\")}>\n                        <ListItemText>Home</ListItemText>\n                    </ListItem>\n                    <Divider light />\n                    <ListItem button component={Link} to=\"/app/places\" onClick={()=>handleListItemClick(\"/app/places\",\"Places\")} >\n                        <ListItemText>Places</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/tours\" onClick={()=>handleListItemClick(\"/app/tours\",\"Tours\")} >\n                        <ListItemText>Tours</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/recommendations\" onClick={()=>handleListItemClick(\"/app/recommendations\",\"Recommendations\")} >\n                        <ListItemText>Recommendations</ListItemText>\n                    </ListItem>\n                    {/*<ListItem button component={Link} to=\"/app/apiplaces\" onClick={()=>handleListItemClick(\"/app/apiplaces\",\"Api places\")} >*/}\n                    {/*    <ListItemText>Explore API places</ListItemText>*/}\n                    {/*</ListItem>*/}\n                    { hasPermission(\"place:insert\") &&\n                        <ListItem button component={Link} to=\"/app/addplace\" onClick={()=>handleListItemClick(\"/app/addplace\",\"Add Place\")} >\n                            <ListItemText>Add place</ListItemText>\n                        </ListItem>\n                    }\n                    { hasPermission(\"tour:modify\") &&\n                        <ListItem button component={Link} to=\"/app/addtour\"\n                                  onClick={() => handleListItemClick(\"/app/addtour\", \"Add tour\")}>\n                            <ListItemText>Add tour</ListItemText>\n                        </ListItem>\n                    }\n                    <ListItem button component={Link} to=\"/app/resources\" onClick={()=>handleListItemClick(\"/app/resources\",\"Manage resources\")} >\n                        <ListItemText>Resources</ListItemText>\n                    </ListItem>\n                    { hasPermission(\"role:manage\") &&\n                        <ListItem button component={Link} to=\"/app/users\" onClick={()=>handleListItemClick(\"/app/users\",\"Manage users\")} >\n                            <ListItemText>Manage users</ListItemText>\n                        </ListItem>\n                    }\n                    <Divider light />\n                    <ListItem button onClick={()=>handleLogout()} >\n                        <ListItemText>Logout</ListItemText>\n                    </ListItem>\n                </List>\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n                <Switch>\n                    <Route exact path=\"/app/home\" component={Home} />\n                    <Route path=\"/app/places\" component={Places} />\n                    <Route path=\"/app/tours\" component={Tours} />\n                    <Route path=\"/app/addplace/:placeId?\" component={AddPlace} />\n                    <Route path=\"/app/recommendations\" component={RecommendationsWithContext} />\n                    <Route path=\"/app/addtour/:tourId?\" component={TourWithContext} />\n                    <Route path=\"/app/resources\" component={Resources} />\n                    <Route path=\"/app/users\" component={ManageUsers} />\n                    <Redirect from=\"*\" to=\"/404\"/>\n                </Switch>\n\n            </main>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport Appbar from './components/Appbar.js';\nimport AppBarTitleProvider from \"./contexts/AppBarTitleContext\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\n\nclass App extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <AppBarTitleProvider>\n                        <Appbar />\n                    </AppBarTitleProvider>\n                    </MuiPickersUtilsProvider>\n            </React.Fragment>\n        );\n    }\n}\nexport default App;","import React, {useContext, useEffect, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport history from \"../helpers/history\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {AuthContext} from \"../contexts/AuthContext\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport {isAuthenticated} from \"../helpers/tokens\";\nimport API from \"../Networking/API\";\nimport {func} from \"prop-types\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n                Traveldirection {' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    loaderMain: {\n        width: \"100%\",\n        height: \"100%\",\n        alignItems:\"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"red\"\n    }\n}));\n\nexport default function LoginPage() {\n    const classes = useStyles();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loading, setIsLoading] = useState(false);\n    const { addConfig } = UseSnackbarContext();\n    const { currentUser, setCurrentUser } = useContext(AuthContext);\n\n    const handleLogin = () =>{\n        setIsLoading(true);\n        console.log(\"handleLogin\", {identifier: email, password: password});\n        API.Auth.login({identifier: email, password: password}).then(response=>{\n            if(!checkAccess(response.authorities)){\n                addConfig(false, \"Only admins and editors can access admin panel!\")\n                setIsLoading(false);\n                return\n            }\n            setIsLoading(false);\n            localStorage.setItem(\"access_token\", response.access_token);\n            localStorage.setItem(\"refresh_token\", response.refresh_token);\n            API.User.getUserProfile().then(response=>{\n                console.log(\"User profile:\", response);\n                setCurrentUser(response);\n                history.push(\"/app/home\");\n            }).catch(error=>{\n                setIsLoading(false);\n                addConfig(false, error.message)\n            });\n        }).catch(error=>{\n            setIsLoading(false);\n            addConfig(false, error.message)\n        });\n    };\n\n    function checkAccess(roles){\n        var hasAccess = false\n        roles.map(row=>{\n            console.log(row)\n            if(row.authority === \"ROLE_ADMIN\"){\n                hasAccess = true\n            }\n        });\n        return hasAccess\n    }\n\n    if (isAuthenticated()) {\n        return <Redirect to=\"/app\" />;\n    }\n\n    const handleKeyPress = (event) =>{\n        if (event.which === 13 || event.keyCode === 13) {\n            handleLogin();\n            return false;\n        }\n        return true;\n    };\n\n    return <Container component=\"main\" maxWidth=\"xs\" onKeyPress={(e)=>handleKeyPress(e)}>\n\n                            {loading && <LinearProgress />}\n                            <CssBaseline />\n                            <div className={classes.paper}>\n                                <Avatar className={classes.avatar}>\n                                    <LockOutlinedIcon />\n                                </Avatar>\n                                <Typography component=\"h1\" variant=\"h5\">\n                                    Sign in\n                                </Typography>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    value={email}\n                                    onChange={(e)=>{setEmail(e.target.value)}}\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    value={password}\n                                    onChange={(e)=>{setPassword(e.target.value)}}\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                />\n                                <Button\n                                    onClick={()=>{handleLogin()}}\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                >\n                                    Sign In\n                                </Button>\n                            </div>\n                            <Box mt={8}>\n                                <Copyright />\n                            </Box>\n                        </Container>\n\n}","import Route from \"react-router-dom/es/Route\";\nimport React, {useContext} from \"react\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport {isAuthenticated} from \"../helpers/tokens\";\n\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={routeProps =>\n                isAuthenticated() === true ? (\n                    <Component {...routeProps} />\n                ) : (\n                    <Redirect to={\"/login\"} />\n                )\n            }\n        />\n    );\n};","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\n\n\nexport default function SnackbarFeedback(props){\n\n    const { config, removeConfig } = UseSnackbarContext();\n\n    return(\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"error\") : \"\"}>\n                {!!config && config.message}\n            </Alert>\n        </Snackbar>\n    )\n}\n","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\"\n\nconst AlertDialogFeedback = () => {\n\n    const {alertConfig, removeAlertConfig} = UseAlertDialogContext();\n\n    function remove() {\n        if(alertConfig.onClose !== undefined){\n            alertConfig.onClose()\n        }\n        removeAlertConfig()\n    }\n\n    return(\n        <Dialog\n            open={!!alertConfig}\n            onClose={remove}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{!!alertConfig ? alertConfig.title : \"\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {!!alertConfig ? alertConfig.message : \"\"}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={remove}\n                        color=\"primary\">\n                    Close\n                </Button>\n                {!!alertConfig && alertConfig.actions.map(row=>{\n                    return <Button onClick={()=>{\n                        remove();\n                        row.action();\n                    }}\n                    color=\"primary\"\n                    >\n                            {row.name}\n                    </Button>\n                })}\n            </DialogActions>\n        </Dialog>\n    )\n};\n\n\nexport default AlertDialogFeedback\n","import Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport React, {useState} from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\n\n\nexport const TextInputDialog = () => {\n\n    const {dialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen} = UseEditDialogContext();\n    const [inputText, setInputText] = useState(\"\")\n    const [error, setError] = useState(0)\n\n    const deInit = () => {\n        setError(0)\n        setDialogOpen(false)\n        setInputText(\"\")\n    }\n\n    const handleClose = () => {\n        deInit()\n    }\n\n    const handleDone = () => {\n        let errorCode = dialogConfig.validateInput(inputText)\n        setError(errorCode)\n        if(errorCode !== 0) return\n\n        if(dialogConfig.onDoneCallback !== undefined)\n            dialogConfig.onDoneCallback(inputText)\n        deInit()\n    }\n    const handleInput = (e) => {\n        setInputText(e.target.value)\n    }\n\n    return (\n        <div>\n            <Dialog open={dialogOpen} aria-labelledby=\"form-dialog-title\" fullWidth>\n                <DialogTitle id=\"form-dialog-title\">{dialogConfig.title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {dialogConfig.explanation}\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        helperText={error !== 0 && dialogConfig.errorMessages[error] !== null ? dialogConfig.errorMessages[error] : \"\"}\n                        error={error !== 0}\n                        margin=\"dense\"\n                        id=\"name\"\n                        onInput={handleInput}\n                        label={dialogConfig.textFieldLabel}\n                        defaultValue={dialogConfig.defaultText}\n                        type=\"email\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleDone} color=\"primary\">\n                        Done\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport history from \"./helpers/history\";\nimport LoginPage from \"./pages/LoginPage\";\nimport {Router, Route, Link, Switch} from \"react-router-dom\";\nimport {AuthenticatedRoute} from \"./components/AuthenticatedRoute\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\nimport AlertDialogProvider from \"./contexts/AlertDialogContext\";\nimport AlertDialogFeedback from \"./components/feedback/AlertDialogFeedback\";\nimport {AuthProvider} from \"./contexts/AuthContext\";\nimport {PlacesFilterProvider} from \"./contexts/PlacesFilterContext\";\nimport EditDialogProvider from \"./contexts/EditDialogContext\";\nimport {TextInputDialog} from \"./components/feedback/TextInputDialog\";\nimport LoadingScreen from \"./components/LoadingScreen\";\nimport AppStateStorageProvider from \"./contexts/AppStateStorageContext\";\n\nrequire('dotenv').config();\n\nReactDOM.render(\n    <React.Fragment>\n        <AppStateStorageProvider>\n            <AuthProvider>\n                <Router history={history}>\n                    <SnackbarProvider>\n                        <AlertDialogProvider>\n                            <EditDialogProvider>\n                                <SnackbarFeedback/>\n                                <AlertDialogFeedback/>\n                                <TextInputDialog/>\n                                <PlacesFilterProvider>\n                                    <Switch>\n                                        <Redirect exact from=\"/\" to=\"/login\"/>\n                                        <Redirect exact from=\"/app\" to=\"/app/home\"/>\n                                        <AuthenticatedRoute path=\"/app\" component={App}/>\n                                        <Route path=\"/login\" component={LoginPage}/>\n                                        <Route path=\"*\" component={NotFoundPage}/>\n                                        <Redirect from=\"*\" to=\"/404\"/>\n                                    </Switch>\n                                </PlacesFilterProvider>\n                            </EditDialogProvider>\n                        </AlertDialogProvider>\n                    </SnackbarProvider>\n                </Router>\n            </AuthProvider>\n        </AppStateStorageProvider>\n\n    </React.Fragment>\n    , document.getElementById('root'));\n"],"sourceRoot":""}