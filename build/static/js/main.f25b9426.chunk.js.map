{"version":3,"sources":["res/selectedTourIcon.svg","res/selectedParking.svg","res/availableParking.svg","pages/Home.js","components/TableComponent.js","helpers/debounce.js","helpers/history.js","helpers/tokens.js","Networking/NetworkLayerCentral.js","Networking/API.js","contexts/AlertDialogContext.js","contexts/UseAlertDialogContext.js","helpers/stringResources.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","components/AutocompleteChip.js","contexts/PlacesFilterContext.js","components/add_place_components/FilterBlock.js","pages/Places.js","helpers/priceRange.js","helpers/averageTimeSpent.js","components/AddSourceDialog.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/maps/MapGeolocation.js","components/maps/MapToolbar.js","components/maps/MapLock.js","components/maps/CustomControlsManager.js","components/maps/PlaceMap.js","components/add_place_components/PlaceLocation.js","components/maps/ParkingMap.js","components/add_place_components/ParkingLocation.js","contexts/EditDialogContext.js","contexts/UseEditDialogContext.js","components/add_place_components/PlaceDiscovery.js","components/add_place_components/initialScheduleData.js","components/ReviewCard.js","components/add_place_components/Reviews.js","contexts/AppBarTitleContext.js","contexts/UseAppBarTitleContext.js","components/ScheduleInterval.js","components/DayComponent.js","components/Schedule.js","components/add_place_components/SchedulesWrapper.js","components/recomendation/AddRecommendationDialog.js","components/recomendation/RecommendationListDialog.js","components/ApiPlaceCard.js","components/recomendation/Recommendation.js","pages/AddPlace.js","components/SearchInputComponent.js","pages/ApiPlaces.js","pages/NotFoundPage.js","components/tour_components/TourPlaceComponent.js","components/tour_components/TransportItem.js","components/tour_components/TourPlacesWrapper.js","components/tour_components/PlaceSearch.js","components/tour_components/DayCard.js","components/tour_components/DaysWrapper.js","components/tour_components/TourReducer.js","components/tour_components/TourInfoComponent.js","components/tour_components/TourMap.js","components/tour_components/Tour.js","pages/Tours.js","components/AddDialog.js","components/Resources.js","components/UpdateUserDialog.js","components/AddUserDialog.js","pages/ManageUsers.js","contexts/AuthContext.js","contexts/EditRecommendationContext.js","components/recomendation/EditRecommendationDialog.js","pages/RecommendationsPage.js","components/Appbar.js","App.js","pages/LoginPage.js","components/AuthenticatedRoute.js","components/feedback/SnackbarFeedback.js","components/feedback/AlertDialogFeedback.js","components/feedback/TextInputDialog.js","index.js"],"names":["module","exports","withStyles","theme","button","margin","spacing","input","display","props","classes","descendingComparator","a","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","checkable","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","customToolbarElements","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","style","alignItems","TextField","target","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","centerCell","textAlign","rowNotPublished","rowNotVerified","rowBasic","TableComponent","searchFunction","pagingInfo","data","updateCallback","removeCallback","isLoading","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","filter","item","undefined","slice","row","isItemSelected","indexOf","labelId","rowStyle","hover","rowId","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckboxChange","header","isId","scope","e","stopPropagation","preventDefault","fontSize","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","pageNum","onChangePage","newPage","onChangeRowsPerPage","parseInt","console","log","history","getAccessToken","localStorage","getItem","getRefreshToken","isAuthenticated","request","options","contentType","authorize","client","axios","create","baseURL","headers","interceptors","response","use","error","originalRequest","config","url","status","code","Promise","reject","removeItem","push","startsWith","_retry","API","Auth","refreshToken","then","token","access_token","Authorization","setItem","catch","err","onSuccess","onError","debug","message","RequestType","getRequest","path","urlData","method","postRequest","postMultipartRequest","formData","Explore","getExplorePage","updateExplorePage","Recommendation","removeRecommendation","updateRecommendation","removePlaceFromRecommendation","addObjectToRecommendation","getAllRecommendations","urlParams","createRecommendation","User","setRoles","getAllRoles","getAllUsers","getUserProfile","register","login","Tour","insertTour","getTour","updateTour","getAllToursAdmin","removeTour","getTourCategories","updateTourCategories","SourcePlace","updateSourcesForPlace","Source","getSources","addSource","Places","getClosesPlacesAdmin","getAllCities","getAllCounties","getAllCountries","getAllMunicipalities","getAllPlaces","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","removePlace","Tags","getAllTags","addTag","params","removeTags","updateTags","Categories","addCategory","getAllCategories","removeCategory","updateCategory","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","Reviews","getPlaceReviews","AlertDialogContext","createContext","alertConfig","addAlertConfig","removeAlertConfig","AlertDialogProvider","children","setAlertConfig","contextValue","actions","onClose","Provider","UseAlertDialogContext","useContext","Strings","DIALOG_PLACE_PUBLISH_TITLE","DIALOG_PLACE_PUBLISH_MESSAGE","DIALOG_PLACE_UNPUBLISH_MESSAGE","DIALOG_PLACE_INSERT_TITLE","DIALOG_PLACE_INSERT","DIALOG_PLACE_UPDATE_TITLE","DIALOG_PLACE_UPDATE","DIALOG_PLACE_VERIFY_TITLE","DIALOG_PLACE_VERIFY_MESSAGE","DIALOG_PLACE_DELETE_TITLE","DIALOG_PLACE_DELETE_MESSAGE","DIALOG_TOUR_DELETE_TITLE","DIALOG_TOUR_DELETE_MESSAGE","SNACKBAR_PLACE_INSERTED_SUCCESS","SNACKBAR_PLACE_REMOVE_SUCCESS","SNACKBAR_TOUR_INSERTED_SUCCESS","SNACKBAR_TOUR_REMOVE_SUCCESS","SNACKBAR_ERROR","SNACKBAR_CHANGES_SAVED","SnackbarContext","addConfig","removeConfig","SnackbarProvider","setConfig","success","UseSnackbarContext","autoComplete","chip","justifyContent","flexWrap","listStyle","autoCompleteChipContainer","setOptions","selectedOptions","setSelectedOptions","initialData","setInitialData","getCurrentVal","setCurrentVal","firstLoad","setFirstLoad","handleDelete","found","row1","JSON","stringify","Box","option","Chip","onDelete","Autocomplete","disableClearable","getOptionLabel","renderInput","PlacesFilterContext","buildUrl","require","initialDates","insertionStart","moment","Date","format","insertionEnd","add","modificationStart","modificationEnd","PlacesFilterProvider","categories","setCategories","selectedCategories","setSelectedCategories","cities","setCities","selectedCities","setSelectedCities","countries","setCountries","selectedCountries","setSelectedCountries","municipalities","setMunicipalities","selectedMunicipalities","setSelectedMunicipalities","counties","setCounties","selectedCounties","setSelectedCounties","initialLoading","setInitialLoading","resetFilterOptions","setResetFilterOptions","filterLabel","filterName","filterOptions","setFilterOptions","dates","setDates","queryParams","di","dm","parseFilterOptions","parseCategories","filterQuery","setFilterQuery","getCategories","restrictions","res","cats","countryRestrictions","munRestrictions","all","filterOptionsCleared","areFiltersCleared","o","c","filterDiv","flexDirection","sortingButtons","rightLayout","boxShadow","datesLayout","flexGrow","setOpen","filterDateChange","date","cDate","Object","assign","Grid","container","xs","sm","FormControlLabel","control","generalOptions","filterOptionsChanged","AutocompleteChip","justify","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","Button","marginTop","filters","clearFilters","buttonsDiv","content","breakpoints","down","up","autocomplete","borderBottom","outline","setData","pageData","setPageData","setIsLoading","getPlaceNameById","i","placeId","requestAllPlaces","p","parseData","placesData","list","action","tmp","startIcon","priceRange","averageTimeSpent","closeButton","right","grey","open","setDialogOpen","setText","setUrl","setError","Dialog","fullWidth","DialogTitle","DialogContent","dividers","ev","DialogActions","autoFocus","validateInput","placeInfo","setPlaceInfo","selectedSources","setSelectedSources","updatePlaceInfo","newValue","place","valuetext","setAvailableSources","dialogOpen","availableSources","val","required","placeholder","InputLabelProps","shrink","multiline","rows","Slider","marginLeft","defaultValue","getAriaValueText","step","max","marks","FormControl","InputLabel","Select","native","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","pressDelay","disableAutoscroll","onSortEnd","oldIndex","newIndex","arrayMove","axis","acceptedFileFormats","dropzoneArea","onCloseCallback","onFinishCallback","loading","selectedFiles","setSelectedFiles","acceptedFiles","maxFileSize","showAlerts","dropzoneProps","disabled","filesLimit","onDrop","files","existingFiles","file","existingFile","imagefile","FormData","append","finally","addImageDialogOpen","setAddImageDialogOpen","handleAddPhoto","Geocode","setApiKey","geocodeFromLatLng","newLat","newLng","fromLatLng","address","results","formatted_address","addressArray","address_components","city","types","long_name","getCity","country","getCountry","county","getCounty","municipality","getMunicipality","latitude","longitude","isLocked","locationCallback","errorParsingLocation","handleKeyPress","which","keyCode","test","fromAddress","geometry","location","lat","lng","loc","split","parseFloat","onKeyPress","onPlaceSelected","navigator","geolocation","getCurrentPosition","coords","alert","setIsLocked","Switch","old","Alert","severity","CustomControlsManager","context","window","google","maps","ControlPosition","TOP_LEFT","MAP","controlDiv","document","createElement","controls","removeAt","createPortal","contextTypes","PropTypes","object","MapComponent","withGoogleMap","defaultZoom","ref","refInstance","center","defaultCenter","largeIcon","locationMarker","setLocationMarker","setParkingLocationMarker","otherPlacesData","setOtherPlacesData","infoWindows","setInfoWindows","refMap","useRef","s","range","l","Fragment","loadingElement","containerElement","mapElement","zIndex","icon","scaledSize","Size","origin","Point","markers","onCloseClick","Avatar","alt","visible","draggable","onDragEnd","latLng","BOTTOM_CENTER","mapCenter","current","getCenter","locationData","setLocationData","setParkingLocation","changeLocationData","setMainInfoWindow","onMarkerDragEnd","setPosition","mainInfoWindow","parking","parkingData","calcCrow","nearestParkingCount","addNewParking","parkingIsAttached","selectedParkingData","parkingId","anchor","parkingInfoWindows","setParkingInfoWindows","addExistingParking","lat1","lon1","lat2","lon2","dLat","toRad","dLon","sin","cos","atan2","sqrt","Value","PI","ParkingMap","setParkingData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","SortableItem","elevation","SortableList","oldArray","EditDialogContext","dialogConfig","addEditDialogConfig","removeEditDialogConfig","defaultOptions","errorMessages","explanation","onDoneCallback","textFieldLabel","defaultText","EditDialogProvider","setDialogConfig","UseEditDialogContext","selectedTags","setSelectedTags","availableCategories","setAvailableCategories","availableTags","setAvailableTags","tagName","newTag","tagId","1","2","categoryName","newCat","categoryId","initialScheduleData","openDay","closeDay","openTime","closeTime","marginRight","ReviewCard","review","CardContent","photoUrl","surname","Rating","rating","readOnly","upvotes","timeAdded","reviewsInfo","reviews","overflowX","setReviews","anchorEl","setAnchorEl","Boolean","filterBy","setFilterBy","getReviewsForPlace","debounceScroll","debounce","round","scrollWidth","scrollLeft","clientWidth","totalReviews","handleScrollDebounced","handleClose","overallStarRating","precision","aria-describedby","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","RadioGroup","Radio","onScroll","persist","handleScroll","AppBarTitleContext","setTitle","AppBarTitleProvider","UseAppBarTitleContext","flexFlow","picker","intervalRightSide","intervalLeftSide","intervals","setIntervals","currentInterval","lastAccommodation","lastAccommodationEnabled","setLastAccommodationEnabled","lastAccommodationTime","setLastAccommodationTime","getCloseDay","currentPeriod","isBefore","oldIntervals","useTheme","largeScreen","useMediaQuery","only","TimePicker","ampm","InputProps","disableUnderline","state","scheduleData","setScheduleData","globalTime","periods","ignoreOpenTime","ignoreCloseTime","ignoreGlobalTime","setIgnoreGlobalTime","Divider","pickerStyle","headerLeft","globalTimeEditLayout","globalTimeEditLeft","globalTimePicker","setPeriods","setGlobalTime","handleIntervalChange","newIntervals","oldPeriods","filtered","oldData","schedule","scheduleDefault","DatePicker","views","from","to","generateWeekdayViews","isScheduleEnabled","setIsScheduleEnabled","float","textField","formControl","addCallback","subtitle","description","setLoading","dataChanged","recData","addRecommendation","errors","hasErrors","checkErrors","insertedData","maxWidth","FormLabel","objectId","recommendations","setRecommendations","pagingData","setPagingData","showAddNewRecommendation","setShowAddNewRecommendation","getRecommendations","keywordChange","scrollHeight","scrollTop","clientHeight","pages","List","overflowY","maxHeight","ListItem","rec","recommendationId","ListItemIcon","ListItemText","recommendation","unshift","CategoriesDisplay","SubheaderDisplay","media","expand","transform","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","renderActionArea","CardHeader","subheader","substring","website","RecommendationType","paperContent","onEditCallback","objects","loader","bottom","match","phoneNumber","hasSchedule","isPublic","isVerified","source","price","parkingMarkerData","setParkingMarkerData","sources","setSources","setPlaceId","firstTimeLoading","setFirstTimeLoading","showRecommendationDialog","setShowRecommendationDialog","ColorButton","green","formFeedback","saveChanges","formPlaceInfo","plc","updateAll","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","updateSources","er","tags","responses","CircularProgress","obj","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debouncedInput","InputBase","orientation","topBar","searchBox","placeApiCard","isLoadingData","setIsLoadingData","word","query","encodeURI","elementType","isFitWidth","disableImagesLoaded","updateOnEachImageLoad","boxSizing","Copyright","getFullYear","minHeight","footer","cardRoot","details","cover","addParkingWrapper","elementData","addTransportCallback","displayNoTransportWarning","transportTypes","transportSelectWrapper","transportSelect","transportId","transportChangeCallback","transportRemoveCallback","currentTransport","setCurrentTransport","NativeSelect","transport","TourPlaceSortable","removePlaceCallback","tourPlaceComponent","TransportItemSortable","currentDay","removeElementCallback","tourInfo","shouldDisplayNoTransportWarning","elements","days","tour","ElementType","elementIdentifier","tourInfoReducer","errorInfo","setErrorInfo","day","shortid","generate","searchInputComponent","placeCard","addPlaceCallback","setApiPlacesFound","apiPlacesFound","localPlacesFound","setLocalPlacesFound","localPlacesLoading","setLocalPlacesLoading","placeType","mappedPlaces","forEach","generatePlaceCards","radioButtonArea","cardArea","descriptionInput","headerWrap","onSelectCallback","handleRemoveDay","updateDescriptionGlobally","DayCardSortable","dayInfo","removeDayCallback","addDayButton","footerWrapper","setCurrentDay","removeDay","TourDataReducer","some","findIndex","splice","nameField","descriptionField","publicityDiv","tourId","titleMissing","shouldDisplayTitleMissingError","showErrors","helperText","isPublished","MyMapComponent","addPlace","directions","setDirection","directionPlaces","setDirectionPlaces","places","setPlaces","placesInfoWindows","setPlacesInfoWindows","loadingArea","setLoadingArea","fetchPlaces","locations","Array","fill","PlacesMarkers","constructPlaceData","waypoints","stopover","shift","destination","pop","DirectionsService","route","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","searchAreaComponent","useMemo","TOP_CENTER","suppressMarkers","marker","labelOrigin","info","sampleTourData","leftLayout","actionsArea","setTourId","recommendationsDialogOpen","setRecommendationsDialogOpen","useReducer","dispatchTourInfo","handleAddPlaceClick","loadData","aggregatedDays","aggregatedElements","aggregatedPlace","fk_transportId","aggregatedDay","aggregatedTour","parseTourInfoResponse","handleSave","containsErrors","keys","keyIndex","element","j","dayInfoWithoutDesc","dayCopy","mapComponent","tourDaysComponents","getAllTours","handleClick","fq","join","categoriesHeadCells","tagsHeadCells","buttonWrapper","setTags","includes","UpdateUserDialog","userData","availableRoles","setAvailableRoles","selectedRoles","setSelectedRoles","roles","roleId","userId","password","email","user","setUser","userDataChanged","addUser","medium","userTmp","FormHelperText","gutterBottom","selectedUser","setSelectedUser","allRoles","setAllRoles","openUpdateDialog","setOpenUpdateDialog","openAddDialog","setOpenAddDialog","requestUsers","usersData","rolesList","parsedRoles","AuthContext","AuthProvider","currentUser","setCurrentUser","EditRecommendationContext","EditRecommendationProvider","currentlyEditing","rootList","setRootList","startEditing","conf","finishEditing","removedId","tempRootList","setRecommendation","newRec","RecommendationPlaceSortable","removeObjectFromRecommendation","recommendedPlaceCard","RecommendationPlaceSortableContainer","alignContent","editRecommendation","constructRecommendationForUpdate","leftTop","leftContent","borderStyle","rightTop","rightContent","homeRecommendations","setHomeRecommendations","unique","newList","existingRecommendations","uniqueList","explorable","setList","animation","group","sortable","evt","onEnd","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","PlacesWithContext","TourWithContext","RecommendationsWithContext","Appbar","useLocation","handleDrawerClose","handleListItemClick","RegExp","pathname","go","hasPermission","perm","permissions","permission","CssBaseline","AppBar","edge","Drawer","Link","exact","Home","Tours","AddPlace","Resources","ManageUsers","Redirect","App","Component","form","submit","loaderMain","AuthenticatedRoute","rest","Route","render","routeProps","SnackbarFeedback","Snackbar","autoHideDuration","AlertDialogFeedback","remove","DialogContentText","TextInputDialog","inputText","setInputText","deInit","onInput","errorCode","ReactDOM","setEmail","setPassword","handleLogin","identifier","hasAccess","authority","checkAccess","authorities","refresh_token","Container","mt","getElementById"],"mappings":"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","file":"static/js/main.f25b9426.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/selectedTourIcon.127fd3ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/selectedParking.102bdd14.svg\";","module.exports = __webpack_public_path__ + \"static/media/availableParking.6ac3f9ec.svg\";","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    }\r\n});\r\n\r\n\r\n\r\nconst Home = props => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport useDebounce from \"../helpers/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, checkable} = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n\r\n                {checkable ? <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell> : null}\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right'  : 'left' }\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    headCells: PropTypes.object.isRequired,\r\n    checkable: PropTypes.bool.isRequired\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected, title, changePageCallback, keyword, setKeyword, customToolbarElements} = props;\r\n\r\n\r\n    const debouncedSearch = useDebounce(keyword, 300);\r\n\r\n\r\n    useEffect( () => {\r\n            changePageCallback(1,keyword)\r\n        },\r\n        [debouncedSearch]\r\n    );\r\n\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n            )}\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"delete\">\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : <div style={{display: \"flex\", alignItems: \"center\"}}>\r\n                <TextField id=\"standard-basic\" label=\"Search\" onChange={ event =>{setKeyword(event.target.value)}}/>\r\n                {!!customToolbarElements ? customToolbarElements : null}\r\n            </div>}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    centerCell: {\r\n        textAlign: \"center\",\r\n        width: '100%'\r\n    },\r\n    rowNotPublished:{\r\n        backgroundColor: \"#ffcdd2\"\r\n    },\r\n    rowNotVerified:{\r\n        backgroundColor: \"#fff9c4\"\r\n    },\r\n    rowBasic: {\r\n        backgroundColor: \"#FFFFFF\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function TableComponent({title, searchFunction, headCells, pagingInfo, data, checkable, changePageCallback, updateCallback, removeCallback, id, isLoading, customToolbarElements}) {\r\n\r\n    TableComponent.propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        headCells: PropTypes.object.isRequired,\r\n        pagingInfo: PropTypes.object,\r\n        data: PropTypes.object.isRequired,\r\n        checkable: PropTypes.bool.isRequired,\r\n        changePageCallback: PropTypes.func,\r\n        updateCallback: PropTypes.func,\r\n        removeCallback: PropTypes.func,\r\n        id: PropTypes.string.isRequired,\r\n        isLoading: PropTypes.bool,\r\n        customToolbarElements: PropTypes.object\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = data.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleCheckboxChange = (event, name) =>{\r\n\r\n            const selectedIndex = selected.indexOf(name);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(selected, name);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(selected.slice(1));\r\n            } else if (selectedIndex === selected.length - 1) {\r\n                newSelected = newSelected.concat(selected.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    selected.slice(0, selectedIndex),\r\n                    selected.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelected(newSelected);\r\n\r\n    };\r\n\r\n    const handleClick = (event, rowId) => {\r\n        if(updateCallback !== undefined){\r\n            updateCallback(rowId)\r\n        }\r\n    };\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n        console.log(\"handleChangeRowsPerPage\")\r\n\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                {isLoading ? <LinearProgress/> : null }\r\n                <EnhancedTableToolbar\r\n                    title={title}\r\n                    numSelected={selected.length}\r\n                    changePageCallback={changePageCallback}\r\n                    keyword={keyword}\r\n                    setKeyword={setKeyword}\r\n                    customToolbarElements={customToolbarElements}\r\n                />\r\n                 <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={data.length}\r\n                            headCells={headCells}\r\n                            checkable={checkable}\r\n                        />\r\n\r\n\r\n                        <TableBody>\r\n                            {stableSort(data, getComparator(order, orderBy))\r\n                                .filter(item => searchFunction === undefined ? true : searchFunction(keyword, item))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n\r\n                                    const isItemSelected = isSelected(row.name);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    const rowStyle = row['isVerified'] !== undefined  && row['isVerified'] === false ? classes.rowNotVerified :\r\n                                        row['isPublic'] !== undefined && row['isPublic'] === false ? classes.rowNotPublished :  classes.rowBasic;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            className={rowStyle}\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row[id])}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row[id]}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            {checkable ? <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    onChange={(event)=>handleCheckboxChange(event, row.name)}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell> : null}\r\n\r\n                                            {headCells.map(header=>{\r\n                                                if(header.isId){\r\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\r\n                                                            {row[header.id]}\r\n                                                        </TableCell>\r\n                                                }else if(header.id === 'actions' ){\r\n                                                        return <TableCell >\r\n                                                            <div onClick={e => {e.stopPropagation(); e.preventDefault()}}>\r\n                                                                {updateCallback !== undefined ? <IconButton onClick={(event)=>{\r\n                                                                    updateCallback(row[id])\r\n                                                                    return 0\r\n                                                                }} size=\"small\" aria-label=\"edit\" >\r\n                                                                    <EditIcon fontSize=\"small\" />\r\n                                                                </IconButton> : null}\r\n\r\n                                                                {removeCallback !== undefined ? <IconButton size=\"small\" aria-label=\"delete\" onClick={()=>removeCallback(row[id])}>\r\n                                                                    <DeleteIcon  fontSize=\"small\" />\r\n                                                                </IconButton> : null}\r\n\r\n                                                            </div>\r\n                                                            </TableCell>\r\n                                                }else{\r\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\r\n                                                }\r\n\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows}}>\r\n\r\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\r\n                                        <TableCell colSpan={6} className={classes.centerCell}>\r\n                                            <Typography variant=\"h6\" noWrap>\r\n                                                No results\r\n                                            </Typography>\r\n                                        </TableCell>}\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10]}\r\n                    component=\"div\"\r\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\r\nexport default function useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(\r\n        () => {\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n\r\n        [value]\r\n    );\r\n\r\n    return debouncedValue;\r\n}","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","export const getAccessToken = () => localStorage.getItem('access_token');\r\nexport const getRefreshToken = () => localStorage.getItem('refresh_token');\r\nexport const isAuthenticated = () => !!getAccessToken();","import React from \"react\";\r\nimport axios from \"axios\"\r\nimport history from \"../helpers/history\";\r\nimport {getAccessToken, getRefreshToken} from \"../helpers/tokens\";\r\nimport API from \"./API\";\r\n\r\nconst request = async function (options, contentType, authorize= true) {\r\n\r\n    const header = {\r\n        'Content-Type': (contentType == null) ? 'application/json' : contentType,\r\n        'Accept': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Authorization': \"Bearer \" + getAccessToken()\r\n    };\r\n\r\n    if(!authorize){\r\n        delete header['Authorization']\r\n    }\r\n\r\n    const client = axios.create({\r\n        baseURL: false ? \"http://localhost:8080/\" : \"https://www.traveldirection.ax.lt:8080/\",\r\n        headers: header\r\n    });\r\n\r\n\r\n\r\n    // Add a response interceptor\r\n    client.interceptors.response.use(function (response) {\r\n        return response;\r\n    },  function (error) {\r\n\r\n        // console.log(\"Interceptor error\", error);\r\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n        // Do something with response error\r\n        const originalRequest = error.config;\r\n        const url = originalRequest.url;\r\n        const status = error.response.status;\r\n\r\n\r\n        if (error.response.status === 408 || error.code === 'ECONNABORTED' || error.code === \"ERR_INTERNET_DISCONNECTED\") {\r\n            console.log(`A timeout happend on url ${error.config.url}`)\r\n            return Promise.reject(error)\r\n        }\r\n\r\n        // Logout user if token refresh didn't work or user is disabled\r\n        if (url === 'api/v1/auth/refresh') {\r\n            console.log(\"Asking for refresh token\");\r\n            console.log(\"Unable to issue new JWT token. Redirecting to login page!\");\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"refresh_token\");\r\n            history.push(\"/login\");\r\n            return Promise.reject(error);\r\n        }else if(url.startsWith(\"api/v1/auth\")){\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        //Do not request for new JWT if response code is not Authorized\r\n        if (status !== 403) {\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        if (status === 403 && originalRequest._retry === undefined) {\r\n            console.log(\"Users token has expired!\");\r\n\r\n            originalRequest._retry = true;\r\n\r\n            return API.Auth.refreshToken(getRefreshToken()).then(response=>{\r\n                    console.log(\"Retrieving new token and making the same request!\");\r\n                    let token = response.access_token;\r\n                    originalRequest.headers.Authorization = \"Bearer \" + token;\r\n                    localStorage.setItem(\"access_token\", token);\r\n                    return axios(originalRequest)\r\n            }).catch(err=>{\r\n                return Promise.reject(error)\r\n            })\r\n        }\r\n\r\n        return Promise.reject(error)\r\n    });\r\n\r\n    const onSuccess = function (response) {\r\n        // console.log('Request Successful!', response);\r\n        return response.data;\r\n    };\r\n\r\n    const onError = function (error) {\r\n        if (error.response) {\r\n            console.debug('Status:', error.response.status);\r\n            if (error.response.status === 403) {\r\n                history.push(\"/login\")\r\n            }\r\n            console.debug('Data:', error.response.data);\r\n            console.debug('Headers:', error.response.headers);\r\n        } else {\r\n            console.debug('Error Message:', error.message);\r\n        }\r\n\r\n        return Promise.reject(error.response.data);\r\n    };\r\n\r\n    return client(options)\r\n        .then(onSuccess)\r\n        .catch(onError);\r\n};\r\n\r\nconst getRequest = function (path, urlData = \"\") {\r\n    return request({\r\n        url: path + urlData,\r\n        method: 'GET'\r\n    });\r\n};\r\n\r\nconst postRequest = function (path, data, urlData = \"\", authorize=true) {\r\n    console.log(\"Authorize\",authorize);\r\n    return request({\r\n        url: path + urlData,\r\n        method: 'POST',\r\n        data: data\r\n    }, null, authorize);\r\n};\r\n\r\nconst postMultipartRequest = function (path, formData) {\r\n    return request({\r\n        url: path,\r\n        method: 'POST',\r\n        data: formData\r\n    }, 'multipart/form-data');\r\n};\r\n\r\nconst RequestType = {\r\n    getRequest, postRequest, postMultipartRequest\r\n};\r\n\r\nexport default RequestType\r\n\r\n\r\n","import RequestType from '../Networking/NetworkLayerCentral'\r\n\r\n//Places\r\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\r\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\r\nconst getClosesPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin/closest\", urlParams);\r\n\r\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\r\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\r\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\r\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\r\nconst removePlace = (urlParams) => RequestType.getRequest(\"api/v1/place/delete\", urlParams);\r\n\r\nconst getAllCities = (urlParams) =>RequestType.getRequest(\"api/v1/place/city/all\",urlParams);\r\nconst getAllCounties = (urlParams) =>RequestType.getRequest(\"api/v1/place/county/all\",urlParams);\r\nconst getAllCountries = (urlParams) =>RequestType.getRequest(\"api/v1/place/country/all\",urlParams);\r\nconst getAllMunicipalities = (urlParams) =>RequestType.getRequest(\"api/v1/place/municipality/all\",urlParams);\r\n\r\nconst Places = {getClosesPlacesAdmin,getAllCities,getAllCounties, getAllCountries, getAllMunicipalities, getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces, removePlace};\r\n\r\n//Tags\r\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\r\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\r\nconst removeTags = (params) => RequestType.postRequest(\"api/v1/tags/delete\", params);\r\nconst updateTags = (params) => RequestType.postRequest(\"api/v1/tags/update\", params);\r\nconst Tags = {getAllTags, addTag, removeTags, updateTags};\r\n\r\n//Category\r\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\r\nconst removeCategory = (params) => RequestType.postRequest(\"api/v1/categories/delete\", params);\r\nconst updateCategory = (params) => RequestType.postRequest(\"api/v1/categories/update\", params);\r\nconst getAllCategories = (params) => RequestType.getRequest(\"api/v1/categories/all\", params);\r\nconst Categories = {addCategory, getAllCategories, removeCategory, updateCategory};\r\n\r\n//Photo\r\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\r\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\r\nconst Photos = {addPhoto, uploadPhoto};\r\n\r\n\r\n//Parking\r\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\r\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\r\nconst Parking = {getParkingByLocation, insertNewParking};\r\n\r\n\r\n//TagsPlace\r\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\r\nconst TagsPlace = {updateTagsForPlace};\r\n\r\n//CategoriesPlace\r\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\r\nconst CategoriesPlace = {updateCategoriesForPlace};\r\n\r\n//PhotoPlace\r\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\r\nconst ParkingPlace = {updateParkingForPlace};\r\n\r\n//PhotoPlace\r\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\r\nconst PhotoPlace = {updatePhotoForPlace};\r\n\r\n//Schedule\r\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\r\nconst Schedule = {updateScheduleForPlace};\r\n\r\n//ReviewsPlace\r\nconst getPlaceReviews = (urlParams) => RequestType.getRequest(\"api/v1/reviews/all\", urlParams);\r\nconst Reviews = {getPlaceReviews};\r\n\r\n//Sources\r\nconst getSources = () => RequestType.getRequest(\"api/v1/source/all\");\r\nconst addSource = (data) => RequestType.postRequest(\"api/v1/source/insert\",data);\r\nconst Source = {getSources, addSource};\r\n\r\n//SourcePlace\r\nconst updateSourcesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/sourceplace/update\", data, urlParams);\r\nconst SourcePlace = {updateSourcesForPlace};\r\n\r\n//Tours\r\nconst insertTour = (data) => RequestType.postRequest(\"api/v1/tour/insert\",data)\r\nconst updateTour = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/update\",data, urlParams)\r\nconst updateTourCategories = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/categories/update\",data, urlParams)\r\nconst getTour = (urlParams) => RequestType.getRequest(\"api/v1/tour\",urlParams)\r\nconst getTourCategories = (urlParams) => RequestType.getRequest(\"api/v1/tour/categories\",urlParams)\r\nconst removeTour = (urlParams) => RequestType.getRequest(\"api/v1/tour/delete\", urlParams);\r\nconst getAllToursAdmin = (urlParams) => RequestType.getRequest(\"api/v1/tour/searchadmin\", urlParams);\r\nconst Tour = {insertTour, getTour, updateTour, getAllToursAdmin, removeTour, getTourCategories, updateTourCategories}\r\n\r\n//Auth\r\nconst login = (data) => RequestType.postRequest(\"api/v1/auth/login\", data, \"\", false);\r\nconst register = (data) => RequestType.postRequest(\"api/v1/auth/registration\",data, \"\", false);\r\nconst refreshToken = (data) => RequestType.postRequest(\"api/v1/auth/refresh\", data, \"\", false);\r\n\r\nconst Auth = {register, login, refreshToken};\r\n\r\n//User\r\nconst getUserProfile = () => RequestType.getRequest(\"api/v1/user/info\");\r\nconst getAllUsers = (urlParams) => RequestType.getRequest(\"api/v1/user/search\", urlParams);\r\nconst getAllRoles = () => RequestType.getRequest(\"api/v1/user/roles/all\");\r\nconst setRoles = (data) => RequestType.postRequest(\"api/v1/user/setRoles\", data);\r\n\r\nconst User = {setRoles, getAllRoles, getAllUsers, getUserProfile};\r\n\r\n//Recommendation\r\nconst createRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/create\", data);\r\nconst getAllRecommendations = (urlParams) => RequestType.getRequest(\"api/v1/recommendation/search\", urlParams);\r\nconst addPlaceToRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/addObject\", data);\r\nconst removePlaceFromRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/removeObject\", data);\r\nconst updateRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/update\", data)\r\nconst removeRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/remove\", data)\r\n\r\nconst Recommendation = { removeRecommendation, updateRecommendation, removePlaceFromRecommendation, addObjectToRecommendation: addPlaceToRecommendation, getAllRecommendations, createRecommendation }\r\n\r\n//Explore\r\n\r\nconst updateExplorePage = (data) => RequestType.postRequest(\"api/v1/explore/update\", data)\r\nconst getExplorePage = () => RequestType.getRequest(\"api/v1/explore/\")\r\n\r\nconst Explore = { getExplorePage, updateExplorePage }\r\n\r\nconst API = {Explore, Recommendation, User, Auth, Tour, SourcePlace, Source,Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule, Reviews};\r\n\r\nexport default API\r\n\r\n","// src/common/providers/APIErrorProvider/index.js\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nexport const AlertDialogContext = React.createContext({\r\n    alertConfig: null,\r\n    addAlertConfig: () => {},\r\n    removeAlertConfig: () => {}\r\n});\r\n\r\nexport default function AlertDialogProvider({ children }) {\r\n    const [alertConfig, setAlertConfig] = useState(null);\r\n    const contextValue = {\r\n        alertConfig,\r\n        addAlertConfig: (title, message, actions, onClose = undefined) => setAlertConfig({ title, message, actions, onClose}),\r\n        removeAlertConfig: () => setAlertConfig(null)\r\n    };\r\n\r\n    return (\r\n        <AlertDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </AlertDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AlertDialogContext} from \"./AlertDialogContext\";\r\n\r\nexport default function UseAlertDialogContext() {\r\n    const { alertConfig, addAlertConfig, removeAlertConfig } = useContext(AlertDialogContext);\r\n    return { alertConfig, addAlertConfig, removeAlertConfig };\r\n}\r\n","const Strings = {\r\n    DIALOG_PLACE_PUBLISH_TITLE : 'Place publicity',\r\n    DIALOG_PLACE_PUBLISH_MESSAGE: \"This place will be visible for all users. Are you sure?\",\r\n    DIALOG_PLACE_UNPUBLISH_MESSAGE :\"This place will not be visible anymore. Are you sure?\",\r\n\r\n    DIALOG_PLACE_INSERT_TITLE: \"Insert place\",\r\n    DIALOG_PLACE_INSERT: \"Are you sure you want to insert this place?\",\r\n\r\n    DIALOG_PLACE_UPDATE_TITLE: \"Update place\",\r\n    DIALOG_PLACE_UPDATE: \"Are you sure you want to make changes to this place?\",\r\n\r\n    DIALOG_PLACE_VERIFY_TITLE: \"Place verification\",\r\n    DIALOG_PLACE_VERIFY_MESSAGE: \"This is a user's suggested place. Are you sure you want to verify this place and make it visible to others?\",\r\n\r\n    DIALOG_PLACE_DELETE_TITLE: \"Delete place\",\r\n    DIALOG_PLACE_DELETE_MESSAGE: \"This action will remove this place permanently. Are you sure you want to proceed?\",\r\n\r\n    DIALOG_TOUR_DELETE_TITLE: \"Delete tour\",\r\n    DIALOG_TOUR_DELETE_MESSAGE: \"This action will remove this tour permanently. Are you sure you want to proceed?\",\r\n\r\n    SNACKBAR_PLACE_INSERTED_SUCCESS: \"Place inserted successfully\",\r\n    SNACKBAR_PLACE_REMOVE_SUCCESS: \"Place was removed successfully\",\r\n\r\n    SNACKBAR_TOUR_INSERTED_SUCCESS: \"Tour inserted successfully\",\r\n    SNACKBAR_TOUR_REMOVE_SUCCESS: \"Tour was removed successfully\",\r\n\r\n    SNACKBAR_ERROR: \"Something went wrong!\",\r\n    SNACKBAR_CHANGES_SAVED: \"All changes saved!\"\r\n};\r\n\r\nexport default Strings;","import React, { useState, useCallback } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nexport const SnackbarContext = React.createContext({\r\n    config: null,\r\n    addConfig: () => {},\r\n    removeConfig: () => {}\r\n});\r\n\r\n\r\nexport default function SnackbarProvider({ children }) {\r\n    const [config, setConfig] = useState(null);\r\n\r\n    const removeConfig = () => setConfig(null);\r\n    const addConfig = (success, message) => setConfig({ success, message });\r\n\r\n    const contextValue = {\r\n        config,\r\n        addConfig: (success, message) => addConfig(success, message),\r\n        removeConfig: () => removeConfig()\r\n    };\r\n\r\n    return (\r\n        <SnackbarContext.Provider value={contextValue}>\r\n            {children}\r\n        </SnackbarContext.Provider>\r\n    );\r\n}","import { useContext } from 'react';\r\nimport {SnackbarContext} from \"./SnackbarContext\";\r\n\r\nexport default function UseSnackbarContext() {\r\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\r\n    return { config, addConfig, removeConfig };\r\n}\r\n","\r\nimport React, {useEffect, useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    autoComplete: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(1),\r\n        margin: 0,\r\n    },\r\n    autoCompleteChipContainer: {\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction AutoCompleteChip(props){\r\n\r\n    const {options, setOptions, selectedOptions, setSelectedOptions, classes, label, id, name} = props;\r\n    const [initialData, setInitialData] = useState([]);\r\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\r\n    const [firstLoad, setFirstLoad] = useState(true);\r\n\r\n    function handleDelete(data) {\r\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\r\n        setOptions(\r\n            [\r\n                ...options,\r\n                data\r\n            ]\r\n        )\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(selectedOptions.length===0){\r\n\r\n            setOptions(\r\n                initialData\r\n            )\r\n        }\r\n    },[selectedOptions]);\r\n\r\n    useEffect(()=>{\r\n        if(firstLoad && options.length>0){\r\n            let data = [];\r\n            options.map(row=>{\r\n                let found = false;\r\n                selectedOptions.map(row1=>{\r\n                    if(JSON.stringify(row) === JSON.stringify(row1)){\r\n                        found = true\r\n                    }\r\n                });\r\n                if(!found){\r\n                   data.push(row)\r\n                }\r\n            });\r\n            setOptions(data);\r\n            setInitialData(data);\r\n            setFirstLoad(false)\r\n        }\r\n    },[options]);\r\n\r\n    function handleInput(event, value){\r\n        setCurrentVal({\"name\": \"\"});\r\n        setSelectedOptions(\r\n            [\r\n                ...selectedOptions,\r\n                value\r\n            ]\r\n        );\r\n        setOptions(options.filter(item => item !== value))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Box  className={classes.autoCompleteChipContainer}>\r\n                {selectedOptions.length !== 0 &&\r\n                <Box component=\"ul\" className={classes.root}>\r\n                    {\r\n                        selectedOptions.map(option => {\r\n                            return id !== undefined ?\r\n                                <li key={option[id]}>\r\n                                    <Chip\r\n                                        variant=\"outlined\"\r\n                                        label={name!== undefined ? option[name] : option.name}\r\n                                        onDelete={() => handleDelete(option)}\r\n                                        className={classes.chip}\r\n                                    />\r\n                                </li>\r\n                                :\r\n                                <li key={option}>\r\n                                        <Chip\r\n                                            variant=\"outlined\"\r\n                                            label={option}\r\n                                            onDelete={() => handleDelete(option)}\r\n                                            className={classes.chip}\r\n                                        />\r\n                                </li>\r\n                                }\r\n\r\n                            )\r\n                    }\r\n                </Box>\r\n                }\r\n\r\n                <Autocomplete\r\n                    className={classes.autoComplete}\r\n                    value={getCurrentVal}\r\n                    options={options}\r\n                    onChange={handleInput}\r\n                    disableClearable\r\n                    getOptionLabel={(option) =>  id!==undefined ? name!== undefined ? option[name] : option.name : option}\r\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\r\n                />\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nAutoCompleteChip.propTypes = {\r\n    setSelectedOptions: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    setOptions: PropTypes.func.isRequired,\r\n    selectedOptions: PropTypes.array.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    label: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AutoCompleteChip)","import React, {useEffect, useState} from \"react\";\r\nimport API from \"../Networking/API\";\r\nimport * as moment from \"moment\";\r\nimport {func} from \"prop-types\";\r\nexport const PlacesFilterContext = React.createContext();\r\nvar buildUrl = require('build-url');\r\n\r\n\r\nconst initialDates = {\r\n    insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n    insertionEnd: moment(new Date()).add(1,'day').format(),\r\n    modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n    modificationEnd: moment(new Date()).add(1,'day').format()\r\n};\r\n\r\nexport const PlacesFilterProvider = ({children}) => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    const [cities, setCities] = useState([]);\r\n    const [selectedCities, setSelectedCities] = useState([]);\r\n\r\n    const [countries, setCountries] = useState([]);\r\n    const [selectedCountries, setSelectedCountries] = useState([]);\r\n\r\n    const [municipalities, setMunicipalities] = useState([]);\r\n    const [selectedMunicipalities, setSelectedMunicipalities] = useState([]);\r\n\r\n    const [counties, setCounties] = useState([]);\r\n    const [selectedCounties, setSelectedCounties] = useState([]);\r\n\r\n    const [initialLoading, setInitialLoading] = useState(true);\r\n    const [resetFilterOptions, setResetFilterOptions] = useState(false);\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [dates, setDates] = useState(initialDates);\r\n\r\n    const [filterQuery, setFilterQuery] = useState( buildUrl(null, {\r\n        queryParams: {\r\n            di: [dates.insertionStart, dates.insertionEnd],\r\n            dm: [dates.modificationStart, dates.modificationEnd],\r\n            filterOptions: parseFilterOptions(),\r\n            categories: parseCategories(),\r\n            countries: selectedCountries,\r\n            cities: selectedCities,\r\n            municipalities: selectedMunicipalities\r\n        }\r\n    }));\r\n\r\n    const getCategories = (params=\"\") => {\r\n        API.Categories.getAllCategories().then(response=>{\r\n            setCategories(response);\r\n            // console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        });\r\n    };\r\n\r\n    const getAllCities = (restrictions=\"\") =>{\r\n        API.Places.getAllCities(restrictions).then(res=>{\r\n            setCities(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllCounties = () =>{\r\n        API.Places.getAllCounties().then(res=>{\r\n            setCounties(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllCountries = () =>{\r\n        API.Places.getAllCountries().then(res=>{\r\n            setCountries(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllMunicipalities = (restrictions=\"\") =>{\r\n        API.Places.getAllMunicipalities(restrictions).then(res=>{\r\n            setMunicipalities(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            // console.log(\"Selected countries changed\")\r\n            getAllMunicipalities(buildUrl(null, {\r\n                queryParams: {\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }));\r\n            getAllCities(buildUrl(null, {\r\n                queryParams: {\r\n                    munRestrictions: selectedMunicipalities,\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }))\r\n        }\r\n    },[selectedCountries]);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            // console.log(\"Selected munis changed\")\r\n            getAllCities(buildUrl(null, {\r\n                queryParams: {\r\n                    munRestrictions: selectedMunicipalities,\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }))\r\n        }\r\n    }, [selectedMunicipalities]);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Fetching...\");\r\n        Promise.all([\r\n            getCategories(),\r\n            getAllCities(),\r\n            getAllCountries(),\r\n            getAllCounties(),\r\n            getAllMunicipalities()\r\n        ]).then(response => {\r\n            setInitialLoading(false);\r\n            // console.log(\"All data received!\")\r\n        }).catch(err => {\r\n        })\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            if(!resetFilterOptions){\r\n                setFilterQuery(buildUrl(null, {\r\n                    queryParams: {\r\n                        di: [dates.insertionStart, dates.insertionEnd],\r\n                        dm: [dates.modificationStart, dates.modificationEnd],\r\n                        o: parseFilterOptions(),\r\n                        c: parseCategories(),\r\n                        countries: selectedCountries,\r\n                        cities: selectedCities,\r\n                        municipalities: selectedMunicipalities\r\n                    }\r\n                }))\r\n            }else{\r\n                if(areFiltersCleared()){\r\n                    setResetFilterOptions(false)\r\n                }\r\n            }\r\n        }\r\n    },[selectedCategories, selectedCities,selectedCountries,selectedMunicipalities,dates,filterOptions,resetFilterOptions]);\r\n\r\n    function areFiltersCleared() {\r\n        let filterOptionsCleared = true;\r\n        filterOptions.map(row=>{\r\n            if(row.filter){\r\n                filterOptionsCleared = false\r\n            }\r\n        });\r\n        return filterOptionsCleared &&\r\n            selectedCategories.length === 0 &&\r\n            selectedCities.length === 0 &&\r\n            selectedCountries.length ===0 &&\r\n            dates.insertionStart === initialDates.insertionStart &&\r\n            dates.modificationStart === initialDates.modificationStart\r\n    }\r\n\r\n    function parseCategories(){\r\n        let cats = [];\r\n        selectedCategories.map(row=>{\r\n            cats.push(row.name)\r\n        });\r\n        return cats\r\n    }\r\n\r\n    function parseFilterOptions(){\r\n        let options = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filter === true)\r\n                options.push(row.filterName)\r\n        });\r\n        return options\r\n    }\r\n\r\n    const contextValue = {\r\n        filterQuery,\r\n        setResetFilterOptions,\r\n\r\n        dates,\r\n        setDates,\r\n\r\n        filterOptions,\r\n        setFilterOptions,\r\n\r\n        categories,\r\n        setCategories,\r\n        selectedCategories,\r\n        setSelectedCategories,\r\n\r\n        counties,\r\n        setCounties,\r\n        selectedCounties,\r\n        setSelectedCounties,\r\n\r\n        cities,\r\n        setCities,\r\n        selectedCities,\r\n        setSelectedCities,\r\n\r\n        countries,\r\n        setCountries,\r\n        selectedCountries,\r\n        setSelectedCountries,\r\n\r\n        municipalities,\r\n        setMunicipalities,\r\n        selectedMunicipalities,\r\n        setSelectedMunicipalities\r\n    };\r\n\r\n    return (\r\n        <PlacesFilterContext.Provider value={contextValue}>\r\n            {children}\r\n        </PlacesFilterContext.Provider>\r\n    );\r\n};","import React, {useContext, useEffect, useState} from \"react\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport moment from \"moment\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport MuiPickersUtilsProvider from \"@material-ui/pickers/MuiPickersUtilsProvider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst style = theme =>({\r\n    filterDiv: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    sortingButtons: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(1),\r\n        height: \"100%\"\r\n\r\n    },\r\n    rightLayout: {\r\n        boxShadow: \"0 0 1px 0 #666\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(1)\r\n    },\r\n    datesLayout:{\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n        marginBottom: \"8px\",\r\n        boxShadow: \"0 0 1px 0 #666\",\r\n        padding: theme.spacing(1)\r\n    },\r\n    paper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center'\r\n\r\n    }\r\n});\r\n\r\n\r\n\r\nfunction FilterBlock({classes, setOpen}) {\r\n    const {\r\n        categories, setCategories, selectedCategories, setSelectedCategories,\r\n        cities, setCities, selectedCities, setSelectedCities,\r\n        countries, setCountries, selectedCountries, setSelectedCountries,\r\n        municipalities, setMunicipalities, selectedMunicipalities, setSelectedMunicipalities,\r\n        filterOptions, setFilterOptions, setResetFilterOptions,\r\n        dates, setDates} = useContext(PlacesFilterContext);\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let generalOptions = Object.assign([], filterOptions);\r\n        generalOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n        });\r\n        setFilterOptions(generalOptions)\r\n    };\r\n\r\n    function filterDateChange(date, id) {\r\n        let cDate = Object.assign( {}, dates);\r\n        cDate[id] = moment(date).format('YYYY-MM-DD');\r\n        setDates(cDate)\r\n    }\r\n\r\n    function clearFilters() {\r\n        setResetFilterOptions(true);\r\n\r\n        setSelectedCities([]);\r\n        setSelectedCountries([]);\r\n        setSelectedCategories([]);\r\n        setSelectedMunicipalities([]);\r\n\r\n        let filters = Object.assign(filterOptions, []);\r\n        filters.map(row=>{\r\n            row.filter = false\r\n        });\r\n        setFilterOptions(filters);\r\n\r\n        setDates({\r\n            insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n            insertionEnd: moment(new Date()).add(1,'day').format(),\r\n            modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n            modificationEnd: moment(new Date()).add(1,'day').format()\r\n        })\r\n    }\r\n\r\n    return <Paper className={classes.root}>\r\n        <Grid container direction=\"row\" spacing={3}>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\">\r\n                        General options\r\n                    </Typography>\r\n                    <div className={classes.sortingButtons}>\r\n                        {filterOptions.map(row=>{\r\n                            return <FormControlLabel\r\n                                control={<Checkbox\r\n                                    checked={row.filter}\r\n                                    onChange={()=>filterOptionsChanged(row.filterName)}\r\n                                    name={row.filterName} />}\r\n                                label={row.filterLabel}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                    <Typography variant=\"h6\">\r\n                        Filter by categories\r\n                    </Typography>\r\n                    <AutocompleteChip label=\"Select categories\"\r\n                                      id=\"categoryId\"\r\n                                      options={categories}\r\n                                      setOptions={setCategories}\r\n                                      selectedOptions={selectedCategories}\r\n                                      setSelectedOptions={setSelectedCategories}/>\r\n\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by dates\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Insertion dates\r\n                            </Typography>\r\n                    <Grid container justify=\"space-around\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"insertionStart\"\r\n                            onChange={(date)=>filterDateChange(date,\"insertionStart\")}\r\n                            value={dates.insertionStart}\r\n                            label=\"Date start\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.insertionEnd}\r\n                            onChange={(date)=>filterDateChange(date,\"insertionEnd\")}\r\n                            id=\"insertionEnd\"\r\n                            label=\"Date end\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        </MuiPickersUtilsProvider>\r\n                    </Grid>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Modification dates\r\n                    </Typography>\r\n                    <Grid container justify=\"space-around\">\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.modificationStart}\r\n                            onChange={(date)=>filterDateChange(date,\"modificationStart\")}\r\n                            id=\"modificationStart\"\r\n                            label=\"Date start\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.modificationEnd}\r\n                            onChange={(date)=>filterDateChange(date,\"modificationEnd\")}\r\n                            id=\"modificationEnd\"\r\n                            label=\"Date end\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\">\r\n                        Filter by countries\r\n                    </Typography>\r\n                    <AutocompleteChip label=\"Select countries\"\r\n                                      options={countries}\r\n                                      setOptions={setCountries}\r\n                                      selectedOptions={selectedCountries}\r\n                                      setSelectedOptions={setSelectedCountries}/>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by municipalities\r\n                            </Typography>\r\n                            <AutocompleteChip label=\"Select municipalities\"\r\n                                              options={municipalities}\r\n                                              setOptions={setMunicipalities}\r\n                                              selectedOptions={selectedMunicipalities}\r\n                                              setSelectedOptions={setSelectedMunicipalities}/>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by cities\r\n                            </Typography>\r\n                            <AutocompleteChip label=\"Select cities\"\r\n                                              options={cities}\r\n                                              setOptions={setCities}\r\n                                              selectedOptions={selectedCities}\r\n                                              setSelectedOptions={setSelectedCities}/>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n        <Button\r\n            style={{marginTop: 8}}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => clearFilters()}>\r\n            Clear filters\r\n        </Button>\r\n    </Paper>\r\n}\r\n\r\nexport default withStyles(style)(FilterBlock)","import React, {useContext, useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport FilterBlock from \"../components/add_place_components/FilterBlock\";\r\nimport {PlacesFilterContext} from \"../contexts/PlacesFilterContext\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    autocomplete: {\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline: \"0\",\r\n        marginBottom: \"4px\"\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\r\n    {id: 'address', numeric: false, disablePadding: false, label: 'Address', isId: false},\r\n    {id: 'city', numeric: false, disablePadding: false, label: 'City', isId: false},\r\n    {id: 'country', numeric: false, disablePadding: false, label: 'Country', isId: false},\r\n    {id: 'dateModified', numeric: false, disablePadding: false, label: 'Date modified', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n];\r\n\r\nfunction Places(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const {classes} = props;\r\n\r\n\r\n    const {filterQuery} = useContext(PlacesFilterContext);\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    useEffect(() => {\r\n        console.log(\"Filter query has changed!\")\r\n        setIsLoading(true);\r\n        requestAllPlaces();\r\n    }, [filterQuery]);\r\n\r\n\r\n    function getPlaceNameById(id) {\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i].placeId === id)\r\n                return data[i].name\r\n        }\r\n    }\r\n\r\n    function requestAllPlaces(p = 1, keyword = \"\") {\r\n        console.log(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n        getAllPlaces(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n    }\r\n\r\n    function parseData(data) {\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        console.log(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updatePlaceCallback(id) {\r\n        history.push(\"/app/addplace/\" + id)\r\n    }\r\n\r\n    function removePlaceCallback(id) {\r\n        console.log(\"Name\", getPlaceNameById(id));\r\n        setIsLoading(true);\r\n        addAlertConfig(Strings.DIALOG_PLACE_DELETE_TITLE + \" - \" + getPlaceNameById(id), Strings.DIALOG_PLACE_DELETE_MESSAGE, [{\r\n            name: \"Remove\",\r\n            action: () => {\r\n                API.Places.removePlace(\"?p=\" + id).then(response => {\r\n                    let tmp = [];\r\n                    data.map(row => {\r\n                        if (row.placeId !== id) {\r\n                            tmp.push(row)\r\n                        }\r\n                    });\r\n                    setData(tmp);\r\n                    addConfig(true, Strings.SNACKBAR_PLACE_REMOVE_SUCCESS)\r\n                    setIsLoading(false)\r\n                }).catch(error => {\r\n                    setIsLoading(false);\r\n                    addConfig(false, Strings.SNACKBAR_ERROR)\r\n                })\r\n            }\r\n        }], () => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const changePageCallback = (p = 0, keyword = \"\") => {\r\n        if(!isLoading){\r\n            setIsLoading(true);\r\n            requestAllPlaces(p, keyword)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                <FilterBlock setOpen={true}/>\r\n\r\n                <TableComponent\r\n                    title={\"Places\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updatePlaceCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    id={\"placeId\"}\r\n                    isLoading={isLoading}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={() => {\r\n                            history.push(\"/app/addplace\")\r\n                        }}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n            <Button>\r\n                Clear filters\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    function getAllPlaces(urlParams = \"\") {\r\n        API.Places.getAllPlacesAdmin(urlParams).then(response => {\r\n            setIsLoading(false);\r\n            parseData(response)\r\n        }).catch(error => {\r\n            setIsLoading(false);\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nPlaces.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Places);","export const priceRange = [\r\n    {\r\n        value: 0,\r\n        label: \"FREE\",\r\n    },\r\n    {\r\n        value: 25,\r\n        label: \"$\",\r\n    },\r\n    {\r\n        value: 50,\r\n        label: \"$$\",\r\n    },\r\n    {\r\n        value: 75,\r\n        label: \"$$$\",\r\n    },\r\n    {\r\n        value: 100,\r\n        label: \"$$$$\",\r\n    },\r\n    {\r\n        value: 125,\r\n        label: \"$$$$$\",\r\n    }\r\n];\r\n","export const averageTimeSpent = [\r\n    {\r\n        value: 5,\r\n        label: 5,\r\n    },\r\n    {\r\n        value: 10,\r\n        label: 10,\r\n    },\r\n    {\r\n        value: 15,\r\n        label: 15,\r\n    },\r\n    {\r\n        value: 30,\r\n        label: 30,\r\n    },\r\n    {\r\n        value: 45,\r\n        label: 45,\r\n    },\r\n    {\r\n        value: 60,\r\n        label: 60,\r\n    },\r\n    {\r\n        value: 90,\r\n        label: 90,\r\n    },\r\n    {\r\n        value: 120,\r\n        label: 120,\r\n    },\r\n    {\r\n        value: 150,\r\n        label: 150,\r\n    },\r\n    {\r\n        value: 180,\r\n        label: 180,\r\n    },\r\n    {\r\n        value: 210,\r\n        label: 210,\r\n    },\r\n    {\r\n        value: 240,\r\n        label: 240,\r\n    },\r\n    {\r\n        value: 270,\r\n        label: 270,\r\n    },\r\n];","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    }\r\n});\r\n\r\nfunction AddSourceDialog(props){\r\n\r\n    function validateInput(){\r\n        let error = false;\r\n        if(text.length <= 3 || url.length <=3)\r\n            error = true;\r\n        setError(error);\r\n        return error\r\n    }\r\n\r\n    let {classes, open, action, setDialogOpen} = props;\r\n    const [text, setText] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    return(\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Insert source\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                        <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}\r\n                                   label=\"Source name\" variant=\"outlined\" fullWidth />\r\n                        <TextField style={{marginTop:\"16px\"}} error={error} onChange = {(ev) => {setUrl(ev.target.value)}}\r\n                                   label=\"Source url\" variant=\"outlined\" fullWidth />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={()=>setDialogOpen(false)} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text, url);\r\n                        setDialogOpen(false)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\nexport default withStyles(styles)(AddSourceDialog)","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {priceRange} from \"../../helpers/priceRange\";\r\nimport {averageTimeSpent} from \"../../helpers/averageTimeSpent\"\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport API from \"../../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddSourceDialog from \"../AddSourceDialog\";\r\n\r\n\r\nconst styles = theme => ({});\r\nlet previousPrice = \"\";\r\n\r\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo, selectedSources, setSelectedSources}) {\r\n\r\n    const updatePlaceInfo = (event, newValue) => {\r\n        const {name, value, id} = event.target;\r\n        let place = Object.assign({}, placeInfo, {});\r\n        if (id !== \"\") {\r\n            place[id] = valuetext(newValue[0]);\r\n        } else {\r\n            place[name] = value\r\n        }\r\n        console.log(\"Updated place\", place);\r\n        setPlaceInfo(place)\r\n    };\r\n\r\n    const getSources = () =>{\r\n        API.Source.getSources().then(response=>{\r\n            setAvailableSources(response)\r\n        }).catch(error=>{\r\n\r\n        })\r\n    };\r\n\r\n    const handleAddSource = (name, url) =>{\r\n        API.Source.addSource({name: name, url: url}).then(response=>{\r\n            setAvailableSources(\r\n                [\r\n                    ...availableSources,\r\n                    response\r\n                ]\r\n            );\r\n            setSelectedSources([\r\n                ...selectedSources,\r\n                response\r\n            ]);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getSources()\r\n    },[]);\r\n\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [availableSources, setAvailableSources] = useState([]);\r\n\r\n    function valuetext(value) {\r\n        let val = \"\";\r\n        priceRange.map(row => {\r\n            if (row.value === value)\r\n                val = row.label\r\n        });\r\n        return val\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\">\r\n            Basic place information\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Place name\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter the place name\"\r\n            fullWidth\r\n            value={placeInfo['name']}\r\n            name=\"name\"\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Place description\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Describe the place thoroughly\"\r\n            fullWidth\r\n            multiline\r\n            name=\"description\"\r\n            value={placeInfo['description']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            rows={15}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Phone number\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter phone number\"\r\n            fullWidth\r\n            name=\"phoneNumber\"\r\n            value={placeInfo['phoneNumber']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Website\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter website\"\r\n            fullWidth\r\n            name=\"website\"\r\n            value={placeInfo['website']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n       <AutoCompleteChip\r\n                id=\"source\"\r\n                label=\"Select sources\"\r\n                options={availableSources}\r\n                setOptions={setAvailableSources}\r\n                setSelectedOptions={setSelectedSources}\r\n                selectedOptions={selectedSources}\r\n       />\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={() => setDialogOpen(true)}\r\n            startIcon={<AddIcon />}>\r\n            Add missing source\r\n        </Button>\r\n        <AddSourceDialog\r\n            action={handleAddSource}\r\n            open={dialogOpen}\r\n            setDialogOpen={setDialogOpen}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Typography>\r\n                Price\r\n            </Typography>\r\n            <Slider\r\n                id=\"price\"\r\n                onChange={updatePlaceInfo}\r\n                value={priceRange.map(row => {\r\n                    if (row.label === placeInfo['price']) return row.value\r\n                })}\r\n                style={{width: \"60%\", marginLeft: \"48px\"}}\r\n                defaultValue={0}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider-always\"\r\n                step={25}\r\n                max={125}\r\n                marks={priceRange}\r\n            />\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Typography>\r\n                Average time spent\r\n            </Typography>\r\n            <FormControl variant=\"outlined\" style={{width: \"60%\", marginLeft: \"48px\"}}>\r\n                <InputLabel>Minutes</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={parseInt(placeInfo['averageTimeSpent'], 10)}\r\n                    onChange={updatePlaceInfo}\r\n                    label=\"Average Time spent\"\r\n                    inputProps={{\r\n                        name: 'averageTimeSpent'\r\n                    }}\r\n                >\r\n                    <option value=\"-1\">None</option>\r\n                    {\r\n                        averageTimeSpent.map(row=>{\r\n                            return <option value={parseInt(row.value, 10)}> {row.value}</option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport React, {useMemo, useState} from \"react\"\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Delete from \"@material-ui/icons/Delete\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst imgWithClick = {cursor: \"pointer\"};\r\n\r\nconst Photo = ({index, onItemDelete, photo, margin, direction, top, left}) => {\r\n\r\n    const styles = {\r\n        imgContainer: {\r\n            margin: margin,\r\n            display: 'inline',\r\n            position: 'relative',\r\n            width: '300px',\r\n            height: '300px',\r\n        }\r\n    }\r\n    if (direction === \"column\") {\r\n        styles.imgContainer.position = \"absolute\";\r\n        styles.imgContainer.imgStyle.left = left;\r\n        styles.imgContainer.imgStyle.top = top;\r\n    }\r\n\r\n    const handleDelete = event => {\r\n        onItemDelete(photo);\r\n    }\r\n\r\n    return (\r\n\r\n        <Card style={styles.imgContainer}>\r\n            <CardMedia\r\n                style={{height: 0, paddingTop: '80%'}}\r\n                image={photo.src}\r\n            />\r\n            <CardActions disableSpacing>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon/>}\r\n                    onClick={(event) => {\r\n                        handleDelete(event)\r\n                    }}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n\r\n        </Card>\r\n    )\r\n\r\n};\r\n\r\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\r\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\r\nconst SortableGallery = SortableContainer(({items, onItemDelete}) => (\r\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>}/>\r\n));\r\n\r\nfunction ReorderablePhotos(props) {\r\n    let {setPhotos, photos, srcName, keyName} = props\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\r\n    };\r\n\r\n    function handleItemDelete(photo) {\r\n        setPhotos(photos.filter(item => {\r\n            return item[keyName].toString() !== photo.key\r\n        }))\r\n    }\r\n\r\n    let modifiedData = photos.map(item => {\r\n        return (\r\n            {\r\n                key: item[keyName].toString(),\r\n                src: item[srcName],\r\n                width: 1,\r\n                height: 1\r\n            })\r\n\r\n    })\r\n    return (\r\n        <div>\r\n            <SortableGallery pressDelay={200}\r\n                             disableAutoscroll={false} items={modifiedData} onSortEnd={onSortEnd}\r\n                             axis={\"xy\"} onItemDelete={handleItemDelete}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {DropzoneArea} from \"material-ui-dropzone\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../Networking/API\";\r\n\r\nconst styles = theme => ({\r\n    dropzoneArea: {\r\n        overflow: \"hidden\"\r\n    }\r\n});\r\n\r\nconst acceptedFileFormats = ['image/jpeg', 'image/png', 'image/bmp', 'image/jpg']\r\n\r\nfunction AddImageDialog(props) {\r\n\r\n    const {onCloseCallback, open, onFinishCallback, classes} = props\r\n    const [loading, setIsLoading] = useState(false)\r\n    const [selectedFiles, setSelectedFiles] = useState([])\r\n\r\n    const submitCallback = () => {\r\n        setIsLoading(true)\r\n\r\n        Promise.all(selectedFiles.map(imagefile => {\r\n            let formData = new FormData()\r\n            formData.append(\"image\", imagefile)\r\n            return API.Photos.uploadPhoto(formData)\r\n        })).then(response => {\r\n            console.log(response)\r\n            onFinishCallback(response)\r\n        }).catch(error => {\r\n            onFinishCallback()\r\n        }).finally(() => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleDrop = (files )=> {\r\n        setSelectedFiles(existingFiles => [...existingFiles, ...files])\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(selectedFiles)\r\n\r\n    }, [selectedFiles])\r\n\r\n    const handleDelete = (file) => {\r\n        console.log(file.name)\r\n        setSelectedFiles(files => {return files.filter(existingFile => existingFile !== file)})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Photo upload\r\n                </DialogTitle>\r\n                {loading && <LinearProgress variant=\"query\"/>}\r\n                <DialogContent dividers>\r\n                    <DropzoneArea\r\n                        className={classes.dropzoneArea}\r\n                        acceptedFiles={acceptedFileFormats}\r\n                        maxFileSize={25000000}\r\n                        showAlerts={false}\r\n                        dropzoneProps={{disabled: loading}} filesLimit={5} onDrop={handleDrop}\r\n                    onDelete={handleDelete}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={submitCallback} color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddImageDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onFinishCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddImageDialog)\r\n","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ReorderablePhotos from \"../ReorderablePhotos\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddImageDialog from \"../AddImageDialog\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PhotosInfo({classes, setPhotos, photos}) {\r\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\r\n\r\n    function handleAddPhoto(files) {\r\n        setAddImageDialogOpen(false);\r\n        if(files == null)\r\n            return;\r\n\r\n        setPhotos([\r\n            ...photos,\r\n            ...files]\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h6\" >\r\n                Photos\r\n            </Typography>\r\n            <Card variant={\"outlined\"} className={classes.outline}>\r\n\r\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\r\n\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{width: '15%'}}\r\n                    className={classes.button}\r\n                    onClick={() => setAddImageDialogOpen(true)}\r\n                    startIcon={<AddIcon />}>\r\n                    Add photo\r\n                </Button>\r\n\r\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(files) => handleAddPhoto(files)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\r\n\r\n\r\n            </Card>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PhotosInfo)\r\n\r\n\r\n","import React from \"react\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nGeocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\r\n\r\n/**\r\n * Get country from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCountry = (addressArray) =>{\r\n    if(addressArray!==undefined){\r\n        let country = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\r\n                country = addressArray[ i ].long_name;\r\n                return country;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get country from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCity = ( addressArray ) => {\r\n    if(addressArray !== undefined){\r\n        let city = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'locality' === addressArray[ i ].types[0] ) {\r\n                city = addressArray[ i ].long_name;\r\n                return city;\r\n            }\r\n        }\r\n        return city;\r\n    }\r\n};\r\n\r\n/**\r\n * Get district from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCounty = ( addressArray ) => {\r\n        if(addressArray !== undefined){\r\n            let county = '';\r\n            for( let i = 0; i < addressArray.length; i++ ) {\r\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n                    county = addressArray[ i ].long_name;\r\n                    return county;\r\n                }\r\n            }\r\n            return county\r\n        }\r\n    };\r\n/**\r\n * Get district from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getMunicipality = ( addressArray ) => {\r\n    if(addressArray !== undefined){\r\n        let municipality = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\r\n                municipality = addressArray[ i ].long_name;\r\n                return municipality;\r\n            }\r\n        }\r\n        return municipality;\r\n    }\r\n};\r\n\r\n/**\r\n * Geocode location from address\r\n * @param address\r\n * @type string\r\n * @return location object\r\n */\r\nexport function geocodeFromAddress(address){\r\n    return Geocode.fromAddress( address ).then(\r\n        response => {\r\n            const { lat, lng } = response.results[0].geometry.location;\r\n            if(lat !== undefined && lng !== undefined){\r\n                return geocodeFromLatLng(lat, lng).then(loc=>{\r\n                    return loc\r\n                })\r\n            }else{\r\n                return null\r\n            }\r\n        },\r\n        err=>{\r\n            return null\r\n        }\r\n    )\r\n}\r\n\r\n/**\r\n * Geocode location from latitude and longitude\r\n * @param newLat\r\n * @param newLng\r\n * @return location object\r\n */\r\n\r\n\r\nexport function geocodeFromLatLng(newLat, newLng){\r\n    return Geocode.fromLatLng( newLat , newLng ).then(\r\n        response => {\r\n            const address = response.results[0].formatted_address\r\n            const addressArray =  response.results[0].address_components\r\n            if(addressArray!==undefined){\r\n                const city = getCity( addressArray ),\r\n                    country = getCountry( addressArray ),\r\n                    county = getCounty(addressArray),\r\n                    municipality = getMunicipality(addressArray);\r\n                let loc = {address: address, city: city, country: country, latitude: newLat, longitude: newLng, county: county, municipality: municipality};\r\n                return loc;\r\n            }\r\n            return null\r\n        },\r\n        error => {\r\n            return null\r\n        }\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\r\nimport PropTypes from \"prop-types\";\r\nimport {geocodeFromAddress, geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    autocomplete:{\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline:\"0\",\r\n        marginBottom: \"4px\"\r\n    },\r\n    root: {\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"8px\",\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction MapToolbar({classes, isLocked, locationCallback}) {\r\n\r\n    const [loading, setIsLoading] = useState(false);\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    /**\r\n     * Handle manual address and coordinates filling with key presses and return location\r\n     * @param event\r\n     * @return {boolean}\r\n     */\r\n\r\n    function errorParsingLocation(){\r\n        addAlertConfig(\"Error parsing location!\", \"Make sure that address you provided is correct!\",[])\r\n    }\r\n\r\n    function handleKeyPress(event){\r\n        const value = event.target.value;\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            setIsLoading(true);\r\n            if (/[a-zA-Z]+/.test(value)){\r\n                geocodeFromAddress(value).then(location=>{\r\n                    location!==null ? locationCallback(location) : errorParsingLocation();\r\n                    setIsLoading(false)\r\n                })\r\n            }else{\r\n                let position = value.split(/[ ,]+/);\r\n                if(position.length === 2){\r\n                    geocodeFromLatLng(parseFloat(position[0]), parseFloat(position[1])).then(location=>{\r\n                        location!==null ? locationCallback(location) : errorParsingLocation();\r\n                        setIsLoading(false)\r\n                    })\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Handle place selection from google maps autocomplete\r\n     * @param place\r\n     * @return {{country: (*|string), address: *, city: (*|string), latitude: *, longitude: *}|null}\r\n     */\r\n    const onPlaceSelected = (place) => {\r\n        setIsLoading(true);\r\n        const addressArray = place.address_components;\r\n        if (addressArray !== undefined) {\r\n            const lat = place.geometry.location.lat(),\r\n                lng = place.geometry.location.lng();\r\n            geocodeFromLatLng(lat, lng).then(location => {\r\n                location !== null ? locationCallback(location) : errorParsingLocation();\r\n                setIsLoading(false)\r\n            });\r\n        }\r\n        return null\r\n    };\r\n\r\n    /**\r\n     * Get current location\r\n     */\r\n    function getCurrentPosition(){\r\n        setIsLoading(true)\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n            let newLat = position.coords.latitude,\r\n                newLng = position.coords.longitude;\r\n            geocodeFromLatLng(newLat, newLng).then(location=>{\r\n                location!==null ? locationCallback(location) : errorParsingLocation();\r\n\r\n                setIsLoading(false)\r\n            });\r\n        }, error=>{\r\n            setIsLoading(false)\r\n            alert(error.message + \"\\n\" + JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    return <div className={classes.root}>\r\n        <div className={classes.content}>\r\n            <Autocomplete\r\n                onKeyPress={(event)=>{if(!isLocked)handleKeyPress(event)}}\r\n                onPlaceSelected={(place)=>{if(!isLocked)onPlaceSelected(place)} }\r\n                className={classes.autocomplete}\r\n                types={['(regions)']}\r\n            />\r\n            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\">\r\n                <MyLocationIcon\r\n                    onClick={()=>{if(!isLocked)getCurrentPosition()}}\r\n                    fontSize=\"large\"\r\n                    color=\"primary\"\r\n                />\r\n            </IconButton>\r\n        </div>\r\n        {loading ? <LinearProgress /> : null}\r\n\r\n    </div>\r\n\r\n\r\n}\r\n\r\nMapToolbar.propTypes = {\r\n    isLocked: PropTypes.bool.isRequired,\r\n    locationCallback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(MapToolbar)","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"8px\",\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction MapLock({classes, isLocked, setIsLocked}) {\r\n    return <div className={classes.root}>\r\n        <FormControlLabel\r\n            control={<Switch />}\r\n            label=\"Lock\"\r\n            checked={isLocked}\r\n            onChange={()=>{\r\n               setIsLocked(old=>!old)\r\n            }}\r\n        />\r\n        {isLocked ?\r\n            <Alert  severity=\"error\">Map is currently locked. If you want to do any changes unlock it.</Alert> : null}\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(MapLock)","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { MAP } from 'react-google-maps/lib/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CustomControlsManager(\r\n    { position = window.google.maps.ControlPosition.TOP_LEFT, children },\r\n    context\r\n) {\r\n    const map = context[MAP];\r\n\r\n    const controlDiv = document.createElement('div');\r\n\r\n    useEffect(() => {\r\n        const controls = map.controls[position];\r\n        const index = controls.length;\r\n        controls.push(controlDiv);\r\n        return () => {\r\n            controls.removeAt(index);\r\n        };\r\n    });\r\n\r\n    return createPortal(\r\n        <div style={{ marginBottom: 8, marginTop: 8 }}>{children}</div>,\r\n        controlDiv\r\n    );\r\n}\r\n\r\nCustomControlsManager.contextTypes = {\r\n    [MAP]: PropTypes.object,\r\n};","import React, {useEffect, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow} from \"react-google-maps\"\r\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport MapToolbar from \"./MapToolbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport MapLock from \"./MapLock\";\r\nimport CustomControlsManager from \"./CustomControlsManager\";\r\nimport ExploreIcon from '@material-ui/icons/Explore';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../../Networking/API\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from \"@material-ui/core/Card\";\r\nvar buildUrl = require('build-url');\r\nconst styles = theme => ({ largeIcon: {\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n    }});\r\n\r\nconst MapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        defaultZoom={15}\r\n        ref={props.refInstance}\r\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\r\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n        {props.children}\r\n\r\n    </GoogleMap>\r\n\r\n);\r\n\r\n\r\n\r\nfunction PlaceMap({classes, placeInfo,locationMarker,setLocationMarker,setParkingLocationMarker}) {\r\n\r\n    const [otherPlacesData, setOtherPlacesData] = useState([]);\r\n    const [infoWindows, setInfoWindows] = useState([]);\r\n\r\n    const [isLocked, setIsLocked] = useState(placeInfo.placeId !== \"\");\r\n    const refMap = useRef(null);\r\n\r\n    function mapToolbarCallback(location) {\r\n        setParkingLocationMarker(location);\r\n        setLocationMarker(location)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getClosestPlaces()\r\n    },[locationMarker]);\r\n\r\n    function getClosestPlaces(){\r\n        API.Places.getAllPlacesAdmin(buildUrl(null, {\r\n            queryParams: {\r\n                p: \"0\",\r\n                s: \"10\",\r\n                range: 3,\r\n                l: [locationMarker.latitude, locationMarker.longitude]\r\n            }\r\n        })).then(response=>{\r\n            setOtherPlacesData(response.list);\r\n        }).catch(error=>{\r\n\r\n        })\r\n    }\r\n\r\n    function onMarkerDragEnd(event) {\r\n        let newLat = event.latLng.lat(),\r\n            newLng = event.latLng.lng();\r\n        geocodeFromLatLng(newLat, newLng).then(location => {\r\n            setLocationMarker(location);\r\n            setParkingLocationMarker(location)\r\n        })\r\n    }\r\n    \r\n    return <React.Fragment>\r\n        <MapToolbar\r\n            isLocked={isLocked}\r\n            locationCallback={mapToolbarCallback}/>\r\n\r\n        <MapComponent\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            refInstance={refMap}\r\n            position={locationMarker}\r\n        >\r\n            {\r\n                otherPlacesData.map((location, i) =>{\r\n                    const latitude = parseFloat(location.latitude);\r\n                    const longitude = parseFloat(location.longitude);\r\n                        return placeInfo.placeId === \"\" ? <Marker\r\n                            key={location.placeId}\r\n                            zIndex={1}\r\n                            position={{lat: latitude, lng: longitude}}\r\n                            icon={{\r\n                                url: require('../../res/selectedTourIcon.svg'),\r\n                                scaledSize: new window.google.maps.Size(48, 48),\r\n                                origin: new window.google.maps.Point(0, 0)\r\n                            }}\r\n                            onClick={() => {\r\n                                if (!isLocked) {\r\n                                    let markers = Object.assign([], infoWindows);\r\n                                    markers[i] = true;\r\n                                    setInfoWindows(markers)\r\n                                }\r\n                            }}\r\n                        >\r\n                            {infoWindows[i] && (\r\n                                <InfoWindow onCloseClick={() => {\r\n                                    let markers = Object.assign([], infoWindows);\r\n                                    markers[i] = false;\r\n                                    setInfoWindows(markers)\r\n                                }\r\n                                }>\r\n\r\n                                    <Card style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                                        {location.photos.length > 0 ? <Avatar alt=\"Remy Sharp\" src={location.photos[0].url}\r\n                                                                          className={classes.largeIcon}/> : null}\r\n                                        <Typography variant=\"h6\">\r\n                                            {location.name}\r\n                                        </Typography>\r\n\r\n                                    </Card>\r\n                                </InfoWindow>\r\n                            )}\r\n                        </Marker> : null\r\n\r\n                })\r\n            }\r\n\r\n            <Marker\r\n                name={'Dolores park'}\r\n                visible={true}\r\n                draggable={!isLocked}\r\n                zIndex={2}\r\n                onDragEnd={e => onMarkerDragEnd(e)}\r\n                position={{lat: locationMarker.latitude, lng: locationMarker.longitude}}>\r\n            </Marker>\r\n\r\n            <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\r\n                <div>\r\n                    <IconButton aria-label=\"delete\" onClick={()=>{\r\n                        if(!isLocked){\r\n                            const mapCenter = refMap.current.getCenter();\r\n                            geocodeFromLatLng(mapCenter.lat(), mapCenter.lng()).then(location=>{\r\n                                setLocationMarker(location)\r\n                                setParkingLocationMarker(location)\r\n                            });\r\n                        }\r\n                    }}>\r\n                        <ExploreIcon fontSize={\"large\"}/>\r\n                    </IconButton>\r\n                </div>\r\n            </CustomControlsManager>\r\n        </MapComponent>\r\n\r\n\r\n\r\n        <MapLock\r\n            isLocked={isLocked}\r\n            setIsLocked={setIsLocked}\r\n        />\r\n    </React.Fragment>\r\n\r\n\r\n}\r\n\r\nPlaceMap.propTypes = {\r\n    locationMarker: PropTypes.object.isRequired,\r\n    setLocationMarker: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PlaceMap)","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PlaceMap from \"../maps/PlaceMap\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PlaceLocation({locationData, setLocationData, setParkingLocation, placeInfo}) {\r\n\r\n    function changeLocationData(event){\r\n        const {name, value} = event.target;\r\n        let data = Object.assign({}, locationData, {});\r\n        data[name] = value;\r\n\r\n        setParkingLocation(data);\r\n        setLocationData(data)\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select place location from map\r\n        </Typography>\r\n        <br/>\r\n        <PlaceMap\r\n            placeInfo={placeInfo}\r\n            locationMarker={locationData}\r\n            setParkingLocationMarker={setParkingLocation}\r\n            setLocationMarker={setLocationData}\r\n        />\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Address\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place address\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['address']}\r\n            name='address'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"City\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place city\"\r\n            fullWidth\r\n            value={locationData['city']}\r\n            name='city'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"County\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place county\"\r\n            fullWidth\r\n            value={locationData['county']}\r\n            name='county'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Municipality\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place municipality\"\r\n            fullWidth\r\n            value={locationData['municipality']}\r\n            name='municipality'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Country\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place country\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['country']}\r\n            name='country'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            rows={4}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceLocation)","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from \"react-google-maps\";\r\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport MapToolbar from \"./MapToolbar\";\r\nimport API from \"../../Networking/API\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CustomControlsManager from \"./CustomControlsManager\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExploreIcon from \"@material-ui/icons/Explore\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\n\r\nconst MapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        ref={props.refInstance}\r\n        defaultZoom={12}\r\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\r\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n        <Marker\r\n            onClick={()=>{if(!props.isLocked)props.setMainInfoWindow(true)}}\r\n            name={'Dolores park'}\r\n            visible={true}\r\n            draggable={!props.isLocked}\r\n            onDragEnd={e => onMarkerDragEnd(e, props.setPosition)}\r\n            position={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n            {props.mainInfoWindow && (\r\n                <InfoWindow onCloseClick={()=>{props.setMainInfoWindow(false)}}>\r\n                    <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                        {props.position.address}\r\n                        <Button\r\n                            onClick={()=>{\r\n                                let c = nearestParkingCount(props.position, props.parkingData);\r\n                                if(c>0){\r\n                                    props.addAlertConfig(\"Parkings nearby already exist!\", c+\" parking(-s) within 150 meter already exist(-s).\" +\r\n                                        \" Are you sure you don't want to use already existings parking locations?\",[{name:\"ADD NEW PARKING!\", action: ()=>{\r\n                                            props.addNewParking(props.position)\r\n                                        }}])\r\n                                }else{\r\n                                    props.addNewParking(props.position)\r\n                                }\r\n                            }}\r\n                            variant=\"text\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            startIcon={<AddIcon />}>\r\n                            Add new parking\r\n                        </Button>\r\n                    </div>\r\n                </InfoWindow>\r\n            )}\r\n        </Marker>\r\n\r\n        <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\r\n            <div>\r\n                <IconButton aria-label=\"delete\" onClick={()=>{\r\n                    if(!props.isLocked){\r\n                        let loc = Object.assign({},props.position, {});\r\n                        const mapCenter = props.refInstance.current.getCenter();\r\n                        loc.latitude = mapCenter.lat();\r\n                        loc.longitude = mapCenter.lng();\r\n                        props.setPosition(loc)\r\n                    }\r\n                }}>\r\n                    <ExploreIcon fontSize={\"large\"}/>\r\n                </IconButton>\r\n            </div>\r\n        </CustomControlsManager>\r\n\r\n        {\r\n            props.parkingData.map((location, i) =>{\r\n                const latitude = parseFloat(location.latitude);\r\n                const longitude = parseFloat(location.longitude);\r\n                console.log(parkingIsAttached(location, props.selectedParkingData));\r\n                return <Marker\r\n                    key={location.parkingId}\r\n                    position={{ lat: latitude, lng: longitude}}\r\n                    icon={{\r\n                        url: parkingIsAttached(location, props.selectedParkingData) ? require('../../res/selectedParking.svg') :\r\n                            require('../../res/availableParking.svg'),\r\n                        scaledSize: new window.google.maps.Size(20, 48),\r\n                        origin: new window.google.maps.Point(0, 0),\r\n                        anchor: new window.google.maps.Point(10, 35)\r\n                    }}\r\n                    onClick={()=>{\r\n                        if(!props.isLocked){\r\n                            let markers = Object.assign({},props.parkingInfoWindows, {});\r\n                            markers[i] = true;\r\n                            props.setParkingInfoWindows(markers)\r\n                        }\r\n                    }}\r\n                >\r\n                    {props.parkingInfoWindows[i] && (\r\n                        <InfoWindow onCloseClick={()=>{\r\n                                let markers = Object.assign({},props.parkingInfoWindows, {});\r\n                                markers[i] = false;\r\n                                props.setParkingInfoWindows(markers)\r\n                            }\r\n                        }>\r\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                                <Typography variant=\"h6\">\r\n                                    {location.address}\r\n                                </Typography>\r\n                                {parkingIsAttached(location, props.selectedParkingData) ? <div>\r\n                                        <Alert severity=\"success\">This parking location is already attached! See below in \"Selected parking locations\" section.</Alert>\r\n                                </div> :\r\n                                <Button\r\n                                    onClick={()=>{props.addExistingParking(location)}}\r\n                                    variant=\"text\"\r\n                                    color=\"secondary\"\r\n                                    size=\"large\"\r\n                                    startIcon={<AddIcon />}>\r\n                                    Add parking\r\n                                </Button>\r\n                                }\r\n                            </div>\r\n                        </InfoWindow>\r\n                    )}\r\n\r\n                </Marker>\r\n\r\n            })\r\n        }\r\n\r\n    </GoogleMap>\r\n);\r\n\r\nfunction parkingIsAttached(parking, selectedParkingData) {\r\n    for(let i = 0; i<selectedParkingData.length; i++){\r\n        if(selectedParkingData[i].address === parking.address)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction calcCrow(lat1, lon1, lat2, lon2)\r\n{\r\n    var R = 6371; // km\r\n    var dLat = toRad(lat2-lat1);\r\n    var dLon = toRad(lon2-lon1);\r\n    var lat1 = toRad(lat1);\r\n    var lat2 = toRad(lat2);\r\n\r\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    var d = R * c;\r\n    return d;\r\n}\r\nfunction toRad(Value) {return Value * Math.PI / 180}\r\n\r\nfunction nearestParkingCount(parking, parkingData){\r\n    let count = 0;\r\n    for(let i = 0; i<parkingData.length; i++){\r\n        let distance = calcCrow(parking.latitude, parking.longitude, parkingData[i].latitude, parkingData[i].longitude);\r\n        if(distance<=0.15){\r\n            count++;\r\n        }\r\n    }\r\n    return count\r\n}\r\n\r\n\r\nfunction onMarkerDragEnd(event, setLocationMarker) {\r\n    let newLat = event.latLng.lat(),\r\n        newLng = event.latLng.lng();\r\n    geocodeFromLatLng(newLat, newLng).then(location => {\r\n        setLocationMarker(location)\r\n    })\r\n}\r\n\r\nfunction ParkingMap({placeInfo,\r\n                        locationMarker,\r\n                        setLocationMarker,\r\n                        addNewParking,\r\n                        addExistingParking,\r\n                        selectedParkingData\r\n                    }) {\r\n\r\n    const [parkingData, setParkingData] = useState([]);\r\n    const [mainInfoWindow, setMainInfoWindow] = useState(false);\r\n    const [parkingInfoWindows, setParkingInfoWindows] = useState(false);\r\n    const [isLocked, setIsLocked] = useState(false);\r\n    const refMap = useRef(null);\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    function getClosestParking(){\r\n        API.Parking.getParkingByLocation(\"?lat=\"+locationMarker.latitude+\"&lng=\"+locationMarker.longitude).then(response=>{\r\n            setParkingData(response);\r\n        }).catch(error=>{\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getClosestParking()\r\n    },[locationMarker]);\r\n\r\n    function mapToolbarCallback(location) {\r\n        setMainInfoWindow(true);\r\n        setLocationMarker(location)\r\n    }\r\n\r\n    return <React.Fragment>\r\n        <MapToolbar\r\n            isLocked={isLocked}\r\n            locationCallback={mapToolbarCallback}/>\r\n\r\n        <MapComponent\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            mainInfoWindow={mainInfoWindow}\r\n            setMainInfoWindow={setMainInfoWindow}\r\n            addNewParking={addNewParking}\r\n            addExistingParking={addExistingParking}\r\n            parkingInfoWindows={parkingInfoWindows}\r\n            setParkingInfoWindows={setParkingInfoWindows}\r\n            parkingData={parkingData}\r\n            position={locationMarker}\r\n            setPosition={setLocationMarker}\r\n            isLocked={isLocked}\r\n            refInstance={refMap}\r\n            selectedParkingData={selectedParkingData}\r\n            addAlertConfig={addAlertConfig}\r\n        />\r\n\r\n    </React.Fragment>\r\n}\r\n\r\n\r\nParkingMap.propTypes = {\r\n    placeInfo: PropTypes.object.isRequired,\r\n    locationMarker: PropTypes.object.isRequired,\r\n    setLocationMarker: PropTypes.func.isRequired,\r\n    addNewParking: PropTypes.func.isRequired,\r\n    addExistingParking: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ParkingMap","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../../Networking/API\";\r\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport ParkingMap from \"../maps/ParkingMap\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction ParkingLocation({classes, locationData, setLocationData, allSelectedParkingData, setAllSelectedParkingData, placeInfo}) {\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\r\n    };\r\n\r\n    function addNewParking(markerData){\r\n        if(!parkingExists(markerData)){\r\n            API.Parking.insertNewParking([markerData]).then(response=>{\r\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\r\n                addConfig(true)\r\n            }).catch(error=>{\r\n                addConfig(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    function addExistingParking(location) {\r\n        if(!parkingExists(location)){\r\n            setAllSelectedParkingData(oldArray=> [...oldArray, location])\r\n        }\r\n    }\r\n\r\n    function parkingExists(markerData){\r\n        for(let i = 0; i<allSelectedParkingData.length; i++){\r\n            if(allSelectedParkingData[i].address === markerData.address){\r\n                addConfig(false, \"This parking is already attached!\");\r\n                return true;\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    const SortableItem = SortableElement(({value}) => (\r\n        <Paper className={classes.paper} elevation={3}>\r\n            <Typography>\r\n                {value.address}\r\n            </Typography>\r\n            <IconButton aria-label=\"delete\" className={classes.margin}\r\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </Paper>\r\n    ));\r\n\r\n\r\n    const SortableList = SortableContainer(({items}) => {\r\n        return (\r\n            <ul>\r\n                {items.map((value, index) => (\r\n                <SortableItem key={index} index={index} value={value} />\r\n                ))}\r\n            </ul>\r\n        );\r\n    });\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Add parking\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select parking\r\n        </Typography>\r\n\r\n        <ParkingMap\r\n            selectedParkingData={allSelectedParkingData}\r\n            placeInfo={placeInfo}\r\n            locationMarker={locationData}\r\n            setLocationMarker={setLocationData}\r\n            addNewParking={addNewParking}\r\n            addExistingParking={addExistingParking}\r\n        />\r\n\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Selected parking locations\r\n        </Typography>\r\n        {allSelectedParkingData.length === 0 ? <Alert severity=\"error\">\r\n            This place has no selected parking! To select parking for this place do the following:\r\n            <br/>\r\n            1. Select your current location or any other location\r\n            <br/>\r\n            2. Select already existing nearby parking locations and click add\r\n            <br/>\r\n            3. If none of the location is valid, click on the orange marker and add new parking\r\n            </Alert> :\r\n            <SortableList pressDelay={200} disableAutoscroll={false} items={allSelectedParkingData} onSortEnd={onSortEnd} />\r\n        }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(ParkingLocation)","import React, { useState, useCallback } from 'react';\r\n\r\nexport const EditDialogContext = React.createContext({\r\n    dialogConfig: null,\r\n    dialogOpen: null,\r\n    setDialogOpen: null,\r\n    addEditDialogConfig: () => {},\r\n    removeEditDialogConfig: () => {}\r\n});\r\n\r\nconst defaultOptions = {\r\n\r\n    /**\r\n     * The dialog's title.\r\n     */\r\n    title: \"Sample title\",\r\n\r\n    /**\r\n     * Object, that defines an error message for each error returned by validateInput function.\r\n     * Should follow this structure: {errorCode: \"message\", differentErrorCode: \"Message\"}\r\n     * Keys of this object are integers (that represent the error code)\r\n     */\r\n    errorMessages: {},\r\n\r\n    /**\r\n     * Explanation text for this dialog.\r\n     */\r\n    explanation: \"Sample explanation\",\r\n\r\n    /**\r\n     * A callback for when user presses cancel.\r\n     */\r\n    onCloseCallback: () => {},\r\n\r\n    /**\r\n     * A callback for when the user input passes error checks and done button is pressed\r\n     * @param input is the input text\r\n     */\r\n    onDoneCallback: (input) => {},\r\n\r\n    /**\r\n     * The label text to be displayed above textfield\r\n     */\r\n    textFieldLabel: \"Type here\",\r\n\r\n    /**\r\n     * Should return 0 if input is valid.\r\n     * If the input is not valid, it should return an error code.\r\n     * Any returned code, that is not 0 is considered to be an error.\r\n     * The error code returned may have a message in errorMessages prop.\r\n     * @param input\r\n     * @returns {number}\r\n     */\r\n    validateInput: (input) => 0,\r\n\r\n    /**\r\n     * The default text to be displayed in TextField\r\n     */\r\n    defaultText: \"\"\r\n}\r\n\r\nexport default function EditDialogProvider({ children }) {\r\n    const [dialogConfig, setDialogConfig] = useState(defaultOptions);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const contextValue = {\r\n        dialogConfig,\r\n        dialogOpen: dialogOpen,\r\n        setDialogOpen: setDialogOpen,\r\n        addEditDialogConfig: (options) => {\r\n            setDialogConfig({\r\n                ...defaultOptions,\r\n                ...options\r\n            })\r\n            setDialogOpen(true)\r\n        },\r\n        removeEditDialogConfig: () => setDialogConfig(null)\r\n    };\r\n\r\n    return (\r\n        <EditDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </EditDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {EditDialogContext} from \"./EditDialogContext\";\r\n\r\nexport default function UseEditDialogContext() {\r\n    const { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen } = useContext(EditDialogContext);\r\n    return { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen};\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport API from \"../../Networking/API\";\r\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories}) {\r\n\r\n    const [availableCategories, setAvailableCategories] = useState([]);\r\n    const [availableTags, setAvailableTags] = useState([]);\r\n\r\n    const {addEditDialogConfig} = UseEditDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    const updateTags = () => {\r\n        API.Tags.getAllTags().then(response=>{\r\n            setAvailableTags(response);\r\n            console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n    const updateCategories = () => {\r\n        API.Categories.getAllCategories().then(response=>{\r\n            setAvailableCategories(response)\r\n            console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        });\r\n    };\r\n\r\n    useEffect(()=>{\r\n        updateTags();\r\n        updateCategories();\r\n    },[]);\r\n\r\n\r\n    const promptAddTag = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add tag\",\r\n            explanation: \"Type the tag name\",\r\n            onDoneCallback: (tagName) => {\r\n                API.Tags.addTag([{name: tagName}]).then(response=>{\r\n                    let newTag = {tagId: response[0], name: tagName}\r\n                    setAvailableTags(\r\n                        [\r\n                            ...availableTags,\r\n                            newTag\r\n                        ]\r\n                    );\r\n                    setSelectedTags([\r\n                        ...selectedTags,\r\n                        newTag\r\n                    ]);\r\n\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to add tag.\")\r\n                })\r\n            },\r\n            errorMessages: {\r\n                1: \"The tag name is too short\",\r\n                2: \"A tag with identical name already exists. You should choose the existing tag instead\"\r\n            },\r\n            validateInput: (input) => {\r\n                if(input.length < 4){\r\n                    return 1 //Input too short\r\n                }else if(availableTags.filter(item => item.name === input).length !== 0){\r\n                    return 2 //Identical tag already exists\r\n                }\r\n                return 0\r\n            },\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const promptAddCategory = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add category\",\r\n            explanation: \"Type the category name\",\r\n            onDoneCallback: (categoryName) => {\r\n                API.Categories.addCategory([{name: categoryName}]).then(response=>{\r\n                    let newCat = {categoryId: response[0], name: categoryName};\r\n                    setAvailableCategories(\r\n                        [\r\n                            ...availableCategories,\r\n                            newCat\r\n                        ]\r\n                    );\r\n                    setSelectedCategories([\r\n                        ...selectedCategories,\r\n                        newCat\r\n                    ]);\r\n                }).catch(error=>{\r\n                    addConfig(false, \"Failed to add category.\")\r\n                })\r\n            },\r\n            errorMessages: {\r\n                1: \"The category name is too short\",\r\n                2: \"A category with identical name already exists. You should choose the existing category instead\"\r\n            },\r\n            validateInput: (input) => {\r\n                if(input.length < 4){\r\n                    return 1 //Input too short\r\n                }else if(availableCategories.filter(item => item.name === input).length !== 0){\r\n                    return 2 //Identical category already exists\r\n                }\r\n                return 0\r\n            },\r\n            textFieldLabel: \"Restaurant, hotel, hiking...\"\r\n        })\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place discovery settings\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select tags\r\n        </Typography>\r\n        <AutocompleteChip label=\"Select tags\"\r\n                          id=\"tagId\"\r\n                          options={availableTags}\r\n                          setOptions={setAvailableTags}\r\n                          selectedOptions={selectedTags}\r\n                          setSelectedOptions ={setSelectedTags}/>\r\n\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={promptAddTag}\r\n            startIcon={<AddIcon />}>\r\n            Add missing tag\r\n        </Button>\r\n\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select categories\r\n        </Typography>\r\n        <AutocompleteChip label=\"Select categories\"\r\n                          id=\"categoryId\"\r\n                          options={availableCategories}\r\n                          setOptions={setAvailableCategories}\r\n                          selectedOptions={selectedCategories} \r\n                          setSelectedOptions={setSelectedCategories}/>\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={promptAddCategory}\r\n            startIcon={<AddIcon />}>\r\n            Add missing category\r\n        </Button>\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceDiscovery)","const initialScheduleData = [\r\n    {\r\n        \"scheduleDefault\": true,\r\n        \"periods\": [\r\n            {\r\n                openDay: 0,\r\n                closeDay: 0,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            },\r\n            {\r\n                openDay: 1,\r\n                closeDay: 1,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            },\r\n            {\r\n                openDay: 2,\r\n                closeDay: 2,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            },\r\n            {\r\n                openDay: 3,\r\n                closeDay: 3,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            },\r\n            {\r\n                openDay: 4,\r\n                closeDay: 4,\r\n                openTime: \"08:00\",\r\n                closeTime: \"17:00\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default initialScheduleData","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        width: \"20%\",\r\n        padding: \"2px\",\r\n        marginRight: \"16px\"\r\n    },\r\n\r\n});\r\nexport default function ReviewCard({review}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <div style={{display: \"flex\"}} >\r\n                    <Avatar alt=\"Cindy Baker\" src={!!review.photoUrl ? review.photoUrl : \"/broken-image.jpg\"} />\r\n                    <div style={{display: \"flex\", flexDirection: \"column\", marginLeft:\"8px\"}}>\r\n                        <Typography title=\"subtitle1\">\r\n                            {review.name} {review.surname}\r\n                        </Typography>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <Rating size=\"small\" name=\"read-only\" value={review.rating} readOnly />\r\n                            <Typography title=\"subtitle1\">\r\n                                {\"+\" + review.upvotes}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                    {moment(review.timeAdded).format('LL')}\r\n                </Typography>\r\n                <div style={{marginTop: \"16px\"}}>\r\n                    {review.title}\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                        {review.review}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ReviewCard from \"../ReviewCard\";\r\nimport API from \"../../Networking/API\";\r\nimport debounce from \"lodash/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nconst styles = theme => ({\r\n    reviewsInfo:{\r\n        display: \"flex\",\r\n    },\r\n    reviews:{\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        margin: theme.spacing(2),\r\n        overflowX: \"scroll\"\r\n    },\r\n    sortingButtons: {\r\n        padding: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction Reviews({classes, placeInfo}) {\r\n\r\n    const [reviews, setReviews] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    const [filterBy, setFilterBy] = useState('mostRated');\r\n\r\n    function getReviewsForPlace(urlParams = \"?p=\"+placeInfo.placeId) {\r\n        API.Reviews.getPlaceReviews(urlParams).then(response=>{\r\n            setReviews(old=>[...old, ...response.list]);\r\n            setIsLoading(false)\r\n        }).catch(error=>{\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    //Get ordered by new filter\r\n    useEffect(()=>{\r\n            getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=1&o=\"+filterBy)\r\n    },[filterBy]);\r\n\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollWidth - e.target.scrollLeft - scrollOffset)  <= e.target.clientWidth;\r\n        if (bottom && !isLoading && reviews.length>0 && reviews.length<placeInfo.totalReviews) {\r\n            setIsLoading(true);\r\n            setPage(old=>{\r\n                getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=\"+(old+1)+\"&o=\"+filterBy);\r\n                return old+1\r\n            });\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    function changeSorting(e){\r\n        const {name, value} = e.target;\r\n        setFilterBy(value);\r\n        setReviews([]);\r\n        setPage(1);\r\n        handleClose()\r\n    }\r\n\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Reviews\r\n            <br/>\r\n            {\r\n               reviews.length > 0 ?\r\n                   <React.Fragment>\r\n                       <div style={{display:\"flex\", justifyContent: \"space-between\"}}>\r\n                           <div className={classes.reviewsInfo}>\r\n                               <Rating name=\"read-only\" value={placeInfo.overallStarRating} precision={0.2} readOnly />\r\n                               <Typography style={{marginLeft:\"8px\"}} variant=\"subtitle1\">\r\n                                   {placeInfo.totalReviews} reviews\r\n                               </Typography>\r\n                           </div>\r\n                           <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                               <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                                   <FilterListIcon />\r\n                               </IconButton>\r\n                           </Tooltip>\r\n                           <Popover\r\n                               id={id}\r\n                               open={open}\r\n                               anchorEl={anchorEl}\r\n                               onClose={handleClose}\r\n                               anchorOrigin={{\r\n                                   vertical: 'bottom',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                               transformOrigin={{\r\n                                   vertical: 'top',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                           >\r\n                               <RadioGroup className={classes.sortingButtons} aria-label=\"gender\" value={filterBy} name=\"gender1\"  onChange={changeSorting}>\r\n                                   <FormControlLabel value=\"mostRated\" control={<Radio />} label=\"Most rated\" />\r\n                                   <FormControlLabel value=\"newest\" control={<Radio />} label=\"Newest\" />\r\n                               </RadioGroup>\r\n                           </Popover>\r\n                       </div>\r\n\r\n                       <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                           <Typography>\r\n                               Showing: {reviews.length} out of {placeInfo.totalReviews}\r\n                           </Typography>\r\n                           <Typography>\r\n                               Sorting by: {filterBy}\r\n                           </Typography>\r\n                       </div>\r\n                       <div className={classes.reviews} onScroll={e=>handleScroll(e)}>\r\n                           {reviews.map(row=>{\r\n                               return <ReviewCard review={row}/>\r\n                           })}\r\n                       </div>\r\n                   </React.Fragment> : <Typography> No reviews for this place</Typography>\r\n            }\r\n\r\n        </Typography>\r\n        <br/>\r\n        {isLoading ? <LinearProgress/> : null }\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(Reviews)","import React, { useState } from 'react';\r\n\r\nexport const AppBarTitleContext = React.createContext({\r\n    title: \"\",\r\n    setTitle: () => {},\r\n});\r\n\r\nexport default function AppBarTitleProvider({ children }) {\r\n    const [title, setTitle] = useState(\"Home\");\r\n\r\n    const contextValue = {\r\n        title,\r\n        setTitle: (title) => setTitle(title)\r\n    };\r\n\r\n    return (\r\n        <AppBarTitleContext.Provider value={contextValue}>\r\n            {children}\r\n        </AppBarTitleContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AppBarTitleContext} from \"./AppBarTitleContext\";\r\n\r\nexport default function UseAppBarTitleContext() {\r\n    const { title, setTitle } = useContext(AppBarTitleContext);\r\n    return { title, setTitle };\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { TimePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport Moment from \"react-moment\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\",\r\n        margin: theme.spacing(0.5),\r\n        alignItems: \"center\",\r\n        flexFlow: \"row wrap\"\r\n    },\r\n    picker: {\r\n        margin: theme.spacing(0.5),\r\n        width: \"30%\"\r\n    },\r\n    intervalRightSide: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    intervalLeftSide: {\r\n    }\r\n});\r\n\r\nfunction ScheduleInterval({classes, intervals, index, setIntervals}){\r\n\r\n    let currentInterval = intervals[index]\r\n\r\n    const [lastAccommodationEnabled, setLastAccommodationEnabled] = useState(currentInterval.lastAccommodation != null)\r\n    const [lastAccommodationTime, setLastAccommodationTime] = useState(currentInterval.lastAccommodation == null ? currentInterval.closeTime : currentInterval.lastAccommodation)\r\n\r\n    const getCloseDay = (closeTime, openTime) => {\r\n        let currentPeriod = intervals[index]\r\n        if(moment(closeTime, \"HH:mm\").isBefore(moment(openTime, \"HH:mm\")))\r\n            return (currentPeriod.openDay + 1) > 6 ? 0 : (currentPeriod.openDay +1)\r\n        else return currentPeriod.openDay\r\n    }\r\n\r\n    let handleUpdateOpenTime = (value) => {\r\n        setIntervals((oldIntervals) => {\r\n            return oldIntervals.map((item, i) => {\r\n                if(index === i){\r\n                    return {\r\n                        ...item,\r\n                        openTime: moment(value).format(\"HH:mm\").toString(),\r\n                        closeDay: getCloseDay(item.closeTime, value)\r\n                    }\r\n                }else return item\r\n            })\r\n        })\r\n    }\r\n    let handleUpdateCloseTime = (value) => {\r\n        setIntervals((oldIntervals) => {\r\n            return oldIntervals.map((item, i) => {\r\n                if(index === i){\r\n                    return {\r\n                        ...item,\r\n                        closeTime: moment(value).format(\"HH:mm\").toString(),\r\n                        closeDay: getCloseDay(value, item.openTime)\r\n                    }\r\n                }else return item\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setIntervals(oldIntervals => {\r\n            return oldIntervals.filter((item, i) => i !== index)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIntervals((oldIntervals) => {\r\n            return oldIntervals.map((item, i) => {\r\n                if(index === i){\r\n                    return {\r\n                        ...item,\r\n                        lastAccommodation: lastAccommodationEnabled ? lastAccommodationTime.toString() : null\r\n                    }\r\n                }else return item\r\n            })\r\n\r\n        })\r\n    }, [lastAccommodationTime, lastAccommodationEnabled])\r\n\r\n    const theme = useTheme();\r\n    const largeScreen = useMediaQuery(theme.breakpoints.only('lg'));\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.intervalLeftSide}>\r\n                <TimePicker\r\n                    margin=\"normal\"\r\n                    ampm={false}\r\n                    label=\"Opens\"\r\n                    className={classes.picker}\r\n                    format=\"HH:mm\"\r\n                    value={moment(currentInterval.openTime, \"HH:mm\")}\r\n                    onChange={handleUpdateOpenTime}\r\n                    InputProps={{\r\n                        disableUnderline: true,\r\n                    }}\r\n                />\r\n                <TimePicker\r\n                    margin=\"normal\"\r\n                    ampm={false}\r\n                    className={classes.picker}\r\n                    label=\"Closes\"\r\n                    format=\"HH:mm\"\r\n                    value={moment(currentInterval.closeTime, \"HH:mm\")}\r\n                    onChange={handleUpdateCloseTime}\r\n                    InputProps={{\r\n                        disableUnderline: true,\r\n                    }}\r\n                />\r\n\r\n                {intervals[index].closeDay !== intervals[index].openDay &&\r\n                    <React.Fragment>\r\n                        <Typography variant=\"subtitle1\">\r\n                            <WarningIcon style={{marginRight: \"10px\"}}/>\r\n                            Closes the next day\r\n                        </Typography>\r\n                    </React.Fragment>}\r\n\r\n                {!largeScreen &&\r\n                <Button color=\"primary\" onClick={handleDelete}>\r\n                    <DeleteOutlineIcon/>\r\n                </Button>\r\n                }\r\n            </div>\r\n\r\n            <div className={classes.intervalRightSide}>\r\n\r\n                <Checkbox checked={lastAccommodationEnabled} onChange={() => setLastAccommodationEnabled(state => !state)} />\r\n\r\n                <TimePicker\r\n                    margin=\"normal\"\r\n                    ampm={false}\r\n                    label=\"Last accommodation\"\r\n                    format=\"HH:mm\"\r\n                    disabled={!lastAccommodationEnabled}\r\n                    value={moment(lastAccommodationTime.toString(), \"HH:mm\")}\r\n                    onChange={(value) => setLastAccommodationTime(moment(value).format(\"HH:mm\").toString())}\r\n                    InputProps={{\r\n                        disableUnderline: true,\r\n                    }}\r\n                />\r\n\r\n                {largeScreen &&\r\n                    <Button color=\"primary\" onClick={handleDelete}>\r\n                    <DeleteOutlineIcon/>\r\n                    </Button>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nScheduleInterval.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    intervals: PropTypes.array.isRequired,\r\n    setIntervals: PropTypes.func.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ScheduleInterval)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ScheduleInterval from \"./ScheduleInterval\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst styles = theme => ({\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\"\r\n    },\r\n    root: {\r\n        margin: theme.spacing(0.5),\r\n        padding: theme.spacing(0.5)\r\n    }\r\n});\r\n\r\nfunction DayComponent({classes, scheduleData, setScheduleData, openDay, onChange, globalTime}){\r\n\r\n    let [intervals, setIntervals] = useState(scheduleData.periods.filter(item => item.openDay === openDay))\r\n    let [ignoreGlobalTime, setIgnoreGlobalTime] = useState({ignoreOpenTime: true, ignoreCloseTime: true})\r\n    useEffect(() => {\r\n        onChange(intervals, openDay)\r\n    }, [intervals])\r\n\r\n    useEffect(() => {\r\n        if(ignoreGlobalTime.ignoreOpenTime){\r\n            setIgnoreGlobalTime(data => {\r\n                return {...data, ignoreOpenTime: false}\r\n            })\r\n            return\r\n        }\r\n        setIntervals(oldIntervals => {\r\n            return oldIntervals.map(item => {\r\n                return {...item, openTime: globalTime.openTime}\r\n            })\r\n        })\r\n    }, [globalTime.openTime])\r\n\r\n    useEffect(() => {\r\n        if(ignoreGlobalTime.ignoreCloseTime){\r\n            setIgnoreGlobalTime(data => {\r\n                return {...data, ignoreCloseTime: false}\r\n            })\r\n            return\r\n        }\r\n        setIntervals(oldIntervals => {\r\n            return oldIntervals.map(item => {\r\n                return {...item, closeTime: globalTime.closeTime}\r\n            })\r\n        })\r\n    }, [globalTime.closeTime])\r\n\r\n    let weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\r\n\r\n    const handleAddPeriod = () => {\r\n        setIntervals(oldIntervals => {\r\n            return [\r\n                ...oldIntervals,\r\n                {openDay: openDay, closeDay: openDay, openTime: \"08:00\", closeTime: \"18:00\"}\r\n            ]\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n                <Typography variant=\"h6\" >\r\n                    {weekDays[openDay]}\r\n                </Typography>\r\n                <Button color=\"secondary\" onClick={handleAddPeriod}>\r\n                    <AddIcon/>\r\n                </Button>\r\n            </div>\r\n\r\n            {intervals.map((value, index) => {\r\n                return <React.Fragment>\r\n                    <Divider variant=\"middle\" />\r\n                    <ScheduleInterval index={index} intervals={intervals} setIntervals={setIntervals}/>\r\n                </React.Fragment>\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nDayComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    scheduleData: PropTypes.object.isRequired,\r\n    setScheduleData: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DayComponent)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {DatePicker, MuiPickersUtilsProvider, TimePicker} from '@material-ui/pickers';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport DayComponent from \"./DayComponent\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = theme => ({\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\"\r\n    },\r\n    root: {\r\n        padding: theme.spacing(2),\r\n        margin: theme.spacing(1)\r\n    },\r\n    pickerStyle: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    headerLeft: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"left\"\r\n    },\r\n    globalTimeEditLayout: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\",\r\n        margin: theme.spacing(0.5),\r\n        alignItems: \"center\",\r\n        flexFlow: \"row wrap\"\r\n    },\r\n    globalTimeEditLeft: {\r\n\r\n    },\r\n    globalTimePicker: {\r\n        margin: theme.spacing(0.5),\r\n        width: \"30%\"\r\n    }\r\n});\r\n\r\nfunction Schedule({classes, data, setData, index}){\r\n\r\n    const[periods, setPeriods] = useState([...data.periods])\r\n    const[globalTime, setGlobalTime] = useState({openTime: \"08:00\", closeTime: \"17:00\"})\r\n\r\n    const handleIntervalChange = (newIntervals, openDay) => {\r\n        setPeriods(oldPeriods => {\r\n            let filtered = oldPeriods.filter(item => item.openDay !== openDay)\r\n            if(newIntervals.length === 0)\r\n                return [...filtered]\r\n            return [\r\n                ...filtered,\r\n                ...newIntervals\r\n            ]\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setData(oldData => {\r\n            return oldData.map((schedule, i) => {\r\n                if( i === index){\r\n                    return {...schedule, periods: periods}\r\n                }else return schedule\r\n            })\r\n        })\r\n    }, [periods])\r\n\r\n    const generateWeekdayViews = () => {\r\n        let views = []\r\n        for(let i =0; i < 7; i++){\r\n            views.push(<DayComponent globalTime={globalTime} scheduleData={data} onChange={handleIntervalChange} setScheduleData={setData} openDay={i} key={i}/>)\r\n        }\r\n        return views\r\n    }\r\n\r\n    const updateFromTime = (value) => {\r\n        setData(oldData => {\r\n            return oldData.map((schedule, i) => {\r\n                if( i === index){\r\n                    return {...schedule, from: moment(value).format('MM-DD').toString()}\r\n                }else return schedule\r\n            })\r\n        })\r\n    }\r\n    const updateToTime = (value) => {\r\n        setData(oldData => {\r\n            return oldData.map((schedule, i) => {\r\n                if( i === index){\r\n                    return {...schedule, to: moment(value).format('MM-DD').toString()}\r\n                }else return schedule\r\n            })\r\n        })\r\n    }\r\n    const removeSchedule = () => {\r\n        setData(oldData => {\r\n            return oldData.filter((item, i) => index !== i)\r\n        })\r\n    }\r\n\r\n    const handleUpdateGlobalOpenTime = (value) => {\r\n        setGlobalTime(data => {\r\n            return {...data, openTime: moment(value).format(\"HH:mm\").toString()}\r\n        })\r\n    }\r\n    const handleUpdateGlobalCloseTime = (value) => {\r\n        setGlobalTime(data => {\r\n            return {...data, closeTime: moment(value).format(\"HH:mm\").toString()}\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Paper className={classes.root}>\r\n            <div className={classes.header}>\r\n                <div className={classes.headerLeft}>\r\n                    {data.scheduleDefault &&\r\n                    <Typography variant=\"h6\" >\r\n                        Date: Year round\r\n                    </Typography>}\r\n                    {!data.scheduleDefault &&\r\n                        <React.Fragment>\r\n                            <DatePicker\r\n                                className={classes.pickerStyle}\r\n                                views={[\"month\", \"date\"]}\r\n                                label=\"From\"\r\n                                value={moment(data.from, \"MM-DD\")}\r\n                                onChange={updateFromTime}\r\n                            />\r\n                            <DatePicker\r\n                                className={classes.pickerStyle}\r\n                                views={[\"month\", \"day\"]}\r\n                                label=\"To\"\r\n                                value={moment(data.to, \"MM-DD\")}\r\n                                onChange={updateToTime}\r\n                            />\r\n                        </React.Fragment>\r\n                    }\r\n                </div>\r\n                {!data.scheduleDefault &&\r\n                <Button color=\"secondary\" onClick = {removeSchedule}>\r\n                    <RemoveIcon/>\r\n                </Button>}\r\n\r\n            </div>\r\n            <br/>\r\n            <div className={classes.globalTimeEditLayout}>\r\n                <div className={classes.globalTimeEditLeft}>\r\n                    <TimePicker\r\n                        margin=\"normal\"\r\n                        ampm={false}\r\n                        label=\"Opens\"\r\n                        className={classes.globalTimePicker}\r\n                        format=\"HH:mm\"\r\n                        value={moment(globalTime.openTime, \"HH:mm\")}\r\n                        onChange={handleUpdateGlobalOpenTime}\r\n                        InputProps={{\r\n                            disableUnderline: true,\r\n                        }}\r\n                    />\r\n                    <TimePicker\r\n                        margin=\"normal\"\r\n                        ampm={false}\r\n                        className={classes.globalTimePicker}\r\n                        label=\"Closes\"\r\n                        format=\"HH:mm\"\r\n                        value={moment(globalTime.closeTime, \"HH:mm\")}\r\n                        onChange={handleUpdateGlobalCloseTime}\r\n                        InputProps={{\r\n                            disableUnderline: true,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {generateWeekdayViews()}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nSchedule.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    setData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Schedule)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Schedule from \"../Schedule\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst styles = theme => ({\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\",\r\n        flexWrap: \"wrap\"\r\n    }\r\n});\r\n\r\nfunction SchedulesWrapper({classes, scheduleData, setScheduleData, isScheduleEnabled, setIsScheduleEnabled}){\r\n\r\n    const addSchedule = () => {\r\n        setScheduleData(oldData => {\r\n            return [\r\n                ...oldData,\r\n                {scheduleDefault: false, from: \"01-01\", to: \"01-02\", periods : []}\r\n            ]\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className={classes.header}>\r\n                <Typography variant=\"h6\" >\r\n                    Working schedule\r\n                </Typography>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={isScheduleEnabled}\r\n                            onChange={() => setIsScheduleEnabled(state => !state)}\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                    label=\"Enable schedule for this place?\"\r\n                />\r\n            </div>\r\n            <br/>\r\n            {isScheduleEnabled &&\r\n                <React.Fragment>\r\n                    {scheduleData.map((value, index) => {\r\n                        return <Schedule data={value} index={index} setData={setScheduleData}/>\r\n                    })}\r\n                    <Button style={{float: \"right\"}}color=\"secondary\" onClick={addSchedule}>\r\n                        <AddIcon/>\r\n                    </Button>\r\n                </React.Fragment>}\r\n        </div>\r\n    )\r\n}\r\n\r\nSchedulesWrapper.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    scheduleData: PropTypes.array.isRequired,\r\n    setScheduleData: PropTypes.func.isRequired,\r\n    isScheduleEnabled: PropTypes.object.isRequired,\r\n    setIsScheduleEnabled: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SchedulesWrapper)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport API from \"../../Networking/API\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n\r\n});\r\n\r\nfunction AddRecommendationDialog({classes, open, setOpen, addCallback}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [data, setData] = useState({name: \"\", subtitle: \"\", description: \"\", type: \"1\"});\r\n    const [error, setError] = useState({name: false, subtitle: false, description: false});\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let recData = { ...data }\r\n        recData[name] = value\r\n        setData(recData)\r\n    };\r\n\r\n    function addRecommendation(){\r\n        if(checkErrors()){\r\n            return\r\n        }\r\n        setLoading(true)\r\n        addAlertConfig(\"Add new recommendation\", \"Are you sure you want to add this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Recommendation.createRecommendation(data).then(id=>{\r\n                    let insertedData = { ...data }\r\n                    insertedData.id = id\r\n                    addConfig(true, \"Recommendation added successfully\")\r\n                    addCallback(insertedData)\r\n                    setOpen(false)\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong. Please try again.\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    function checkErrors(){\r\n        let errors = Object.assign({}, error)\r\n        let hasErrors = false;\r\n        for (let key in data) {\r\n            errors[key] = data[key] === \"\" || data[key] === -1;\r\n            if(errors[key] === true){\r\n                hasErrors = true\r\n            }\r\n        }\r\n        setError(errors);\r\n        return hasErrors\r\n    }\r\n\r\n    function recommendationTypeChanged(event) {\r\n        let recData = { ...data }\r\n        recData.type = event.target.value\r\n\r\n        setData(recData)\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add new recommendation</DialogTitle>\r\n            <DialogContent>\r\n                <div className={classes.root}>\r\n                    <TextField id=\"outlined-basic\"\r\n                               error={error.title}\r\n                               required\r\n                               label=\"Title\"\r\n                               name=\"name\"\r\n                               value={data['name']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               error={error.subtitle}\r\n                               label=\"Subtitle\"\r\n                               name=\"subtitle\"\r\n                               value={data['subtitle']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               error={error.description}\r\n                               label=\"Description\"\r\n                               name=\"description\"\r\n                               value={data['description']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <FormControl component=\"fieldset\" style={{marginTop: 32}}>\r\n                        <FormLabel component=\"legend\">Recommendation type</FormLabel>\r\n                        <RadioGroup aria-label=\"rec\" name=\"rec1\" value={data.type} onChange={recommendationTypeChanged}>\r\n                            <FormControlLabel value=\"1\" control={<Radio />} label=\"Places recommendation\" />\r\n                            <FormControlLabel value=\"2\" control={<Radio />} label=\"Tours recommendation\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </div>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        addRecommendation()\r\n                    }}\r\n                >\r\n                    Create recommendation\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(AddRecommendationDialog)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport API from \"../../Networking/API\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport history from \"../../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddRecommendationDialog from \"./AddRecommendationDialog\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport debounce from \"lodash/debounce\";\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start'\r\n    }\r\n});\r\n\r\nfunction RecommendationListDialog({classes, open, setOpen, objectId, type}){\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [recommendations, setRecommendations] = useState([]);\r\n    const [pagingData, setPagingData] = useState({pageNum: 1})\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [showAddNewRecommendation, setShowAddNewRecommendation] = useState(false)\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    function getRecommendations(page, keywordChange = false) {\r\n        API.Recommendation.getAllRecommendations(\"?p=\"+page+\"&keyword=\"+keyword+\"&type=\"+type).then(response=>{\r\n            if(keywordChange){\r\n                setRecommendations(response.list)\r\n            }else{\r\n                setRecommendations(old=>[...old, ...response.list])\r\n            }\r\n            delete response.list\r\n            setPagingData(response)\r\n        }).catch().finally(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        console.log(\"Handle scroll\")\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollHeight - e.target.scrollTop - scrollOffset)  <= e.target.clientHeight;\r\n        if (bottom && !loading && recommendations.length>0 && pagingData.pageNum<pagingData.pages) {\r\n            setLoading(true);\r\n            console.log(\"Requesting new page\")\r\n            getRecommendations(pagingData.pageNum+1);\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Keyword changed\")\r\n        getRecommendations(1, true);\r\n    }, [keyword])\r\n\r\n\r\n    function addPlaceToRecommendation(rec) {\r\n      API.Recommendation.addObjectToRecommendation({id: objectId, recommendationId: rec.id}).then(()=>{\r\n              addConfig(true, \"Added object to recommendation successfully!\")\r\n      }).catch(()=>{\r\n              addConfig(true, \"Failed to add!\")\r\n          }\r\n      ).finally(()=>{\r\n          setOpen(false)\r\n      })\r\n    }\r\n\r\n    function addNewRecommendationCallback(recommendation){\r\n        let recData = { ...recommendations }\r\n        recData.unshift(recommendation)\r\n\r\n        setRecommendations(recData)\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"sm\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add to recommendation</DialogTitle>\r\n            <DialogContent>\r\n                <div className={classes.root}>\r\n                    <div className={classes.root} >\r\n                        <TextField id=\"standard-search\" label=\"Search field\" value={keyword} type=\"search\" onChange={e=>{\r\n                            setKeyword(e.target.value)\r\n                        }} />\r\n                        {recommendations.length > 0 ?\r\n                            <React.Fragment>\r\n                                <List component=\"nav\" style={{ overflowY: \"scroll\", width: '100%', maxHeight: 400}} onScroll={handleScroll} aria-label=\"main mailbox folders\">\r\n                                    {recommendations.map(row=>{\r\n                                        return <ListItem style={{width: '100%'}} button onClick={()=>{addPlaceToRecommendation(row)}}>\r\n                                            <ListItemIcon>\r\n                                                <CheckBoxOutlineBlankIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={row.name} />\r\n                                        </ListItem>\r\n                                    })}\r\n\r\n                                </List>\r\n                            </React.Fragment>\r\n                            :\r\n\r\n                            <Alert severity=\"info\">Recommendations list is empty. You can add new recommendation below.</Alert>\r\n                        }\r\n\r\n\r\n                    </div>\r\n                    <Divider style={{width: '100%'}} />\r\n                    <Button\r\n                        onClick={()=>setShowAddNewRecommendation(true)}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        startIcon={<AddIcon/>}>\r\n                        Create new recommendation\r\n                    </Button>\r\n                </div>\r\n            <AddRecommendationDialog\r\n                open={showAddNewRecommendation}\r\n                setOpen={setShowAddNewRecommendation}\r\n                addCallback={addNewRecommendationCallback}\r\n            />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RecommendationListDialog)\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {Fragment, useState} from \"react\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n\r\n    },\r\n    media: {\r\n        height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n})\r\n\r\nfunction CategoriesDisplay({categories}){\r\n    return(\r\n        categories != null &&\r\n        <Box component=\"ul\"  style={{\r\n            display: 'flex',\r\n            justifyContent: 'left',\r\n            flexWrap: 'wrap',\r\n            listStyle: 'none',\r\n            padding: '0px'\r\n        }}>\r\n            {categories.map((data, index) => {\r\n                return (\r\n                    <li key={index}>\r\n                        <Chip\r\n                            variant=\"outlined\"\r\n                            style={{margin: \"5px\"}}\r\n                            label={data.name}\r\n                        />\r\n                    </li>\r\n\r\n                );\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction SubheaderDisplay({city, address, priceRange, rating}){\r\n    return(\r\n        <div>\r\n            {rating != null &&\r\n            <Fragment><Rating\r\n                readOnly={true}\r\n                value={rating}\r\n            /><br/></Fragment>}\r\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ApiPlaceCard({classes, placeData, renderActionArea}){\r\n\r\n    function truncateText(text){\r\n        if(text == null)\r\n            return \"\"\r\n        if(text.length > 500){\r\n            return text.substring(0, 500) + \"...\";\r\n        }else{\r\n            return text\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                action={\r\n                    renderActionArea != null && renderActionArea()\r\n                }\r\n                title={placeData.name}\r\n                subheader={<SubheaderDisplay  city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\r\n\r\n            />\r\n            {placeData.photos != null && placeData.photos.length > 0 &&\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={placeData.photos[0].url}\r\n            />}\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {truncateText(placeData.description)}\r\n                </Typography>\r\n\r\n                <CategoriesDisplay categories={placeData.categories}/>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n                {placeData.website}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nApiPlaceCard.propTypes = {\r\n    placeData: PropTypes.object.isRequired,\r\n    renderActionArea: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(ApiPlaceCard)","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\n\r\nconst styles = theme => ({\r\n    paperContent: {\r\n        marginTop: theme.spacing(4),\r\n        width: \"100%\",\r\n        padding: theme.spacing(2)\r\n    },\r\n});\r\n\r\nexport const RecommendationType = {\r\n    place: 1,\r\n    tour: 2\r\n}\r\n\r\nfunction Recommendation({classes, recommendation, onEditCallback}) {\r\n\r\n    return <Paper elevation = {4} className={classes.paperContent}>\r\n            <Chip\r\n                label={recommendation.type === 1 ? \"Place recommendation\" : \"Tour recommendation\"} />\r\n            <Typography variant=\"h6\">\r\n                {recommendation.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n                {recommendation.subtitle}\r\n            </Typography>\r\n\r\n            <div style={{display: \"flex\", flexDirection: 'row', overflowX: 'auto', width: '100%'}}>\r\n                <div style={{display:\"flex\", flexDirection: \"row\"}}>\r\n                    {recommendation.objects.length > 0 ?\r\n\r\n                        recommendation.objects.map((place, index)=>{\r\n                            delete place.description\r\n\r\n                            return <div style={{width: 300, padding: 16}}>\r\n                                <ApiPlaceCard placeData={place}/>\r\n                            </div>\r\n                        }) :\r\n\r\n                        <Alert severity=\"info\">This recommendation does not have any objects attached. You can attach\r\n                            Places or Tours by browsing in Places and Tours tables\r\n                        </Alert>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n        <Fragment>\r\n            <Button\r\n                style={{marginTop: 16}}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => onEditCallback()}\r\n                className={classes.button}>\r\n                Edit\r\n            </Button>\r\n        </Fragment>\r\n\r\n        </Paper>\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Recommendation)","import React, {useEffect, useState} from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Paper} from '@material-ui/core';\r\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\r\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\r\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\r\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\r\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\r\nimport initialScheduleData from \"../components/add_place_components/initialScheduleData\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Reviews from \"../components/add_place_components/Reviews\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport SchedulesWrapper from \"../components/add_place_components/SchedulesWrapper\";\r\nimport AddRecommendationDialog from \"../components/recomendation/AddRecommendationDialog\";\r\nimport RecommendationListDialog from \"../components/recomendation/RecommendationListDialog\";\r\nimport Recommendation, {RecommendationType} from \"../components/recomendation/Recommendation\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paperContent: {\r\n        marginTop: theme.spacing(4),\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            width: \"95%\",\r\n            padding: theme.spacing(2),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"70%\",\r\n            padding: theme.spacing(4),\r\n        },\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            height: \"100%\",\r\n        },\r\n    },\r\n    loader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"100vw\",\r\n        height: \"100vh\"\r\n    },\r\n    content: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        height: `calc(93vh - 64px)`,\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            width: \"100%\",\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"auto\",\r\n            padding: theme.spacing(8),\r\n        },\r\n        overflowY: \"auto\"\r\n    },\r\n    bottom: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            position: \"fixed\",\r\n            height: \"7vh\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        width: \"100%\",\r\n        zIndex: 5,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-around\",\r\n        padding: theme.spacing(1),\r\n    }\r\n});\r\n\r\n\r\nfunction AddPlace({classes, match}) {\r\n    const [placeInfo, setPlaceInfo] = useState({\r\n        placeId: \"\",\r\n        name: \"\", description: \"\", website: \"\", phoneNumber: \"\",\r\n        hasSchedule: false, isPublic: false, isVerified: true, overallStarRating: 0, totalReviews: 0,\r\n        source: \"\", price: \"\", averageTimeSpent: \"0\"\r\n    });\r\n\r\n\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    const [photos, setPhotos] = useState([]);\r\n\r\n    const [locationData, setLocationData] = useState({\r\n        city: '',\r\n        address: '',\r\n        country: '',\r\n        latitude: 54.687157,\r\n        longitude: 25.279652,\r\n        county: '',\r\n        municipality: ''\r\n    });\r\n    const [parkingMarkerData, setParkingMarkerData] = useState({\r\n        city: '',\r\n        address: '',\r\n        country: '',\r\n        latitude: 54.687157,\r\n        longitude: 25.279652,\r\n        county: '',\r\n        municipality: ''\r\n    });\r\n    const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\r\n\r\n    const [sources, setSources] = useState([]);\r\n\r\n    const [scheduleData, setScheduleData] = useState(initialScheduleData);\r\n    const [isScheduleEnabled, setIsScheduleEnabled] = useState(false);\r\n\r\n    const [placeId, setPlaceId] = useState(match.params.placeId);\r\n\r\n    const [firstTimeLoading, setFirstTimeLoading] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [error, setError] = useState({name: false});\r\n    const [checkErrors, setCheckErrors] = useState(false);\r\n\r\n    const [showRecommendationDialog, setShowRecommendationDialog] = useState(false)\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const {title, setTitle} = UseAppBarTitleContext();\r\n\r\n    const ColorButton = withStyles((theme) => ({\r\n        root: {\r\n            color: \"white\",\r\n            backgroundColor: green[500],\r\n            '&:hover': {\r\n                backgroundColor: green[700],\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n    useEffect(()=>{\r\n        if(placeId!==undefined){\r\n            console.log(\"Getting place location\");\r\n            getPlaceInfo()\r\n        }\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        //Loaded place for editing\r\n        if (placeId === undefined) {\r\n            setTitle(\"Add new place\");\r\n            console.log(\"Came here to add new place\");\r\n            setFirstTimeLoading(false) //Just loaded add place window\r\n        }\r\n        //New Place has been just inserted, thus inserting other place info\r\n        if (placeId !== undefined && firstTimeLoading === false) {\r\n            console.log(\"Just added new place\");\r\n            Promise.all([\r\n                updateTagsData(placeId),\r\n                updateParkingData(placeId),\r\n                updateCategoriesData(placeId),\r\n                updatePhotoData(placeId),\r\n                updateSchedule(placeId),\r\n                updateSources(placeId)\r\n            ]).then(responses => {\r\n                formFeedback(true, Strings.SNACKBAR_PLACE_INSERTED_SUCCESS)\r\n            }).catch(error => {\r\n                formFeedback(false)\r\n            })\r\n        }\r\n\r\n    }, [placeId]);\r\n\r\n    useEffect(() => {\r\n        if (firstTimeLoading === false) {\r\n            console.log(\"Making this place public\");\r\n            updateAll()\r\n        }\r\n    }, [placeInfo['isPublic']]);\r\n\r\n    function addToRecommendation() {\r\n        setShowRecommendationDialog(true)\r\n    }\r\n\r\n\r\n    function getPlaceInfo() {\r\n        API.Places.getPlaceById(\"?full=true&p=\" + placeId).then(response => {\r\n            setAllData(response)\r\n            setTitle(\"Editing place/\" + response.name);\r\n        }).catch(error => {\r\n            formFeedback(false)\r\n        })\r\n    }\r\n\r\n    function setAllData(place) {\r\n        setPlaceInfo({\r\n            placeId: place.placeId,\r\n            name: place.name,\r\n            description: place.description,\r\n            website: place.website,\r\n            phoneNumber: place.phoneNumber,\r\n            hasSchedule: place.hasSchedule,\r\n            isPublic: place.isPublic,\r\n            isVerified: place.isVerified,\r\n            overallStarRating: place.overallStarRating,\r\n            totalReviews: place.totalReviews,\r\n            price: place.price,\r\n            averageTimeSpent: place.averageTimeSpent,\r\n        });\r\n\r\n        setLocationData({\r\n            city: place.city,\r\n            address: place.address,\r\n            country: place.country,\r\n            latitude: place.latitude,\r\n            longitude: place.longitude,\r\n            county: place.county,\r\n            municipality: place.municipality,\r\n        });\r\n\r\n        setParkingMarkerData({\r\n            city: place.city,\r\n            address: place.address,\r\n            country: place.country,\r\n            latitude: place.latitude,\r\n            longitude: place.longitude,\r\n            county: place.county,\r\n            municipality: place.municipality,\r\n        });\r\n\r\n        setSources(place.sources);\r\n        setSelectedTags(place.tags);\r\n        setSelectedCategories(place.categories);\r\n        if (place.schedule.length > 0) {\r\n            setScheduleData([...place.schedule]);\r\n            setIsScheduleEnabled(true)\r\n        } else setIsScheduleEnabled(false);\r\n\r\n        setAllSelectedParkingData(place.parking);\r\n        setPhotos(place.photos);\r\n        setFirstTimeLoading(false)\r\n    }\r\n\r\n    function formFeedback(success, message = Strings.SNACKBAR_ERROR) {\r\n        addConfig(success, message);\r\n        setIsLoading(false)\r\n    }\r\n\r\n    function saveChanges() {\r\n        if (placeId === undefined) {\r\n            addAlertConfig(Strings.DIALOG_PLACE_INSERT_TITLE, Strings.DIALOG_PLACE_INSERT, [{\r\n                name: \"Insert\", action: () => {\r\n                    setIsLoading(true);\r\n                    insertBasicPlaceInfo()\r\n                }\r\n            }])\r\n        } else {\r\n            addAlertConfig(Strings.DIALOG_PLACE_UPDATE_TITLE, Strings.DIALOG_PLACE_UPDATE, [{\r\n                name: \"save and publish\", action: () => {\r\n                    let plc = Object.assign({}, placeInfo, {});\r\n                    plc.isPublic = 1;\r\n                    setPlaceInfo(plc);\r\n                    setIsLoading(true);\r\n                    updateAll()\r\n                }\r\n            }, {\r\n                name: \"save\", action: () => {\r\n                    setIsLoading(true);\r\n                    updateAll()\r\n                }\r\n            }])\r\n        }\r\n    }\r\n\r\n    function updateAll() {\r\n        Promise.all([\r\n            updatePlaceInfo(),\r\n            updateTagsData(placeId),\r\n            updatePhotoData(placeId),\r\n            updateCategoriesData(placeId),\r\n            updateParkingData(placeId),\r\n            updateSchedule(placeId),\r\n            updateSources(placeId)\r\n        ]).then(response => {\r\n            formFeedback(true, Strings.SNACKBAR_CHANGES_SAVED);\r\n        }).catch(err => {\r\n            formFeedback(false)\r\n        })\r\n    }\r\n\r\n    function updatePlaceInfo() {\r\n        API.Places.updatePlace(formPlaceInfo()).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n\r\n    }\r\n\r\n    function insertBasicPlaceInfo() {\r\n        API.Places.insertPlace(formPlaceInfo()).then(placeId => {\r\n            setPlaceId(placeId)\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    function updateParkingData(id) {\r\n        API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\" + id).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    function updateTagsData(id) {\r\n        API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\" + id).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    function updateSources(id) {\r\n        API.SourcePlace.updateSourcesForPlace(sources, \"?p=\" + id).then(response => {\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n\r\n    function updateCategoriesData(id) {\r\n        API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\" + id).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    function updatePhotoData(id) {\r\n        API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\" + id).then(response => {\r\n\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n\r\n    function updateSchedule(id) {\r\n        API.Schedule.updateScheduleForPlace(isScheduleEnabled ? scheduleData : [], \"?id=\" + id).then(response => {\r\n        }).catch(er => {\r\n        })\r\n\r\n    }\r\n\r\n    function formPlaceInfo() {\r\n        let d = Object.assign(placeInfo, locationData);\r\n        return d\r\n    }\r\n\r\n\r\n    function publishPlace() {\r\n        addAlertConfig(Strings.DIALOG_PLACE_PUBLISH_TITLE, placeInfo['isPublic'] ? Strings.DIALOG_PLACE_UNPUBLISH_MESSAGE : Strings.DIALOG_PLACE_PUBLISH_MESSAGE,\r\n            [{\r\n                name: \"Agree\", action: () => {\r\n                    let obj = Object.assign({}, placeInfo, {});\r\n                    obj['isPublic'] = !obj['isPublic'];\r\n                    setPlaceInfo(obj);\r\n                }\r\n            }])\r\n\r\n    }\r\n\r\n    function verifyPlace() {\r\n        addAlertConfig(Strings.DIALOG_PLACE_VERIFY_TITLE, Strings.DIALOG_PLACE_VERIFY_MESSAGE, [{\r\n            name: \"agree\", action: () => {\r\n                let obj = Object.assign({}, placeInfo, {});\r\n                obj['isPublic'] = 1;\r\n                obj['isVerified'] = 1;\r\n                setPlaceInfo(obj);\r\n            }\r\n        }])\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            {firstTimeLoading ? <div className={classes.loader}><CircularProgress/></div> :\r\n                <div className={classes.content}>\r\n\r\n\r\n                    <Paper elevation={4} className={classes.paperContent}>\r\n                        <BasicPlaceInfo\r\n                            error={error}\r\n                            setError={setError}\r\n                            checkErrors={checkErrors}\r\n                            placeInfo={placeInfo}\r\n                            setPlaceInfo={setPlaceInfo}\r\n                            selectedSources={sources}\r\n                            setSelectedSources={setSources}\r\n                        />\r\n\r\n                    </Paper>\r\n\r\n                    {placeId !== undefined ?\r\n                        <Paper elevation={4} className={classes.paperContent}>\r\n                            <Reviews\r\n                                placeInfo={placeInfo}\r\n                            />\r\n                        </Paper>\r\n                        : null}\r\n\r\n\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <PhotosInfo\r\n                        photos={photos}\r\n                        setPhotos={setPhotos}\r\n                    />\r\n                </Paper>\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <PlaceLocation\r\n                        placeInfo={placeInfo}\r\n                        locationData={locationData}\r\n                        setParkingLocation={setParkingMarkerData}\r\n                        setLocationData={setLocationData}/>\r\n                </Paper>\r\n            <Paper elevation = {4} className={classes.paperContent}>\r\n                <ParkingLocation\r\n                    placeInfo={placeInfo}\r\n                    allSelectedParkingData={allSelectedParkingData}\r\n                    setAllSelectedParkingData={setAllSelectedParkingData}\r\n                    locationData={parkingMarkerData}\r\n                    setLocationData={setParkingMarkerData}/>\r\n            </Paper>\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <PlaceDiscovery\r\n                        selectedTags={selectedTags}\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedCategories={selectedCategories}\r\n                        setSelectedCategories={setSelectedCategories}/>\r\n                </Paper>\r\n\r\n                <Paper elevation = {4} className={classes.paperContent}>\r\n                    <SchedulesWrapper isScheduleEnabled={isScheduleEnabled} setIsScheduleEnabled={setIsScheduleEnabled} setScheduleData={setScheduleData} scheduleData={scheduleData}/>\r\n                </Paper>\r\n            </div> }\r\n\r\n\r\n            {isLoading ? <LinearProgress/> : null}\r\n\r\n            <Paper elevation={1} className={classes.bottom}>\r\n\r\n                {\r\n                    placeInfo['isVerified'] === false && placeId !== undefined ?\r\n                        <ColorButton\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                                verifyPlace()\r\n                            }}\r\n                            className={classes.button}\r\n                        >\r\n                            Verify place\r\n                        </ColorButton>\r\n                        :\r\n                        <FormControlLabel\r\n                            control={<Switch checked={placeInfo['isPublic']} onChange={() => {\r\n                                publishPlace()\r\n                            }\r\n                            } name=\"isPublic\"/>}\r\n                            label=\"Make this place public\"\r\n                        />}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => saveChanges()}\r\n                    className={classes.button}>\r\n                    Save\r\n                </Button>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => addToRecommendation()}\r\n                    className={classes.button}>\r\n                    Add to recommendation\r\n                </Button>\r\n\r\n                <RecommendationListDialog\r\n                    open={showRecommendationDialog}\r\n                    setOpen={setShowRecommendationDialog}\r\n                    objectId={placeInfo.placeId}\r\n                    type={RecommendationType.place}\r\n                />\r\n\r\n            </Paper>\r\n        </div>)\r\n\r\n}\r\n\r\nAddPlace.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AddPlace)\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport {debounce} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: theme.spacing(2)\r\n        // width: 400,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    divider: {\r\n        // height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function SearchInputComponent({hint, searchCallback}) {\r\n    const classes = useStyles();\r\n\r\n    const debouncedInput = (event) => {\r\n        searchCallback(event.target.value)\r\n    }\r\n\r\n    const debounceInput = debounce(event => debouncedInput(event), 500)\r\n\r\n    const handleInput = (event) => {\r\n        event.persist()\r\n        debounceInput(event)\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder={hint}\r\n                inputProps={{ 'aria-label': hint }}\r\n                onChange={handleInput}\r\n            />\r\n            <IconButton className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n        </Paper>\r\n    );\r\n}","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\"\r\nimport ApiPlaceCard from \"../components/ApiPlaceCard\";\r\nimport API from \"../Networking/API\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Masonry from \"react-masonry-component\";\r\nimport SearchInputComponent from \"../components/SearchInputComponent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        overflow: 'scroll',\r\n        width: \"100%\",\r\n        padding: theme.spacing(1),\r\n        height:`calc(100vh - 64px)`,\r\n        paddingTop: \"9vh\",\r\n    },\r\n    topBar: {\r\n        height: \"8vh\",\r\n        position: \"absolute\",\r\n        width: \"60%\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        left: 0,\r\n        right: 0,\r\n        justifyContent: \"center\",\r\n        zIndex: 1\r\n    },\r\n    searchBox: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    placeApiCard: {\r\n        [theme.breakpoints.down('lg')]: {\r\n            width: \"95%\",\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: \"28vw\",\r\n        },\r\n        // minWidth: \"400px\",\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nfunction ApiPlaces({classes}){\r\n\r\n    const [data, setData] = useState([]);\r\n    const [isLoadingData, setIsLoadingData] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const loadDataFunc = (query) => {\r\n        setData([])\r\n        setIsLoadingData(true)\r\n        API.Places.searchApiPlaces(\"?keyword=\" + encodeURI(query)).then(response => {\r\n            setData([...response])\r\n        }).catch(error => {\r\n            addConfig(false, \"The request did not go through.\")\r\n        }).finally(() => {\r\n            setIsLoadingData(false)\r\n        })\r\n    }\r\n\r\n    const handleSearch = (word) => {\r\n        if(word.length > 3)\r\n            loadDataFunc(word)\r\n    }\r\n\r\n    return(\r\n        <div style={{position: \"relative\"}}>\r\n            <div className = {classes.topBar}>\r\n                <SearchInputComponent searchCallback={handleSearch} hint=\"Search api places\" style={classes.searchBox} />\r\n            </div>\r\n\r\n            <div className={classes.root}>\r\n                <Masonry\r\n                    style={{margin: \"0 auto\"}}\r\n                    elementType={'div'} // default 'div'\r\n                    options={{\r\n                        isFitWidth: true\r\n                    }} // default {}\r\n                    disableImagesLoaded={false} // default false\r\n                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\r\n                >\r\n\r\n                    {data.map(item => {\r\n                        return <ApiPlaceCard classes ={{ root: classes.placeApiCard}} key={item.placeId} placeData = {item} style={{boxSizing: 'border-box'}}/>\r\n                    })}\r\n\r\n                    {\r\n                        data.length === 0 && !isLoadingData &&\r\n                        <Typography variant=\"subtitle1\">No results</Typography>\r\n                    }\r\n                    {\r\n                        isLoadingData &&\r\n                        <CircularProgress  />\r\n                    }\r\n\r\n                </Masonry>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ApiPlaces)","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {'Copyright © '}\r\n            Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: '100vh',\r\n    },\r\n    main: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: 'auto',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n    },\r\n}));\r\n\r\nexport default function NotFoundPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\r\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\r\n                    Page not found\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    {'Try something else'}\r\n                </Typography>\r\n            </Container>\r\n            <footer className={classes.footer}>\r\n                <Container maxWidth=\"sm\">\r\n                    <Copyright />\r\n                </Container>\r\n            </footer>\r\n        </div>\r\n    );\r\n}","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst styles = theme => ({\r\n    cardRoot: {\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            display: 'flex',\r\n            // alignItems: \"flex-start\"\r\n        },\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 5\r\n    },\r\n    content: {\r\n        flex: '1 0 auto',\r\n    },\r\n    cover: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            height: \"200px\",\r\n        },\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            flex: 1,\r\n            height: \"auto\",\r\n        },\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\"\r\n    },\r\n    addParkingWrapper: {\r\n        display: \"inline-block\"\r\n    }\r\n})\r\n\r\n\r\nfunction TourPlaceComponent({classes, elementData, removeCallback, addTransportCallback, displayNoTransportWarning}) {\r\n\r\n    function truncateText(text) {\r\n        if (text == null)\r\n            return \"\"\r\n        if (text.length > 500) {\r\n            return text.substring(0, 500) + \"...\";\r\n        } else {\r\n            return text\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card className={classes.cardRoot}>\r\n\r\n                {elementData.data.details.photos != null && elementData.data.details.photos.length > 0 &&\r\n                <CardMedia\r\n                    className={classes.cover}\r\n                    image={elementData.data.details.photos[0].url}\r\n\r\n                />\r\n                }\r\n\r\n                <div className={classes.details}>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                            {elementData.data.details.name}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                            {truncateText(elementData.data.details.description)}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </div>\r\n                <CardHeader\r\n                    action={\r\n                        <IconButton aria-label=\"remove\" onClick={() => removeCallback(elementData)}>\r\n                            <RemoveIcon/>\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </Card>\r\n\r\n            {displayNoTransportWarning &&\r\n            <Alert severity=\"error\">No transport from this place specified</Alert>}\r\n\r\n            <div className={classes.addParkingWrapper}>\r\n                <Button style={{display: \"inline\"}} color=\"secondary\" onClick={() => addTransportCallback(elementData)}>\r\n                    <AddIcon/>\r\n                </Button>\r\n                <Typography style={{display: \"inline\"}} variant=\"subtitle1\">\r\n                    Add transport from this place\r\n                </Typography>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nTourPlaceComponent.propTypes = {\r\n    elementData: PropTypes.object.isRequired,\r\n    removeCallback: PropTypes.func.isRequired,\r\n    addTransportCallback: PropTypes.func.isRequired,\r\n    displayNoTransportWarning: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles)(TourPlaceComponent)\r\n","import React, { useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MetroIcon from '@material-ui/icons/DirectionsTransit';\r\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\r\nimport CarIcon from '@material-ui/icons/DriveEta';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\nimport FlightIcon from '@material-ui/icons/Flight';\r\nimport TramIcon from '@material-ui/icons/Tram';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\"\r\n    },\r\n    transportSelectWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    transportSelect: {\r\n        marginLeft: theme.spacing(1),\r\n        width: \"100px\"\r\n    }\r\n});\r\n\r\nconst transportTypes = [\r\n    {\r\n        icon: <DirectionsWalkIcon/>,\r\n        label: \"Walk\"\r\n    },\r\n    {\r\n        icon: <MetroIcon/>,\r\n        label: \"Metro\"\r\n    },\r\n    {\r\n        icon: <DirectionsBikeIcon/>,\r\n        label: \"Bike\"\r\n    },\r\n    {\r\n        icon: <DirectionsBusIcon/>,\r\n        label: \"Bus\"\r\n    },\r\n    {\r\n        icon: <CarIcon/>,\r\n        label: \"Car\"\r\n    },\r\n    {\r\n        icon: <TrainIcon/>,\r\n        label: \"Train\"\r\n    },\r\n    {\r\n        icon: <FlightIcon/>,\r\n        label: \"Plane\"\r\n    },\r\n    {\r\n        icon: <TramIcon/>,\r\n        label: \"Tram\"\r\n    }\r\n]\r\n\r\nfunction TransportItem({classes, transportId, transportChangeCallback, transportRemoveCallback}) {\r\n\r\n    const [currentTransport, setCurrentTransport] = useState(transportId == null ? 0 : transportId)\r\n\r\n    const handleTransportChange = (e) => {\r\n        setCurrentTransport(e.target.value)\r\n        transportChangeCallback({transport: parseInt(e.target.value)})\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MoreVertIcon/>\r\n            <div className={classes.transportSelectWrapper}>\r\n                {transportTypes[currentTransport].icon}\r\n                <FormControl className={classes.transportSelect} >\r\n                    <NativeSelect\r\n                        value={currentTransport}\r\n                        onChange={handleTransportChange}\r\n                    >\r\n                        {transportTypes.map((item, index) => {\r\n                            return <option key={index} value={index}> {item.label}</option>\r\n                        })}\r\n                    </NativeSelect>\r\n                </FormControl>\r\n                <IconButton aria-label=\"remove\" onClick={() => transportRemoveCallback()}>\r\n                    <RemoveIcon />\r\n                </IconButton>\r\n            </div>\r\n            <MoreVertIcon/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TransportItem)","import {withStyles} from \"@material-ui/core/styles\";\r\nimport TourPlaceComponent from \"./TourPlaceComponent\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ElementType} from \"./Tour\";\r\nimport { SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport TransportItem from \"./TransportItem\";\r\nimport shortid from 'shortid';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst styles = theme => ({\r\n    tourPlaceComponent: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\",\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst TourPlaceSortable = SortableElement(({displayNoTransportWarning, elementData, removePlaceCallback, classes, addTransportCallback}) => (\r\n    <div>\r\n        <TourPlaceComponent removeCallback={removePlaceCallback} classes={{root: classes.tourPlaceComponent}}\r\n                            addTransportCallback={addTransportCallback} elementData={elementData}\r\n                            displayNoTransportWarning={displayNoTransportWarning}/>\r\n    </div>\r\n));\r\nconst TransportItemSortable = SortableElement(({transportId, transportChangeCallback, transportRemoveCallback}) => (\r\n    <div>\r\n        <TransportItem transportId={transportId} transportRemoveCallback={transportRemoveCallback} transportChangeCallback={transportChangeCallback}/>\r\n    </div>\r\n));\r\n\r\nconst SortableList = SortableContainer(({currentDay, removeElementCallback, tourInfo, classes, addTransportCallback, transportChangeCallback}) => {\r\n\r\n    const shouldDisplayNoTransportWarning = (index) => {\r\n        let elements = tourInfo.days[currentDay].tour\r\n        return ((elements.length -1 ) > index) && elements[index + 1].type !== ElementType.transport\r\n    }\r\n\r\n    return (\r\n\r\n        <ul>\r\n            {tourInfo.days[currentDay].tour.map((item, index) => {\r\n\r\n                switch (item.type) {\r\n                    case ElementType.place:\r\n                        return <TourPlaceSortable key={item.data.details.placeId} index={index}\r\n                                                  addTransportCallback={addTransportCallback} elementData={item}\r\n                                                  classes={classes}\r\n                                                  displayNoTransportWarning={shouldDisplayNoTransportWarning(index)}\r\n                                                  removePlaceCallback={() => removeElementCallback(index)}/>\r\n                    case ElementType.transport:\r\n                        return <TransportItemSortable key={item.data.elementIdentifier} index={index}\r\n                                                      transportId={item.data.transport}\r\n                                                      transportRemoveCallback = {() => removeElementCallback(index)}\r\n                                                      transportChangeCallback={(transport) => transportChangeCallback(index, transport)}/>\r\n                }\r\n            })}\r\n        </ul>\r\n    )\r\n});\r\n\r\nfunction TourPlacesWrapper({classes, tourInfo, tourInfoReducer, currentDay, errorInfo, setErrorInfo}) {\r\n\r\n    const removeElementCallback = (index) => {\r\n        tourInfoReducer({\r\n            type: 'REMOVE_ELEMENT',\r\n            day: currentDay,\r\n            index: index\r\n        })\r\n    };\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        tourInfoReducer({\r\n            type: 'MOVE_ELEMENT',\r\n            day: currentDay,\r\n            oldIndex: oldIndex,\r\n            newIndex: newIndex\r\n        })\r\n    }\r\n\r\n    const handleTransportChange = (index, data) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_ELEMENT',\r\n            day: currentDay,\r\n            index: index,\r\n            data: data\r\n        })\r\n    }\r\n\r\n    const addTransportCallback = (details) => {\r\n        tourInfoReducer({\r\n            type: 'INSERT_TRANSPORT_FOR_PLACE',\r\n            placeId: details.data.details.placeId,\r\n            day: currentDay,\r\n            data: {type: ElementType.transport, data: {transport: 0, elementIdentifier: shortid.generate()}}\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {tourInfo.days[currentDay].tour.length === 0 &&\r\n            <Alert severity=\"warning\">You have not added any places for the currently selected day.</Alert>}\r\n            <SortableList\r\n                pressDelay={200}\r\n                disableAutoscroll={false}\r\n                currentDay={currentDay}\r\n                tourInfo={tourInfo}\r\n                transportChangeCallback={handleTransportChange}\r\n                onSortEnd={onSortEnd}\r\n                classes={classes}\r\n                addTransportCallback={addTransportCallback}\r\n                removeElementCallback={removeElementCallback}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nTourPlacesWrapper.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourPlacesWrapper)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport SearchInputComponent from \"../SearchInputComponent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\nimport DnsIcon from \"@material-ui/icons/Dns\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport API from \"../../Networking/API\";\r\n\r\nconst styles = theme => ({\r\n    searchInputComponent: {\r\n\r\n    },\r\n    placeCard: {\r\n        margin: theme.spacing(1, 8, 1, 8),\r\n    },\r\n})\r\n\r\n\r\nfunction PlaceSearch({classes, addPlaceCallback, apiPlacesFound, setApiPlacesFound, localPlacesFound, setLocalPlacesFound}) {\r\n\r\n    // const [apiPlacesLoading, setApiPlacesLoading] = useState(false)\r\n    const [localPlacesLoading, setLocalPlacesLoading] = useState(false)\r\n\r\n    const placeType = {\r\n        local: 0,\r\n        api: 1\r\n    }\r\n\r\n    const generatePlaceCards = () => {\r\n        let genProps = (placeInfo, type) => {\r\n            return {\r\n                classes: {root: classes.placeCard},\r\n                key: placeInfo.placeId,\r\n                renderActionArea: () => {\r\n                    return (\r\n                        <div>\r\n                            <Button color=\"primary\" onClick={() => addPlaceCallback(placeInfo, type)}>\r\n                                <AddIcon/>\r\n                            </Button>\r\n                            <Tooltip title={type === placeType.local ? \"This place is from our database\" : \"This place is from API\"} aria-label=\"add\">\r\n                                {type === placeType.local ? <LocalLibraryIcon/> : <DnsIcon/>}\r\n                            </Tooltip>\r\n                        </div>\r\n                    )\r\n                },\r\n                placeData : placeInfo\r\n            }\r\n        }\r\n\r\n        let mappedPlaces = []\r\n        localPlacesFound.forEach(item => {\r\n            mappedPlaces.push(<ApiPlaceCard {...genProps(item, placeType.local)}/>)\r\n        })\r\n        // apiPlacesFound.forEach(item => {\r\n        //     mappedPlaces.push( <ApiPlaceCard {...genProps(item, placeType.api)}/>)\r\n        // })\r\n        return mappedPlaces\r\n    }\r\n\r\n    const searchCallback = (keyword) => {\r\n        if(keyword.length < 3)\r\n            return;\r\n        setLocalPlacesFound([])\r\n        setApiPlacesFound([])\r\n        // setApiPlacesLoading(true)\r\n        setLocalPlacesLoading(true)\r\n        API.Places.getAllPlacesAdmin(\"?keyword=\" + keyword).then(response=>{\r\n            setLocalPlacesFound(response.list)\r\n            setLocalPlacesLoading(false)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n\r\n        // API.Places.searchApiPlaces(\"?keyword=\" + keyword).then(response => {\r\n        //     setApiPlacesFound(response)\r\n        //     setApiPlacesLoading(false)\r\n        // }).catch(error => {\r\n        //     console.log(error)\r\n        // })\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <SearchInputComponent hint=\"Search for a place\" searchCallback={searchCallback} className={classes.searchInputComponent}/>\r\n            {(localPlacesLoading) ?\r\n                <CircularProgress  /> :\r\n                <React.Fragment>\r\n                    {generatePlaceCards()}\r\n                </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PlaceSearch)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    radioButtonArea: {\r\n    },\r\n    cardArea: {\r\n        flex: 1,\r\n        display: \"flex\"\r\n    },\r\n    content: {\r\n        flex: '1 1 auto',\r\n    },\r\n    descriptionInput: {\r\n        marginTop: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    },\r\n    headerWrap: {}\r\n})\r\n\r\nfunction DayCard({classes, onSelectCallback, index, currentDay, tourInfoReducer, description, handleRemoveDay}) {\r\n\r\n    const updateDescriptionGlobally = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_DAY',\r\n            day: index,\r\n            data: {\r\n                description: e\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.radioButtonArea}>\r\n                <Radio checked={index === currentDay} onChange={(e) => {\r\n                    onSelectCallback(index)\r\n                }}/>\r\n            </div>\r\n            <Card className={classes.cardArea}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        Day {index + 1}\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                        className={classes.descriptionInput}\r\n                        multiline\r\n                        label=\"Description\"\r\n                        value={description}\r\n                        variant=\"outlined\"\r\n                        onChange={(e) => {\r\n                            updateDescriptionGlobally(e.target.value)\r\n                        }}\r\n                    />\r\n                </CardContent>\r\n                <CardHeader\r\n                    action={\r\n                        <Button startIcon={<RemoveIcon/>} aria-label=\"remove\" onClick={() => handleRemoveDay(index)}/>\r\n                    }\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nDayCard.propTypes = {\r\n    onSelectCallback: PropTypes.func.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DayCard)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport DayCard from \"./DayCard\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport shortid from 'shortid';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    addDayButton: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    footerWrapper: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n})\r\n\r\nconst DayCardSortable = SortableElement(({dayInfo, day, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => (\r\n    <DayCard\r\n        description={dayInfo.description}\r\n        currentDay={currentDay}\r\n        index={day}\r\n        handleRemoveDay={removeDayCallback}\r\n        onSelectCallback={onSelectCallback}\r\n        tourInfoReducer={tourInfoReducer}/>\r\n));\r\n\r\nconst SortableList = SortableContainer(({elements, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => {\r\n\r\n    return (\r\n        <ul style={{padding: \"0px\"}}>\r\n            {elements.map((item, index) => {\r\n                return <DayCardSortable\r\n                    currentDay={currentDay}\r\n                    day={index}\r\n                    index={index}\r\n                    removeDayCallback={removeDayCallback}\r\n                    key={item.elementIdentifier}\r\n                    dayInfo={item}\r\n                    onSelectCallback={onSelectCallback}\r\n                    tourInfoReducer={tourInfoReducer}/>\r\n            })}\r\n        </ul>\r\n    );\r\n});\r\n\r\nfunction DaysWrapper({classes, currentDay, setCurrentDay, tourInfo, tourInfoReducer}) {\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    const handleSelect = (index) => {\r\n        setCurrentDay(index)\r\n    }\r\n\r\n    const addDayHandler = () => {\r\n        tourInfoReducer({\r\n            type: 'ADD_DAY',\r\n            data: {\r\n                description: \"\",\r\n                elementIdentifier: shortid.generate(),\r\n                tour: []\r\n            }\r\n        })\r\n    }\r\n\r\n    const removeDay = (day) => {\r\n        tourInfoReducer({\r\n                type: 'REMOVE_DAY',\r\n                day: day,\r\n            }\r\n        )\r\n        if(day === currentDay)\r\n            setCurrentDay(day - 1)\r\n    }\r\n\r\n    const removeDayCallback = (day) => {\r\n        if(tourInfo.days.length === 1){\r\n            addAlertConfig(\"Warning\", \"The tour has to have at least one day\", [])\r\n        }else{\r\n            if(tourInfo.days[day].tour.length > 0){ //This day has at least one place/transport added to it\r\n                addAlertConfig(\"Warning\", \"Are you sure you want to remove this day?\",[{name: \"yes\", action: ()=>{\r\n                    removeDay(day)\r\n                    }}],() => {\r\n                })\r\n            }else removeDay(day)\r\n        }\r\n    }\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        tourInfoReducer({\r\n            type: 'MOVE_DAY',\r\n            oldIndex: oldIndex,\r\n            newIndex: newIndex\r\n        })\r\n        setCurrentDay(newIndex)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <SortableList\r\n                pressDelay={200}\r\n                disableAutoscroll={false}\r\n                elements={tourInfo.days}\r\n                currentDay={currentDay}\r\n                onSortEnd={onSortEnd}\r\n                removeDayCallback={removeDayCallback}\r\n                onSelectCallback={handleSelect}\r\n                tourInfoReducer={tourInfoReducer}/>\r\n            <div className={classes.footerWrapper}>\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    className={classes.addDayButton}\r\n                    onClick={addDayHandler}\r\n                    startIcon={<AddIcon/>}>\r\n                    Add another day\r\n                </Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nDaysWrapper.propTypes = {\r\n    setCurrentDay: PropTypes.func.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    tourInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DaysWrapper)\r\n","import {arrayMove} from \"react-sortable-hoc\";\r\nimport {ElementType} from \"./Tour\";\r\n\r\nexport default function TourDataReducer(state, action) {\r\n\r\n    let days = []\r\n\r\n    switch (action.type) {\r\n        case 'ADD_ELEMENT':\r\n            if(state.days !== null && action.data.type === ElementType.place && state.days.some(day => day.tour !== null && day.tour.some(place => place.type === ElementType.place && place.data.details.placeId === action.data.data.details.placeId))){\r\n                if(action.onError !== null && action.onError !== undefined){\r\n                    action.onError()\r\n                }\r\n                return state\r\n            }\r\n\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    days.push({\r\n                        ...item,\r\n                        tour: [\r\n                            ...item.tour,\r\n                            action.data\r\n                        ]\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'UPDATE_ELEMENT':\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    let tour = item.tour\r\n                    tour[action.index] = {...tour[action.index], data: {...tour[action.index].data, ...action.data}}\r\n                    days.push({\r\n                        ...item,\r\n                        tour: tour\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'INSERT_TRANSPORT_FOR_PLACE':\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    let tour = item.tour\r\n                    let index = tour.findIndex((item) => item.type === ElementType.place && item.data.details.placeId === action.placeId)\r\n                    tour.splice(index + 1, 0, action.data)\r\n                    days.push({\r\n                        ...item,\r\n                        tour: tour\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'ADD_DAY':\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...state.days,\r\n                    action.data\r\n                ]\r\n            }\r\n        case 'MOVE_DAY':\r\n            return {\r\n                ...state,\r\n                days: arrayMove(state.days, action.oldIndex, action.newIndex)\r\n            }\r\n        case 'MOVE_ELEMENT':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day)\r\n                    return {...item, tour: arrayMove(item.tour, action.oldIndex, action.newIndex)}\r\n                else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'UPDATE_DAY':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day) {\r\n                    return {...item, ...action.data}\r\n                } else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'REMOVE_ELEMENT':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day)\r\n                    return {...item, tour: item.tour.filter((value, index) => index !== action.index)}\r\n                else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'REMOVE_DAY':\r\n            days = state.days.filter((item, index) => index !== action.day)\r\n            return {\r\n                ...state,\r\n                days: days\r\n            }\r\n        case 'UPDATE_TOUR':\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case 'SET_ALL':\r\n            return action.data\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PropTypes from \"prop-types\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(4),\r\n    },\r\n    nameField: {\r\n        width: \"100%\"\r\n    },\r\n    descriptionField: {\r\n        marginTop: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    },\r\n    publicityDiv: {\r\n        width: \"100%\",\r\n\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2),\r\n        color: \"#ffffff\"\r\n    },\r\n});\r\n\r\nfunction TourInfoComponent({classes, tourInfo, tourInfoReducer, errorInfo, setErrorInfo, availableCategories, selectedCategories, setSelectedCategories, setAvailableCategories, tourId}) {\r\n\r\n    const handleDescriptionChange = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data: {description: e.target.value}\r\n        })\r\n    }\r\n    const handleTitleChange = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {name: e.target.value}\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(tourInfo.name === \"\")\r\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: true}}})\r\n        else\r\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: false}}})\r\n    }, [tourInfo.name])\r\n\r\n    let shouldDisplayTitleMissingError = errorInfo.showErrors && errorInfo.errors.titleMissing\r\n\r\n    const verifyTour = () => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {isVerified: true}\r\n        })\r\n    }\r\n\r\n    const publishTour = () => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {isPublished: !tourInfo.isPublished}\r\n        })\r\n\r\n    }\r\n\r\n    const ColorButton = withStyles((theme) => ({\r\n        root: {\r\n            color: \"white\",\r\n            backgroundColor: green[500],\r\n            '&:hover': {\r\n                backgroundColor: green[700],\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField label=\"Tour name\"\r\n                       variant=\"outlined\"\r\n                       error={shouldDisplayTitleMissingError}\r\n                       helperText={shouldDisplayTitleMissingError ? \"Please provide a title for your tour\" : \"\"}\r\n                       value={tourInfo.name}\r\n                       onChange={handleTitleChange}\r\n                       defaultValue=\"My tour name\" className={classes.nameField}/>\r\n            <TextField\r\n                className={classes.descriptionField}\r\n                multiline\r\n                label=\"Description\"\r\n                value={tourInfo.description}\r\n                variant=\"outlined\"\r\n                onChange={handleDescriptionChange}\r\n            />\r\n            <br/><br/>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n                Categories for this tour\r\n            </Typography>\r\n            <AutoCompleteChip\r\n                options={availableCategories}\r\n                id=\"categoryId\"\r\n                setOptions={setAvailableCategories}\r\n                setSelectedOptions={setSelectedCategories}\r\n                selectedOptions={selectedCategories}\r\n            />\r\n\r\n            {tourId !== undefined &&\r\n                <div className={classes.publicityDiv}>\r\n                    {tourInfo.isVerified ?\r\n                        <div>\r\n                            <FormControlLabel\r\n                                control={<Switch checked={tourInfo.isPublished} onChange={publishTour} name=\"isPublic\"/>}\r\n                                label=\"Make this tour public?\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                    <ColorButton\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={verifyTour}\r\n                        className={classes.button}\r\n                    >\r\n                        Verify tour\r\n                    </ColorButton>\r\n                    }\r\n\r\n\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTourInfoComponent.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    availableTags: PropTypes.array.isRequired,\r\n    setAvailableTags: PropTypes.func.isRequired,\r\n    selectedTags: PropTypes.array.isRequired,\r\n    setSelectedTags: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourInfoComponent)","import React, {useContext, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer} from \"react-google-maps\"\r\nimport {ElementType} from \"./Tour\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FilterBlock from \"../add_place_components/FilterBlock\";\r\nimport CustomControlsManager from \"../maps/CustomControlsManager\";\r\nimport API from \"../../Networking/API\";\r\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst google = window.google;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(4),\r\n    }, cover: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            height: \"200px\",\r\n        },\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            flex: 1,\r\n            height: \"auto\",\r\n        },\r\n    },\r\n    largeIcon: {\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n    },\r\n});\r\n\r\n\r\n/**\r\n * Tours map component\r\n * @type {React.ComponentClass<WithGoogleMapProps>}\r\n */\r\nconst MyMapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        ref={props.refMap}\r\n        defaultZoom={8}\r\n        defaultCenter={{lat: 55.2983804, lng: 23.9132164}}>\r\n\r\n        {props.children}\r\n\r\n    </GoogleMap>\r\n);\r\n\r\n\r\nfunction TourMap({classes, tourInfo, currentDay, addPlace, removePlace}) {\r\n\r\n    const [directions, setDirection] = useState();\r\n\r\n    const [infoWindows, setInfoWindows] = useState([]);\r\n    const [directionPlaces, setDirectionPlaces] = useState([])\r\n\r\n\r\n    const [places, setPlaces] = useState([]);\r\n    const [placesInfoWindows, setPlacesInfoWindows] = useState([]);\r\n\r\n    const [loadingArea, setLoadingArea] = useState(false);\r\n    const refMap = useRef(null);\r\n\r\n    const {filterQuery} = useContext(PlacesFilterContext);\r\n\r\n    const constructPlaceData = () => {\r\n        let p = tourInfo.days[currentDay].tour.filter(item => item.type === ElementType.place);\r\n        let places = [];\r\n        p.forEach(item => {\r\n            let placeId = item.data.details.placeId;\r\n            let lat = item.data.details.latitude;\r\n            let lng = item.data.details.longitude;\r\n            let name = item.data.details.name;\r\n            let photos = item.data.details.photos;\r\n            places.push({placeId: placeId, latitude: lat, longitude: lng, name: name, photo: photos.length > 0 ? photos[0].url : null});\r\n        });\r\n        setInfoWindows(Array(places.length).fill(false))\r\n        setDirectionPlaces(places);\r\n        return places\r\n    };\r\n\r\n    useEffect(() => {\r\n        const places = constructPlaceData();\r\n        if(places.length>1){\r\n            const waypoints = places.map(p =>({\r\n                location: {lat: p.latitude, lng:p.longitude},\r\n                stopover: true\r\n            }));\r\n\r\n            const origin = waypoints.shift().location;\r\n            let destination = null;\r\n\r\n            if (waypoints.length > 0)\r\n                destination = waypoints.pop().location;\r\n            else\r\n                destination = origin;\r\n\r\n            const directionsService = new google.maps.DirectionsService();\r\n\r\n            directionsService.route(\r\n                {\r\n                    origin: origin,\r\n                    destination: destination,\r\n                    travelMode: google.maps.TravelMode.DRIVING,\r\n                    waypoints: waypoints\r\n                },\r\n                (result, status) => {\r\n                    if (status === google.maps.DirectionsStatus.OK) {\r\n                        setDirection(result)\r\n                    } else {\r\n                        alert(status);\r\n                    }\r\n                }\r\n            );\r\n        } else {\r\n            setDirection(null)\r\n        }\r\n    }, [currentDay, tourInfo.days]);\r\n\r\n\r\n    function fetchPlaces(){\r\n        console.log(\"Getting all places...\", refMap.current.getCenter().lat())\r\n        getAllPlaces(filterQuery + \"&p=\" + 0 + \"&s=\" + 100 + \"&l=\" + refMap.current.getCenter().lat() + \",\" + refMap.current.getCenter().lng() + \"range=\" + 50)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!loadingArea){\r\n            if(refMap.current != null){\r\n                fetchPlaces()\r\n            }\r\n        }\r\n    }, [filterQuery]);\r\n\r\n    function getAllPlaces(query) {\r\n        setLoadingArea(true);\r\n        API.Places.getAllPlacesAdmin(query).then(locations => {\r\n            setPlacesInfoWindows(Array(locations.list.length).fill(false));\r\n            setPlaces(locations.list)\r\n            setLoadingArea(false)\r\n        }).catch(err => {\r\n            console.log(err);\r\n            setLoadingArea(false)\r\n        })\r\n    }\r\n\r\n    function addPlaceToTourDay(place) {\r\n        setPlacesInfoWindows(Array(places.length).fill(false));\r\n        addPlace(place, ElementType.place)\r\n    }\r\n\r\n    function removePlaceFromTourDay(place) {\r\n        tourInfo.days[currentDay].tour.map((row, index)=>{\r\n            if(row.type === ElementType.place){\r\n                if(row.data.details.placeId === place.placeId){\r\n                    removePlace(index)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Renders places markers on the map\r\n     * @return {*[]}\r\n     */\r\n    function PlacesMarkers() {\r\n        return places.map((location, i) => {\r\n            const latitude = parseFloat(location.latitude);\r\n            const longitude = parseFloat(location.longitude);\r\n            return <Marker\r\n                zIndex={1}\r\n                key={location.placeId}\r\n                position={{lat: latitude, lng: longitude}}\r\n                onClick={() => {\r\n                    let markers = Object.assign({}, placesInfoWindows);\r\n                    markers[i] = true;\r\n                    setPlacesInfoWindows(markers)\r\n                }}\r\n            >\r\n                {placesInfoWindows[i] && (\r\n                    <InfoWindow onCloseClick={() => {\r\n                        let markers = Object.assign({}, placesInfoWindows);\r\n                        markers[i] = false;\r\n                        setPlacesInfoWindows(markers)\r\n                    }\r\n                    }>\r\n                        <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                            <Typography variant=\"h6\">\r\n                                {location.name}\r\n                            </Typography>\r\n\r\n                            <Button\r\n                                onClick={()=>{addPlaceToTourDay(location)}}\r\n                                variant=\"text\"\r\n                                color=\"secondary\"\r\n                                size=\"large\"\r\n                                startIcon={<AddIcon/>}>\r\n                                Add this place to tour!\r\n                            </Button>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )}\r\n            </Marker>\r\n        })\r\n    }\r\n\r\n\r\n    const searchAreaComponent = useMemo(() => (\r\n        <CustomControlsManager position={window.google.maps.ControlPosition.TOP_CENTER}>\r\n            <div>\r\n                {loadingArea ?\r\n                    <CircularProgress />\r\n                    :\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                               fetchPlaces()\r\n                            }}\r\n                    >\r\n                        Search area...\r\n                    </Button>\r\n                }\r\n\r\n            </div>\r\n        </CustomControlsManager>\r\n    ), [loadingArea]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FilterBlock/>\r\n            <MyMapComponent\r\n                loadingElement={<div style={{height: `100%`}}/>}\r\n                containerElement={<div style={{height: `400px`}}/>}\r\n                mapElement={<div style={{height: `100%`}}/>}\r\n                refMap={refMap}>\r\n\r\n                {searchAreaComponent}\r\n                <PlacesMarkers/>\r\n\r\n                {/* Rendering direction path*/}\r\n                {directions ?\r\n                    <DirectionsRenderer\r\n                        options={{suppressMarkers: true, draggable: false}}\r\n                        draggable={false}\r\n                        directions={directions}/> : null}\r\n\r\n                {/* Rendering direction places markers*/}\r\n                {directionPlaces.map((marker, index) => {\r\n                    const position = { lat: marker.latitude, lng: marker.longitude };\r\n                    return <Marker\r\n                        zIndex={2}\r\n                        icon={{\r\n                            url: require('../../res/selectedTourIcon.svg'),\r\n                            scaledSize: new window.google.maps.Size(48, 48),\r\n                            origin: new window.google.maps.Point(0, 0),\r\n                            labelOrigin: new window.google.maps.Point(24, 16),\r\n                        }}\r\n                        key={index}\r\n                        position={position}\r\n                        label={{text: `${index+1}`, color: \"white\"}}\r\n                        onClick={\r\n                        ()=>{\r\n                            let info = Object.assign({}, infoWindows);\r\n                            info[index] = true;\r\n                            setInfoWindows(info);\r\n                        }\r\n                    }>\r\n                        {infoWindows[index] && (\r\n                        <InfoWindow onCloseClick={()=>{\r\n                            let info = Object.assign({}, infoWindows);\r\n                            info[index] = false;\r\n                            setInfoWindows(info);\r\n                        }}>\r\n                                <Card style={{display:\"flex\", flexDirection: \"column\",alignItems:\"center\"}}>\r\n                                    {marker.photo ?<Avatar alt=\"Remy Sharp\" src={marker.photo} className={classes.largeIcon}/> : null}\r\n\r\n                                    <Typography>\r\n                                        {marker.name}\r\n                                    </Typography>\r\n                                    <Button\r\n                                        onClick={()=>removePlaceFromTourDay(marker)}\r\n                                        style={{marginTop: 12}}\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        startIcon={<DeleteIcon />}\r\n                                    >\r\n                                        Remove from tour\r\n                                    </Button>\r\n\r\n                                </Card>\r\n                        </InfoWindow>\r\n                        )}\r\n                    </Marker>\r\n                })}\r\n\r\n            </MyMapComponent>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTourMap.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourMap)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useMemo, useState} from \"react\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TourPlacesWrapper from \"./TourPlacesWrapper\";\r\nimport PlaceSearch from \"./PlaceSearch\";\r\nimport DaysWrapper from \"./DaysWrapper\";\r\nimport TourDataReducer from \"./TourReducer\";\r\nimport TourInfoComponent from \"./TourInfoComponent\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TourMap from \"./TourMap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../Networking/API\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport shortid from 'shortid';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport RecommendationListDialog from \"../recomendation/RecommendationListDialog\";\r\nimport {RecommendationType} from \"../recomendation/Recommendation\";\r\n\r\nexport const ElementType = {\r\n    place: 0,\r\n    transport: 1\r\n}\r\nexport const PlaceType = {\r\n    api: 1,\r\n    local: 0\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            overflow: \"scroll\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            overflow: \"initial\",\r\n            display: \"flex\",\r\n        },\r\n        height: `calc(100% - 64px)`,\r\n        width: \"100%\",\r\n        '&::-webkit-scrollbar': {\r\n            display: \"none\"\r\n        },\r\n    },\r\n    loader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"100vw\",\r\n        height: \"100vh\"\r\n    },\r\n    rightLayout: {\r\n        flex: 2,\r\n        '&::-webkit-scrollbar': {\r\n            display: \"none\"\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            height: \"100%\",\r\n            overflowY: \"scroll\",\r\n\r\n        },\r\n    },\r\n    leftLayout: {\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            height: \"100%\",\r\n        },\r\n        overflowY: \"scroll\",\r\n\r\n        flex: 1,\r\n        '&::-webkit-scrollbar': {\r\n            display: \"none\"\r\n        },\r\n    },\r\n    actionsArea: {\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n\r\n})\r\n\r\nconst sampleTourData = {\r\n    name: \"\",\r\n    description: \"\",\r\n    isVerified: true,\r\n    isPublished: false,\r\n    days: [\r\n        {\r\n            description: \"\",\r\n            elementIdentifier: \"jkasfbjkdsbjk\",\r\n            tour: []\r\n        }\r\n    ]\r\n}\r\n\r\nfunction Tour({classes, match}) {\r\n\r\n    const [localPlacesFound, setLocalPlacesFound] = useState([])\r\n    const [apiPlacesFound, setApiPlacesFound] = useState([])\r\n    const [currentDay, setCurrentDay] = useState(0)\r\n    const [tourId, setTourId] = useState(match.params.tourId)\r\n    const [isLoading, setIsLoading] = useState(match.params.tourId !== undefined);\r\n    const [recommendationsDialogOpen, setRecommendationsDialogOpen] = useState(false)\r\n\r\n    const [selectedCategories, setSelectedCategories] = useState([])\r\n    const [availableCategories, setAvailableCategories] = useState([])\r\n\r\n    const [errorInfo, setErrorInfo] = useState({\r\n            errors: {\r\n                titleMissing: false,\r\n                /* Any client-side verification errors may by added here, and handled in individual components */\r\n            },\r\n            showErrors: false\r\n        }\r\n    )\r\n\r\n    const [tourInfo, dispatchTourInfo] = React.useReducer(TourDataReducer, sampleTourData)\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    const handleAddPlaceClick = (placeInfo, type) => {\r\n        dispatchTourInfo({\r\n            type: 'ADD_ELEMENT',\r\n            day: currentDay,\r\n            data: {\r\n                type: ElementType.place,\r\n                data: {\r\n                    type: type,\r\n                    details: {...placeInfo}\r\n                },\r\n            },\r\n            onError: () => {\r\n                addConfig(false, \"This place already exists in this tour.\")\r\n            }\r\n        })\r\n    }\r\n\r\n    const removeElementCallback = (index) => {\r\n        dispatchTourInfo({\r\n            type: 'REMOVE_ELEMENT',\r\n            day: currentDay,\r\n            index: index\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (tourId !== undefined) { //If user wants to edit a tour, we download all tour data. loadData also downloads categories\r\n            loadData()\r\n        }else{ //Otherwise, we just download categories instead.\r\n            API.Categories.getAllCategories().then(response => {\r\n                setAvailableCategories(response)\r\n            }).catch(() => {\r\n                addConfig(false, \"Categories failed to load\")\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const parseTourInfoResponse = (response) => {\r\n        let aggregatedDays = [];\r\n        response.days.forEach(day => {\r\n            let aggregatedElements = [];\r\n            day.data.forEach(place => {\r\n                let aggregatedPlace = {\r\n                    type: ElementType.place,\r\n                    data: {details: place.place, type: place.place.type}\r\n                }\r\n                delete aggregatedPlace.data.details.type\r\n                aggregatedElements.push(aggregatedPlace)\r\n                place.transport.forEach(transport => {\r\n                    aggregatedElements.push({\r\n                        type: ElementType.transport,\r\n                        data: {transport: transport.fk_transportId - 1, elementIdentifier: shortid.generate()}\r\n                    })\r\n                })\r\n            })\r\n            let aggregatedDay = {...day, tour: aggregatedElements, elementIdentifier: shortid.generate()}\r\n            delete aggregatedDay.data\r\n            aggregatedDays.push(aggregatedDay)\r\n        })\r\n        let aggregatedTour = {...response, days: aggregatedDays}\r\n        dispatchTourInfo({type: 'SET_ALL', data: aggregatedTour})\r\n    }\r\n\r\n    const loadData = () => {\r\n        Promise.all([\r\n            API.Tour.getTour(\"?id=\" + tourId),\r\n            API.Categories.getAllCategories(),\r\n            API.Tour.getTourCategories(\"?id=\" + tourId),\r\n            ]\r\n        ).catch(() => {\r\n            addConfig(false, \"Tour has failed to load\")\r\n            setTourId(undefined)\r\n        }).then((response) => {\r\n            parseTourInfoResponse(response[0])\r\n            setAvailableCategories(response[1])\r\n            setSelectedCategories(response[2])\r\n        }).finally(() => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleSave = () => {\r\n        let containsErrors = false;\r\n        Object.keys(errorInfo.errors).map(function (keyName, keyIndex) {\r\n            if (errorInfo.errors[keyName]) {\r\n                setErrorInfo(state => {\r\n                    return {...state, showErrors: true}\r\n                })\r\n                containsErrors = true;\r\n            }\r\n        })\r\n        if (containsErrors) return\r\n        setErrorInfo(state => {\r\n            return {...state, showErrors: false}\r\n        })\r\n\r\n        const aggregatedDays = []\r\n        tourInfo.days.forEach(day => {\r\n            let aggregatedDay = {...day, data: []}\r\n            delete aggregatedDay.tour\r\n            delete aggregatedDay.elementIdentifier\r\n            for (let i = 0; i < day.tour.length; i++) {\r\n                let element = day.tour[i]\r\n                if (element.type !== ElementType.place)\r\n                    continue;\r\n                let transport = []\r\n                for (let j = i + 1; j < day.tour.length && day.tour[j].type === ElementType.transport; j++) {\r\n                    transport.push({fk_transportId: day.tour[j].data.transport + 1})\r\n                }\r\n                let aggregatedPlace = {\r\n                    place: {\r\n                        type: element.data.type,\r\n                        placeId: element.data.details.placeId\r\n                    },\r\n                    transport: transport\r\n                }\r\n                aggregatedDay.data.push(aggregatedPlace)\r\n            }\r\n            aggregatedDays.push(aggregatedDay)\r\n        })\r\n        let aggregatedTour = {...tourInfo, days: aggregatedDays}\r\n\r\n        if (tourId === undefined) {\r\n            API.Tour.insertTour(aggregatedTour).then((response) => {\r\n                setTourId(response)\r\n                return response\r\n            }).then((response) => Promise.all(\r\n                [\r\n                    API.Tour.updateTourCategories(selectedCategories, \"?p=\" + response)\r\n                ]\r\n            )).then((() => {\r\n                addConfig(true, \"Tour has been inserted successfully!\")\r\n            })).catch((error) => {\r\n                addConfig(false, \"Something went wrong while saving this tour.\")\r\n            })\r\n        } else {\r\n            Promise.all([\r\n                API.Tour.updateTour(aggregatedTour, \"?id=\" + tourId),\r\n                API.Tour.updateTourCategories(selectedCategories, \"?p=\" + tourId)\r\n            ])\r\n            .then(() => {\r\n                addConfig(true, \"Tour has been updated successfully!\")\r\n            }).catch((error) => {\r\n                addConfig(false, \"Something went wrong while saving this tour.\")\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n    const leftLayout = useMemo(() => (\r\n        <div className={classes.leftLayout}>\r\n            <PlaceSearch addPlaceCallback={handleAddPlaceClick} localPlacesFound={localPlacesFound}\r\n                         setLocalPlacesFound={setLocalPlacesFound} apiPlacesFound={apiPlacesFound}\r\n                         setApiPlacesFound={setApiPlacesFound}/>\r\n        </div>\r\n    ), [localPlacesFound, apiPlacesFound, currentDay])\r\n\r\n\r\n    let dayInfoWithoutDesc = JSON.stringify(tourInfo.days.map(day => {\r\n        let dayCopy = {...day}\r\n        delete dayCopy.description\r\n        return dayCopy\r\n    }))\r\n\r\n    const mapComponent = useMemo(() => (\r\n        <React.Fragment>\r\n            <TourMap tourInfo={tourInfo}\r\n                     currentDay={currentDay}\r\n                     addPlace={handleAddPlaceClick}\r\n                     removePlace={removeElementCallback}\r\n            />\r\n            <TourPlacesWrapper errorInfo={errorInfo} setErrorInfo={setErrorInfo}\r\n                               currentDay={currentDay} tourInfoReducer={dispatchTourInfo} tourInfo={tourInfo}/>\r\n        </React.Fragment>\r\n    ), [dayInfoWithoutDesc, currentDay])\r\n\r\n    const tourDaysComponents = useMemo(() => (\r\n        <div>\r\n            <DaysWrapper currentDay={currentDay} setCurrentDay={setCurrentDay} tourInfo={tourInfo}\r\n                         tourInfoReducer={dispatchTourInfo}/>\r\n            <Divider variant=\"middle\"/>\r\n            {mapComponent}\r\n\r\n        </div>\r\n    ), [tourInfo.days, currentDay, errorInfo]);\r\n\r\n    const rightLayout = useMemo(() => (\r\n        <Paper className={classes.rightLayout}>\r\n            <TourInfoComponent tourInfo={tourInfo} tourInfoReducer={dispatchTourInfo} errorInfo={errorInfo}\r\n                               setErrorInfo={setErrorInfo}\r\n                               tourId={tourId}\r\n                               setSelectedCategories={setSelectedCategories} selectedCategories={selectedCategories} availableCategories={availableCategories} setAvailableCategories={setAvailableCategories}/>\r\n            <Divider variant=\"middle\"/>\r\n            {tourDaysComponents}\r\n            <div className={classes.actionsArea}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => setRecommendationsDialogOpen(true)} disabled={tourId === null}>\r\n                    Add tour to recommendation\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n                    Save this tour\r\n                </Button>\r\n            </div>\r\n        </Paper>\r\n    ), [tourInfo, currentDay, errorInfo, availableCategories, selectedCategories]);\r\n\r\n    const theme = useTheme();\r\n    const largeScreen = useMediaQuery(theme.breakpoints.up('lg'));\r\n\r\n    const content = (\r\n        <React.Fragment>\r\n            {largeScreen ?\r\n                <React.Fragment>\r\n                    {leftLayout}\r\n                    {rightLayout}\r\n                </React.Fragment> :\r\n                <React.Fragment>\r\n                    {rightLayout}\r\n                    {leftLayout}\r\n                </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <RecommendationListDialog\r\n                setOpen={setRecommendationsDialogOpen}\r\n                open={recommendationsDialogOpen}\r\n                objectId={tourId}\r\n                type={RecommendationType.tour}/>\r\n            {isLoading ? <div className={classes.loader}><CircularProgress/></div> : content}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Tour)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n\r\n    sortingButtons: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n\r\n    },\r\n    root:{\r\n        height:\"100vh\",\r\n        width:\"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content:{\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Tour name', isId: true},\r\n    { id: 'description', numeric: false, disablePadding: false, label: 'Tour description',isId: false},\r\n    { id: 'lastModified', numeric: false, disablePadding: false, label: 'Date modified',isId: false},\r\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\r\n];\r\n\r\nfunction Tours(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { classes } = props;\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [filterQuery, setFilterQuery] = useState(\"\");\r\n\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    useEffect(()=>{\r\n        if(!isLoading){\r\n            getAllTours(\"?o=\"+filterQuery);\r\n        }\r\n    },[filterQuery]);\r\n\r\n    function parseData(data){\r\n        console.log(\"deita\", data.list)\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updateTourCallback(id){\r\n        history.push(\"/app/addtour/\"+id)\r\n    }\r\n    function removePlaceCallback(id){\r\n        console.log(\"tour id\", id)\r\n\r\n        addAlertConfig(Strings.DIALOG_TOUR_DELETE_TITLE, Strings.DIALOG_TOUR_DELETE_MESSAGE, [{name: \"Delete\", action: () => {\r\n                setIsLoading(true);\r\n                API.Tour.removeTour(\"?id=\"+id).then(response=>{\r\n                    let tmp = [];\r\n                    data.map(row=>{\r\n                        if(row[\"tourId\"] !== id){\r\n                            tmp.push(row)\r\n                        }\r\n                    });\r\n                    setData(tmp);\r\n                    addConfig(true, Strings.SNACKBAR_TOUR_REMOVE_SUCCESS)\r\n                    setIsLoading(false)\r\n                }).catch(error=>{\r\n                    setIsLoading(false);\r\n                    addConfig(false, Strings.SNACKBAR_ERROR)\r\n                })\r\n            }}],  ()=>{setIsLoading(false)})\r\n    }\r\n\r\n    const changePageCallback = (p=0, keyword=\"\") => {\r\n        setIsLoading(true);\r\n        getAllTours(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword+\"&o=\"+filterQuery)\r\n    };\r\n\r\n\r\n    //Sorting stuff\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let filters = [];\r\n        let fq = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n            if(row.filter){\r\n                fq.push(row.filterName)\r\n            }\r\n            filters.push(row)\r\n        });\r\n\r\n        setFilterQuery(fq.join(\",\"));\r\n        setFilterOptions(filters)\r\n    };\r\n\r\n    const customToolbarElements = () =>{\r\n        return <div>\r\n            <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                    <FilterListIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={()=>{setAnchorEl(null)}}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.sortingButtons}>\r\n                    {filterOptions.map(row=>{\r\n                        return <FormControlLabel\r\n                            control={<Checkbox checked={row.filter} onChange={()=>filterOptionsChanged(row.filterName)} name={row.filterName} />}\r\n                            label={row.filterLabel}\r\n                        />\r\n                    })}\r\n                </div>\r\n\r\n            </Popover>\r\n        </div>\r\n    };\r\n    /*------------------------------------------------------------------------------------------------------*/\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content} >\r\n                <TableComponent\r\n                    title={\"Tours\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updateTourCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    id={\"tourId\"}\r\n                    isLoading={isLoading}\r\n                    customToolbarElements={customToolbarElements()}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={()=>{history.push(\"/app/addtour\")}}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon />}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n    function getAllTours(urlParams=\"\") {\r\n        API.Tour.getAllToursAdmin(urlParams).then(response=>{\r\n            console.log(response);\r\n            parseData(response)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nTours.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Tours);","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nfunction AddDialog(props){\r\n\r\n    function validateInput(){\r\n        var error = false;\r\n        if(text.length <= 3)\r\n            error = true\r\n        setError(error)\r\n        return error\r\n    }\r\n\r\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\r\n    const [text, setText] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    return(\r\n        <div>\r\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\r\n                    {header}\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    action: PropTypes.func.isRequired,\r\n    onCloseCallback: PropTypes.func.isRequired\r\n};\r\nexport default withStyles(styles)(AddDialog)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport TableComponent from \"./TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddDialog from \"./AddDialog\";\r\nimport UseEditDialogContext from \"../contexts/UseEditDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\",\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    buttonWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        width: \"100%\",\r\n    }\r\n})\r\n\r\nconst categoriesHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Category name', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n]\r\nconst tagsHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Tag name', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n]\r\n\r\nfunction Resources({classes}) {\r\n\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addEditDialogConfig} = UseEditDialogContext();\r\n\r\n    const [loading, setIsLoading] = useState({\r\n        categories: false,\r\n        tags: false\r\n    })\r\n\r\n    const [categories, setCategories] = useState([])\r\n    const [tags, setTags] = useState([])\r\n\r\n    useEffect(() => {\r\n        setIsLoading({categories: true, tags: true})\r\n        Promise.all([\r\n                API.Categories.getAllCategories(),\r\n                API.Tags.getAllTags()\r\n            ]\r\n        ).then(response => {\r\n            setCategories(response[0])\r\n            setTags(response[1])\r\n        }).catch(() => {\r\n            addConfig(false, \"Could not retrieve data!\")\r\n        }).finally(() => {\r\n            setIsLoading(oldData => {return{ ...oldData, categories: false, tags: false}})\r\n        })\r\n    }, [])\r\n\r\n    const handleAddCategory = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add category\",\r\n            explanation: \"Type the category name\",\r\n            onDoneCallback: (text) => {\r\n               API.Categories.addCategory([{name: text}]).then((response)=>{\r\n                   addConfig(true, \"Category inserted successfully\")\r\n                   setCategories(oldData => [...oldData, {name: text, categoryId: response[0]}])\r\n                }).catch(error=>{\r\n                   addConfig(false, \"Failed to add category.\")\r\n               })\r\n            },\r\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\r\n            textFieldLabel: \"Restaurants, hiking, etc...\"\r\n        })\r\n    }\r\n\r\n    const removeCategoryCallback = (categoryId) => {\r\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\r\n        addAlertConfig(\"Warning\", \"Are you sure you want the category, named '\" + categoryName + \"'?\", [{\r\n            name: \"yes\", action: () => {\r\n                setIsLoading(oldData => {\r\n                    return {...oldData, categories: true}\r\n                })\r\n                API.Categories.removeCategory([{categoryId: categoryId}]).then(() => {\r\n                    addConfig(true, \"Category successfully removed.\")\r\n                    setCategories(oldData => oldData.filter(item => item.categoryId !== categoryId))\r\n                }).catch(() => {\r\n                    addConfig(false, \"An error has occurred while removing category.\")\r\n                }).finally(() => {\r\n                    setIsLoading(oldData => {\r\n                        return {...oldData, categories: false}\r\n                    })\r\n                })\r\n            }\r\n        }], () => {\r\n        })\r\n    }\r\n\r\n    const updateCategoryHandler = (categoryId) => {\r\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\r\n        addEditDialogConfig({\r\n            title: \"Edit category\",\r\n            explanation: \"Type the category name\",\r\n            defaultText: categoryName,\r\n            onDoneCallback: (text) => {\r\n                API.Categories.updateCategory([{name: text, categoryId: categoryId}]).then(()=>{\r\n                    addConfig(true, \"Category updated successfully\")\r\n                    setCategories(oldData => {return oldData.map(item => {\r\n                        if(item.categoryId === categoryId)\r\n                            return {...item, name: text}\r\n                        else return item\r\n                    })})\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to update category.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\r\n            textFieldLabel: \"Restaurants, hiking, etc...\"\r\n        })\r\n    }\r\n\r\n    const updateTagHandler = (id) => {\r\n        let tagName = tags.filter(item => item.tagId === id)[0].name\r\n        addEditDialogConfig({\r\n            title: \"Edit tag\",\r\n            explanation: \"Type the tag name\",\r\n            defaultText: tagName,\r\n            onDoneCallback: (text) => {\r\n                API.Tags.updateTags([{name: text, tagId: id}]).then(()=>{\r\n                    addConfig(true, \"Tag updated successfully\")\r\n                    setTags(oldData => {return oldData.map(item => {\r\n                        if(item.tagId === id)\r\n                            return {...item, name: text}\r\n                        else return item\r\n                    })})\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to update tag.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const removeTagHandler = (id) => {\r\n        let tagName = tags.filter(item => item.tagId === id)[0].name\r\n        addAlertConfig(\"Warning\", \"Are you sure you want the tag, named '\" + tagName + \"'?\", [{\r\n            name: \"yes\", action: () => {\r\n                setIsLoading(oldData => {\r\n                    return {...oldData, tags: true}\r\n                })\r\n                API.Tags.removeTags([{tagId: id}]).then(() => {\r\n                    addConfig(true, \"Tag successfully removed.\")\r\n                    setTags(oldData => oldData.filter(item => item.tagId !== id))\r\n                }).catch(() => {\r\n                    addConfig(false, \"An error has occurred while removing tag.\")\r\n                }).finally(() => {\r\n                    setIsLoading(oldData => {\r\n                        return {...oldData, tags: false}\r\n                    })\r\n                })\r\n            }\r\n        }], () => {\r\n        })\r\n    }\r\n\r\n    const handleAddTag = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add tag\",\r\n            explanation: \"Type the tag name\",\r\n            onDoneCallback: (text) => {\r\n                API.Tags.addTag([{name: text}]).then((response)=>{\r\n                    addConfig(true, \"Tag inserted successfully\")\r\n                    setTags(oldData => [...oldData, {name: text, tagId: response[0]}])\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to add tag.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const searchFunction = (keyword, item) => {\r\n        if(keyword.length < 3) return true\r\n        return item.name.includes(keyword)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n\r\n                <TableComponent\r\n                    title={\"Categories\"}\r\n                    headCells={categoriesHeadCells}\r\n                    data={categories}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateCategoryHandler}\r\n                    removeCallback={removeCategoryCallback}\r\n                    id={\"categoryId\"}\r\n                    isLoading={loading.categories}\r\n                />\r\n\r\n                <Box className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleAddCategory}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add a new category\r\n                    </Button>\r\n                </Box>\r\n\r\n                <br/>\r\n\r\n                <TableComponent\r\n                    title={\"Tags\"}\r\n                    headCells={tagsHeadCells}\r\n                    data={tags}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateTagHandler}\r\n                    removeCallback={removeTagHandler}\r\n                    id={\"tagId\"}\r\n                    isLoading={loading.tags}\r\n                />\r\n\r\n                <Box className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleAddTag}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add a new tag\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nResources.propTypes = {\r\n};\r\n\r\nexport default withStyles(styles)(Resources)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutoCompleteChip from \"./AutocompleteChip\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\n\r\nconst UpdateUserDialog = ({open, setOpen, userData, availableRoles, setAvailableRoles}) => {\r\n\r\n    const [selectedRoles, setSelectedRoles] = useState([]);\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    useEffect(()=>{\r\n        setSelectedRoles(userData.roles)\r\n    },[userData.roles]);\r\n\r\n    function setRoles() {\r\n        addAlertConfig(\"Update user\", \"Are you sure you want to update this user's permissions?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                let roles = []\r\n                selectedRoles.map(row=>{\r\n                    roles.push(row.roleId)\r\n                });\r\n                API.User.setRoles({userId: userData.id, roles: roles}).then(response=>{\r\n                    addConfig(true, \"Updated user successfully\");\r\n                    setOpen(false)\r\n                }).catch(error=>{\r\n                    addConfig(false, \"Could not update user\")\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n    const renderRoles = <div>\r\n\r\n    </div>\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={'lg'}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">Update user - {userData.name + \" \" + userData.surname}</DialogTitle>\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Change user permissions\r\n                </Typography>\r\n\r\n                <AutoCompleteChip\r\n                    id=\"roleId\"\r\n                    name=\"role\"\r\n                    label=\"Select sources\"\r\n                    options={availableRoles}\r\n                    setOptions={setAvailableRoles}\r\n                    setSelectedOptions={setSelectedRoles}\r\n                    selectedOptions={selectedRoles}\r\n                />\r\n\r\n                {\r\n                    selectedRoles.map(row=>{\r\n                        return <div>\r\n                            <b>{row.role}</b> - {row.description}\r\n                            <br/>\r\n                        </div>\r\n                    })\r\n                }\r\n\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button onClick={()=>setRoles()}\r\n                        color=\"primary\">\r\n                    Update user\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\n\r\nexport default UpdateUserDialog\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutoCompleteChip from \"./AutocompleteChip\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {averageTimeSpent} from \"../helpers/averageTimeSpent\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {load} from \"dotenv\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n\r\n});\r\n\r\nfunction AddUserDialog({classes, open, setOpen, availableRoles}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [user, setUser] = useState({name: \"\", surname: \"\", password: \"\", email: \"\", role: -1});\r\n    const [error, setError] = useState({name: false, surname: false, password: false, email: false, role: false});\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const userDataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let userData = Object.assign({}, user);\r\n        userData[name] = value\r\n        setUser(userData)\r\n    };\r\n\r\n    function parseRoleFromId(id){\r\n        return availableRoles.map(row=>{\r\n            if(row.roleId===id){\r\n                return  row.role + \" - \" + row.description\r\n            }\r\n        })\r\n    }\r\n\r\n    function checkErrors(){\r\n        let errors = Object.assign({}, error)\r\n        let hasErrors = false;\r\n        for (let key in user) {\r\n            errors[key] = user[key] === \"\" || user[key] === -1;\r\n            if(errors[key] === true){\r\n                hasErrors = true\r\n            }\r\n        }\r\n        setError(errors);\r\n        return hasErrors\r\n    }\r\n\r\n    function addUser(){\r\n        if(checkErrors()){\r\n            return\r\n        }\r\n        addAlertConfig(\"Add new editor\", \"Are you sure you want to add new editor?. This user has role: \" + parseRoleFromId(user.role), [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Auth.register(user).then(userId=>{\r\n                    API.User.setRoles({userId: userId, roles: [user.role]}).then(response=>{\r\n                        addConfig(true, \"User was added successfully!\")\r\n                        setOpen(false);\r\n                        setLoading(false)\r\n                    }).catch(error=>{\r\n                        setOpen(false);\r\n                        addConfig(false, \"Could not map user permissions!\");\r\n                        setLoading(false)\r\n                    })\r\n                }).catch(error=>{\r\n                    addConfig(false, error.message);\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add new editor</DialogTitle>\r\n            <DialogContent>\r\n                    <div className={classes.root}>\r\n                        <TextField id=\"outlined-basic\"\r\n                                   error={error.name}\r\n                                   required\r\n                                   label=\"Name\"\r\n                                   name=\"name\"\r\n                                   value={user['name']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.surname}\r\n                                   label=\"Surname\"\r\n                                   name=\"surname\"\r\n                                   value={user['surname']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.email}\r\n                                   label=\"Email\"\r\n                                   name=\"email\"\r\n                                   value={user['email']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.password}\r\n                                   autoComplete='new-password'\r\n                                   label=\"Password\"\r\n                                   name=\"password\"\r\n                                   value={user['password']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   type=\"password\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <br/>\r\n                        <Alert severity=\"info\">\r\n                            Make sure to use secure password as it will give access to modify data in admin panel.\r\n                            <br/>\r\n                            *Password must contain between 8 and 30 characters\r\n                            <br/>\r\n                            *Password must have atleast one digit\r\n                            <br/>\r\n                            *Password must have atleast one upper character\r\n                        </Alert>\r\n\r\n                        <Divider className={classes.textField} medium />\r\n\r\n                        <FormControl error={error.role} variant=\"outlined\" className={classes.textField}>\r\n                            <InputLabel>User role</InputLabel>\r\n                            <Select\r\n                                onChange={(e, value) =>{\r\n                                    let userTmp = Object.assign({},user);\r\n                                    userTmp.role = value.props.value\r\n                                    setUser(userTmp)\r\n                                }}\r\n                                value={user.role}\r\n                                label=\"Select user role\"\r\n                            >\r\n                                <option value=\"-1\">None</option>\r\n                                {\r\n                                    availableRoles.map(row=>{\r\n                                        return <option value={row.roleId}> {row.role}</option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                            <FormHelperText>Select one of the available user roles</FormHelperText>\r\n                        </FormControl>\r\n\r\n                        {user.role === 1 ? <Alert className={classes.textField}\r\n                            severity=\"warning\">\r\n                            ROLE_ADMIN will have full access to the system. Make sure you know this person!\r\n                            </Alert> :\r\n                        null\r\n                        }\r\n\r\n                        <Typography variant=\"h6\" style={{marginTop: 48}}>\r\n                            Available roles\r\n                        </Typography>\r\n                        <div className={classes.textField}>\r\n                            {\r\n                                availableRoles.map(row=>{\r\n                                    return (\r\n                                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                                            {row.role} - {row.description}\r\n                                        </Typography>\r\n                                    )\r\n\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        addUser()\r\n                    }}\r\n                >\r\n                    Add user\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\nexport default withStyles(styles)(AddUserDialog)\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UpdateUserDialog from \"../components/UpdateUserDialog\";\r\nimport AddUserDialog from \"../components/AddUserDialog\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    autocomplete: {\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline: \"0\",\r\n        marginBottom: \"4px\"\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Name', isId: true},\r\n    {id: 'surname', numeric: false, disablePadding: false, label: 'Surname', isId: false},\r\n    {id: 'email', numeric: false, disablePadding: false, label: 'Contact email', isId: false},\r\n    {id: 'phoneNumber', numeric: false, disablePadding: false, label: 'Phone number', isId: false},\r\n    {id: 'parsedRoles', numeric: false, disablePadding: false, label: 'Roles', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n];\r\n\r\nfunction Places(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState({});\r\n    const [allRoles, setAllRoles] = useState([])\r\n    const [pageData, setPageData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const {classes} = props;\r\n\r\n    const [openUpdateDialog, setOpenUpdateDialog] = useState(false);\r\n    const [openAddDialog, setOpenAddDialog] = useState(false);\r\n\r\n\r\n    // const {filterQuery} = useContext(PlacesFilterContext)\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n\r\n    useEffect(()=>{\r\n        API.User.getAllRoles().then(roles=>{\r\n            console.log(roles);\r\n            setAllRoles(roles);\r\n        }).catch(error=>{\r\n            addConfig(false, error.message)\r\n        })\r\n    },[]);\r\n\r\n\r\n\r\n    function requestUsers(p = 1, keyword = \"\") {\r\n        getAllUsers(\"\" + \"?p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n    }\r\n\r\n    function parseData(data) {\r\n\r\n        setIsLoading(false);\r\n        let usersData = [];\r\n        data.list.map(row => {\r\n            let rolesList = [];\r\n            row.roles.map(role =>{\r\n                rolesList.push(role.role)\r\n            });\r\n            row.parsedRoles = rolesList.join(',');\r\n            usersData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(usersData);\r\n        console.log(usersData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updatePlaceCallback(id) {\r\n        data.map(row=>{\r\n            if(row.id === id ){\r\n                setSelectedUser(row)\r\n            }\r\n        });\r\n        setOpenUpdateDialog(true)\r\n    }\r\n\r\n    const changePageCallback = (p = 0, keyword = \"\") => {\r\n            setIsLoading(true);\r\n            requestUsers(p, keyword)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n\r\n                {openUpdateDialog ? <UpdateUserDialog open={openUpdateDialog}\r\n                                                      setOpen={setOpenUpdateDialog}\r\n                                                      availableRoles={allRoles}\r\n                                                      setAvailableRoles={setAllRoles}\r\n                                                      userData={selectedUser}/>\r\n                                                      :\r\n                    null\r\n                }\r\n\r\n                {openAddDialog ? <AddUserDialog open={openAddDialog}\r\n                                                availableRoles={allRoles}\r\n                                                setOpen={setOpenAddDialog}/> : null}\r\n\r\n                <TableComponent\r\n                    title={\"Users\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updatePlaceCallback}\r\n                    id={\"id\"}\r\n                    isLoading={isLoading}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={() => {\r\n                                setOpenAddDialog(true)\r\n                        }}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add user\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n            <Button>\r\n                Clear filters\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    function getAllUsers(urlParams = \"\") {\r\n        API.User.getAllUsers(urlParams).then(response=>{\r\n            console.log(response)\r\n                setIsLoading(false);\r\n                parseData(response)\r\n        }).catch(error=>{\r\n                setIsLoading(false);\r\n                console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nPlaces.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Places);\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {getRefreshToken} from \"../helpers/tokens\";\r\nimport API from \"../Networking/API\";\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        let refreshToken = getRefreshToken();\r\n        if(refreshToken !== \"\" && refreshToken !== undefined){\r\n            // console.log(\"Refresh token\", refreshToken)\r\n                API.User.getUserProfile().then(user=>{\r\n                    // console.log(\"Fetched user\", user);\r\n                    setCurrentUser(user);\r\n                    setIsLoading(false)\r\n                }).catch(error=>{\r\n                    console.log(error);\r\n                    setIsLoading(false)\r\n                })\r\n        }else{\r\n            console.log(\"Refresh token is empty. No actions taken.\")\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser,\r\n                setCurrentUser,\r\n                isLoading\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};","import React, { useState, useCallback } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nexport const EditRecommendationContext = React.createContext()\r\n\r\n\r\nexport default function EditRecommendationProvider({ children }) {\r\n    const [config, setConfig] = useState({\r\n        open: false,\r\n        currentlyEditing: undefined,\r\n        rootList: [],\r\n        setRootList: ()=>{}\r\n    });\r\n\r\n    function startEditing(recommendation, rootList, setRootList) {\r\n        let conf = { ...config }\r\n\r\n        conf.open = true\r\n        conf.currentlyEditing = recommendation\r\n\r\n        conf.rootList = rootList\r\n        conf.setRootList = setRootList\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    function removeRecommendation(){\r\n        let conf = { ...config }\r\n        conf.open = false\r\n\r\n        let tempRootList = [...conf.rootList]\r\n        for(let i = 0; i<tempRootList.length; i++){\r\n            console.log(tempRootList[i].id)\r\n            if(tempRootList[i].id === conf.currentlyEditing.id){\r\n                tempRootList.splice(i, 1)\r\n            }\r\n        }\r\n        config.setRootList(tempRootList)\r\n        setConfig(conf)\r\n    }\r\n\r\n    function finishEditing(success=false, removedId= undefined) {\r\n        let conf = { ...config }\r\n        conf.open = false\r\n\r\n        if(removedId !== undefined){\r\n            for(let i = 0; i<conf.currentlyEditing.objects.length; i++){\r\n                if(conf.currentlyEditing.objects[i].id === removedId){\r\n                    conf.currentlyEditing.objects.splice(i, 1)\r\n                }\r\n            }\r\n        }\r\n\r\n        if(success){\r\n            let tempRootList = [...config.rootList]\r\n            for(let i = 0; i<tempRootList.length; i++){\r\n                if(tempRootList[i].id === conf.currentlyEditing.id){\r\n                    tempRootList[i] = conf.currentlyEditing\r\n                    break;\r\n                }\r\n            }\r\n            config.setRootList(tempRootList)\r\n        }\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    function setRecommendation(newRec){\r\n        let conf = { ...config }\r\n        conf.currentlyEditing = newRec\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    return (\r\n        <EditRecommendationContext.Provider value={{\r\n            config,\r\n            startEditing,\r\n            finishEditing,\r\n            removeRecommendation,\r\n            setRecommendation\r\n        }}>\r\n            {children}\r\n        </EditRecommendationContext.Provider>\r\n    );\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {EditRecommendationContext} from \"../../contexts/EditRecommendationContext\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport API from \"../../Networking/API\";\r\nimport {func} from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    recommendedPlaceCard: {\r\n        width: 300,\r\n        height: 300,\r\n        padding: 16,\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        alignContent: 'flex-end',\r\n        zIndex: 999999\r\n    }\r\n\r\n});\r\n\r\nconst RecommendationPlaceSortable = SortableElement(({classes, place, removeObjectFromRecommendation}) => (\r\n    <div className={classes.recommendedPlaceCard}>\r\n        <ApiPlaceCard\r\n            placeData={place}\r\n            renderActionArea={() => {\r\n                return (\r\n                    <div>\r\n                        <IconButton aria-label=\"delete\" onClick={()=>removeObjectFromRecommendation(place.id)}>\r\n                            <DeleteIcon color=\"secondary\" fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </div>\r\n                )\r\n            }\r\n            }\r\n        />\r\n    </div>)\r\n)\r\n\r\nconst RecommendationPlaceSortableContainer = SortableContainer(({classes, config, removeObjectFromRecommendation}) => {\r\n    return (\r\n        <div style={{display:\"flex\", flexDirection: \"row\"}}>\r\n            {config.currentlyEditing.objects.length > 0 ?\r\n\r\n                config.currentlyEditing.objects.map((place, index)=>{\r\n                    delete place.description\r\n\r\n                    return <RecommendationPlaceSortable\r\n                        classes={classes}\r\n                        removeObjectFromRecommendation={removeObjectFromRecommendation}\r\n                        key={place.id}\r\n                        index={index}\r\n                        place={place}\r\n                    />\r\n                }) :\r\n\r\n                <Alert severity=\"info\">This recommendation does not have any objects attached. You can attach\r\n                    Places or Tours by browsing in Places and Tours tables\r\n                </Alert>\r\n            }\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\nfunction EditRecommendationDialog({classes}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const { config, setRecommendation, finishEditing, removeRecommendation } = useContext(EditRecommendationContext)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let recData = {...config.currentlyEditing}\r\n        recData[name] = value\r\n\r\n        setRecommendation(recData)\r\n    };\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        console.log(\"OnSortEnd\")\r\n        let data = { ...config.currentlyEditing }\r\n        data.objects = arrayMove(data.objects, oldIndex, newIndex)\r\n\r\n        setRecommendation(data)\r\n    }\r\n\r\n    function removeObjectFromRecommendation(placeId) {\r\n        addAlertConfig(\"Remove object from recommendation\", \"Are you sure you want to remove this object from recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true)\r\n                API.Recommendation.removePlaceFromRecommendation(\r\n                    {id: placeId,\r\n                        recommendationId: config.currentlyEditing.id,\r\n                        type: config.currentlyEditing.type}\r\n                ).then(()=>{\r\n                    addConfig(true, \"Object removed from recommendation\")\r\n                    finishEditing(true, placeId)\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n\r\n    }\r\n\r\n    function deleteRecommendation(){\r\n        addAlertConfig(\"Remove recommendation\", \"Are you sure you want to remove this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Recommendation.removeRecommendation(config.currentlyEditing.id).then(()=>{\r\n                    addConfig(true, \"Removed recommendation successfully\")\r\n                    removeRecommendation()\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong. Please try again!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n    function constructRecommendationForUpdate(){\r\n        let rec = { ...config.currentlyEditing }\r\n        const objects = []\r\n        config.currentlyEditing.objects.map(row=>{\r\n            objects.push({id: row.id, type: rec.type})\r\n        })\r\n\r\n        rec.objects = objects\r\n\r\n        return rec\r\n    }\r\n\r\n\r\n    function editRecommendation(){\r\n        addAlertConfig(\"Edit recommendation\", \"Are you sure you want to edit this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                const rec = constructRecommendationForUpdate()\r\n                API.Recommendation.updateRecommendation(rec).then(()=>{\r\n                    addConfig(true, \"Updated recommendation successfuly\")\r\n                    finishEditing(true)\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong. Please try again!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    return(\r\n        <Dialog\r\n            open={config.open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{\r\n                finishEditing()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Edit recommendation</DialogTitle>\r\n            <DialogContent>\r\n                {config.currentlyEditing !== undefined ? <div className={classes.root}>\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Title\"\r\n                               name=\"name\"\r\n                               value={config.currentlyEditing['name']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Subtitle\"\r\n                               name=\"subtitle\"\r\n                               value={config.currentlyEditing['subtitle']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Description\"\r\n                               name=\"description\"\r\n                               value={config.currentlyEditing['description']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <div style={{display: \"flex\", flexDirection: 'row', overflowX: 'auto', width: '100%'}}>\r\n                        <RecommendationPlaceSortableContainer\r\n                            removeObjectFromRecommendation={removeObjectFromRecommendation}\r\n                            classes={classes}\r\n                            config={config}\r\n                            axis={'xy'}\r\n                            pressDelay={200}\r\n                            disableAutoscroll={false}\r\n                            onSortEnd={onSortEnd}/>\r\n                    </div>\r\n                </div> : null }\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>finishEditing()}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        editRecommendation()\r\n                    }}\r\n                >\r\n                    Save\r\n                </Button>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={()=>{\r\n                        deleteRecommendation()\r\n                    }}\r\n                >\r\n                    Delete recommendation\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(EditRecommendationDialog)","import React, {useContext, useEffect, useState} from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../Networking/API\";\r\nimport Recommendation from \"../components/recomendation/Recommendation\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport EditRecommendationDialog from \"../components/recomendation/EditRecommendationDialog\";\r\nimport {EditRecommendationContext} from \"../contexts/EditRecommendationContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport debounce from \"lodash/debounce\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        flexWrap: 'wrap',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    left: {\r\n        width: '50%',\r\n        height: '100%',\r\n        padding: 16,\r\n    },\r\n    leftTop:{\r\n        alignItems: 'flex-start',\r\n        height: '10%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    leftContent:{\r\n        padding: 16,\r\n        borderStyle: 'dashed',\r\n        height: '80%',\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    right:{\r\n        width: '50%',\r\n        height: '100%',\r\n        padding: 16,\r\n    },\r\n    rightTop: {\r\n        alignItems: 'flex-start',\r\n        height: '10%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n    rightContent: {\r\n        padding: 16,\r\n        borderStyle: 'dashed',\r\n        height: '80%',\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    }\r\n});\r\n\r\nfunction RecommendationsPage({classes}) {\r\n\r\n    const [recommendations, setRecommendations] = useState([]);\r\n    const [homeRecommendations, setHomeRecommendations] = useState([]);\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [pagingData, setPagingData] = useState({pageNum: 1})\r\n\r\n    const { startEditing } = useContext(EditRecommendationContext)\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    function getRecommendations(page, keywordChange = false) {\r\n        API.Recommendation.getAllRecommendations(\"?full=true&p=\"+page+\"&keyword=\"+keyword).then(response=>{\r\n            if(keywordChange){\r\n                setRecommendations(unique(response.list, homeRecommendations))\r\n            }else{\r\n                setRecommendations(old=>[...old, ...unique(response.list, homeRecommendations)])\r\n            }\r\n\r\n            delete response.list\r\n            setPagingData(response)\r\n        }).catch(()=>{\r\n\r\n        }).finally(()=>{\r\n\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        Promise.all([\r\n            API.Explore.getExplorePage(\"?s=100\"),\r\n            API.Recommendation.getAllRecommendations(\"?full=true\")\r\n        ]).then((responses)=>{\r\n            setHomeRecommendations(responses[0].list)\r\n            setRecommendations(unique(responses[1].list, responses[0].list))\r\n        }).catch(()=>{\r\n\r\n        }).finally(()=>{\r\n            setLoading(false)\r\n        })\r\n\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!loading){\r\n            getRecommendations(1, true)\r\n        }\r\n    }, [keyword])\r\n\r\n    function unique(newList, existingRecommendations){\r\n        const uniqueList = []\r\n        let found = false;\r\n        for(let i = 0; i<newList.length; i++){\r\n            for(let j = 0; j<existingRecommendations.length; j++){\r\n                if(newList[i].id === existingRecommendations[j].id){\r\n                    found = true\r\n                    break;\r\n                }\r\n            }\r\n            if(!found){\r\n                uniqueList.push(newList[i])\r\n            }\r\n            found = false\r\n        }\r\n\r\n\r\n        return uniqueList\r\n    }\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        console.log(\"Handle scroll\")\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollHeight - e.target.scrollTop - scrollOffset)  <= e.target.clientHeight;\r\n        if (bottom && !loading && recommendations.length>0 && pagingData.pageNum<pagingData.pages) {\r\n            setLoading(true);\r\n            console.log(\"Requesting new page\")\r\n            getRecommendations(pagingData.pageNum+1);\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n\r\n\r\n    function updateExplorePage() {\r\n        const explorable = []\r\n        homeRecommendations.map(row=>{\r\n            explorable.push(row.id)\r\n        })\r\n\r\n        setLoading(true)\r\n        API.Explore.updateExplorePage(explorable).then(()=>{\r\n            addConfig(true, \"Updated explore page successfully!\")\r\n\r\n        }).catch(()=>{\r\n            addConfig(false, \"Unexpected error!\")\r\n        }).finally(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.left}>\r\n                <div className={classes.leftTop}>\r\n                    <Typography variant=\"h4\">\r\n                        Home recommendations\r\n                    </Typography>\r\n\r\n                    <Button\r\n                        onClick={updateExplorePage}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        Save feed\r\n                    </Button>\r\n                </div>\r\n                <div className={classes.leftContent}>\r\n\r\n                    <ReactSortable\r\n                        style={{width: '100%', height: '100%'}}\r\n                        list={homeRecommendations}\r\n                        setList={setHomeRecommendations}\r\n                        animation={150}\r\n                        group=\"cards\"\r\n                        onChange={(order, sortable, evt) => {}}\r\n                        onEnd={evt => {}}\r\n                    >\r\n                        {homeRecommendations.map(rec => (\r\n                            <Recommendation\r\n                                key={rec.id}\r\n                                recommendation={rec}\r\n                                onEditCallback={()=> {\r\n                                    startEditing(rec, homeRecommendations, setHomeRecommendations)\r\n                                }}\r\n                            />\r\n                        ))}\r\n                    </ReactSortable>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={classes.right}>\r\n                <div className={classes.rightTop}>\r\n                    <Typography variant=\"h4\">\r\n                        Existing recommendations\r\n                    </Typography>\r\n\r\n                </div>\r\n                <div className={classes.rightContent} onScroll={handleScroll}>\r\n                    <TextField id=\"standard-search\" label=\"Search\" value={keyword} type=\"search\" onChange={e=>{\r\n                        setKeyword(e.target.value)\r\n                    }} />\r\n                    <ReactSortable\r\n                        style={{width: '100%', height: '100%'}}\r\n                        list={recommendations}\r\n                        setList={setRecommendations}\r\n                        animation={150}\r\n                        group=\"cards\"\r\n                        onChange={(order, sortable, evt) => {}}\r\n                        onEnd={evt => {}}\r\n                    >\r\n                        {recommendations.map(rec => (\r\n                            <Recommendation\r\n                                onEditCallback={()=>{\r\n                                    startEditing(rec, recommendations, setRecommendations)\r\n                                }}\r\n                                key={rec.id}\r\n                                recommendation={rec}/>\r\n                        ))}\r\n                    </ReactSortable>\r\n                </div>\r\n            </div>\r\n\r\n            <EditRecommendationDialog />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(RecommendationsPage);\r\n","import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Home from \"../pages/Home\";\r\nimport Places from \"../pages/Places\";\r\nimport AddPlace from \"../pages/AddPlace\";\r\nimport history from \"../helpers/history\";\r\nimport ApiPlaces from \"../pages/ApiPlaces\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport NotFoundPage from \"../pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nimport Tour from \"./tour_components/Tour\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport Tours from \"../pages/Tours\";\r\nimport Resources from \"./Resources\";\r\nimport {PlacesFilterProvider} from \"../contexts/PlacesFilterContext\";\r\nimport ManageUsers from \"../pages/ManageUsers\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport API from \"../Networking/API\";\r\nimport {AuthContext} from \"../contexts/AuthContext\";\r\nimport RecommendationsPage from \"../pages/RecommendationsPage\";\r\nimport EditRecommendationProvider, {EditRecommendationContext} from \"../contexts/EditRecommendationContext\";\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root1: {\r\n        overflow: \"hidden\",\r\n        display: 'flex',\r\n        height: \"100vh\",\r\n        background: \"#F1F1F1\"\r\n    },\r\n    appBar: {\r\n        height: \"64px\",\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        //padding: theme.spacing(3),\r\n        // transition: theme.transitions.create('margin', {\r\n        //     easing: theme.transitions.easing.sharp,\r\n        //     duration: theme.transitions.duration.leavingScreen,\r\n        // }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        // transition: theme.transitions.create('margin', {\r\n        //     easing: theme.transitions.easing.easeOut,\r\n        //     duration: theme.transitions.duration.enteringScreen,\r\n        // }),\r\n        marginLeft: 0\r\n    },\r\n}));\r\n\r\nconst PlacesWithContext = () =>  (\r\n    <PlacesFilterProvider>\r\n        <Places/>\r\n    </PlacesFilterProvider>\r\n);\r\nconst TourWithContext = (props) =>  (\r\n    <PlacesFilterProvider>\r\n        <Tour {...props}/>\r\n    </PlacesFilterProvider>\r\n);\r\n\r\nconst RecommendationsWithContext = (props) =>  (\r\n    <EditRecommendationProvider>\r\n        <RecommendationsPage {...props}/>\r\n    </EditRecommendationProvider>\r\n);\r\n\r\n\r\nexport default function Appbar(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const { title, setTitle } = UseAppBarTitleContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    let location = useLocation();\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleListItemClick = (url,title) =>{\r\n        handleDrawerClose();\r\n        setTitle(title);\r\n\r\n        let re = new RegExp(url+'([0-9]*)?');\r\n        if(re.test(location.pathname)){\r\n            history.push(url);\r\n            history.go(0);\r\n        }\r\n    };\r\n\r\n    function handleLogout() {\r\n        addAlertConfig(\"Logout\", \"Are you sure you want to logout\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                localStorage.removeItem(\"access_token\");\r\n                localStorage.removeItem(\"refresh_token\")\r\n                history.push(\"/login\")\r\n            }\r\n        }])\r\n    }\r\n\r\n    const hasPermission = (perm) => {\r\n        return currentUser != null && currentUser.permissions.some(permission => permission.permission === perm)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root1}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <Typography variant=\"h6\" style={{width: \"100%\"}}>\r\n                        {currentUser != null ? currentUser.name : \"Loading user profile\"}\r\n                    </Typography>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button component={Link} to=\"/app/home\" onClick={()=>handleListItemClick(\"/app/home\",\"Home\")}>\r\n                        <ListItemText>Home</ListItemText>\r\n                    </ListItem>\r\n                    <Divider light />\r\n                    <ListItem button component={Link} to=\"/app/places\" onClick={()=>handleListItemClick(\"/app/places\",\"Places\")} >\r\n                        <ListItemText>Places</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/tours\" onClick={()=>handleListItemClick(\"/app/tours\",\"Tours\")} >\r\n                        <ListItemText>Tours</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/recommendations\" onClick={()=>handleListItemClick(\"/app/recommendations\",\"Recommendations\")} >\r\n                        <ListItemText>Recommendations</ListItemText>\r\n                    </ListItem>\r\n                    {/*<ListItem button component={Link} to=\"/app/apiplaces\" onClick={()=>handleListItemClick(\"/app/apiplaces\",\"Api places\")} >*/}\r\n                    {/*    <ListItemText>Explore API places</ListItemText>*/}\r\n                    {/*</ListItem>*/}\r\n                    { hasPermission(\"place:insert\") &&\r\n                        <ListItem button component={Link} to=\"/app/addplace\" onClick={()=>handleListItemClick(\"/app/addplace\",\"Add Place\")} >\r\n                            <ListItemText>Add place</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    { hasPermission(\"tour:modify\") &&\r\n                        <ListItem button component={Link} to=\"/app/addtour\"\r\n                                  onClick={() => handleListItemClick(\"/app/addtour\", \"Add tour\")}>\r\n                            <ListItemText>Add tour</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    <ListItem button component={Link} to=\"/app/resources\" onClick={()=>handleListItemClick(\"/app/resources\",\"Manage resources\")} >\r\n                        <ListItemText>Resources</ListItemText>\r\n                    </ListItem>\r\n                    { hasPermission(\"role:manage\") &&\r\n                        <ListItem button component={Link} to=\"/app/users\" onClick={()=>handleListItemClick(\"/app/users\",\"Manage users\")} >\r\n                            <ListItemText>Manage users</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    <Divider light />\r\n                    <ListItem button onClick={()=>handleLogout()} >\r\n                        <ListItemText>Logout</ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                <Switch>\r\n                    <Route exact path=\"/app/home\" component={Home} />\r\n                    <Route path=\"/app/places\" component={PlacesWithContext} />\r\n                    <Route path=\"/app/tours\" component={Tours} />\r\n                    <Route path=\"/app/addplace/:placeId?\" component={AddPlace} />\r\n                    <Route path=\"/app/recommendations\" component={RecommendationsWithContext} />\r\n                    <Route path=\"/app/addtour/:tourId?\" component={TourWithContext} />\r\n                    <Route path=\"/app/resources\" component={Resources} />\r\n                    <Route path=\"/app/users\" component={ManageUsers} />\r\n                    <Redirect from=\"*\" to=\"/404\"/>\r\n                </Switch>\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport Appbar from './components/Appbar.js';\r\nimport AppBarTitleProvider from \"./contexts/AppBarTitleContext\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <AppBarTitleProvider>\r\n                        <Appbar />\r\n                    </AppBarTitleProvider>\r\n                    </MuiPickersUtilsProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default App;","import React, {useContext, useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport history from \"../helpers/history\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {AuthContext} from \"../contexts/AuthContext\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {isAuthenticated} from \"../helpers/tokens\";\r\nimport API from \"../Networking/API\";\r\nimport {func} from \"prop-types\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n                Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    loaderMain: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        alignItems:\"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"red\"\r\n    }\r\n}));\r\n\r\nexport default function LoginPage() {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setIsLoading] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n    const { currentUser, setCurrentUser } = useContext(AuthContext);\r\n\r\n    const handleLogin = () =>{\r\n        setIsLoading(true);\r\n        console.log(\"handleLogin\", {identifier: email, password: password});\r\n        API.Auth.login({identifier: email, password: password}).then(response=>{\r\n            if(!checkAccess(response.authorities)){\r\n                addConfig(false, \"Only admins and editors can access admin panel!\")\r\n                setIsLoading(false);\r\n                return\r\n            }\r\n            setIsLoading(false);\r\n            localStorage.setItem(\"access_token\", response.access_token);\r\n            localStorage.setItem(\"refresh_token\", response.refresh_token);\r\n            API.User.getUserProfile().then(response=>{\r\n                console.log(\"User profile:\", response);\r\n                setCurrentUser(response);\r\n                history.push(\"/app/home\");\r\n            }).catch(error=>{\r\n                setIsLoading(false);\r\n                addConfig(false, error.message)\r\n            });\r\n        }).catch(error=>{\r\n            setIsLoading(false);\r\n            addConfig(false, error.message)\r\n        });\r\n    };\r\n\r\n    function checkAccess(roles){\r\n        var hasAccess = false\r\n        roles.map(row=>{\r\n            console.log(row)\r\n            if(row.authority === \"ROLE_ADMIN\"){\r\n                hasAccess = true\r\n            }\r\n        });\r\n        return hasAccess\r\n    }\r\n\r\n    if (isAuthenticated()) {\r\n        return <Redirect to=\"/app\" />;\r\n    }\r\n\r\n    const handleKeyPress = (event) =>{\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            handleLogin();\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    return <Container component=\"main\" maxWidth=\"xs\" onKeyPress={(e)=>handleKeyPress(e)}>\r\n\r\n                            {loading && <LinearProgress />}\r\n                            <CssBaseline />\r\n                            <div className={classes.paper}>\r\n                                <Avatar className={classes.avatar}>\r\n                                    <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <Typography component=\"h1\" variant=\"h5\">\r\n                                    Sign in\r\n                                </Typography>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={email}\r\n                                    onChange={(e)=>{setEmail(e.target.value)}}\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    autoFocus\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    value={password}\r\n                                    onChange={(e)=>{setPassword(e.target.value)}}\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                                <Button\r\n                                    onClick={()=>{handleLogin()}}\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    Sign In\r\n                                </Button>\r\n                            </div>\r\n                            <Box mt={8}>\r\n                                <Copyright />\r\n                            </Box>\r\n                        </Container>\r\n\r\n}","import Route from \"react-router-dom/es/Route\";\r\nimport React, {useContext} from \"react\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {isAuthenticated} from \"../helpers/tokens\";\r\n\r\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                isAuthenticated() === true ? (\r\n                    <Component {...routeProps} />\r\n                ) : (\r\n                    <Redirect to={\"/login\"} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\n\r\nexport default function SnackbarFeedback(props){\r\n\r\n    const { config, removeConfig } = UseSnackbarContext();\r\n\r\n    return(\r\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\r\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"error\") : \"\"}>\r\n                {!!config && config.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\"\r\n\r\nconst AlertDialogFeedback = () => {\r\n\r\n    const {alertConfig, removeAlertConfig} = UseAlertDialogContext();\r\n\r\n    function remove() {\r\n        if(alertConfig.onClose !== undefined){\r\n            alertConfig.onClose()\r\n        }\r\n        removeAlertConfig()\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={!!alertConfig}\r\n            onClose={remove}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{!!alertConfig ? alertConfig.title : \"\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {!!alertConfig ? alertConfig.message : \"\"}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={remove}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                {!!alertConfig && alertConfig.actions.map(row=>{\r\n                    return <Button onClick={()=>{\r\n                        remove();\r\n                        row.action();\r\n                    }}\r\n                    color=\"primary\"\r\n                    >\r\n                            {row.name}\r\n                    </Button>\r\n                })}\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\n\r\nexport default AlertDialogFeedback\r\n","import Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\r\n\r\n\r\nexport const TextInputDialog = () => {\r\n\r\n    const {dialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen} = UseEditDialogContext();\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [error, setError] = useState(0)\r\n\r\n    const deInit = () => {\r\n        setError(0)\r\n        setDialogOpen(false)\r\n        setInputText(\"\")\r\n    }\r\n\r\n    const handleClose = () => {\r\n        deInit()\r\n    }\r\n\r\n    const handleDone = () => {\r\n        let errorCode = dialogConfig.validateInput(inputText)\r\n        setError(errorCode)\r\n        if(errorCode !== 0) return\r\n\r\n        if(dialogConfig.onDoneCallback !== undefined)\r\n            dialogConfig.onDoneCallback(inputText)\r\n        deInit()\r\n    }\r\n    const handleInput = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={dialogOpen} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n                <DialogTitle id=\"form-dialog-title\">{dialogConfig.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {dialogConfig.explanation}\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        helperText={error !== 0 && dialogConfig.errorMessages[error] !== null ? dialogConfig.errorMessages[error] : \"\"}\r\n                        error={error !== 0}\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        onInput={handleInput}\r\n                        label={dialogConfig.textFieldLabel}\r\n                        defaultValue={dialogConfig.defaultText}\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleDone} color=\"primary\">\r\n                        Done\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport history from \"./helpers/history\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport {Router, Route, Link, Switch} from \"react-router-dom\";\r\nimport {AuthenticatedRoute} from \"./components/AuthenticatedRoute\";\r\nimport NotFoundPage from \"./pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\r\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\r\nimport AlertDialogProvider from \"./contexts/AlertDialogContext\";\r\nimport AlertDialogFeedback from \"./components/feedback/AlertDialogFeedback\";\r\nimport {AuthProvider} from \"./contexts/AuthContext\";\r\nimport {PlacesFilterProvider} from \"./contexts/PlacesFilterContext\";\r\nimport EditDialogProvider from \"./contexts/EditDialogContext\";\r\nimport {TextInputDialog} from \"./components/feedback/TextInputDialog\";\r\nimport LoadingScreen from \"./components/LoadingScreen\";\r\n\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <AuthProvider>\r\n            {/*<LoadingScreen />*/}\r\n            <Router history={history}>\r\n                <SnackbarProvider>\r\n                    <AlertDialogProvider>\r\n                        <EditDialogProvider>\r\n                            <SnackbarFeedback/>\r\n                            <AlertDialogFeedback/>\r\n                            <TextInputDialog/>\r\n                            <Switch>\r\n                                <Redirect exact from=\"/\" to=\"/login\"/>\r\n                                <Redirect exact from=\"/app\" to=\"/app/home\"/>\r\n                                <AuthenticatedRoute path=\"/app\" component={App}/>\r\n                                <Route path=\"/login\" component={LoginPage}/>\r\n                                <Route path=\"*\" component={NotFoundPage}/>\r\n                                <Redirect from=\"*\" to=\"/404\"/>\r\n                            </Switch>\r\n                        </EditDialogProvider>\r\n                    </AlertDialogProvider>\r\n                </SnackbarProvider>\r\n            </Router>\r\n        </AuthProvider>\r\n    </React.Fragment>\r\n    , document.getElementById('root'));\r\n"],"sourceRoot":""}