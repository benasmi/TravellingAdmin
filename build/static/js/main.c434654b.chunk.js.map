{"version":3,"sources":["res/selectedTourIcon.svg","res/selectedParking.svg","res/availableParking.svg","pages/Home.js","components/TableComponent.js","helpers/debounce.js","helpers/history.js","helpers/tokens.js","Networking/NetworkLayerCentral.js","Networking/API.js","contexts/AlertDialogContext.js","contexts/UseAlertDialogContext.js","helpers/stringResources.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","components/AutocompleteChip.js","contexts/PlacesFilterContext.js","components/add_place_components/FilterBlock.js","pages/Places.js","helpers/priceRange.js","helpers/averageTimeSpent.js","components/AddSourceDialog.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/maps/MapGeolocation.js","components/maps/MapToolbar.js","components/maps/MapLock.js","components/maps/CustomControlsManager.js","components/maps/PlaceMap.js","components/add_place_components/PlaceLocation.js","components/maps/ParkingMap.js","components/add_place_components/ParkingLocation.js","contexts/EditDialogContext.js","contexts/UseEditDialogContext.js","components/add_place_components/PlaceDiscovery.js","components/add_place_components/initialScheduleData.js","components/ReviewCard.js","components/add_place_components/Reviews.js","contexts/AppBarTitleContext.js","contexts/UseAppBarTitleContext.js","components/ScheduleInterval.js","components/DayComponent.js","components/Schedule.js","components/add_place_components/SchedulesWrapper.js","pages/AddPlace.js","components/ApiPlaceCard.js","components/SearchInputComponent.js","pages/ApiPlaces.js","pages/NotFoundPage.js","components/tour_components/TourPlaceComponent.js","components/tour_components/TransportItem.js","components/tour_components/TourPlacesWrapper.js","components/tour_components/PlaceSearch.js","components/tour_components/DayCard.js","components/tour_components/DaysWrapper.js","components/tour_components/TourReducer.js","components/tour_components/TourInfoComponent.js","components/tour_components/TourMap.js","components/tour_components/Tour.js","pages/Tours.js","components/AddDialog.js","components/Resources.js","components/UpdateUserDialog.js","components/AddUserDialog.js","pages/ManageUsers.js","contexts/AuthContext.js","components/Appbar.js","App.js","pages/LoginPage.js","components/AuthenticatedRoute.js","components/feedback/SnackbarFeedback.js","components/feedback/AlertDialogFeedback.js","components/feedback/TextInputDialog.js","index.js"],"names":["module","exports","withStyles","theme","button","margin","spacing","input","display","props","classes","descendingComparator","a","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","checkable","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","customToolbarElements","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","style","alignItems","TextField","target","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","centerCell","textAlign","rowNotPublished","rowNotVerified","rowBasic","TableComponent","searchFunction","pagingInfo","data","updateCallback","removeCallback","isLoading","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","filter","item","undefined","slice","row","isItemSelected","indexOf","labelId","rowStyle","hover","rowId","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckboxChange","header","isId","scope","e","stopPropagation","preventDefault","fontSize","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","pageNum","onChangePage","newPage","onChangeRowsPerPage","parseInt","console","log","history","getAccessToken","localStorage","getItem","getRefreshToken","isAuthenticated","request","options","contentType","authorize","client","axios","create","baseURL","headers","interceptors","response","use","error","originalRequest","config","url","status","code","Promise","reject","removeItem","push","startsWith","_retry","API","Auth","refreshToken","then","token","access_token","Authorization","setItem","catch","err","onSuccess","onError","debug","message","RequestType","getRequest","path","urlData","method","postRequest","postMultipartRequest","formData","User","setRoles","getAllRoles","getAllUsers","urlParams","getUserProfile","register","login","Tour","insertTour","getTour","updateTour","getAllToursAdmin","removeTour","getTourTags","updateTourTags","SourcePlace","updateSourcesForPlace","Source","getSources","addSource","Places","getClosesPlacesAdmin","getAllCities","getAllCounties","getAllCountries","getAllMunicipalities","getAllPlaces","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","removePlace","Tags","getAllTags","addTag","params","removeTags","updateTags","Categories","addCategory","getAllCategories","removeCategory","updateCategory","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","Reviews","getPlaceReviews","AlertDialogContext","createContext","alertConfig","addAlertConfig","removeAlertConfig","AlertDialogProvider","children","setAlertConfig","contextValue","actions","onClose","Provider","UseAlertDialogContext","useContext","Strings","DIALOG_PLACE_PUBLISH_TITLE","DIALOG_PLACE_PUBLISH_MESSAGE","DIALOG_PLACE_UNPUBLISH_MESSAGE","DIALOG_PLACE_INSERT_TITLE","DIALOG_PLACE_INSERT","DIALOG_PLACE_UPDATE_TITLE","DIALOG_PLACE_UPDATE","DIALOG_PLACE_VERIFY_TITLE","DIALOG_PLACE_VERIFY_MESSAGE","DIALOG_PLACE_DELETE_TITLE","DIALOG_PLACE_DELETE_MESSAGE","DIALOG_TOUR_DELETE_TITLE","DIALOG_TOUR_DELETE_MESSAGE","SNACKBAR_PLACE_INSERTED_SUCCESS","SNACKBAR_PLACE_REMOVE_SUCCESS","SNACKBAR_TOUR_INSERTED_SUCCESS","SNACKBAR_TOUR_REMOVE_SUCCESS","SNACKBAR_ERROR","SNACKBAR_CHANGES_SAVED","SnackbarContext","addConfig","removeConfig","SnackbarProvider","setConfig","success","UseSnackbarContext","autoComplete","chip","justifyContent","flexWrap","listStyle","autoCompleteChipContainer","setOptions","selectedOptions","setSelectedOptions","initialData","setInitialData","getCurrentVal","setCurrentVal","firstLoad","setFirstLoad","handleDelete","found","row1","JSON","stringify","Box","option","Chip","onDelete","Autocomplete","disableClearable","getOptionLabel","renderInput","PlacesFilterContext","buildUrl","require","initialDates","insertionStart","moment","Date","format","insertionEnd","add","modificationStart","modificationEnd","PlacesFilterProvider","categories","setCategories","selectedCategories","setSelectedCategories","cities","setCities","selectedCities","setSelectedCities","countries","setCountries","selectedCountries","setSelectedCountries","municipalities","setMunicipalities","selectedMunicipalities","setSelectedMunicipalities","counties","setCounties","selectedCounties","setSelectedCounties","initialLoading","setInitialLoading","resetFilterOptions","setResetFilterOptions","filterLabel","filterName","filterOptions","setFilterOptions","dates","setDates","queryParams","di","dm","parseFilterOptions","parseCategories","filterQuery","setFilterQuery","getCategories","restrictions","res","cats","countryRestrictions","munRestrictions","all","filterOptionsCleared","areFiltersCleared","o","c","filterDiv","flexDirection","sortingButtons","rightLayout","boxShadow","datesLayout","flexGrow","setOpen","filterDateChange","date","cDate","Object","assign","Grid","container","xs","sm","FormControlLabel","control","generalOptions","filterOptionsChanged","AutocompleteChip","justify","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","Button","marginTop","filters","clearFilters","buttonsDiv","content","breakpoints","down","up","autocomplete","borderBottom","outline","setData","pageData","setPageData","setIsLoading","getPlaceNameById","i","placeId","requestAllPlaces","p","parseData","placesData","list","anchorEl","setAnchorEl","Boolean","action","tmp","startIcon","priceRange","averageTimeSpent","closeButton","right","grey","open","setDialogOpen","setText","setUrl","setError","Dialog","fullWidth","DialogTitle","DialogContent","dividers","ev","DialogActions","autoFocus","validateInput","placeInfo","setPlaceInfo","selectedSources","setSelectedSources","updatePlaceInfo","newValue","place","valuetext","setAvailableSources","dialogOpen","availableSources","val","required","placeholder","InputLabelProps","shrink","multiline","rows","Slider","marginLeft","defaultValue","getAriaValueText","step","max","marks","FormControl","InputLabel","Select","native","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","pressDelay","disableAutoscroll","onSortEnd","oldIndex","newIndex","arrayMove","axis","acceptedFileFormats","dropzoneArea","onCloseCallback","onFinishCallback","loading","selectedFiles","setSelectedFiles","acceptedFiles","maxFileSize","showAlerts","dropzoneProps","disabled","filesLimit","onDrop","files","existingFiles","file","existingFile","imagefile","FormData","append","finally","addImageDialogOpen","setAddImageDialogOpen","handleAddPhoto","Geocode","setApiKey","geocodeFromLatLng","newLat","newLng","fromLatLng","address","results","formatted_address","addressArray","address_components","city","types","long_name","getCity","country","getCountry","county","getCounty","municipality","getMunicipality","latitude","longitude","isLocked","locationCallback","errorParsingLocation","handleKeyPress","which","keyCode","test","fromAddress","geometry","location","lat","lng","loc","split","parseFloat","onKeyPress","onPlaceSelected","navigator","geolocation","getCurrentPosition","coords","alert","setIsLocked","Switch","old","Alert","severity","CustomControlsManager","context","window","google","maps","ControlPosition","TOP_LEFT","MAP","controlDiv","document","createElement","controls","removeAt","createPortal","contextTypes","PropTypes","object","MapComponent","withGoogleMap","defaultZoom","ref","refInstance","center","defaultCenter","largeIcon","locationMarker","setLocationMarker","setParkingLocationMarker","otherPlacesData","setOtherPlacesData","infoWindows","setInfoWindows","refMap","useRef","s","range","l","Fragment","loadingElement","containerElement","mapElement","zIndex","icon","scaledSize","Size","origin","Point","markers","onCloseClick","Avatar","alt","visible","draggable","onDragEnd","latLng","BOTTOM_CENTER","mapCenter","current","getCenter","locationData","setLocationData","setParkingLocation","changeLocationData","setMainInfoWindow","onMarkerDragEnd","setPosition","mainInfoWindow","parking","parkingData","calcCrow","nearestParkingCount","addNewParking","parkingIsAttached","selectedParkingData","parkingId","anchor","parkingInfoWindows","setParkingInfoWindows","addExistingParking","lat1","lon1","lat2","lon2","dLat","toRad","dLon","sin","cos","atan2","sqrt","Value","PI","ParkingMap","setParkingData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","SortableItem","elevation","SortableList","oldArray","EditDialogContext","dialogConfig","addEditDialogConfig","removeEditDialogConfig","defaultOptions","errorMessages","explanation","onDoneCallback","textFieldLabel","defaultText","EditDialogProvider","setDialogConfig","UseEditDialogContext","selectedTags","setSelectedTags","availableCategories","setAvailableCategories","availableTags","setAvailableTags","tagName","newTag","tagId","1","2","categoryName","newCat","categoryId","initialScheduleData","openDay","closeDay","openTime","closeTime","marginRight","ReviewCard","review","CardContent","photoUrl","surname","Rating","rating","readOnly","upvotes","timeAdded","reviewsInfo","reviews","overflowX","setReviews","filterBy","setFilterBy","getReviewsForPlace","debounceScroll","debounce","round","scrollWidth","scrollLeft","clientWidth","totalReviews","handleScrollDebounced","handleClose","overallStarRating","precision","aria-describedby","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","RadioGroup","Radio","onScroll","persist","handleScroll","AppBarTitleContext","setTitle","AppBarTitleProvider","UseAppBarTitleContext","flexFlow","picker","intervalRightSide","intervalLeftSide","intervals","setIntervals","currentInterval","lastAccommodation","lastAccommodationEnabled","setLastAccommodationEnabled","lastAccommodationTime","setLastAccommodationTime","getCloseDay","currentPeriod","isBefore","oldIntervals","useTheme","largeScreen","useMediaQuery","only","TimePicker","ampm","InputProps","disableUnderline","state","scheduleData","setScheduleData","globalTime","periods","ignoreOpenTime","ignoreCloseTime","ignoreGlobalTime","setIgnoreGlobalTime","Divider","pickerStyle","headerLeft","globalTimeEditLayout","globalTimeEditLeft","globalTimePicker","setPeriods","setGlobalTime","handleIntervalChange","newIntervals","oldPeriods","filtered","oldData","schedule","scheduleDefault","DatePicker","views","from","to","generateWeekdayViews","isScheduleEnabled","setIsScheduleEnabled","float","paperContent","loader","bottom","match","description","website","phoneNumber","hasSchedule","isPublic","isVerified","source","price","parkingMarkerData","setParkingMarkerData","sources","setSources","setPlaceId","firstTimeLoading","setFirstTimeLoading","checkErrors","ColorButton","green","formFeedback","saveChanges","formPlaceInfo","plc","updateAll","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","updateSources","er","tags","responses","CircularProgress","obj","CategoriesDisplay","SubheaderDisplay","media","expand","transform","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","renderActionArea","CardHeader","subheader","substring","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debouncedInput","InputBase","orientation","topBar","searchBox","placeApiCard","isLoadingData","setIsLoadingData","word","query","encodeURI","elementType","isFitWidth","disableImagesLoaded","updateOnEachImageLoad","boxSizing","Copyright","getFullYear","minHeight","footer","cardRoot","details","cover","addParkingWrapper","elementData","addTransportCallback","displayNoTransportWarning","transportTypes","transportSelectWrapper","transportSelect","transportId","transportChangeCallback","transportRemoveCallback","currentTransport","setCurrentTransport","NativeSelect","transport","TourPlaceSortable","removePlaceCallback","tourPlaceComponent","TransportItemSortable","currentDay","removeElementCallback","tourInfo","shouldDisplayNoTransportWarning","elements","days","tour","ElementType","elementIdentifier","tourInfoReducer","errorInfo","setErrorInfo","day","shortid","generate","searchInputComponent","placeCard","addPlaceCallback","apiPlacesFound","setApiPlacesFound","localPlacesFound","setLocalPlacesFound","apiPlacesLoading","setApiPlacesLoading","localPlacesLoading","setLocalPlacesLoading","placeType","genProps","mappedPlaces","forEach","generatePlaceCards","radioButtonArea","cardArea","descriptionInput","headerWrap","onSelectCallback","handleRemoveDay","updateDescriptionGlobally","DayCardSortable","dayInfo","removeDayCallback","addDayButton","footerWrapper","setCurrentDay","removeDay","TourDataReducer","some","findIndex","splice","nameField","descriptionField","publicityDiv","tourId","errors","titleMissing","shouldDisplayTitleMissingError","showErrors","helperText","isPublished","MyMapComponent","addPlace","directions","setDirection","directionPlaces","setDirectionPlaces","places","setPlaces","placesInfoWindows","setPlacesInfoWindows","loadingArea","setLoadingArea","fetchPlaces","locations","Array","fill","PlacesMarkers","constructPlaceData","waypoints","stopover","shift","destination","pop","DirectionsService","route","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","searchAreaComponent","useMemo","TOP_CENTER","suppressMarkers","marker","labelOrigin","info","sampleTourData","overflowY","leftLayout","actionsArea","setTourId","useReducer","dispatchTourInfo","handleAddPlaceClick","loadData","aggregatedDays","aggregatedElements","aggregatedPlace","fk_transportId","aggregatedDay","aggregatedTour","parseTourInfoResponse","handleSave","containsErrors","keys","keyIndex","element","j","dayInfoWithoutDesc","dayCopy","mapComponent","tourDaysComponents","getAllTours","handleClick","fq","join","categoriesHeadCells","tagsHeadCells","buttonWrapper","setTags","includes","UpdateUserDialog","userData","availableRoles","setAvailableRoles","selectedRoles","setSelectedRoles","roles","maxWidth","roleId","userId","textField","formControl","password","email","user","setUser","setLoading","userDataChanged","addUser","hasErrors","medium","userTmp","FormHelperText","gutterBottom","selectedUser","setSelectedUser","allRoles","setAllRoles","openUpdateDialog","setOpenUpdateDialog","openAddDialog","setOpenAddDialog","requestUsers","usersData","rolesList","parsedRoles","AuthContext","AuthProvider","currentUser","setCurrentUser","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","PlacesWithContext","TourWithContext","Appbar","useLocation","handleDrawerClose","handleListItemClick","RegExp","pathname","go","hasPermission","perm","permissions","permission","CssBaseline","AppBar","edge","Drawer","List","ListItem","Link","ListItemText","exact","Home","Tours","AddPlace","ApiPlaces","Resources","ManageUsers","Redirect","App","Component","form","submit","loaderMain","AuthenticatedRoute","rest","Route","render","routeProps","SnackbarFeedback","Snackbar","autoHideDuration","AlertDialogFeedback","remove","DialogContentText","TextInputDialog","inputText","setInputText","deInit","onInput","errorCode","ReactDOM","setEmail","setPassword","handleLogin","identifier","hasAccess","authority","checkAccess","authorities","refresh_token","Container","mt","getElementById"],"mappings":"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","file":"static/js/main.c434654b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/selectedTourIcon.4acac106.svg\";","module.exports = __webpack_public_path__ + \"static/media/selectedParking.102bdd14.svg\";","module.exports = __webpack_public_path__ + \"static/media/availableParking.6ac3f9ec.svg\";","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(1)\n    },\n    input: {\n        display: \"none\"\n    }\n});\n\n\n\nconst Home = props => {\n    const { classes } = props;\n\n    return (\n        <div>\n\n        </div>\n    );\n};\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit'\nimport TextField from \"@material-ui/core/TextField\"\nimport useDebounce from \"../helpers/debounce\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Chip from \"@material-ui/core/Chip\";\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, checkable} = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n\n                {checkable ? <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell> : null}\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right'  : 'left' }\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n    headCells: PropTypes.object.isRequired,\n    checkable: PropTypes.bool.isRequired\n};\n\n\n\n\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, title, changePageCallback, keyword, setKeyword, customToolbarElements} = props;\n\n\n    const debouncedSearch = useDebounce(keyword, 300);\n\n\n    useEffect( () => {\n            changePageCallback(1,keyword)\n        },\n        [debouncedSearch]\n    );\n\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    {title}\n                </Typography>\n            )}\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : <div style={{display: \"flex\", alignItems: \"center\"}}>\n                <TextField id=\"standard-basic\" label=\"Search\" onChange={ event =>{setKeyword(event.target.value)}}/>\n                {!!customToolbarElements ? customToolbarElements : null}\n            </div>}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n};\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    centerCell: {\n        textAlign: \"center\",\n        width: '100%'\n    },\n    rowNotPublished:{\n        backgroundColor: \"#ffcdd2\"\n    },\n    rowNotVerified:{\n        backgroundColor: \"#fff9c4\"\n    },\n    rowBasic: {\n        backgroundColor: \"#FFFFFF\"\n    }\n\n}));\n\nexport default function TableComponent({title, searchFunction, headCells, pagingInfo, data, checkable, changePageCallback, updateCallback, removeCallback, id, isLoading, customToolbarElements}) {\n\n    TableComponent.propTypes = {\n        title: PropTypes.string.isRequired,\n        headCells: PropTypes.object.isRequired,\n        pagingInfo: PropTypes.object,\n        data: PropTypes.object.isRequired,\n        checkable: PropTypes.bool.isRequired,\n        changePageCallback: PropTypes.func,\n        updateCallback: PropTypes.func,\n        removeCallback: PropTypes.func,\n        id: PropTypes.string.isRequired,\n        isLoading: PropTypes.bool,\n        customToolbarElements: PropTypes.object\n    };\n\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [keyword, setKeyword] = useState('');\n\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = data.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleCheckboxChange = (event, name) =>{\n\n            const selectedIndex = selected.indexOf(name);\n            let newSelected = [];\n\n            if (selectedIndex === -1) {\n                newSelected = newSelected.concat(selected, name);\n            } else if (selectedIndex === 0) {\n                newSelected = newSelected.concat(selected.slice(1));\n            } else if (selectedIndex === selected.length - 1) {\n                newSelected = newSelected.concat(selected.slice(0, -1));\n            } else if (selectedIndex > 0) {\n                newSelected = newSelected.concat(\n                    selected.slice(0, selectedIndex),\n                    selected.slice(selectedIndex + 1),\n                );\n            }\n\n            setSelected(newSelected);\n\n    };\n\n    const handleClick = (event, rowId) => {\n        if(updateCallback !== undefined){\n            updateCallback(rowId)\n        }\n    };\n\n\n    const handleChangePage = (event, newPage) => {\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n        console.log(\"handleChangeRowsPerPage\")\n\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                {isLoading ? <LinearProgress/> : null }\n                <EnhancedTableToolbar\n                    title={title}\n                    numSelected={selected.length}\n                    changePageCallback={changePageCallback}\n                    keyword={keyword}\n                    setKeyword={setKeyword}\n                    customToolbarElements={customToolbarElements}\n                />\n                 <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={data.length}\n                            headCells={headCells}\n                            checkable={checkable}\n                        />\n\n\n                        <TableBody>\n                            {stableSort(data, getComparator(order, orderBy))\n                                .filter(item => searchFunction === undefined ? true : searchFunction(keyword, item))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    const rowStyle = row['isVerified'] !== undefined  && row['isVerified'] === false ? classes.rowNotVerified :\n                                        row['isPublic'] !== undefined && row['isPublic'] === false ? classes.rowNotPublished :  classes.rowBasic;\n\n                                    return (\n                                        <TableRow\n                                            className={rowStyle}\n                                            hover\n                                            onClick={(event) => handleClick(event, row[id])}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row[id]}\n                                            selected={isItemSelected}\n                                        >\n                                            {checkable ? <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    onChange={(event)=>handleCheckboxChange(event, row.name)}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell> : null}\n\n                                            {headCells.map(header=>{\n                                                if(header.isId){\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\n                                                            {row[header.id]}\n                                                        </TableCell>\n                                                }else if(header.id === 'actions' ){\n                                                        return <TableCell >\n                                                            <div onClick={e => {e.stopPropagation(); e.preventDefault()}}>\n                                                                {updateCallback !== undefined ? <IconButton onClick={(event)=>{\n                                                                    updateCallback(row[id])\n                                                                    return 0\n                                                                }} size=\"small\" aria-label=\"edit\" >\n                                                                    <EditIcon fontSize=\"small\" />\n                                                                </IconButton> : null}\n\n                                                                {removeCallback !== undefined ? <IconButton size=\"small\" aria-label=\"delete\" onClick={()=>removeCallback(row[id])}>\n                                                                    <DeleteIcon  fontSize=\"small\" />\n                                                                </IconButton> : null}\n\n                                                            </div>\n                                                            </TableCell>\n                                                }else{\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\n                                                }\n\n                                            })}\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows}}>\n\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\n                                        <TableCell colSpan={6} className={classes.centerCell}>\n                                            <Typography variant=\"h6\" noWrap>\n                                                No results\n                                            </Typography>\n                                        </TableCell>}\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10]}\n                    component=\"div\"\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\n\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\nexport default function useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n\n        [value]\n    );\n\n    return debouncedValue;\n}","import { createBrowserHistory as history} from 'history';\n\nexport default history();","export const getAccessToken = () => localStorage.getItem('access_token');\nexport const getRefreshToken = () => localStorage.getItem('refresh_token');\nexport const isAuthenticated = () => !!getAccessToken();","import React from \"react\";\nimport axios from \"axios\"\nimport history from \"../helpers/history\";\nimport {getAccessToken, getRefreshToken} from \"../helpers/tokens\";\nimport API from \"./API\";\n\nconst request = async function (options, contentType, authorize= true) {\n\n    const header = {\n        'Content-Type': (contentType == null) ? 'application/json' : contentType,\n        'Accept': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Authorization': \"Bearer \" + getAccessToken()\n    };\n\n    if(!authorize){\n        delete header['Authorization']\n    }\n\n    const client = axios.create({\n        baseURL: false ? \"http://localhost:8080/\" : \"https://www.traveldirection.ax.lt:8080/\",\n        headers: header\n    });\n\n\n\n\n    // Add a response interceptor\n    client.interceptors.response.use(function (response) {\n        return response;\n    },  function (error) {\n\n        // console.log(\"Interceptor error\", error);\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        // Do something with response error\n        const originalRequest = error.config;\n        const url = originalRequest.url;\n        const status = error.response.status;\n\n\n        if (error.response.status === 408 || error.code === 'ECONNABORTED' || error.code === \"ERR_INTERNET_DISCONNECTED\") {\n            console.log(`A timeout happend on url ${error.config.url}`)\n            return Promise.reject(error)\n        }\n\n        // Logout user if token refresh didn't work or user is disabled\n        if (url === 'api/v1/auth/refresh') {\n            console.log(\"Asking for refresh token\");\n            console.log(\"Unable to issue new JWT token. Redirecting to login page!\");\n            localStorage.removeItem(\"access_token\");\n            localStorage.removeItem(\"refresh_token\");\n            history.push(\"/login\");\n            return Promise.reject(error);\n        }else if(url.startsWith(\"api/v1/auth\")){\n            return Promise.reject(error);\n        }\n\n        //Do not request for new JWT if response code is not Authorized\n        if (status !== 403) {\n            return Promise.reject(error);\n        }\n\n        if (status === 403 && originalRequest._retry === undefined) {\n            console.log(\"Users token has expired!\");\n\n            originalRequest._retry = true;\n\n            return API.Auth.refreshToken(getRefreshToken()).then(response=>{\n                    console.log(\"Retrieving new token and making the same request!\");\n                    let token = response.access_token;\n                    originalRequest.headers.Authorization = \"Bearer \" + token;\n                    localStorage.setItem(\"access_token\", token);\n                    return axios(originalRequest)\n            }).catch(err=>{\n                return Promise.reject(error)\n            })\n        }\n\n        return Promise.reject(error)\n    });\n\n    const onSuccess = function (response) {\n        // console.log('Request Successful!', response);\n        return response.data;\n    };\n\n    const onError = function (error) {\n        if (error.response) {\n            console.debug('Status:', error.response.status);\n            if (error.response.status === 403) {\n                history.push(\"/login\")\n            }\n            console.debug('Data:', error.response.data);\n            console.debug('Headers:', error.response.headers);\n        } else {\n            console.debug('Error Message:', error.message);\n        }\n\n        return Promise.reject(error.response.data);\n    };\n\n    return client(options)\n        .then(onSuccess)\n        .catch(onError);\n};\n\nconst getRequest = function (path, urlData = \"\") {\n    return request({\n        url: path + urlData,\n        method: 'GET'\n    });\n};\n\nconst postRequest = function (path, data, urlData = \"\", authorize=true) {\n    console.log(\"Authorize\",authorize);\n    return request({\n        url: path + urlData,\n        method: 'POST',\n        data: data\n    }, null, authorize);\n};\n\nconst postMultipartRequest = function (path, formData) {\n    return request({\n        url: path,\n        method: 'POST',\n        data: formData\n    }, 'multipart/form-data' /*'application/x-www-form-urlencoded'*/);\n};\n\nconst RequestType = {\n    getRequest, postRequest, postMultipartRequest\n};\n\nexport default RequestType\n\n\n","import RequestType from '../Networking/NetworkLayerCentral'\n\n//Places\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\nconst getClosesPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin/closest\", urlParams);\n\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\nconst removePlace = (urlParams) => RequestType.getRequest(\"api/v1/place/delete\", urlParams);\n\nconst getAllCities = (urlParams) =>RequestType.getRequest(\"api/v1/place/city/all\",urlParams);\nconst getAllCounties = (urlParams) =>RequestType.getRequest(\"api/v1/place/county/all\",urlParams);\nconst getAllCountries = (urlParams) =>RequestType.getRequest(\"api/v1/place/country/all\",urlParams);\nconst getAllMunicipalities = (urlParams) =>RequestType.getRequest(\"api/v1/place/municipality/all\",urlParams);\n\nconst Places = {getClosesPlacesAdmin,getAllCities,getAllCounties, getAllCountries, getAllMunicipalities, getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces, removePlace};\n\n//Tags\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\nconst removeTags = (params) => RequestType.postRequest(\"api/v1/tags/delete\", params);\nconst updateTags = (params) => RequestType.postRequest(\"api/v1/tags/update\", params);\nconst Tags = {getAllTags, addTag, removeTags, updateTags};\n\n//Category\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\nconst removeCategory = (params) => RequestType.postRequest(\"api/v1/categories/delete\", params);\nconst updateCategory = (params) => RequestType.postRequest(\"api/v1/categories/update\", params);\nconst getAllCategories = (params) => RequestType.getRequest(\"api/v1/categories/all\", params);\nconst Categories = {addCategory, getAllCategories, removeCategory, updateCategory};\n\n//Photo\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\nconst Photos = {addPhoto, uploadPhoto};\n\n\n//Parking\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\nconst Parking = {getParkingByLocation, insertNewParking};\n\n\n//TagsPlace\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\nconst TagsPlace = {updateTagsForPlace};\n\n//CategoriesPlace\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\nconst CategoriesPlace = {updateCategoriesForPlace};\n\n//PhotoPlace\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\nconst ParkingPlace = {updateParkingForPlace};\n\n//PhotoPlace\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\nconst PhotoPlace = {updatePhotoForPlace};\n\n//Schedule\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\nconst Schedule = {updateScheduleForPlace};\n\n//ReviewsPlace\nconst getPlaceReviews = (urlParams) => RequestType.getRequest(\"api/v1/reviews/all\", urlParams);\nconst Reviews = {getPlaceReviews};\n\n//Sources\nconst getSources = () => RequestType.getRequest(\"api/v1/source/all\");\nconst addSource = (data) => RequestType.postRequest(\"api/v1/source/insert\",data);\nconst Source = {getSources, addSource};\n\n//SourcePlace\nconst updateSourcesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/sourceplace/update\", data, urlParams);\nconst SourcePlace = {updateSourcesForPlace};\n\n//Tours\nconst insertTour = (data) => RequestType.postRequest(\"api/v1/tour/insert\",data)\nconst updateTour = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/update\",data, urlParams)\nconst updateTourTags = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/tags/update\",data, urlParams)\nconst getTour = (urlParams) => RequestType.getRequest(\"api/v1/tour\",urlParams)\nconst getTourTags = (urlParams) => RequestType.getRequest(\"api/v1/tour/tags\",urlParams)\nconst removeTour = (urlParams) => RequestType.getRequest(\"api/v1/tour/delete\", urlParams);\nconst getAllToursAdmin = (urlParams) => RequestType.getRequest(\"api/v1/tour/searchadmin\", urlParams);\nconst Tour = {insertTour, getTour, updateTour, getAllToursAdmin, removeTour, getTourTags, updateTourTags}\n\n//Auth\nconst login = (data) => RequestType.postRequest(\"api/v1/auth/login\", data, \"\", false);\nconst register = (data) => RequestType.postRequest(\"api/v1/auth/registration\",data, \"\", false);\nconst refreshToken = (data) => RequestType.postRequest(\"api/v1/auth/refresh\", data, \"\", false);\n\nconst Auth = {register, login, refreshToken};\n\n//User\nconst getUserProfile = () => RequestType.getRequest(\"api/v1/user/info\");\nconst getAllUsers = (urlParams) => RequestType.getRequest(\"api/v1/user/search\", urlParams);\nconst getAllRoles = () => RequestType.getRequest(\"api/v1/user/roles/all\");\nconst setRoles = (data) => RequestType.postRequest(\"api/v1/user/setRoles\", data);\n\n\nconst User = {setRoles, getAllRoles, getAllUsers, getUserProfile};\n\nconst API = {User, Auth, Tour, SourcePlace, Source,Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule, Reviews};\n\nexport default API\n\n","// src/common/providers/APIErrorProvider/index.js\nimport React, { useState, useCallback } from 'react';\n\nexport const AlertDialogContext = React.createContext({\n    alertConfig: null,\n    addAlertConfig: () => {},\n    removeAlertConfig: () => {}\n});\n\nexport default function AlertDialogProvider({ children }) {\n    const [alertConfig, setAlertConfig] = useState(null);\n    const contextValue = {\n        alertConfig,\n        addAlertConfig: (title, message, actions, onClose = undefined) => setAlertConfig({ title, message, actions, onClose}),\n        removeAlertConfig: () => setAlertConfig(null)\n    };\n\n    return (\n        <AlertDialogContext.Provider value={contextValue}>\n            {children}\n        </AlertDialogContext.Provider>\n    );\n}","import React, {useContext} from \"react\";\nimport {AlertDialogContext} from \"./AlertDialogContext\";\n\nexport default function UseAlertDialogContext() {\n    const { alertConfig, addAlertConfig, removeAlertConfig } = useContext(AlertDialogContext);\n    return { alertConfig, addAlertConfig, removeAlertConfig };\n}\n","const Strings = {\n    DIALOG_PLACE_PUBLISH_TITLE : 'Place publicity',\n    DIALOG_PLACE_PUBLISH_MESSAGE: \"This place will be visible for all users. Are you sure?\",\n    DIALOG_PLACE_UNPUBLISH_MESSAGE :\"This place will not be visible anymore. Are you sure?\",\n\n    DIALOG_PLACE_INSERT_TITLE: \"Insert place\",\n    DIALOG_PLACE_INSERT: \"Are you sure you want to insert this place?\",\n\n    DIALOG_PLACE_UPDATE_TITLE: \"Update place\",\n    DIALOG_PLACE_UPDATE: \"Are you sure you want to make changes to this place?\",\n\n    DIALOG_PLACE_VERIFY_TITLE: \"Place verification\",\n    DIALOG_PLACE_VERIFY_MESSAGE: \"This is a user's suggested place. Are you sure you want to verify this place and make it visible to others?\",\n\n    DIALOG_PLACE_DELETE_TITLE: \"Delete place\",\n    DIALOG_PLACE_DELETE_MESSAGE: \"This action will remove this place permanently. Are you sure you want to proceed?\",\n\n    DIALOG_TOUR_DELETE_TITLE: \"Delete tour\",\n    DIALOG_TOUR_DELETE_MESSAGE: \"This action will remove this tour permanently. Are you sure you want to proceed?\",\n\n    SNACKBAR_PLACE_INSERTED_SUCCESS: \"Place inserted successfully\",\n    SNACKBAR_PLACE_REMOVE_SUCCESS: \"Place was removed successfully\",\n\n    SNACKBAR_TOUR_INSERTED_SUCCESS: \"Tour inserted successfully\",\n    SNACKBAR_TOUR_REMOVE_SUCCESS: \"Tour was removed successfully\",\n\n    SNACKBAR_ERROR: \"Something went wrong!\",\n    SNACKBAR_CHANGES_SAVED: \"All changes saved!\"\n};\n\nexport default Strings;","import React, { useState, useCallback } from 'react';\nimport { useContext } from 'react';\n\nexport const SnackbarContext = React.createContext({\n    config: null,\n    addConfig: () => {},\n    removeConfig: () => {}\n});\n\n\nexport default function SnackbarProvider({ children }) {\n    const [config, setConfig] = useState(null);\n\n    const removeConfig = () => setConfig(null);\n    const addConfig = (success, message) => setConfig({ success, message });\n\n    const contextValue = {\n        config,\n        addConfig: (success, message) => addConfig(success, message),\n        removeConfig: () => removeConfig()\n    };\n\n    return (\n        <SnackbarContext.Provider value={contextValue}>\n            {children}\n        </SnackbarContext.Provider>\n    );\n}","import { useContext } from 'react';\nimport {SnackbarContext} from \"./SnackbarContext\";\n\nexport default function UseSnackbarContext() {\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\n    return { config, addConfig, removeConfig };\n}\n","\nimport React, {useEffect, useState} from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Paper from \"@material-ui/core/Paper\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = theme => ({\n    autoComplete: {\n        margin: theme.spacing(1)\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'left',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(1),\n        margin: 0,\n    },\n    autoCompleteChipContainer: {\n        padding: theme.spacing(1)\n    }\n});\n\nfunction AutoCompleteChip(props){\n\n    const {options, setOptions, selectedOptions, setSelectedOptions, classes, label, id, name} = props;\n    const [initialData, setInitialData] = useState([]);\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\n    const [firstLoad, setFirstLoad] = useState(true);\n\n    function handleDelete(data) {\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\n        setOptions(\n            [\n                ...options,\n                data\n            ]\n        )\n    }\n\n    useEffect(()=>{\n        if(selectedOptions.length===0){\n\n            setOptions(\n                initialData\n            )\n        }\n    },[selectedOptions]);\n\n    useEffect(()=>{\n        if(firstLoad && options.length>0){\n            let data = [];\n            options.map(row=>{\n                let found = false;\n                selectedOptions.map(row1=>{\n                    if(JSON.stringify(row) === JSON.stringify(row1)){\n                        found = true\n                    }\n                });\n                if(!found){\n                   data.push(row)\n                }\n            });\n            setOptions(data);\n            setInitialData(data);\n            setFirstLoad(false)\n        }\n    },[options]);\n\n    function handleInput(event, value){\n        setCurrentVal({\"name\": \"\"});\n        setSelectedOptions(\n            [\n                ...selectedOptions,\n                value\n            ]\n        );\n        setOptions(options.filter(item => item !== value))\n    }\n\n    return(\n        <div>\n            <Box  className={classes.autoCompleteChipContainer}>\n                {selectedOptions.length !== 0 &&\n                <Box component=\"ul\" className={classes.root}>\n                    {\n                        selectedOptions.map(option => {\n                            return id !== undefined ?\n                                <li key={option[id]}>\n                                    <Chip\n                                        variant=\"outlined\"\n                                        label={name!== undefined ? option[name] : option.name}\n                                        onDelete={() => handleDelete(option)}\n                                        className={classes.chip}\n                                    />\n                                </li>\n                                :\n                                <li key={option}>\n                                        <Chip\n                                            variant=\"outlined\"\n                                            label={option}\n                                            onDelete={() => handleDelete(option)}\n                                            className={classes.chip}\n                                        />\n                                </li>\n                                }\n\n                            )\n                    }\n                </Box>\n                }\n\n                <Autocomplete\n                    className={classes.autoComplete}\n                    value={getCurrentVal}\n                    options={options}\n                    onChange={handleInput}\n                    disableClearable\n                    getOptionLabel={(option) =>  id!==undefined ? name!== undefined ? option[name] : option.name : option}\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n                />\n            </Box>\n        </div>\n    )\n}\n\nAutoCompleteChip.propTypes = {\n    setSelectedOptions: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired,\n    setOptions: PropTypes.func.isRequired,\n    selectedOptions: PropTypes.array.isRequired,\n    classes: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(AutoCompleteChip)","import React, {useEffect, useState} from \"react\";\nimport API from \"../Networking/API\";\nimport * as moment from \"moment\";\nimport {func} from \"prop-types\";\nexport const PlacesFilterContext = React.createContext();\nvar buildUrl = require('build-url');\n\n\nconst initialDates = {\n    insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\n    insertionEnd: moment(new Date()).add(1,'day').format(),\n    modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\n    modificationEnd: moment(new Date()).add(1,'day').format()\n};\n\nexport const PlacesFilterProvider = ({children}) => {\n    const [categories, setCategories] = useState([]);\n    const [selectedCategories, setSelectedCategories] = useState([]);\n\n    const [cities, setCities] = useState([]);\n    const [selectedCities, setSelectedCities] = useState([]);\n\n    const [countries, setCountries] = useState([]);\n    const [selectedCountries, setSelectedCountries] = useState([]);\n\n    const [municipalities, setMunicipalities] = useState([]);\n    const [selectedMunicipalities, setSelectedMunicipalities] = useState([]);\n\n    const [counties, setCounties] = useState([]);\n    const [selectedCounties, setSelectedCounties] = useState([]);\n\n    const [initialLoading, setInitialLoading] = useState(true);\n    const [resetFilterOptions, setResetFilterOptions] = useState(false);\n\n    const [filterOptions, setFilterOptions] = useState([\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\n\n    const [dates, setDates] = useState(initialDates);\n\n    const [filterQuery, setFilterQuery] = useState( buildUrl(null, {\n        queryParams: {\n            di: [dates.insertionStart, dates.insertionEnd],\n            dm: [dates.modificationStart, dates.modificationEnd],\n            filterOptions: parseFilterOptions(),\n            categories: parseCategories(),\n            countries: selectedCountries,\n            cities: selectedCities,\n            municipalities: selectedMunicipalities\n        }\n    }));\n\n    const getCategories = (params=\"\") => {\n        API.Categories.getAllCategories().then(response=>{\n            setCategories(response);\n            // console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        });\n    };\n\n    const getAllCities = (restrictions=\"\") =>{\n        API.Places.getAllCities(restrictions).then(res=>{\n            setCities(res)\n        }).catch(err=>{\n        })\n    };\n\n    const getAllCounties = () =>{\n        API.Places.getAllCounties().then(res=>{\n            setCounties(res)\n        }).catch(err=>{\n        })\n    };\n\n    const getAllCountries = () =>{\n        API.Places.getAllCountries().then(res=>{\n            setCountries(res)\n        }).catch(err=>{\n        })\n    };\n\n    const getAllMunicipalities = (restrictions=\"\") =>{\n        API.Places.getAllMunicipalities(restrictions).then(res=>{\n            setMunicipalities(res)\n        }).catch(err=>{\n        })\n    };\n\n\n\n    useEffect(()=>{\n        if(!initialLoading){\n            // console.log(\"Selected countries changed\")\n            getAllMunicipalities(buildUrl(null, {\n                queryParams: {\n                    countryRestrictions: selectedCountries\n                }\n            }));\n            getAllCities(buildUrl(null, {\n                queryParams: {\n                    munRestrictions: selectedMunicipalities,\n                    countryRestrictions: selectedCountries\n                }\n            }))\n        }\n    },[selectedCountries]);\n\n\n    useEffect(()=>{\n        if(!initialLoading){\n            // console.log(\"Selected munis changed\")\n            getAllCities(buildUrl(null, {\n                queryParams: {\n                    munRestrictions: selectedMunicipalities,\n                    countryRestrictions: selectedCountries\n                }\n            }))\n        }\n    }, [selectedMunicipalities]);\n\n    useEffect(()=>{\n        console.log(\"Fetching...\");\n        Promise.all([\n            getCategories(),\n            getAllCities(),\n            getAllCountries(),\n            getAllCounties(),\n            getAllMunicipalities()\n        ]).then(response => {\n            setInitialLoading(false);\n            // console.log(\"All data received!\")\n        }).catch(err => {\n        })\n    },[]);\n\n    useEffect(()=>{\n        if(!initialLoading){\n            if(!resetFilterOptions){\n                setFilterQuery(buildUrl(null, {\n                    queryParams: {\n                        di: [dates.insertionStart, dates.insertionEnd],\n                        dm: [dates.modificationStart, dates.modificationEnd],\n                        o: parseFilterOptions(),\n                        c: parseCategories(),\n                        countries: selectedCountries,\n                        cities: selectedCities,\n                        municipalities: selectedMunicipalities\n                    }\n                }))\n            }else{\n                if(areFiltersCleared()){\n                    setResetFilterOptions(false)\n                }\n            }\n        }\n    },[selectedCategories, selectedCities,selectedCountries,selectedMunicipalities,dates,filterOptions,resetFilterOptions]);\n\n    function areFiltersCleared() {\n        let filterOptionsCleared = true;\n        filterOptions.map(row=>{\n            if(row.filter){\n                filterOptionsCleared = false\n            }\n        });\n        return filterOptionsCleared &&\n            selectedCategories.length === 0 &&\n            selectedCities.length === 0 &&\n            selectedCountries.length ===0 &&\n            dates.insertionStart === initialDates.insertionStart &&\n            dates.modificationStart === initialDates.modificationStart\n    }\n\n    function parseCategories(){\n        let cats = [];\n        selectedCategories.map(row=>{\n            cats.push(row.name)\n        });\n        return cats\n    }\n\n    function parseFilterOptions(){\n        let options = [];\n        filterOptions.map(row=>{\n            if(row.filter === true)\n                options.push(row.filterName)\n        });\n        return options\n    }\n\n    const contextValue = {\n        filterQuery,\n        setResetFilterOptions,\n\n        dates,\n        setDates,\n\n        filterOptions,\n        setFilterOptions,\n\n        categories,\n        setCategories,\n        selectedCategories,\n        setSelectedCategories,\n\n        counties,\n        setCounties,\n        selectedCounties,\n        setSelectedCounties,\n\n        cities,\n        setCities,\n        selectedCities,\n        setSelectedCities,\n\n        countries,\n        setCountries,\n        selectedCountries,\n        setSelectedCountries,\n\n        municipalities,\n        setMunicipalities,\n        selectedMunicipalities,\n        setSelectedMunicipalities\n    };\n\n    return (\n        <PlacesFilterContext.Provider value={contextValue}>\n            {children}\n        </PlacesFilterContext.Provider>\n    );\n};","import React, {useContext, useEffect, useState} from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\nimport AutocompleteChip from \"../AutocompleteChip\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport moment from \"moment\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport MuiPickersUtilsProvider from \"@material-ui/pickers/MuiPickersUtilsProvider\";\nimport Button from \"@material-ui/core/Button\";\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst style = theme =>({\n    filterDiv: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    sortingButtons: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: theme.spacing(1),\n        height: \"100%\"\n\n    },\n    rightLayout: {\n        boxShadow: \"0 0 1px 0 #666\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: theme.spacing(1)\n    },\n    datesLayout:{\n        padding: theme.spacing(1),\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n    },\n    root: {\n        flexGrow: 1,\n        width: \"100%\",\n        marginBottom: \"8px\",\n        boxShadow: \"0 0 1px 0 #666\",\n        padding: theme.spacing(1)\n    },\n    paper: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: theme.spacing(2),\n        textAlign: 'center'\n\n    }\n});\n\n\n\nfunction FilterBlock({classes, setOpen}) {\n    const {\n        categories, setCategories, selectedCategories, setSelectedCategories,\n        cities, setCities, selectedCities, setSelectedCities,\n        countries, setCountries, selectedCountries, setSelectedCountries,\n        municipalities, setMunicipalities, selectedMunicipalities, setSelectedMunicipalities,\n        filterOptions, setFilterOptions, setResetFilterOptions,\n        dates, setDates} = useContext(PlacesFilterContext);\n\n    const filterOptionsChanged = (name) =>{\n        let generalOptions = Object.assign([], filterOptions);\n        generalOptions.map(row=>{\n            if(row.filterName === name){\n                row.filter = !row.filter\n            }\n        });\n        setFilterOptions(generalOptions)\n    };\n\n    function filterDateChange(date, id) {\n        let cDate = Object.assign( {}, dates);\n        cDate[id] = moment(date).format('YYYY-MM-DD');\n        setDates(cDate)\n    }\n\n    function clearFilters() {\n        setResetFilterOptions(true);\n\n        setSelectedCities([]);\n        setSelectedCountries([]);\n        setSelectedCategories([]);\n        setSelectedMunicipalities([]);\n\n        let filters = Object.assign(filterOptions, []);\n        filters.map(row=>{\n            row.filter = false\n        });\n        setFilterOptions(filters);\n\n        setDates({\n            insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\n            insertionEnd: moment(new Date()).add(1,'day').format(),\n            modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\n            modificationEnd: moment(new Date()).add(1,'day').format()\n        })\n    }\n\n    return <Paper className={classes.root}>\n        <Grid container direction=\"row\" spacing={3}>\n            <Grid item xs={12} sm={4}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"h6\">\n                        General options\n                    </Typography>\n                    <div className={classes.sortingButtons}>\n                        {filterOptions.map(row=>{\n                            return <FormControlLabel\n                                control={<Checkbox\n                                    checked={row.filter}\n                                    onChange={()=>filterOptionsChanged(row.filterName)}\n                                    name={row.filterName} />}\n                                label={row.filterLabel}\n                            />\n                        })}\n                    </div>\n                    <Typography variant=\"h6\">\n                        Filter by categories\n                    </Typography>\n                    <AutocompleteChip label=\"Select categories\"\n                                      id=\"categoryId\"\n                                      options={categories}\n                                      setOptions={setCategories}\n                                      selectedOptions={selectedCategories}\n                                      setSelectedOptions={setSelectedCategories}/>\n\n                </Paper>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n                <Paper className={classes.paper}>\n                            <Typography variant=\"h6\">\n                                Filter by dates\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                Insertion dates\n                            </Typography>\n                    <Grid container justify=\"space-around\">\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM-dd-yyyy\"\n                            margin=\"normal\"\n                            id=\"insertionStart\"\n                            onChange={(date)=>filterDateChange(date,\"insertionStart\")}\n                            value={dates.insertionStart}\n                            label=\"Date start\"\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM-dd-yyyy\"\n                            margin=\"normal\"\n                            value={dates.insertionEnd}\n                            onChange={(date)=>filterDateChange(date,\"insertionEnd\")}\n                            id=\"insertionEnd\"\n                            label=\"Date end\"\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Typography variant=\"subtitle1\">\n                        Modification dates\n                    </Typography>\n                    <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM-dd-yyyy\"\n                            margin=\"normal\"\n                            value={dates.modificationStart}\n                            onChange={(date)=>filterDateChange(date,\"modificationStart\")}\n                            id=\"modificationStart\"\n                            label=\"Date start\"\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM-dd-yyyy\"\n                            margin=\"normal\"\n                            value={dates.modificationEnd}\n                            onChange={(date)=>filterDateChange(date,\"modificationEnd\")}\n                            id=\"modificationEnd\"\n                            label=\"Date end\"\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </Grid>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"h6\">\n                        Filter by countries\n                    </Typography>\n                    <AutocompleteChip label=\"Select countries\"\n                                      options={countries}\n                                      setOptions={setCountries}\n                                      selectedOptions={selectedCountries}\n                                      setSelectedOptions={setSelectedCountries}/>\n                            <Typography variant=\"h6\">\n                                Filter by municipalities\n                            </Typography>\n                            <AutocompleteChip label=\"Select municipalities\"\n                                              options={municipalities}\n                                              setOptions={setMunicipalities}\n                                              selectedOptions={selectedMunicipalities}\n                                              setSelectedOptions={setSelectedMunicipalities}/>\n                            <Typography variant=\"h6\">\n                                Filter by cities\n                            </Typography>\n                            <AutocompleteChip label=\"Select cities\"\n                                              options={cities}\n                                              setOptions={setCities}\n                                              selectedOptions={selectedCities}\n                                              setSelectedOptions={setSelectedCities}/>\n                </Paper>\n            </Grid>\n        </Grid>\n        <Button\n            style={{marginTop: 8}}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => clearFilters()}>\n            Clear filters\n        </Button>\n    </Paper>\n}\n\nexport default withStyles(style)(FilterBlock)","import React, {useContext, useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TableComponent from \"../components/TableComponent\";\nimport API from \"../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Box from \"@material-ui/core/Box\";\nimport history from \"../helpers/history\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport FilterBlock from \"../components/add_place_components/FilterBlock\";\nimport {PlacesFilterContext} from \"../contexts/PlacesFilterContext\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    input: {\n        display: \"none\"\n    },\n    root: {\n        height: \"100vh\",\n        width: \"100%\",\n        overflow: \"auto\"\n    },\n    buttonsDiv: {\n        backgroundColor: \"red\",\n        justifyContent: \"flex-end\"\n    },\n    content: {\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    },\n    autocomplete: {\n        width: '200px',\n        height: '40px',\n        fontSize: \"14px\",\n        border: \"0\",\n        borderBottom: \"2px solid grey\",\n        outline: \"0\",\n        marginBottom: \"4px\"\n    }\n});\n\n\nconst headCells = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\n    {id: 'address', numeric: false, disablePadding: false, label: 'Address', isId: false},\n    {id: 'city', numeric: false, disablePadding: false, label: 'City', isId: false},\n    {id: 'country', numeric: false, disablePadding: false, label: 'Country', isId: false},\n    {id: 'dateModified', numeric: false, disablePadding: false, label: 'Date modified', isId: false},\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\n];\n\nfunction Places(props) {\n\n    const [data, setData] = useState([]);\n    const [pageData, setPageData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const {classes} = props;\n\n\n    const {filterQuery} = useContext(PlacesFilterContext);\n    const {addAlertConfig} = UseAlertDialogContext();\n    const {addConfig} = UseSnackbarContext();\n\n    useEffect(() => {\n        console.log(\"Filter query has changed!\")\n        setIsLoading(true);\n        requestAllPlaces();\n    }, [filterQuery]);\n\n\n    function getPlaceNameById(id) {\n        for (var i = 0; i < data.length; i++) {\n            if (data[i].placeId === id)\n                return data[i].name\n        }\n    }\n\n    function requestAllPlaces(p = 1, keyword = \"\") {\n        console.log(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\n        getAllPlaces(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\n    }\n\n    function parseData(data) {\n        setIsLoading(false);\n        let placesData = [];\n        data.list.map(row => {\n            placesData.push(row)\n        });\n\n        delete data.list;\n        setData(placesData);\n        console.log(placesData);\n        setPageData(data);\n    }\n\n    function updatePlaceCallback(id) {\n        history.push(\"/app/addplace/\" + id)\n    }\n\n    function removePlaceCallback(id) {\n        console.log(\"Name\", getPlaceNameById(id));\n        setIsLoading(true);\n        addAlertConfig(Strings.DIALOG_PLACE_DELETE_TITLE + \" - \" + getPlaceNameById(id), Strings.DIALOG_PLACE_DELETE_MESSAGE, [{\n            name: \"Remove\",\n            action: () => {\n                API.Places.removePlace(\"?p=\" + id).then(response => {\n                    let tmp = [];\n                    data.map(row => {\n                        if (row.placeId !== id) {\n                            tmp.push(row)\n                        }\n                    });\n                    setData(tmp);\n                    addConfig(true, Strings.SNACKBAR_PLACE_REMOVE_SUCCESS)\n                    setIsLoading(false)\n                }).catch(error => {\n                    setIsLoading(false);\n                    addConfig(false, Strings.SNACKBAR_ERROR)\n                })\n            }\n        }], () => {\n            setIsLoading(false)\n        })\n    }\n\n    const changePageCallback = (p = 0, keyword = \"\") => {\n        if(!isLoading){\n            setIsLoading(true);\n            requestAllPlaces(p, keyword)\n        }\n    };\n\n    //Sorting stuff\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n\n    const customToolbarElements = () => {\n        return <div>\n\n            {/*<Tooltip aria-describedby={id} title=\"Filter list\">*/}\n            {/*    <IconButton aria-label=\"filter list\" onClick={handleClick}>*/}\n            {/*        <FilterListIcon/>*/}\n            {/*    </IconButton>*/}\n            {/*</Tooltip>*/}\n            {/*<Popover*/}\n            {/*    id={id}*/}\n            {/*    open={open}*/}\n            {/*    anchorEl={anchorEl}*/}\n            {/*    onClose={() => {*/}\n            {/*        setAnchorEl(null)*/}\n            {/*    }}*/}\n            {/*    anchorOrigin={{*/}\n            {/*        vertical: 'bottom',*/}\n            {/*        horizontal: 'center',*/}\n            {/*    }}*/}\n            {/*    transformOrigin={{*/}\n            {/*        vertical: 'top',*/}\n            {/*        horizontal: 'center',*/}\n            {/*    }}*/}\n            {/*>*/}\n\n\n            {/*</Popover>*/}\n        </div>\n    };\n    /*------------------------------------------------------------------------------------------------------*/\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content}>\n                <FilterBlock setOpen={setAnchorEl}/>\n\n                <TableComponent\n                    title={\"Places\"}\n                    headCells={headCells}\n                    data={data}\n                    pagingInfo={pageData}\n                    checkable={false}\n                    changePageCallback={changePageCallback}\n                    updateCallback={updatePlaceCallback}\n                    removeCallback={removePlaceCallback}\n                    id={\"placeId\"}\n                    isLoading={isLoading}\n                    customToolbarElements={customToolbarElements()}\n                />\n\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <Button\n                        onClick={() => {\n                            history.push(\"/app/addplace\")\n                        }}\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        startIcon={<AddIcon/>}>\n                        Add\n                    </Button>\n                </Box>\n            </div>\n            <Button>\n                Clear filters\n            </Button>\n        </div>\n    );\n\n    function getAllPlaces(urlParams = \"\") {\n        API.Places.getAllPlacesAdmin(urlParams).then(response => {\n            setIsLoading(false);\n            parseData(response)\n        }).catch(error => {\n            setIsLoading(false);\n            console.log(error)\n        })\n    }\n}\n\nPlaces.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Places);","export const priceRange = [\n    {\n        value: 0,\n        label: \"FREE\",\n    },\n    {\n        value: 25,\n        label: \"$\",\n    },\n    {\n        value: 50,\n        label: \"$$\",\n    },\n    {\n        value: 75,\n        label: \"$$$\",\n    },\n    {\n        value: 100,\n        label: \"$$$$\",\n    },\n    {\n        value: 125,\n        label: \"$$$$$\",\n    }\n];\n","export const averageTimeSpent = [\n    {\n        value: 5,\n        label: 5,\n    },\n    {\n        value: 10,\n        label: 10,\n    },\n    {\n        value: 15,\n        label: 15,\n    },\n    {\n        value: 30,\n        label: 30,\n    },\n    {\n        value: 45,\n        label: 45,\n    },\n    {\n        value: 60,\n        label: 60,\n    },\n    {\n        value: 90,\n        label: 90,\n    },\n    {\n        value: 120,\n        label: 120,\n    },\n    {\n        value: 150,\n        label: 150,\n    },\n    {\n        value: 180,\n        label: 180,\n    },\n    {\n        value: 210,\n        label: 210,\n    },\n    {\n        value: 240,\n        label: 240,\n    },\n    {\n        value: 270,\n        label: 270,\n    },\n];","import {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    }\n});\n\nfunction AddSourceDialog(props){\n\n    function validateInput(){\n        let error = false;\n        if(text.length <= 3 || url.length <=3)\n            error = true;\n        setError(error);\n        return error\n    }\n\n    let {classes, open, action, setDialogOpen} = props;\n    const [text, setText] = useState(\"\");\n    const [url, setUrl] = useState(\"\");\n    const [error, setError] = useState(false);\n    return(\n        <div>\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\">\n                    Insert source\n                </DialogTitle>\n                <DialogContent dividers>\n                        <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}\n                                   label=\"Source name\" variant=\"outlined\" fullWidth />\n                        <TextField style={{marginTop:\"16px\"}} error={error} onChange = {(ev) => {setUrl(ev.target.value)}}\n                                   label=\"Source url\" variant=\"outlined\" fullWidth />\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={()=>setDialogOpen(false)} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button autoFocus color=\"primary\" onClick={() => {\n                        !validateInput() && action(text, url);\n                        setDialogOpen(false)\n                    }}>\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\nexport default withStyles(styles)(AddSourceDialog)","import React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {withStyles} from \"@material-ui/core\";\nimport Slider from \"@material-ui/core/Slider\";\nimport {priceRange} from \"../../helpers/priceRange\";\nimport {averageTimeSpent} from \"../../helpers/averageTimeSpent\"\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport AutoCompleteChip from \"../AutocompleteChip\";\nimport API from \"../../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddSourceDialog from \"../AddSourceDialog\";\n\n\nconst styles = theme => ({});\nlet previousPrice = \"\";\n\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo, selectedSources, setSelectedSources}) {\n\n    const updatePlaceInfo = (event, newValue) => {\n        const {name, value, id} = event.target;\n        let place = Object.assign({}, placeInfo, {});\n        if (id !== \"\") {\n            place[id] = valuetext(newValue[0]);\n        } else {\n            place[name] = value\n        }\n        console.log(\"Updated place\", place);\n        setPlaceInfo(place)\n    };\n\n    const getSources = () =>{\n        API.Source.getSources().then(response=>{\n            setAvailableSources(response)\n        }).catch(error=>{\n\n        })\n    };\n\n    const handleAddSource = (name, url) =>{\n        API.Source.addSource({name: name, url: url}).then(response=>{\n            setAvailableSources(\n                [\n                    ...availableSources,\n                    response\n                ]\n            );\n            setSelectedSources([\n                ...selectedSources,\n                response\n            ]);\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n\n    useEffect(()=>{\n        getSources()\n    },[]);\n\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [availableSources, setAvailableSources] = useState([]);\n\n    function valuetext(value) {\n        let val = \"\";\n        priceRange.map(row => {\n            if (row.value === value)\n                val = row.label\n        });\n        return val\n    }\n\n    return <div>\n        <Typography variant=\"h6\">\n            Basic place information\n        </Typography>\n        <br/>\n        <TextField\n            required\n            label=\"Place name\"\n            style={{margin: 8}}\n            placeholder=\"Enter the place name\"\n            fullWidth\n            value={placeInfo['name']}\n            name=\"name\"\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Place description\"\n            style={{margin: 8}}\n            placeholder=\"Describe the place thoroughly\"\n            fullWidth\n            multiline\n            name=\"description\"\n            value={placeInfo['description']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            rows={15}\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Phone number\"\n            style={{margin: 8}}\n            placeholder=\"Enter phone number\"\n            fullWidth\n            name=\"phoneNumber\"\n            value={placeInfo['phoneNumber']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Website\"\n            style={{margin: 8}}\n            placeholder=\"Enter website\"\n            fullWidth\n            name=\"website\"\n            value={placeInfo['website']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n\n        <br/>\n        <br/>\n       <AutoCompleteChip\n                id=\"source\"\n                label=\"Select sources\"\n                options={availableSources}\n                setOptions={setAvailableSources}\n                setSelectedOptions={setSelectedSources}\n                selectedOptions={selectedSources}\n       />\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => setDialogOpen(true)}\n            startIcon={<AddIcon />}>\n            Add missing source\n        </Button>\n        <AddSourceDialog\n            action={handleAddSource}\n            open={dialogOpen}\n            setDialogOpen={setDialogOpen}\n        />\n\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <div style={{display: \"flex\"}}>\n            <Typography>\n                Price\n            </Typography>\n            <Slider\n                id=\"price\"\n                onChange={updatePlaceInfo}\n                value={priceRange.map(row => {\n                    if (row.label === placeInfo['price']) return row.value\n                })}\n                style={{width: \"60%\", marginLeft: \"48px\"}}\n                defaultValue={0}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider-always\"\n                step={25}\n                max={125}\n                marks={priceRange}\n            />\n        </div>\n        <br/>\n        <br/>\n        <div style={{display: \"flex\"}}>\n            <Typography>\n                Average time spent\n            </Typography>\n            <FormControl variant=\"outlined\" style={{width: \"60%\", marginLeft: \"48px\"}}>\n                <InputLabel>Minutes</InputLabel>\n                <Select\n                    native\n                    value={parseInt(placeInfo['averageTimeSpent'], 10)}\n                    onChange={updatePlaceInfo}\n                    label=\"Average Time spent\"\n                    inputProps={{\n                        name: 'averageTimeSpent'\n                    }}\n                >\n                    <option value=\"-1\">None</option>\n                    {\n                        averageTimeSpent.map(row=>{\n                            return <option value={parseInt(row.value, 10)}> {row.value}</option>\n                        })\n                    }\n                </Select>\n            </FormControl>\n        </div>\n    </div>\n}\n\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport React, {useMemo, useState} from \"react\"\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Gallery from \"react-photo-gallery\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Delete from \"@material-ui/icons/Delete\"\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst imgWithClick = {cursor: \"pointer\"};\n\nconst Photo = ({index, onItemDelete, photo, margin, direction, top, left}) => {\n\n    const styles = {\n        imgContainer: {\n            margin: margin,\n            display: 'inline',\n            position: 'relative',\n            width: '300px',\n            height: '300px',\n        }\n    }\n    if (direction === \"column\") {\n        styles.imgContainer.position = \"absolute\";\n        styles.imgContainer.imgStyle.left = left;\n        styles.imgContainer.imgStyle.top = top;\n    }\n\n    const handleDelete = event => {\n        onItemDelete(photo);\n    }\n\n    return (\n\n        <Card style={styles.imgContainer}>\n            <CardMedia\n                style={{height: 0, paddingTop: '80%'}}\n                image={photo.src}\n            />\n            <CardActions disableSpacing>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon/>}\n                    onClick={(event) => {\n                        handleDelete(event)\n                    }}\n                >\n                    Delete\n                </Button>\n            </CardActions>\n\n        </Card>\n    )\n\n};\n\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\nconst SortableGallery = SortableContainer(({items, onItemDelete}) => (\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>}/>\n));\n\nfunction ReorderablePhotos(props) {\n    let {setPhotos, photos, srcName, keyName} = props\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\n    };\n\n    function handleItemDelete(photo) {\n        setPhotos(photos.filter(item => {\n            return item[keyName].toString() !== photo.key\n        }))\n    }\n\n    let modifiedData = photos.map(item => {\n        return (\n            {\n                key: item[keyName].toString(),\n                src: item[srcName],\n                width: 1,\n                height: 1\n            })\n\n    })\n    return (\n        <div>\n            <SortableGallery pressDelay={200}\n                             disableAutoscroll={false} items={modifiedData} onSortEnd={onSortEnd}\n                             axis={\"xy\"} onItemDelete={handleItemDelete}/>\n        </div>\n    );\n\n}\n\n\nexport default ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useEffect, useState} from \"react\";\nimport {DropzoneArea} from \"material-ui-dropzone\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport PropTypes from \"prop-types\";\nimport API from \"../Networking/API\";\n\nconst styles = theme => ({\n    dropzoneArea: {\n        overflow: \"hidden\"\n    }\n});\n\nconst acceptedFileFormats = ['image/jpeg', 'image/png', 'image/bmp', 'image/jpg']\n\nfunction AddImageDialog(props) {\n\n    const {onCloseCallback, open, onFinishCallback, classes} = props\n    const [loading, setIsLoading] = useState(false)\n    const [selectedFiles, setSelectedFiles] = useState([])\n\n    const submitCallback = () => {\n        setIsLoading(true)\n\n        Promise.all(selectedFiles.map(imagefile => {\n            let formData = new FormData()\n            formData.append(\"image\", imagefile)\n            return API.Photos.uploadPhoto(formData)\n        })).then(response => {\n            console.log(response)\n            onFinishCallback(response)\n        }).catch(error => {\n            onFinishCallback()\n        }).finally(() => {\n            setIsLoading(false)\n        })\n    }\n\n    const handleDrop = (files )=> {\n        setSelectedFiles(existingFiles => [...existingFiles, ...files])\n    }\n\n    useEffect(() => {\n        console.log(selectedFiles)\n\n    }, [selectedFiles])\n\n    const handleDelete = (file) => {\n        console.log(file.name)\n        setSelectedFiles(files => {return files.filter(existingFile => existingFile !== file)})\n    }\n\n    return (\n        <div>\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\">\n                    Photo upload\n                </DialogTitle>\n                {loading && <LinearProgress variant=\"query\"/>}\n                <DialogContent dividers>\n                    <DropzoneArea\n                        className={classes.dropzoneArea}\n                        acceptedFiles={acceptedFileFormats}\n                        maxFileSize={25000000}\n                        showAlerts={false}\n                        dropzoneProps={{disabled: loading}} filesLimit={5} onDrop={handleDrop}\n                    onDelete={handleDelete}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCallback} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={submitCallback} color=\"primary\">\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nAddImageDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onFinishCallback: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(AddImageDialog)\n","import React, {useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ReorderablePhotos from \"../ReorderablePhotos\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddImageDialog from \"../AddImageDialog\";\nimport {Card} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n});\n\nfunction PhotosInfo({classes, setPhotos, photos}) {\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\n\n    function handleAddPhoto(files) {\n        setAddImageDialogOpen(false);\n        if(files == null)\n            return;\n\n        setPhotos([\n            ...photos,\n            ...files]\n        )\n    }\n\n    return(\n        <div>\n            <Typography variant=\"h6\" >\n                Photos\n            </Typography>\n            <Card variant={\"outlined\"} className={classes.outline}>\n\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\n\n                <Button\n                    variant=\"text\"\n                    color=\"primary\"\n                    size=\"small\"\n                    style={{width: '15%'}}\n                    className={classes.button}\n                    onClick={() => setAddImageDialogOpen(true)}\n                    startIcon={<AddIcon />}>\n                    Add photo\n                </Button>\n\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(files) => handleAddPhoto(files)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\n\n\n            </Card>\n        </div>\n\n    )\n}\n\nexport default withStyles(styles)(PhotosInfo)\n\n\n","import React from \"react\";\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\n\n/**\n * Get country from google maps address array\n * @param addressArray\n * @returns {*|string}\n */\nexport const getCountry = (addressArray) =>{\n    if(addressArray!==undefined){\n        let country = '';\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\n                country = addressArray[ i ].long_name;\n                return country;\n            }\n        }\n    }\n};\n\n/**\n * Get country from google maps address array\n * @param addressArray\n * @returns {*|string}\n */\nexport const getCity = ( addressArray ) => {\n    if(addressArray !== undefined){\n        let city = '';\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'locality' === addressArray[ i ].types[0] ) {\n                city = addressArray[ i ].long_name;\n                return city;\n            }\n        }\n        return city;\n    }\n};\n\n/**\n * Get district from google maps address array\n * @param addressArray\n * @returns {*|string}\n */\nexport const getCounty = ( addressArray ) => {\n        if(addressArray !== undefined){\n            let county = '';\n            for( let i = 0; i < addressArray.length; i++ ) {\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\n                    county = addressArray[ i ].long_name;\n                    return county;\n                }\n            }\n            return county\n        }\n    };\n/**\n * Get district from google maps address array\n * @param addressArray\n * @returns {*|string}\n */\nexport const getMunicipality = ( addressArray ) => {\n    if(addressArray !== undefined){\n        let municipality = '';\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\n                municipality = addressArray[ i ].long_name;\n                return municipality;\n            }\n        }\n        return municipality;\n    }\n};\n\n/**\n * Geocode location from address\n * @param address\n * @type string\n * @return location object\n */\nexport function geocodeFromAddress(address){\n    return Geocode.fromAddress( address ).then(\n        response => {\n            const { lat, lng } = response.results[0].geometry.location;\n            if(lat !== undefined && lng !== undefined){\n                return geocodeFromLatLng(lat, lng).then(loc=>{\n                    return loc\n                })\n            }else{\n                return null\n            }\n        },\n        err=>{\n            return null\n        }\n    )\n}\n\n/**\n * Geocode location from latitude and longitude\n * @param newLat\n * @param newLng\n * @return location object\n */\n\n\nexport function geocodeFromLatLng(newLat, newLng){\n    return Geocode.fromLatLng( newLat , newLng ).then(\n        response => {\n            const address = response.results[0].formatted_address\n            const addressArray =  response.results[0].address_components\n            if(addressArray!==undefined){\n                const city = getCity( addressArray ),\n                    country = getCountry( addressArray ),\n                    county = getCounty(addressArray),\n                    municipality = getMunicipality(addressArray);\n                let loc = {address: address, city: city, country: country, latitude: newLat, longitude: newLng, county: county, municipality: municipality};\n                return loc;\n            }\n            return null\n        },\n        error => {\n            return null\n        }\n    );\n}","import React, {useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\nimport PropTypes from \"prop-types\";\nimport {geocodeFromAddress, geocodeFromLatLng} from \"./MapGeolocation\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\n\nconst styles = theme => ({\n    content: {\n        margin: theme.spacing(1)\n    },\n    autocomplete:{\n        width: '200px',\n        height: '40px',\n        fontSize: \"14px\",\n        border: \"0\",\n        borderBottom: \"2px solid grey\",\n        outline:\"0\",\n        marginBottom: \"4px\"\n    },\n    root: {\n        display:\"flex\",\n        flexDirection: \"column\",\n        marginTop: \"8px\",\n        padding: theme.spacing(1)\n    }\n});\n\nfunction MapToolbar({classes, isLocked, locationCallback}) {\n\n    const [loading, setIsLoading] = useState(false);\n    const { addAlertConfig } = UseAlertDialogContext();\n    /**\n     * Handle manual address and coordinates filling with key presses and return location\n     * @param event\n     * @return {boolean}\n     */\n\n    function errorParsingLocation(){\n        addAlertConfig(\"Error parsing location!\", \"Make sure that address you provided is correct!\",[])\n    }\n\n    function handleKeyPress(event){\n        const value = event.target.value;\n        if (event.which === 13 || event.keyCode === 13) {\n            setIsLoading(true);\n            if (/[a-zA-Z]+/.test(value)){\n                geocodeFromAddress(value).then(location=>{\n                    location!==null ? locationCallback(location) : errorParsingLocation();\n                    setIsLoading(false)\n                })\n            }else{\n                let position = value.split(/[ ,]+/);\n                if(position.length === 2){\n                    geocodeFromLatLng(parseFloat(position[0]), parseFloat(position[1])).then(location=>{\n                        location!==null ? locationCallback(location) : errorParsingLocation();\n                        setIsLoading(false)\n                    })\n                }\n            }\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Handle place selection from google maps autocomplete\n     * @param place\n     * @return {{country: (*|string), address: *, city: (*|string), latitude: *, longitude: *}|null}\n     */\n    const onPlaceSelected = (place) => {\n        setIsLoading(true);\n        const addressArray = place.address_components;\n        if (addressArray !== undefined) {\n            const lat = place.geometry.location.lat(),\n                lng = place.geometry.location.lng();\n            geocodeFromLatLng(lat, lng).then(location => {\n                location !== null ? locationCallback(location) : errorParsingLocation();\n                setIsLoading(false)\n            });\n        }\n        return null\n    };\n\n    /**\n     * Get current location\n     */\n    function getCurrentPosition(){\n        setIsLoading(true)\n        navigator.geolocation.getCurrentPosition(function(position) {\n            let newLat = position.coords.latitude,\n                newLng = position.coords.longitude;\n            geocodeFromLatLng(newLat, newLng).then(location=>{\n                location!==null ? locationCallback(location) : errorParsingLocation();\n\n                setIsLoading(false)\n            });\n        }, error=>{\n            setIsLoading(false)\n            alert(error.message + \"\\n\" + JSON.stringify(error))\n        });\n    }\n\n    return <div className={classes.root}>\n        <div className={classes.content}>\n            <Autocomplete\n                onKeyPress={(event)=>{if(!isLocked)handleKeyPress(event)}}\n                onPlaceSelected={(place)=>{if(!isLocked)onPlaceSelected(place)} }\n                className={classes.autocomplete}\n                types={['(regions)']}\n            />\n            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\">\n                <MyLocationIcon\n                    onClick={()=>{if(!isLocked)getCurrentPosition()}}\n                    fontSize=\"large\"\n                    color=\"primary\"\n                />\n            </IconButton>\n        </div>\n        {loading ? <LinearProgress /> : null}\n\n    </div>\n\n\n}\n\nMapToolbar.propTypes = {\n    isLocked: PropTypes.bool.isRequired,\n    locationCallback: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(MapToolbar)","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n\nconst styles = theme =>({\n    root: {\n        display:\"flex\",\n        flexDirection: \"column\",\n        marginTop: \"8px\",\n        padding: theme.spacing(1)\n    }\n});\n\nfunction MapLock({classes, isLocked, setIsLocked}) {\n    return <div className={classes.root}>\n        <FormControlLabel\n            control={<Switch />}\n            label=\"Lock\"\n            checked={isLocked}\n            onChange={()=>{\n               setIsLocked(old=>!old)\n            }}\n        />\n        {isLocked ?\n            <Alert  severity=\"error\">Map is currently locked. If you want to do any changes unlock it.</Alert> : null}\n    </div>\n}\n\nexport default withStyles(styles)(MapLock)","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { MAP } from 'react-google-maps/lib/constants';\nimport PropTypes from 'prop-types';\n\nexport default function CustomControlsManager(\n    { position = window.google.maps.ControlPosition.TOP_LEFT, children },\n    context\n) {\n    const map = context[MAP];\n\n    const controlDiv = document.createElement('div');\n\n    useEffect(() => {\n        const controls = map.controls[position];\n        const index = controls.length;\n        controls.push(controlDiv);\n        return () => {\n            controls.removeAt(index);\n        };\n    });\n\n    return createPortal(\n        <div style={{ marginBottom: 8, marginTop: 8 }}>{children}</div>,\n        controlDiv\n    );\n}\n\nCustomControlsManager.contextTypes = {\n    [MAP]: PropTypes.object,\n};","import React, {useEffect, useRef, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow} from \"react-google-maps\"\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\nimport MapToolbar from \"./MapToolbar\";\nimport PropTypes from \"prop-types\";\nimport MapLock from \"./MapLock\";\nimport CustomControlsManager from \"./CustomControlsManager\";\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API from \"../../Networking/API\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from \"@material-ui/core/Card\";\nvar buildUrl = require('build-url');\nconst styles = theme => ({ largeIcon: {\n        width: theme.spacing(14),\n        height: theme.spacing(14),\n    }});\n\nconst MapComponent = withGoogleMap(props =>\n    <GoogleMap\n        defaultZoom={15}\n        ref={props.refInstance}\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\n\n        {props.children}\n\n    </GoogleMap>\n\n);\n\n\n\nfunction PlaceMap({classes, placeInfo,locationMarker,setLocationMarker,setParkingLocationMarker}) {\n\n    const [otherPlacesData, setOtherPlacesData] = useState([]);\n    const [infoWindows, setInfoWindows] = useState([]);\n\n    const [isLocked, setIsLocked] = useState(placeInfo.placeId !== \"\");\n    const refMap = useRef(null);\n\n    function mapToolbarCallback(location) {\n        setParkingLocationMarker(location);\n        setLocationMarker(location)\n    }\n\n    useEffect(()=>{\n        getClosestPlaces()\n    },[locationMarker]);\n\n    function getClosestPlaces(){\n        API.Places.getAllPlacesAdmin(buildUrl(null, {\n            queryParams: {\n                p: \"0\",\n                s: \"10\",\n                range: 3,\n                l: [locationMarker.latitude, locationMarker.longitude]\n            }\n        })).then(response=>{\n            setOtherPlacesData(response.list);\n        }).catch(error=>{\n\n        })\n    }\n\n    function onMarkerDragEnd(event) {\n        let newLat = event.latLng.lat(),\n            newLng = event.latLng.lng();\n        geocodeFromLatLng(newLat, newLng).then(location => {\n            setLocationMarker(location);\n            setParkingLocationMarker(location)\n        })\n    }\n    \n    return <React.Fragment>\n        <MapToolbar\n            isLocked={isLocked}\n            locationCallback={mapToolbarCallback}/>\n\n        <MapComponent\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `400px` }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n            refInstance={refMap}\n            position={locationMarker}\n        >\n            {\n                otherPlacesData.map((location, i) =>{\n                    const latitude = parseFloat(location.latitude);\n                    const longitude = parseFloat(location.longitude);\n                        return placeInfo.placeId === \"\" ? <Marker\n                            key={location.placeId}\n                            zIndex={1}\n                            position={{lat: latitude, lng: longitude}}\n                            icon={{\n                                url: require('../../res/selectedTourIcon.svg'),\n                                scaledSize: new window.google.maps.Size(48, 48),\n                                origin: new window.google.maps.Point(0, 0)\n                            }}\n                            onClick={() => {\n                                if (!isLocked) {\n                                    let markers = Object.assign([], infoWindows);\n                                    markers[i] = true;\n                                    setInfoWindows(markers)\n                                }\n                            }}\n                        >\n                            {infoWindows[i] && (\n                                <InfoWindow onCloseClick={() => {\n                                    let markers = Object.assign([], infoWindows);\n                                    markers[i] = false;\n                                    setInfoWindows(markers)\n                                }\n                                }>\n\n                                    <Card style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n                                        {location.photos.length > 0 ? <Avatar alt=\"Remy Sharp\" src={location.photos[0].url}\n                                                                          className={classes.largeIcon}/> : null}\n                                        <Typography variant=\"h6\">\n                                            {location.name}\n                                        </Typography>\n\n                                    </Card>\n                                </InfoWindow>\n                            )}\n                        </Marker> : null\n\n                })\n            }\n\n            <Marker\n                name={'Dolores park'}\n                visible={true}\n                draggable={!isLocked}\n                zIndex={2}\n                onDragEnd={e => onMarkerDragEnd(e)}\n                position={{lat: locationMarker.latitude, lng: locationMarker.longitude}}>\n            </Marker>\n\n            <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\n                <div>\n                    <IconButton aria-label=\"delete\" onClick={()=>{\n                        if(!isLocked){\n                            const mapCenter = refMap.current.getCenter();\n                            geocodeFromLatLng(mapCenter.lat(), mapCenter.lng()).then(location=>{\n                                setLocationMarker(location)\n                                setParkingLocationMarker(location)\n                            });\n                        }\n                    }}>\n                        <ExploreIcon fontSize={\"large\"}/>\n                    </IconButton>\n                </div>\n            </CustomControlsManager>\n        </MapComponent>\n\n\n\n        <MapLock\n            isLocked={isLocked}\n            setIsLocked={setIsLocked}\n        />\n    </React.Fragment>\n\n\n}\n\nPlaceMap.propTypes = {\n    locationMarker: PropTypes.object.isRequired,\n    setLocationMarker: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(PlaceMap)","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlaceMap from \"../maps/PlaceMap\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n});\n\nfunction PlaceLocation({locationData, setLocationData, setParkingLocation, placeInfo}) {\n\n    function changeLocationData(event){\n        const {name, value} = event.target;\n        let data = Object.assign({}, locationData, {});\n        data[name] = value;\n\n        setParkingLocation(data);\n        setLocationData(data)\n    }\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Place location\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select place location from map\n        </Typography>\n        <br/>\n        <PlaceMap\n            placeInfo={placeInfo}\n            locationMarker={locationData}\n            setParkingLocationMarker={setParkingLocation}\n            setLocationMarker={setLocationData}\n        />\n        <br/>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Place location\n        </Typography>\n        <br/>\n        <TextField\n            required\n            label=\"Address\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter place address\"\n            fullWidth\n            disabled\n            value={locationData['address']}\n            name='address'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"City\"\n            disabled\n            style={{ margin: 8 }}\n            placeholder=\"Enter place city\"\n            fullWidth\n            value={locationData['city']}\n            name='city'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"County\"\n            disabled\n            style={{ margin: 8 }}\n            placeholder=\"Enter place county\"\n            fullWidth\n            value={locationData['county']}\n            name='county'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"Municipality\"\n            disabled\n            style={{ margin: 8 }}\n            placeholder=\"Enter place municipality\"\n            fullWidth\n            value={locationData['municipality']}\n            name='municipality'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"Country\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter place country\"\n            fullWidth\n            disabled\n            value={locationData['country']}\n            name='country'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            rows={4}\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n    </div>\n}\n\nexport default withStyles(styles)(PlaceLocation)","import React, {useEffect, useRef, useState} from \"react\";\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from \"react-google-maps\";\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\nimport MapToolbar from \"./MapToolbar\";\nimport API from \"../../Networking/API\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CustomControlsManager from \"./CustomControlsManager\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExploreIcon from \"@material-ui/icons/Explore\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Typography from \"@material-ui/core/Typography\";\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\n\n\nconst MapComponent = withGoogleMap(props =>\n    <GoogleMap\n        ref={props.refInstance}\n        defaultZoom={12}\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\n\n        <Marker\n            onClick={()=>{if(!props.isLocked)props.setMainInfoWindow(true)}}\n            name={'Dolores park'}\n            visible={true}\n            draggable={!props.isLocked}\n            onDragEnd={e => onMarkerDragEnd(e, props.setPosition)}\n            position={{lat: props.position.latitude, lng: props.position.longitude}}>\n\n            {props.mainInfoWindow && (\n                <InfoWindow onCloseClick={()=>{props.setMainInfoWindow(false)}}>\n                    <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                        {props.position.address}\n                        <Button\n                            onClick={()=>{\n                                let c = nearestParkingCount(props.position, props.parkingData);\n                                if(c>0){\n                                    props.addAlertConfig(\"Parkings nearby already exist!\", c+\" parking(-s) within 150 meter already exist(-s).\" +\n                                        \" Are you sure you don't want to use already existings parking locations?\",[{name:\"ADD NEW PARKING!\", action: ()=>{\n                                            props.addNewParking(props.position)\n                                        }}])\n                                }else{\n                                    props.addNewParking(props.position)\n                                }\n                            }}\n                            variant=\"text\"\n                            color=\"secondary\"\n                            size=\"large\"\n                            startIcon={<AddIcon />}>\n                            Add new parking\n                        </Button>\n                    </div>\n                </InfoWindow>\n            )}\n        </Marker>\n\n        <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\n            <div>\n                <IconButton aria-label=\"delete\" onClick={()=>{\n                    if(!props.isLocked){\n                        let loc = Object.assign({},props.position, {});\n                        const mapCenter = props.refInstance.current.getCenter();\n                        loc.latitude = mapCenter.lat();\n                        loc.longitude = mapCenter.lng();\n                        props.setPosition(loc)\n                    }\n                }}>\n                    <ExploreIcon fontSize={\"large\"}/>\n                </IconButton>\n            </div>\n        </CustomControlsManager>\n\n        {\n            props.parkingData.map((location, i) =>{\n                const latitude = parseFloat(location.latitude);\n                const longitude = parseFloat(location.longitude);\n                console.log(parkingIsAttached(location, props.selectedParkingData));\n                return <Marker\n                    key={location.parkingId}\n                    position={{ lat: latitude, lng: longitude}}\n                    icon={{\n                        url: parkingIsAttached(location, props.selectedParkingData) ? require('../../res/selectedParking.svg') :\n                            require('../../res/availableParking.svg'),\n                        scaledSize: new window.google.maps.Size(20, 48),\n                        origin: new window.google.maps.Point(0, 0),\n                        anchor: new window.google.maps.Point(10, 35)\n                    }}\n                    onClick={()=>{\n                        if(!props.isLocked){\n                            let markers = Object.assign({},props.parkingInfoWindows, {});\n                            markers[i] = true;\n                            props.setParkingInfoWindows(markers)\n                        }\n                    }}\n                >\n                    {props.parkingInfoWindows[i] && (\n                        <InfoWindow onCloseClick={()=>{\n                                let markers = Object.assign({},props.parkingInfoWindows, {});\n                                markers[i] = false;\n                                props.setParkingInfoWindows(markers)\n                            }\n                        }>\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                                <Typography variant=\"h6\">\n                                    {location.address}\n                                </Typography>\n                                {parkingIsAttached(location, props.selectedParkingData) ? <div>\n                                        <Alert severity=\"success\">This parking location is already attached! See below in \"Selected parking locations\" section.</Alert>\n                                </div> :\n                                <Button\n                                    onClick={()=>{props.addExistingParking(location)}}\n                                    variant=\"text\"\n                                    color=\"secondary\"\n                                    size=\"large\"\n                                    startIcon={<AddIcon />}>\n                                    Add parking\n                                </Button>\n                                }\n                            </div>\n                        </InfoWindow>\n                    )}\n\n                </Marker>\n\n            })\n        }\n\n    </GoogleMap>\n);\n\nfunction parkingIsAttached(parking, selectedParkingData) {\n    for(let i = 0; i<selectedParkingData.length; i++){\n        if(selectedParkingData[i].address === parking.address)\n            return true\n    }\n    return false\n}\n\nfunction calcCrow(lat1, lon1, lat2, lon2)\n{\n    var R = 6371; // km\n    var dLat = toRad(lat2-lat1);\n    var dLon = toRad(lon2-lon1);\n    var lat1 = toRad(lat1);\n    var lat2 = toRad(lat2);\n\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    var d = R * c;\n    return d;\n}\nfunction toRad(Value) {return Value * Math.PI / 180}\n\nfunction nearestParkingCount(parking, parkingData){\n    let count = 0;\n    for(let i = 0; i<parkingData.length; i++){\n        let distance = calcCrow(parking.latitude, parking.longitude, parkingData[i].latitude, parkingData[i].longitude);\n        if(distance<=0.15){\n            count++;\n        }\n    }\n    return count\n}\n\n\nfunction onMarkerDragEnd(event, setLocationMarker) {\n    let newLat = event.latLng.lat(),\n        newLng = event.latLng.lng();\n    geocodeFromLatLng(newLat, newLng).then(location => {\n        setLocationMarker(location)\n    })\n}\n\nfunction ParkingMap({placeInfo,\n                        locationMarker,\n                        setLocationMarker,\n                        addNewParking,\n                        addExistingParking,\n                        selectedParkingData\n                    }) {\n\n    const [parkingData, setParkingData] = useState([]);\n    const [mainInfoWindow, setMainInfoWindow] = useState(false);\n    const [parkingInfoWindows, setParkingInfoWindows] = useState(false);\n    const [isLocked, setIsLocked] = useState(false);\n    const refMap = useRef(null);\n\n    const { addAlertConfig } = UseAlertDialogContext();\n\n    function getClosestParking(){\n        API.Parking.getParkingByLocation(\"?lat=\"+locationMarker.latitude+\"&lng=\"+locationMarker.longitude).then(response=>{\n            setParkingData(response);\n        }).catch(error=>{\n        })\n    }\n\n    useEffect(()=>{\n        getClosestParking()\n    },[locationMarker]);\n\n    function mapToolbarCallback(location) {\n        setMainInfoWindow(true);\n        setLocationMarker(location)\n    }\n\n    return <React.Fragment>\n        <MapToolbar\n            isLocked={isLocked}\n            locationCallback={mapToolbarCallback}/>\n\n        <MapComponent\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `400px` }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n            mainInfoWindow={mainInfoWindow}\n            setMainInfoWindow={setMainInfoWindow}\n            addNewParking={addNewParking}\n            addExistingParking={addExistingParking}\n            parkingInfoWindows={parkingInfoWindows}\n            setParkingInfoWindows={setParkingInfoWindows}\n            parkingData={parkingData}\n            position={locationMarker}\n            setPosition={setLocationMarker}\n            isLocked={isLocked}\n            refInstance={refMap}\n            selectedParkingData={selectedParkingData}\n            addAlertConfig={addAlertConfig}\n        />\n\n    </React.Fragment>\n}\n\n\nParkingMap.propTypes = {\n    placeInfo: PropTypes.object.isRequired,\n    locationMarker: PropTypes.object.isRequired,\n    setLocationMarker: PropTypes.func.isRequired,\n    addNewParking: PropTypes.func.isRequired,\n    addExistingParking: PropTypes.func.isRequired\n};\n\nexport default ParkingMap","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API from \"../../Networking/API\";\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ParkingMap from \"../maps/ParkingMap\";\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction ParkingLocation({classes, locationData, setLocationData, allSelectedParkingData, setAllSelectedParkingData, placeInfo}) {\n    const { addConfig } = UseSnackbarContext();\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\n    };\n\n    function addNewParking(markerData){\n        if(!parkingExists(markerData)){\n            API.Parking.insertNewParking([markerData]).then(response=>{\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\n                addConfig(true)\n            }).catch(error=>{\n                addConfig(false)\n            })\n        }\n    }\n\n    function addExistingParking(location) {\n        if(!parkingExists(location)){\n            setAllSelectedParkingData(oldArray=> [...oldArray, location])\n        }\n    }\n\n    function parkingExists(markerData){\n        for(let i = 0; i<allSelectedParkingData.length; i++){\n            if(allSelectedParkingData[i].address === markerData.address){\n                addConfig(false, \"This parking is already attached!\");\n                return true;\n            }\n        }\n        return false\n    }\n\n\n    const SortableItem = SortableElement(({value}) => (\n        <Paper className={classes.paper} elevation={3}>\n            <Typography>\n                {value.address}\n            </Typography>\n            <IconButton aria-label=\"delete\" className={classes.margin}\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\n                <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n        </Paper>\n    ));\n\n\n    const SortableList = SortableContainer(({items}) => {\n        return (\n            <ul>\n                {items.map((value, index) => (\n                <SortableItem key={index} index={index} value={value} />\n                ))}\n            </ul>\n        );\n    });\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Add parking\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select parking\n        </Typography>\n\n        <ParkingMap\n            selectedParkingData={allSelectedParkingData}\n            placeInfo={placeInfo}\n            locationMarker={locationData}\n            setLocationMarker={setLocationData}\n            addNewParking={addNewParking}\n            addExistingParking={addExistingParking}\n        />\n\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Selected parking locations\n        </Typography>\n        {allSelectedParkingData.length === 0 ? <Alert severity=\"error\">\n            This place has no selected parking! To select parking for this place do the following:\n            <br/>\n            1. Select your current location or any other location\n            <br/>\n            2. Select already existing nearby parking locations and click add\n            <br/>\n            3. If none of the location is valid, click on the orange marker and add new parking\n            </Alert> :\n            <SortableList pressDelay={200} disableAutoscroll={false} items={allSelectedParkingData} onSortEnd={onSortEnd} />\n        }\n\n\n    </div>\n}\n\nexport default withStyles(styles)(ParkingLocation)","import React, { useState, useCallback } from 'react';\n\nexport const EditDialogContext = React.createContext({\n    dialogConfig: null,\n    dialogOpen: null,\n    setDialogOpen: null,\n    addEditDialogConfig: () => {},\n    removeEditDialogConfig: () => {}\n});\n\nconst defaultOptions = {\n\n    /**\n     * The dialog's title.\n     */\n    title: \"Sample title\",\n\n    /**\n     * Object, that defines an error message for each error returned by validateInput function.\n     * Should follow this structure: {errorCode: \"message\", differentErrorCode: \"Message\"}\n     * Keys of this object are integers (that represent the error code)\n     */\n    errorMessages: {},\n\n    /**\n     * Explanation text for this dialog.\n     */\n    explanation: \"Sample explanation\",\n\n    /**\n     * A callback for when user presses cancel.\n     */\n    onCloseCallback: () => {},\n\n    /**\n     * A callback for when the user input passes error checks and done button is pressed\n     * @param input is the input text\n     */\n    onDoneCallback: (input) => {},\n\n    /**\n     * The label text to be displayed above textfield\n     */\n    textFieldLabel: \"Type here\",\n\n    /**\n     * Should return 0 if input is valid.\n     * If the input is not valid, it should return an error code.\n     * Any returned code, that is not 0 is considered to be an error.\n     * The error code returned may have a message in errorMessages prop.\n     * @param input\n     * @returns {number}\n     */\n    validateInput: (input) => 0,\n\n    /**\n     * The default text to be displayed in TextField\n     */\n    defaultText: \"\"\n}\n\nexport default function EditDialogProvider({ children }) {\n    const [dialogConfig, setDialogConfig] = useState(defaultOptions);\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const contextValue = {\n        dialogConfig,\n        dialogOpen: dialogOpen,\n        setDialogOpen: setDialogOpen,\n        addEditDialogConfig: (options) => {\n            setDialogConfig({\n                ...defaultOptions,\n                ...options\n            })\n            setDialogOpen(true)\n        },\n        removeEditDialogConfig: () => setDialogConfig(null)\n    };\n\n    return (\n        <EditDialogContext.Provider value={contextValue}>\n            {children}\n        </EditDialogContext.Provider>\n    );\n}","import React, {useContext} from \"react\";\nimport {EditDialogContext} from \"./EditDialogContext\";\n\nexport default function UseEditDialogContext() {\n    const { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen } = useContext(EditDialogContext);\n    return { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen};\n}\n","import React, {useEffect, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AutocompleteChip from \"../AutocompleteChip\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport API from \"../../Networking/API\";\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories}) {\n\n    const [availableCategories, setAvailableCategories] = useState([]);\n    const [availableTags, setAvailableTags] = useState([]);\n\n    const {addEditDialogConfig} = UseEditDialogContext();\n    const {addConfig} = UseSnackbarContext();\n\n    const updateTags = () => {\n        API.Tags.getAllTags().then(response=>{\n            setAvailableTags(response);\n            console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n    const updateCategories = () => {\n        API.Categories.getAllCategories().then(response=>{\n            setAvailableCategories(response)\n            console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        });\n    };\n\n    useEffect(()=>{\n        updateTags();\n        updateCategories();\n    },[]);\n\n\n    const promptAddTag = () => {\n        addEditDialogConfig({\n            title: \"Add tag\",\n            explanation: \"Type the tag name\",\n            onDoneCallback: (tagName) => {\n                API.Tags.addTag([{name: tagName}]).then(response=>{\n                    let newTag = {tagId: response[0], name: tagName}\n                    setAvailableTags(\n                        [\n                            ...availableTags,\n                            newTag\n                        ]\n                    );\n                    setSelectedTags([\n                        ...selectedTags,\n                        newTag\n                    ]);\n\n                }).catch(()=>{\n                    addConfig(false, \"Failed to add tag.\")\n                })\n            },\n            errorMessages: {\n                1: \"The tag name is too short\",\n                2: \"A tag with identical name already exists. You should choose the existing tag instead\"\n            },\n            validateInput: (input) => {\n                if(input.length < 4){\n                    return 1 //Input too short\n                }else if(availableTags.filter(item => item.name === input).length !== 0){\n                    return 2 //Identical tag already exists\n                }\n                return 0\n            },\n            textFieldLabel: \"Warm, quick, cozy...\"\n        })\n    }\n\n    const promptAddCategory = () => {\n        addEditDialogConfig({\n            title: \"Add category\",\n            explanation: \"Type the category name\",\n            onDoneCallback: (categoryName) => {\n                API.Categories.addCategory([{name: categoryName}]).then(response=>{\n                    let newCat = {categoryId: response[0], name: categoryName};\n                    setAvailableCategories(\n                        [\n                            ...availableCategories,\n                            newCat\n                        ]\n                    );\n                    setSelectedCategories([\n                        ...selectedCategories,\n                        newCat\n                    ]);\n                }).catch(error=>{\n                    addConfig(false, \"Failed to add category.\")\n                })\n            },\n            errorMessages: {\n                1: \"The category name is too short\",\n                2: \"A category with identical name already exists. You should choose the existing category instead\"\n            },\n            validateInput: (input) => {\n                if(input.length < 4){\n                    return 1 //Input too short\n                }else if(availableCategories.filter(item => item.name === input).length !== 0){\n                    return 2 //Identical category already exists\n                }\n                return 0\n            },\n            textFieldLabel: \"Restaurant, hotel, hiking...\"\n        })\n    }\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Place discovery settings\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select tags\n        </Typography>\n        <AutocompleteChip label=\"Select tags\"\n                          id=\"tagId\"\n                          options={availableTags}\n                          setOptions={setAvailableTags}\n                          selectedOptions={selectedTags}\n                          setSelectedOptions ={setSelectedTags}/>\n\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={promptAddTag}\n            startIcon={<AddIcon />}>\n            Add missing tag\n        </Button>\n\n        <br/>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select categories\n        </Typography>\n        <AutocompleteChip label=\"Select categories\"\n                          id=\"categoryId\"\n                          options={availableCategories}\n                          setOptions={setAvailableCategories}\n                          selectedOptions={selectedCategories} \n                          setSelectedOptions={setSelectedCategories}/>\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={promptAddCategory}\n            startIcon={<AddIcon />}>\n            Add missing category\n        </Button>\n    </div>\n}\n\nexport default withStyles(styles)(PlaceDiscovery)","const initialScheduleData = [\n    {\n        \"scheduleDefault\": true,\n        \"periods\": [\n            {\n                openDay: 0,\n                closeDay: 0,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            },\n            {\n                openDay: 1,\n                closeDay: 1,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            },\n            {\n                openDay: 2,\n                closeDay: 2,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            },\n            {\n                openDay: 3,\n                closeDay: 3,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            },\n            {\n                openDay: 4,\n                closeDay: 4,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            }\n        ]\n    }\n]\n\nexport default initialScheduleData","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport moment from \"moment\";\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        width: \"20%\",\n        padding: \"2px\",\n        marginRight: \"16px\"\n    },\n\n});\nexport default function ReviewCard({review}) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <div style={{display: \"flex\"}} >\n                    <Avatar alt=\"Cindy Baker\" src={!!review.photoUrl ? review.photoUrl : \"/broken-image.jpg\"} />\n                    <div style={{display: \"flex\", flexDirection: \"column\", marginLeft:\"8px\"}}>\n                        <Typography title=\"subtitle1\">\n                            {review.name} {review.surname}\n                        </Typography>\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                            <Rating size=\"small\" name=\"read-only\" value={review.rating} readOnly />\n                            <Typography title=\"subtitle1\">\n                                {\"+\" + review.upvotes}\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n                <Typography title=\"subtitle1\">\n                    {moment(review.timeAdded).format('LL')}\n                </Typography>\n                <div style={{marginTop: \"16px\"}}>\n                    {review.title}\n                </div>\n                <Typography title=\"subtitle1\">\n                        {review.review}\n                </Typography>\n\n            </CardContent>\n        </Card>\n    );\n}\n\n","import React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Rating from '@material-ui/lab/Rating';\nimport ReviewCard from \"../ReviewCard\";\nimport API from \"../../Networking/API\";\nimport debounce from \"lodash/debounce\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\n\nconst styles = theme => ({\n    reviewsInfo:{\n        display: \"flex\",\n    },\n    reviews:{\n        display: \"flex\",\n        width: \"100%\",\n        margin: theme.spacing(2),\n        overflowX: \"scroll\"\n    },\n    sortingButtons: {\n        padding: theme.spacing(2)\n    }\n});\n\nfunction Reviews({classes, placeInfo}) {\n\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [page, setPage] = useState(1);\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const [filterBy, setFilterBy] = useState('mostRated');\n\n    function getReviewsForPlace(urlParams = \"?p=\"+placeInfo.placeId) {\n        API.Reviews.getPlaceReviews(urlParams).then(response=>{\n            setReviews(old=>[...old, ...response.list]);\n            setIsLoading(false)\n        }).catch(error=>{\n            setIsLoading(false)\n        })\n    }\n\n    //Get ordered by new filter\n    useEffect(()=>{\n            getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=1&o=\"+filterBy)\n    },[filterBy]);\n\n\n    const handleScrollDebounced = (e) => {\n        const scrollOffset = 0;\n        const bottom = Math.round(e.target.scrollWidth - e.target.scrollLeft - scrollOffset)  <= e.target.clientWidth;\n        if (bottom && !isLoading && reviews.length>0 && reviews.length<placeInfo.totalReviews) {\n            setIsLoading(true);\n            setPage(old=>{\n                getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=\"+(old+1)+\"&o=\"+filterBy);\n                return old+1\n            });\n        }\n    };\n\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\n\n    const handleScroll = (e) => {\n        e.persist();\n        debounceScroll(e)\n    };\n\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    function changeSorting(e){\n        const {name, value} = e.target;\n        setFilterBy(value);\n        setReviews([]);\n        setPage(1);\n        handleClose()\n    }\n\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Reviews\n            <br/>\n            {\n               reviews.length > 0 ?\n                   <React.Fragment>\n                       <div style={{display:\"flex\", justifyContent: \"space-between\"}}>\n                           <div className={classes.reviewsInfo}>\n                               <Rating name=\"read-only\" value={placeInfo.overallStarRating} precision={0.2} readOnly />\n                               <Typography style={{marginLeft:\"8px\"}} variant=\"subtitle1\">\n                                   {placeInfo.totalReviews} reviews\n                               </Typography>\n                           </div>\n                           <Tooltip aria-describedby={id} title=\"Filter list\">\n                               <IconButton  aria-label=\"filter list\" onClick={handleClick}>\n                                   <FilterListIcon />\n                               </IconButton>\n                           </Tooltip>\n                           <Popover\n                               id={id}\n                               open={open}\n                               anchorEl={anchorEl}\n                               onClose={handleClose}\n                               anchorOrigin={{\n                                   vertical: 'bottom',\n                                   horizontal: 'center',\n                               }}\n                               transformOrigin={{\n                                   vertical: 'top',\n                                   horizontal: 'center',\n                               }}\n                           >\n                               <RadioGroup className={classes.sortingButtons} aria-label=\"gender\" value={filterBy} name=\"gender1\"  onChange={changeSorting}>\n                                   <FormControlLabel value=\"mostRated\" control={<Radio />} label=\"Most rated\" />\n                                   <FormControlLabel value=\"newest\" control={<Radio />} label=\"Newest\" />\n                               </RadioGroup>\n                           </Popover>\n                       </div>\n\n                       <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                           <Typography>\n                               Showing: {reviews.length} out of {placeInfo.totalReviews}\n                           </Typography>\n                           <Typography>\n                               Sorting by: {filterBy}\n                           </Typography>\n                       </div>\n                       <div className={classes.reviews} onScroll={e=>handleScroll(e)}>\n                           {reviews.map(row=>{\n                               return <ReviewCard review={row}/>\n                           })}\n                       </div>\n                   </React.Fragment> : <Typography> No reviews for this place</Typography>\n            }\n\n        </Typography>\n        <br/>\n        {isLoading ? <LinearProgress/> : null }\n    </div>\n}\n\nexport default withStyles(styles)(Reviews)","import React, { useState } from 'react';\n\nexport const AppBarTitleContext = React.createContext({\n    title: \"\",\n    setTitle: () => {},\n});\n\nexport default function AppBarTitleProvider({ children }) {\n    const [title, setTitle] = useState(\"Home\");\n\n    const contextValue = {\n        title,\n        setTitle: (title) => setTitle(title)\n    };\n\n    return (\n        <AppBarTitleContext.Provider value={contextValue}>\n            {children}\n        </AppBarTitleContext.Provider>\n    );\n}","import React, {useContext} from \"react\";\nimport {AppBarTitleContext} from \"./AppBarTitleContext\";\n\nexport default function UseAppBarTitleContext() {\n    const { title, setTitle } = useContext(AppBarTitleContext);\n    return { title, setTitle };\n}\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { TimePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport WarningIcon from '@material-ui/icons/Warning';\nimport Moment from \"react-moment\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\",\n        justifyContent : \"space-between\",\n        margin: theme.spacing(0.5),\n        alignItems: \"center\",\n        flexFlow: \"row wrap\"\n    },\n    picker: {\n        margin: theme.spacing(0.5),\n        width: \"30%\"\n    },\n    intervalRightSide: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    intervalLeftSide: {\n    }\n});\n\nfunction ScheduleInterval({classes, intervals, index, setIntervals}){\n\n    let currentInterval = intervals[index]\n\n    const [lastAccommodationEnabled, setLastAccommodationEnabled] = useState(currentInterval.lastAccommodation != null)\n    const [lastAccommodationTime, setLastAccommodationTime] = useState(currentInterval.lastAccommodation == null ? currentInterval.closeTime : currentInterval.lastAccommodation)\n\n    const getCloseDay = (closeTime, openTime) => {\n        let currentPeriod = intervals[index]\n        if(moment(closeTime, \"HH:mm\").isBefore(moment(openTime, \"HH:mm\")))\n            return (currentPeriod.openDay + 1) > 6 ? 0 : (currentPeriod.openDay +1)\n        else return currentPeriod.openDay\n    }\n\n    let handleUpdateOpenTime = (value) => {\n        setIntervals((oldIntervals) => {\n            return oldIntervals.map((item, i) => {\n                if(index === i){\n                    return {\n                        ...item,\n                        openTime: moment(value).format(\"HH:mm\").toString(),\n                        closeDay: getCloseDay(item.closeTime, value)\n                    }\n                }else return item\n            })\n        })\n    }\n    let handleUpdateCloseTime = (value) => {\n        setIntervals((oldIntervals) => {\n            return oldIntervals.map((item, i) => {\n                if(index === i){\n                    return {\n                        ...item,\n                        closeTime: moment(value).format(\"HH:mm\").toString(),\n                        closeDay: getCloseDay(value, item.openTime)\n                    }\n                }else return item\n            })\n\n        })\n    }\n\n    const handleDelete = () => {\n        setIntervals(oldIntervals => {\n            return oldIntervals.filter((item, i) => i !== index)\n        })\n    }\n\n    useEffect(() => {\n        setIntervals((oldIntervals) => {\n            return oldIntervals.map((item, i) => {\n                if(index === i){\n                    return {\n                        ...item,\n                        lastAccommodation: lastAccommodationEnabled ? lastAccommodationTime.toString() : null\n                    }\n                }else return item\n            })\n\n        })\n    }, [lastAccommodationTime, lastAccommodationEnabled])\n\n    const theme = useTheme();\n    const largeScreen = useMediaQuery(theme.breakpoints.only('lg'));\n\n    return(\n        <div className={classes.root}>\n            <div className={classes.intervalLeftSide}>\n                <TimePicker\n                    margin=\"normal\"\n                    ampm={false}\n                    label=\"Opens\"\n                    className={classes.picker}\n                    format=\"HH:mm\"\n                    value={moment(currentInterval.openTime, \"HH:mm\")}\n                    onChange={handleUpdateOpenTime}\n                    InputProps={{\n                        disableUnderline: true,\n                    }}\n                />\n                <TimePicker\n                    margin=\"normal\"\n                    ampm={false}\n                    className={classes.picker}\n                    label=\"Closes\"\n                    format=\"HH:mm\"\n                    value={moment(currentInterval.closeTime, \"HH:mm\")}\n                    onChange={handleUpdateCloseTime}\n                    InputProps={{\n                        disableUnderline: true,\n                    }}\n                />\n\n                {intervals[index].closeDay !== intervals[index].openDay &&\n                    <React.Fragment>\n                        <Typography variant=\"subtitle1\">\n                            <WarningIcon style={{marginRight: \"10px\"}}/>\n                            Closes the next day\n                        </Typography>\n                    </React.Fragment>}\n\n                {!largeScreen &&\n                <Button color=\"primary\" onClick={handleDelete}>\n                    <DeleteOutlineIcon/>\n                </Button>\n                }\n            </div>\n\n            <div className={classes.intervalRightSide}>\n\n                <Checkbox checked={lastAccommodationEnabled} onChange={() => setLastAccommodationEnabled(state => !state)} />\n\n                <TimePicker\n                    margin=\"normal\"\n                    ampm={false}\n                    label=\"Last accommodation\"\n                    format=\"HH:mm\"\n                    disabled={!lastAccommodationEnabled}\n                    value={moment(lastAccommodationTime.toString(), \"HH:mm\")}\n                    onChange={(value) => setLastAccommodationTime(moment(value).format(\"HH:mm\").toString())}\n                    InputProps={{\n                        disableUnderline: true,\n                    }}\n                />\n\n                {largeScreen &&\n                    <Button color=\"primary\" onClick={handleDelete}>\n                    <DeleteOutlineIcon/>\n                    </Button>\n                }\n\n            </div>\n        </div>\n    )\n}\n\nScheduleInterval.propTypes = {\n    classes: PropTypes.object.isRequired,\n    intervals: PropTypes.array.isRequired,\n    setIntervals: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(ScheduleInterval)\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ScheduleInterval from \"./ScheduleInterval\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst styles = theme => ({\n    header: {\n        display: \"flex\",\n        justifyContent : \"space-between\"\n    },\n    root: {\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(0.5)\n    }\n});\n\nfunction DayComponent({classes, scheduleData, setScheduleData, openDay, onChange, globalTime}){\n\n    let [intervals, setIntervals] = useState(scheduleData.periods.filter(item => item.openDay === openDay))\n    let [ignoreGlobalTime, setIgnoreGlobalTime] = useState({ignoreOpenTime: true, ignoreCloseTime: true})\n    useEffect(() => {\n        onChange(intervals, openDay)\n    }, [intervals])\n\n    useEffect(() => {\n        if(ignoreGlobalTime.ignoreOpenTime){\n            setIgnoreGlobalTime(data => {\n                return {...data, ignoreOpenTime: false}\n            })\n            return\n        }\n        setIntervals(oldIntervals => {\n            return oldIntervals.map(item => {\n                return {...item, openTime: globalTime.openTime}\n            })\n        })\n    }, [globalTime.openTime])\n\n    useEffect(() => {\n        if(ignoreGlobalTime.ignoreCloseTime){\n            setIgnoreGlobalTime(data => {\n                return {...data, ignoreCloseTime: false}\n            })\n            return\n        }\n        setIntervals(oldIntervals => {\n            return oldIntervals.map(item => {\n                return {...item, closeTime: globalTime.closeTime}\n            })\n        })\n    }, [globalTime.closeTime])\n\n    let weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\n    const handleAddPeriod = () => {\n        setIntervals(oldIntervals => {\n            return [\n                ...oldIntervals,\n                {openDay: openDay, closeDay: openDay, openTime: \"08:00\", closeTime: \"18:00\"}\n            ]\n        })\n    }\n\n    return(\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <Typography variant=\"h6\" >\n                    {weekDays[openDay]}\n                </Typography>\n                <Button color=\"secondary\" onClick={handleAddPeriod}>\n                    <AddIcon/>\n                </Button>\n            </div>\n\n            {intervals.map((value, index) => {\n                return <React.Fragment>\n                    <Divider variant=\"middle\" />\n                    <ScheduleInterval index={index} intervals={intervals} setIntervals={setIntervals}/>\n                </React.Fragment>\n            })}\n\n        </div>\n    )\n}\n\nDayComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    scheduleData: PropTypes.object.isRequired,\n    setScheduleData: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(DayComponent)\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, {useEffect, useState} from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {DatePicker, MuiPickersUtilsProvider, TimePicker} from '@material-ui/pickers';\nimport Divider from \"@material-ui/core/Divider\";\nimport DayComponent from \"./DayComponent\";\nimport moment from \"moment\";\n\nconst styles = theme => ({\n    header: {\n        display: \"flex\",\n        justifyContent : \"space-between\"\n    },\n    root: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(1)\n    },\n    pickerStyle: {\n        margin: theme.spacing(1)\n    },\n    headerLeft: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"left\"\n    },\n    globalTimeEditLayout: {\n        display: \"flex\",\n        justifyContent : \"space-between\",\n        margin: theme.spacing(0.5),\n        alignItems: \"center\",\n        flexFlow: \"row wrap\"\n    },\n    globalTimeEditLeft: {\n\n    },\n    globalTimePicker: {\n        margin: theme.spacing(0.5),\n        width: \"30%\"\n    }\n});\n\nfunction Schedule({classes, data, setData, index}){\n\n    const[periods, setPeriods] = useState([...data.periods])\n    const[globalTime, setGlobalTime] = useState({openTime: \"08:00\", closeTime: \"17:00\"})\n\n    const handleIntervalChange = (newIntervals, openDay) => {\n        setPeriods(oldPeriods => {\n            let filtered = oldPeriods.filter(item => item.openDay !== openDay)\n            if(newIntervals.length === 0)\n                return [...filtered]\n            return [\n                ...filtered,\n                ...newIntervals\n            ]\n        })\n    }\n\n    useEffect(() => {\n        setData(oldData => {\n            return oldData.map((schedule, i) => {\n                if( i === index){\n                    return {...schedule, periods: periods}\n                }else return schedule\n            })\n        })\n    }, [periods])\n\n    const generateWeekdayViews = () => {\n        let views = []\n        for(let i =0; i < 7; i++){\n            views.push(<DayComponent globalTime={globalTime} scheduleData={data} onChange={handleIntervalChange} setScheduleData={setData} openDay={i} key={i}/>)\n        }\n        return views\n    }\n\n    const updateFromTime = (value) => {\n        setData(oldData => {\n            return oldData.map((schedule, i) => {\n                if( i === index){\n                    return {...schedule, from: moment(value).format('MM-DD').toString()}\n                }else return schedule\n            })\n        })\n    }\n    const updateToTime = (value) => {\n        setData(oldData => {\n            return oldData.map((schedule, i) => {\n                if( i === index){\n                    return {...schedule, to: moment(value).format('MM-DD').toString()}\n                }else return schedule\n            })\n        })\n    }\n    const removeSchedule = () => {\n        setData(oldData => {\n            return oldData.filter((item, i) => index !== i)\n        })\n    }\n\n    const handleUpdateGlobalOpenTime = (value) => {\n        setGlobalTime(data => {\n            return {...data, openTime: moment(value).format(\"HH:mm\").toString()}\n        })\n    }\n    const handleUpdateGlobalCloseTime = (value) => {\n        setGlobalTime(data => {\n            return {...data, closeTime: moment(value).format(\"HH:mm\").toString()}\n        })\n    }\n\n    return(\n        <Paper className={classes.root}>\n            <div className={classes.header}>\n                <div className={classes.headerLeft}>\n                    {data.scheduleDefault &&\n                    <Typography variant=\"h6\" >\n                        Date: Year round\n                    </Typography>}\n                    {!data.scheduleDefault &&\n                        <React.Fragment>\n                            <DatePicker\n                                className={classes.pickerStyle}\n                                views={[\"month\", \"date\"]}\n                                label=\"From\"\n                                value={moment(data.from, \"MM-DD\")}\n                                onChange={updateFromTime}\n                            />\n                            <DatePicker\n                                className={classes.pickerStyle}\n                                views={[\"month\", \"day\"]}\n                                label=\"To\"\n                                value={moment(data.to, \"MM-DD\")}\n                                onChange={updateToTime}\n                            />\n                        </React.Fragment>\n                    }\n                </div>\n                {!data.scheduleDefault &&\n                <Button color=\"secondary\" onClick = {removeSchedule}>\n                    <RemoveIcon/>\n                </Button>}\n\n            </div>\n            <br/>\n            <div className={classes.globalTimeEditLayout}>\n                <div className={classes.globalTimeEditLeft}>\n                    <TimePicker\n                        margin=\"normal\"\n                        ampm={false}\n                        label=\"Opens\"\n                        className={classes.globalTimePicker}\n                        format=\"HH:mm\"\n                        value={moment(globalTime.openTime, \"HH:mm\")}\n                        onChange={handleUpdateGlobalOpenTime}\n                        InputProps={{\n                            disableUnderline: true,\n                        }}\n                    />\n                    <TimePicker\n                        margin=\"normal\"\n                        ampm={false}\n                        className={classes.globalTimePicker}\n                        label=\"Closes\"\n                        format=\"HH:mm\"\n                        value={moment(globalTime.closeTime, \"HH:mm\")}\n                        onChange={handleUpdateGlobalCloseTime}\n                        InputProps={{\n                            disableUnderline: true,\n                        }}\n                    />\n                </div>\n            </div>\n            {generateWeekdayViews()}\n        </Paper>\n    )\n}\n\nSchedule.propTypes = {\n    classes: PropTypes.object.isRequired,\n    data: PropTypes.object.isRequired,\n    setData: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Schedule)\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, {useEffect, useState} from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from \"@material-ui/core/Button\";\nimport Schedule from \"../Schedule\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nconst styles = theme => ({\n    header: {\n        display: \"flex\",\n        justifyContent : \"space-between\",\n        flexWrap: \"wrap\"\n    }\n});\n\nfunction SchedulesWrapper({classes, scheduleData, setScheduleData, isScheduleEnabled, setIsScheduleEnabled}){\n\n    const addSchedule = () => {\n        setScheduleData(oldData => {\n            return [\n                ...oldData,\n                {scheduleDefault: false, from: \"01-01\", to: \"01-02\", periods : []}\n            ]\n        })\n    }\n\n    return(\n        <div>\n            <div className={classes.header}>\n                <Typography variant=\"h6\" >\n                    Working schedule\n                </Typography>\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={isScheduleEnabled}\n                            onChange={() => setIsScheduleEnabled(state => !state)}\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"Enable schedule for this place?\"\n                />\n            </div>\n            <br/>\n            {isScheduleEnabled &&\n                <React.Fragment>\n                    {scheduleData.map((value, index) => {\n                        return <Schedule data={value} index={index} setData={setScheduleData}/>\n                    })}\n                    <Button style={{float: \"right\"}}color=\"secondary\" onClick={addSchedule}>\n                        <AddIcon/>\n                    </Button>\n                </React.Fragment>}\n        </div>\n    )\n}\n\nSchedulesWrapper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    scheduleData: PropTypes.array.isRequired,\n    setScheduleData: PropTypes.func.isRequired,\n    isScheduleEnabled: PropTypes.object.isRequired,\n    setIsScheduleEnabled: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SchedulesWrapper)\n","import React, {useEffect, useState} from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\nimport {Paper} from '@material-ui/core';\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\nimport initialScheduleData from \"../components/add_place_components/initialScheduleData\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport API from \"../Networking/API\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Strings from \"../helpers/stringResources\";\nimport green from \"@material-ui/core/colors/green\";\nimport Reviews from \"../components/add_place_components/Reviews\";\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\nimport SchedulesWrapper from \"../components/add_place_components/SchedulesWrapper\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    paperContent: {\n        marginTop: theme.spacing(4),\n        [theme.breakpoints.down(\"lg\")]: {\n            width: \"95%\",\n            padding: theme.spacing(2),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            width: \"70%\",\n            padding: theme.spacing(4),\n        },\n    },\n    root: {\n        height: \"100vh\",\n        [theme.breakpoints.down(\"lg\")]: {\n            height: \"100%\",\n        },\n    },\n    loader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100vw\",\n        height: \"100vh\"\n    },\n    content: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        height: `calc(93vh - 64px)`,\n        [theme.breakpoints.down(\"lg\")]: {\n            width: \"100%\",\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            width: \"auto\",\n            padding: theme.spacing(8),\n        },\n        overflowY: \"auto\"\n    },\n    bottom: {\n        [theme.breakpoints.down(\"lg\")]: {\n            position: \"fixed\",\n            height: \"7vh\",\n            bottom: 0,\n            right: 0,\n        },\n        width: \"100%\",\n        zIndex: 5,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        padding: theme.spacing(1),\n    }\n});\n\n\nfunction AddPlace({classes, match}) {\n    const [placeInfo, setPlaceInfo] = useState({\n        placeId: \"\",\n        name: \"\", description: \"\", website: \"\", phoneNumber: \"\",\n        hasSchedule: false, isPublic: false, isVerified: true, overallStarRating: 0, totalReviews: 0,\n        source: \"\", price: \"\", averageTimeSpent: \"0\"\n    });\n\n\n    const [selectedTags, setSelectedTags] = useState([]);\n    const [selectedCategories, setSelectedCategories] = useState([]);\n\n    const [photos, setPhotos] = useState([]);\n\n    const [locationData, setLocationData] = useState({\n        city: '',\n        address: '',\n        country: '',\n        latitude: 54.687157,\n        longitude: 25.279652,\n        county: '',\n        municipality: ''\n    });\n    const [parkingMarkerData, setParkingMarkerData] = useState({\n        city: '',\n        address: '',\n        country: '',\n        latitude: 54.687157,\n        longitude: 25.279652,\n        county: '',\n        municipality: ''\n    });\n    const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\n\n    const [sources, setSources] = useState([]);\n\n    const [scheduleData, setScheduleData] = useState(initialScheduleData);\n    const [isScheduleEnabled, setIsScheduleEnabled] = useState(false);\n\n    const [placeId, setPlaceId] = useState(match.params.placeId);\n\n    const [firstTimeLoading, setFirstTimeLoading] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [error, setError] = useState({name: false});\n    const [checkErrors, setCheckErrors] = useState(false);\n\n\n    const {addConfig} = UseSnackbarContext();\n    const {addAlertConfig} = UseAlertDialogContext();\n\n    const {title, setTitle} = UseAppBarTitleContext();\n\n    const ColorButton = withStyles((theme) => ({\n        root: {\n            color: \"white\",\n            backgroundColor: green[500],\n            '&:hover': {\n                backgroundColor: green[700],\n            },\n        },\n    }))(Button);\n\n    useEffect(()=>{\n        if(placeId!==undefined){\n            console.log(\"Getting place location\");\n            getPlaceInfo()\n        }\n    },[]);\n\n    useEffect(() => {\n        //Loaded place for editing\n        if (placeId === undefined) {\n            setTitle(\"Add new place\");\n            console.log(\"Came here to add new place\");\n            setFirstTimeLoading(false) //Just loaded add place window\n        }\n        //New Place has been just inserted, thus inserting other place info\n        if (placeId !== undefined && firstTimeLoading === false) {\n            console.log(\"Just added new place\");\n            Promise.all([\n                updateTagsData(placeId),\n                updateParkingData(placeId),\n                updateCategoriesData(placeId),\n                updatePhotoData(placeId),\n                updateSchedule(placeId),\n                updateSources(placeId)\n            ]).then(responses => {\n                formFeedback(true, Strings.SNACKBAR_PLACE_INSERTED_SUCCESS)\n            }).catch(error => {\n                formFeedback(false)\n            })\n        }\n\n    }, [placeId]);\n\n    useEffect(() => {\n        if (firstTimeLoading === false) {\n            console.log(\"Making this place public\");\n            updateAll()\n        }\n    }, [placeInfo['isPublic']]);\n\n    function getPlaceInfo() {\n        API.Places.getPlaceById(\"?full=true&p=\" + placeId).then(response => {\n            setAllData(response)\n            setTitle(\"Editing place/\" + response.name);\n        }).catch(error => {\n            formFeedback(false)\n        })\n    }\n\n    function setAllData(place) {\n        setPlaceInfo({\n            placeId: place.placeId,\n            name: place.name,\n            description: place.description,\n            website: place.website,\n            phoneNumber: place.phoneNumber,\n            hasSchedule: place.hasSchedule,\n            isPublic: place.isPublic,\n            isVerified: place.isVerified,\n            overallStarRating: place.overallStarRating,\n            totalReviews: place.totalReviews,\n            price: place.price,\n            averageTimeSpent: place.averageTimeSpent,\n        });\n\n        setLocationData({\n            city: place.city,\n            address: place.address,\n            country: place.country,\n            latitude: place.latitude,\n            longitude: place.longitude,\n            county: place.county,\n            municipality: place.municipality,\n        });\n\n        setParkingMarkerData({\n            city: place.city,\n            address: place.address,\n            country: place.country,\n            latitude: place.latitude,\n            longitude: place.longitude,\n            county: place.county,\n            municipality: place.municipality,\n        });\n\n        setSources(place.sources);\n        setSelectedTags(place.tags);\n        setSelectedCategories(place.categories);\n        if (place.schedule.length > 0) {\n            setScheduleData([...place.schedule]);\n            setIsScheduleEnabled(true)\n        } else setIsScheduleEnabled(false);\n\n        setAllSelectedParkingData(place.parking);\n        setPhotos(place.photos);\n        setFirstTimeLoading(false)\n    }\n\n    function formFeedback(success, message = Strings.SNACKBAR_ERROR) {\n        addConfig(success, message);\n        setIsLoading(false)\n    }\n\n    function saveChanges() {\n        if (placeId === undefined) {\n            addAlertConfig(Strings.DIALOG_PLACE_INSERT_TITLE, Strings.DIALOG_PLACE_INSERT, [{\n                name: \"Insert\", action: () => {\n                    setIsLoading(true);\n                    insertBasicPlaceInfo()\n                }\n            }])\n        } else {\n            addAlertConfig(Strings.DIALOG_PLACE_UPDATE_TITLE, Strings.DIALOG_PLACE_UPDATE, [{\n                name: \"save and publish\", action: () => {\n                    let plc = Object.assign({}, placeInfo, {});\n                    plc.isPublic = 1;\n                    setPlaceInfo(plc);\n                    setIsLoading(true);\n                    updateAll()\n                }\n            }, {\n                name: \"save\", action: () => {\n                    setIsLoading(true);\n                    updateAll()\n                }\n            }])\n        }\n    }\n\n    function updateAll() {\n        Promise.all([\n            updatePlaceInfo(),\n            updateTagsData(placeId),\n            updatePhotoData(placeId),\n            updateCategoriesData(placeId),\n            updateParkingData(placeId),\n            updateSchedule(placeId),\n            updateSources(placeId)\n        ]).then(response => {\n            formFeedback(true, Strings.SNACKBAR_CHANGES_SAVED);\n        }).catch(err => {\n            formFeedback(false)\n        })\n    }\n\n    function updatePlaceInfo() {\n        API.Places.updatePlace(formPlaceInfo()).then(response => {\n\n        }).catch(error => {\n\n        })\n\n    }\n\n    function insertBasicPlaceInfo() {\n        API.Places.insertPlace(formPlaceInfo()).then(placeId => {\n            setPlaceId(placeId)\n        }).catch(error => {\n\n        })\n    }\n\n    function updateParkingData(id) {\n        API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\" + id).then(response => {\n\n        }).catch(error => {\n\n        })\n    }\n\n    function updateTagsData(id) {\n        API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\" + id).then(response => {\n\n        }).catch(error => {\n\n        })\n    }\n\n    function updateSources(id) {\n        API.SourcePlace.updateSourcesForPlace(sources, \"?p=\" + id).then(response => {\n        }).catch(error => {\n\n        })\n    }\n\n\n    function updateCategoriesData(id) {\n        API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\" + id).then(response => {\n\n        }).catch(error => {\n\n        })\n    }\n\n    function updatePhotoData(id) {\n        API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\" + id).then(response => {\n\n        }).catch(error => {\n\n        })\n    }\n\n\n    function updateSchedule(id) {\n        API.Schedule.updateScheduleForPlace(isScheduleEnabled ? scheduleData : [], \"?id=\" + id).then(response => {\n        }).catch(er => {\n        })\n\n    }\n\n    function formPlaceInfo() {\n        let d = Object.assign(placeInfo, locationData);\n        return d\n    }\n\n\n    function publishPlace() {\n        addAlertConfig(Strings.DIALOG_PLACE_PUBLISH_TITLE, placeInfo['isPublic'] ? Strings.DIALOG_PLACE_UNPUBLISH_MESSAGE : Strings.DIALOG_PLACE_PUBLISH_MESSAGE,\n            [{\n                name: \"Agree\", action: () => {\n                    let obj = Object.assign({}, placeInfo, {});\n                    obj['isPublic'] = !obj['isPublic'];\n                    setPlaceInfo(obj);\n                }\n            }])\n\n    }\n\n    function verifyPlace() {\n        addAlertConfig(Strings.DIALOG_PLACE_VERIFY_TITLE, Strings.DIALOG_PLACE_VERIFY_MESSAGE, [{\n            name: \"agree\", action: () => {\n                let obj = Object.assign({}, placeInfo, {});\n                obj['isPublic'] = 1;\n                obj['isVerified'] = 1;\n                setPlaceInfo(obj);\n            }\n        }])\n    }\n\n    return (\n        <div className={classes.root}>\n\n            {firstTimeLoading ? <div className={classes.loader}><CircularProgress/></div> :\n                <div className={classes.content}>\n\n\n                    <Paper elevation={4} className={classes.paperContent}>\n                        <BasicPlaceInfo\n                            error={error}\n                            setError={setError}\n                            checkErrors={checkErrors}\n                            placeInfo={placeInfo}\n                            setPlaceInfo={setPlaceInfo}\n                            selectedSources={sources}\n                            setSelectedSources={setSources}\n                        />\n\n                    </Paper>\n\n                    {placeId !== undefined ?\n                        <Paper elevation={4} className={classes.paperContent}>\n                            <Reviews\n                                placeInfo={placeInfo}\n                            />\n                        </Paper>\n                        : null}\n\n\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PhotosInfo\n                        photos={photos}\n                        setPhotos={setPhotos}\n                    />\n                </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PlaceLocation\n                        placeInfo={placeInfo}\n                        locationData={locationData}\n                        setParkingLocation={setParkingMarkerData}\n                        setLocationData={setLocationData}/>\n                </Paper>\n            <Paper elevation = {4} className={classes.paperContent}>\n                <ParkingLocation\n                    placeInfo={placeInfo}\n                    allSelectedParkingData={allSelectedParkingData}\n                    setAllSelectedParkingData={setAllSelectedParkingData}\n                    locationData={parkingMarkerData}\n                    setLocationData={setParkingMarkerData}/>\n            </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PlaceDiscovery\n                        selectedTags={selectedTags}\n                        setSelectedTags={setSelectedTags}\n                        selectedCategories={selectedCategories}\n                        setSelectedCategories={setSelectedCategories}/>\n                </Paper>\n\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <SchedulesWrapper isScheduleEnabled={isScheduleEnabled} setIsScheduleEnabled={setIsScheduleEnabled} setScheduleData={setScheduleData} scheduleData={scheduleData}/>\n                </Paper>\n            </div> }\n\n\n            {isLoading ? <LinearProgress/> : null}\n\n            <Paper elevation={1} className={classes.bottom}>\n\n                {\n                    placeInfo['isVerified'] === false && placeId !== undefined ?\n                        <ColorButton\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                                verifyPlace()\n                            }}\n                            className={classes.button}\n                        >\n                            Verify place\n                        </ColorButton>\n                        :\n                        <FormControlLabel\n                            control={<Switch checked={placeInfo['isPublic']} onChange={() => {\n                                publishPlace()\n                            }\n                            } name=\"isPublic\"/>}\n                            label=\"Make this place public\"\n                        />}\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => saveChanges()}\n                    className={classes.button}>\n                    Save\n                </Button>\n\n\n            </Paper>\n        </div>)\n\n}\n\nAddPlace.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AddPlace)\n\n\n","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {Fragment, useState} from \"react\"\nimport Typography from \"@material-ui/core/Typography\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Card from \"@material-ui/core/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport red from \"@material-ui/core/colors/red\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = theme => ({\n    root: {\n\n    },\n    media: {\n        height: 0,\n            paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n})\n\nfunction CategoriesDisplay({categories}){\n    return(\n        categories != null &&\n        <Box component=\"ul\"  style={{\n            display: 'flex',\n            justifyContent: 'left',\n            flexWrap: 'wrap',\n            listStyle: 'none',\n            padding: '0px'\n        }}>\n            {categories.map((data, index) => {\n                return (\n                    <li key={index}>\n                        <Chip\n                            variant=\"outlined\"\n                            style={{margin: \"5px\"}}\n                            label={data.name}\n                        />\n                    </li>\n\n                );\n            })}\n        </Box>\n    )\n}\n\nfunction SubheaderDisplay({city, address, priceRange, rating}){\n    return(\n        <div>\n            {rating != null &&\n            <Fragment><Rating\n                readOnly={true}\n                value={rating}\n            /><br/></Fragment>}\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\n\n        </div>\n    )\n}\n\nfunction ApiPlaceCard({classes, placeData, renderActionArea}){\n\n    function truncateText(text){\n        if(text == null)\n            return \"\"\n        if(text.length > 500){\n            return text.substring(0, 500) + \"...\";\n        }else{\n            return text\n        }\n    }\n\n    return(\n        <Card className={classes.root}>\n            <CardHeader\n                action={\n                    renderActionArea != null && renderActionArea()\n                }\n                title={placeData.name}\n                subheader={<SubheaderDisplay  city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\n\n            />\n            {placeData.photos != null && placeData.photos.length > 0 &&\n            <CardMedia\n                className={classes.media}\n                image={placeData.photos[0].url}\n            />}\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {truncateText(placeData.description)}\n                </Typography>\n\n                <CategoriesDisplay categories={placeData.categories}/>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\n                {placeData.website}\n                </Typography>\n\n            </CardContent>\n            <CardActions disableSpacing>\n            </CardActions>\n        </Card>\n    )\n}\n\nApiPlaceCard.propTypes = {\n    placeData: PropTypes.object.isRequired,\n    renderActionArea: PropTypes.func\n};\n\nexport default withStyles(styles)(ApiPlaceCard)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport {debounce} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        margin: theme.spacing(2)\n        // width: 400,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    divider: {\n        // height: 28,\n        margin: 4,\n    },\n}));\n\nexport default function SearchInputComponent({hint, searchCallback}) {\n    const classes = useStyles();\n\n    const debouncedInput = (event) => {\n        searchCallback(event.target.value)\n    }\n\n    const debounceInput = debounce(event => debouncedInput(event), 500)\n\n    const handleInput = (event) => {\n        event.persist()\n        debounceInput(event)\n    }\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <InputBase\n                className={classes.input}\n                placeholder={hint}\n                inputProps={{ 'aria-label': hint }}\n                onChange={handleInput}\n            />\n            <IconButton className={classes.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n            <Divider className={classes.divider} orientation=\"vertical\" />\n        </Paper>\n    );\n}","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {useState} from \"react\"\nimport ApiPlaceCard from \"../components/ApiPlaceCard\";\nimport API from \"../Networking/API\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Masonry from \"react-masonry-component\";\nimport SearchInputComponent from \"../components/SearchInputComponent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\n\n\n\nconst styles = theme => ({\n    root:{\n        overflow: 'scroll',\n        width: \"100%\",\n        padding: theme.spacing(1),\n        height:`calc(100vh - 64px)`,\n        paddingTop: \"9vh\",\n    },\n    topBar: {\n        height: \"8vh\",\n        position: \"absolute\",\n        width: \"60%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        justifyContent: \"center\",\n        zIndex: 1\n    },\n    searchBox: {\n        margin: theme.spacing(1)\n    },\n    placeApiCard: {\n        [theme.breakpoints.down('lg')]: {\n            width: \"95%\",\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: \"28vw\",\n        },\n        // minWidth: \"400px\",\n        margin: theme.spacing(1)\n    }\n})\n\nfunction ApiPlaces({classes}){\n\n    const [data, setData] = useState([]);\n    const [isLoadingData, setIsLoadingData] = useState(false);\n    const { addConfig } = UseSnackbarContext();\n\n    const loadDataFunc = (query) => {\n        setData([])\n        setIsLoadingData(true)\n        API.Places.searchApiPlaces(\"?keyword=\" + encodeURI(query)).then(response => {\n            setData([...response])\n        }).catch(error => {\n            addConfig(false, \"The request did not go through.\")\n        }).finally(() => {\n            setIsLoadingData(false)\n        })\n    }\n\n    const handleSearch = (word) => {\n        if(word.length > 3)\n            loadDataFunc(word)\n    }\n\n    return(\n        <div style={{position: \"relative\"}}>\n            <div className = {classes.topBar}>\n                <SearchInputComponent searchCallback={handleSearch} hint=\"Search api places\" style={classes.searchBox} />\n            </div>\n\n            <div className={classes.root}>\n                <Masonry\n                    style={{margin: \"0 auto\"}}\n                    elementType={'div'} // default 'div'\n                    options={{\n                        isFitWidth: true\n                    }} // default {}\n                    disableImagesLoaded={false} // default false\n                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n                >\n\n                    {data.map(item => {\n                        return <ApiPlaceCard classes ={{ root: classes.placeApiCard}} key={item.placeId} placeData = {item} style={{boxSizing: 'border-box'}}/>\n                    })}\n\n                    {\n                        data.length === 0 && !isLoadingData &&\n                        <Typography variant=\"subtitle1\">No results</Typography>\n                    }\n                    {\n                        isLoadingData &&\n                        <CircularProgress  />\n                    }\n\n                </Masonry>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(ApiPlaces)","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\">\n            {'Copyright © '}\n            Traveldirection {' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n    main: {\n        marginTop: theme.spacing(8),\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n    },\n}));\n\nexport default function NotFoundPage() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n                    Page not found\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                    {'Try something else'}\n                </Typography>\n            </Container>\n            <footer className={classes.footer}>\n                <Container maxWidth=\"sm\">\n                    <Copyright />\n                </Container>\n            </footer>\n        </div>\n    );\n}","import {withStyles} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst styles = theme => ({\n    cardRoot: {\n        [theme.breakpoints.only(\"lg\")]: {\n            display: 'flex',\n            // alignItems: \"flex-start\"\n        },\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 5\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        [theme.breakpoints.down(\"lg\")]: {\n            height: \"200px\",\n        },\n        [theme.breakpoints.only(\"lg\")]: {\n            flex: 1,\n            height: \"auto\",\n        },\n    },\n    root: {\n        display: \"flex\",\n        flexFlow: \"column wrap\"\n    },\n    addParkingWrapper: {\n        display: \"inline-block\"\n    }\n})\n\n\nfunction TourPlaceComponent({classes, elementData, removeCallback, addTransportCallback, displayNoTransportWarning}) {\n\n    function truncateText(text) {\n        if (text == null)\n            return \"\"\n        if (text.length > 500) {\n            return text.substring(0, 500) + \"...\";\n        } else {\n            return text\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Card className={classes.cardRoot}>\n\n                {elementData.data.details.photos != null && elementData.data.details.photos.length > 0 &&\n                <CardMedia\n                    className={classes.cover}\n                    image={elementData.data.details.photos[0].url}\n\n                />\n                }\n\n                <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                        <Typography component=\"h5\" variant=\"h5\">\n                            {elementData.data.details.name}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                            {truncateText(elementData.data.details.description)}\n                        </Typography>\n                    </CardContent>\n                </div>\n                <CardHeader\n                    action={\n                        <IconButton aria-label=\"remove\" onClick={() => removeCallback(elementData)}>\n                            <RemoveIcon/>\n                        </IconButton>\n                    }\n                />\n            </Card>\n\n            {displayNoTransportWarning &&\n            <Alert severity=\"error\">No transport from this place specified</Alert>}\n\n            <div className={classes.addParkingWrapper}>\n                <Button style={{display: \"inline\"}} color=\"secondary\" onClick={() => addTransportCallback(elementData)}>\n                    <AddIcon/>\n                </Button>\n                <Typography style={{display: \"inline\"}} variant=\"subtitle1\">\n                    Add transport from this place\n                </Typography>\n            </div>\n\n        </div>\n\n    )\n}\n\nTourPlaceComponent.propTypes = {\n    elementData: PropTypes.object.isRequired,\n    removeCallback: PropTypes.func.isRequired,\n    addTransportCallback: PropTypes.func.isRequired,\n    displayNoTransportWarning: PropTypes.bool\n};\n\nexport default withStyles(styles)(TourPlaceComponent)\n","import React, { useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MetroIcon from '@material-ui/icons/DirectionsTransit';\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DriveEta';\nimport TrainIcon from '@material-ui/icons/Train';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport TramIcon from '@material-ui/icons/Tram';\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\n\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\",\n        flexFlow: \"column wrap\"\n    },\n    transportSelectWrapper: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    transportSelect: {\n        marginLeft: theme.spacing(1),\n        width: \"100px\"\n    }\n});\n\nconst transportTypes = [\n    {\n        icon: <DirectionsWalkIcon/>,\n        label: \"Walk\"\n    },\n    {\n        icon: <MetroIcon/>,\n        label: \"Metro\"\n    },\n    {\n        icon: <DirectionsBikeIcon/>,\n        label: \"Bike\"\n    },\n    {\n        icon: <DirectionsBusIcon/>,\n        label: \"Bus\"\n    },\n    {\n        icon: <CarIcon/>,\n        label: \"Car\"\n    },\n    {\n        icon: <TrainIcon/>,\n        label: \"Train\"\n    },\n    {\n        icon: <FlightIcon/>,\n        label: \"Plane\"\n    },\n    {\n        icon: <TramIcon/>,\n        label: \"Tram\"\n    }\n]\n\nfunction TransportItem({classes, transportId, transportChangeCallback, transportRemoveCallback}) {\n\n    const [currentTransport, setCurrentTransport] = useState(transportId == null ? 0 : transportId)\n\n    const handleTransportChange = (e) => {\n        setCurrentTransport(e.target.value)\n        transportChangeCallback({transport: parseInt(e.target.value)})\n    }\n\n    return (\n        <div className={classes.root}>\n            <MoreVertIcon/>\n            <div className={classes.transportSelectWrapper}>\n                {transportTypes[currentTransport].icon}\n                <FormControl className={classes.transportSelect} >\n                    <NativeSelect\n                        value={currentTransport}\n                        onChange={handleTransportChange}\n                    >\n                        {transportTypes.map((item, index) => {\n                            return <option key={index} value={index}> {item.label}</option>\n                        })}\n                    </NativeSelect>\n                </FormControl>\n                <IconButton aria-label=\"remove\" onClick={() => transportRemoveCallback()}>\n                    <RemoveIcon />\n                </IconButton>\n            </div>\n            <MoreVertIcon/>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(TransportItem)","import {withStyles} from \"@material-ui/core/styles\";\nimport TourPlaceComponent from \"./TourPlaceComponent\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ElementType} from \"./Tour\";\nimport { SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport TransportItem from \"./TransportItem\";\nimport shortid from 'shortid';\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst styles = theme => ({\n    tourPlaceComponent: {\n        margin: theme.spacing(2)\n    },\n    root: {\n        display: \"flex\",\n        flexFlow: \"column wrap\",\n        margin: theme.spacing(1)\n    }\n})\n\nconst TourPlaceSortable = SortableElement(({displayNoTransportWarning, elementData, removePlaceCallback, classes, addTransportCallback}) => (\n    <div>\n        <TourPlaceComponent removeCallback={removePlaceCallback} classes={{root: classes.tourPlaceComponent}}\n                            addTransportCallback={addTransportCallback} elementData={elementData}\n                            displayNoTransportWarning={displayNoTransportWarning}/>\n    </div>\n));\nconst TransportItemSortable = SortableElement(({transportId, transportChangeCallback, transportRemoveCallback}) => (\n    <div>\n        <TransportItem transportId={transportId} transportRemoveCallback={transportRemoveCallback} transportChangeCallback={transportChangeCallback}/>\n    </div>\n));\n\nconst SortableList = SortableContainer(({currentDay, removeElementCallback, tourInfo, classes, addTransportCallback, transportChangeCallback}) => {\n\n    const shouldDisplayNoTransportWarning = (index) => {\n        let elements = tourInfo.days[currentDay].tour\n        return ((elements.length -1 ) > index) && elements[index + 1].type !== ElementType.transport\n    }\n\n    return (\n\n        <ul>\n            {tourInfo.days[currentDay].tour.map((item, index) => {\n\n                switch (item.type) {\n                    case ElementType.place:\n                        return <TourPlaceSortable key={item.data.details.placeId} index={index}\n                                                  addTransportCallback={addTransportCallback} elementData={item}\n                                                  classes={classes}\n                                                  displayNoTransportWarning={shouldDisplayNoTransportWarning(index)}\n                                                  removePlaceCallback={() => removeElementCallback(index)}/>\n                    case ElementType.transport:\n                        return <TransportItemSortable key={item.data.elementIdentifier} index={index}\n                                                      transportId={item.data.transport}\n                                                      transportRemoveCallback = {() => removeElementCallback(index)}\n                                                      transportChangeCallback={(transport) => transportChangeCallback(index, transport)}/>\n                }\n            })}\n        </ul>\n    )\n});\n\nfunction TourPlacesWrapper({classes, tourInfo, tourInfoReducer, currentDay, errorInfo, setErrorInfo}) {\n\n    const removeElementCallback = (index) => {\n        tourInfoReducer({\n            type: 'REMOVE_ELEMENT',\n            day: currentDay,\n            index: index\n        })\n    };\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        tourInfoReducer({\n            type: 'MOVE_ELEMENT',\n            day: currentDay,\n            oldIndex: oldIndex,\n            newIndex: newIndex\n        })\n    }\n\n    const handleTransportChange = (index, data) => {\n        tourInfoReducer({\n            type: 'UPDATE_ELEMENT',\n            day: currentDay,\n            index: index,\n            data: data\n        })\n    }\n\n    const addTransportCallback = (details) => {\n        tourInfoReducer({\n            type: 'INSERT_TRANSPORT_FOR_PLACE',\n            placeId: details.data.details.placeId,\n            day: currentDay,\n            data: {type: ElementType.transport, data: {transport: 0, elementIdentifier: shortid.generate()}}\n        })\n    }\n\n\n\n    return (\n        <div className={classes.root}>\n            {tourInfo.days[currentDay].tour.length === 0 &&\n            <Alert severity=\"warning\">You have not added any places for the currently selected day.</Alert>}\n            <SortableList\n                pressDelay={200}\n                disableAutoscroll={false}\n                currentDay={currentDay}\n                tourInfo={tourInfo}\n                transportChangeCallback={handleTransportChange}\n                onSortEnd={onSortEnd}\n                classes={classes}\n                addTransportCallback={addTransportCallback}\n                removeElementCallback={removeElementCallback}/>\n        </div>\n    )\n}\n\nTourPlacesWrapper.propTypes = {\n    tourInfo: PropTypes.object.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n    currentDay: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(TourPlacesWrapper)\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React, {useState} from \"react\";\nimport SearchInputComponent from \"../SearchInputComponent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\nimport DnsIcon from \"@material-ui/icons/Dns\";\nimport ApiPlaceCard from \"../ApiPlaceCard\";\nimport API from \"../../Networking/API\";\n\nconst styles = theme => ({\n    searchInputComponent: {\n\n    },\n    placeCard: {\n        margin: theme.spacing(1, 8, 1, 8),\n    },\n})\n\n\nfunction PlaceSearch({classes, addPlaceCallback, apiPlacesFound, setApiPlacesFound, localPlacesFound, setLocalPlacesFound}) {\n\n    const [apiPlacesLoading, setApiPlacesLoading] = useState(false)\n    const [localPlacesLoading, setLocalPlacesLoading] = useState(false)\n\n    const placeType = {\n        local: 0,\n        api: 1\n    }\n\n    const generatePlaceCards = () => {\n        let genProps = (placeInfo, type) => {\n            return {\n                classes: {root: classes.placeCard},\n                key: placeInfo.placeId,\n                renderActionArea: () => {\n                    return (\n                        <div>\n                            <Button color=\"primary\" onClick={() => addPlaceCallback(placeInfo, type)}>\n                                <AddIcon/>\n                            </Button>\n                            <Tooltip title={type === placeType.local ? \"This place is from our database\" : \"This place is from API\"} aria-label=\"add\">\n                                {type === placeType.local ? <LocalLibraryIcon/> : <DnsIcon/>}\n                            </Tooltip>\n                        </div>\n                    )\n                },\n                placeData : placeInfo\n            }\n        }\n\n        let mappedPlaces = []\n        localPlacesFound.forEach(item => {\n            mappedPlaces.push(<ApiPlaceCard {...genProps(item, placeType.local)}/>)\n        })\n        apiPlacesFound.forEach(item => {\n            mappedPlaces.push( <ApiPlaceCard {...genProps(item, placeType.api)}/>)\n        })\n        return mappedPlaces\n    }\n\n    const searchCallback = (keyword) => {\n        if(keyword.length < 3)\n            return;\n        setLocalPlacesFound([])\n        setApiPlacesFound([])\n        setApiPlacesLoading(true)\n        setLocalPlacesLoading(true)\n        API.Places.getAllPlacesAdmin(\"?keyword=\" + keyword).then(response=>{\n            setLocalPlacesFound(response.list)\n            setLocalPlacesLoading(false)\n        }).catch(error=>{\n            console.log(error)\n        })\n\n        API.Places.searchApiPlaces(\"?keyword=\" + keyword).then(response => {\n            setApiPlacesFound(response)\n            setApiPlacesLoading(false)\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    return(\n        <React.Fragment>\n            <SearchInputComponent hint=\"Search for a place\" searchCallback={searchCallback} className={classes.searchInputComponent}/>\n            {(localPlacesLoading || apiPlacesLoading) ?\n                <CircularProgress  /> :\n                <React.Fragment>\n                    {generatePlaceCards()}\n                </React.Fragment>\n            }\n        </React.Fragment>\n    )\n}\n\nexport default withStyles(styles)(PlaceSearch)\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Button from \"@material-ui/core/Button\";\n\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\",\n        margin: theme.spacing(1)\n    },\n    radioButtonArea: {\n    },\n    cardArea: {\n        flex: 1,\n        display: \"flex\"\n    },\n    content: {\n        flex: '1 1 auto',\n    },\n    descriptionInput: {\n        marginTop: theme.spacing(2),\n        width: \"100%\",\n        height: \"auto\"\n    },\n    headerWrap: {}\n})\n\nfunction DayCard({classes, onSelectCallback, index, currentDay, tourInfoReducer, description, handleRemoveDay}) {\n\n    const updateDescriptionGlobally = (e) => {\n        tourInfoReducer({\n            type: 'UPDATE_DAY',\n            day: index,\n            data: {\n                description: e\n            }\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.radioButtonArea}>\n                <Radio checked={index === currentDay} onChange={(e) => {\n                    onSelectCallback(index)\n                }}/>\n            </div>\n            <Card className={classes.cardArea}>\n                <CardContent className={classes.content}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                        Day {index + 1}\n                    </Typography>\n\n                    <TextField\n                        className={classes.descriptionInput}\n                        multiline\n                        label=\"Description\"\n                        value={description}\n                        variant=\"outlined\"\n                        onChange={(e) => {\n                            updateDescriptionGlobally(e.target.value)\n                        }}\n                    />\n                </CardContent>\n                <CardHeader\n                    action={\n                        <Button startIcon={<RemoveIcon/>} aria-label=\"remove\" onClick={() => handleRemoveDay(index)}/>\n                    }\n                />\n            </Card>\n        </div>\n    )\n}\n\nDayCard.propTypes = {\n    onSelectCallback: PropTypes.func.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n    currentDay: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(DayCard)\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DayCard from \"./DayCard\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport shortid from 'shortid';\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    addDayButton: {\n        marginTop: theme.spacing(1)\n    },\n    footerWrapper: {\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"flex-end\"\n    }\n})\n\nconst DayCardSortable = SortableElement(({dayInfo, day, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => (\n    <DayCard\n        description={dayInfo.description}\n        currentDay={currentDay}\n        index={day}\n        handleRemoveDay={removeDayCallback}\n        onSelectCallback={onSelectCallback}\n        tourInfoReducer={tourInfoReducer}/>\n));\n\nconst SortableList = SortableContainer(({elements, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => {\n\n    return (\n        <ul style={{padding: \"0px\"}}>\n            {elements.map((item, index) => {\n                return <DayCardSortable\n                    currentDay={currentDay}\n                    day={index}\n                    index={index}\n                    removeDayCallback={removeDayCallback}\n                    key={item.elementIdentifier}\n                    dayInfo={item}\n                    onSelectCallback={onSelectCallback}\n                    tourInfoReducer={tourInfoReducer}/>\n            })}\n        </ul>\n    );\n});\n\nfunction DaysWrapper({classes, currentDay, setCurrentDay, tourInfo, tourInfoReducer}) {\n\n    const { addAlertConfig } = UseAlertDialogContext();\n\n    const handleSelect = (index) => {\n        setCurrentDay(index)\n    }\n\n    const addDayHandler = () => {\n        tourInfoReducer({\n            type: 'ADD_DAY',\n            data: {\n                description: \"\",\n                elementIdentifier: shortid.generate(),\n                tour: []\n            }\n        })\n    }\n\n    const removeDay = (day) => {\n        tourInfoReducer({\n                type: 'REMOVE_DAY',\n                day: day,\n            }\n        )\n        if(day === currentDay)\n            setCurrentDay(day - 1)\n    }\n\n    const removeDayCallback = (day) => {\n        if(tourInfo.days.length === 1){\n            addAlertConfig(\"Warning\", \"The tour has to have at least one day\", [])\n        }else{\n            if(tourInfo.days[day].tour.length > 0){ //This day has at least one place/transport added to it\n                addAlertConfig(\"Warning\", \"Are you sure you want to remove this day?\",[{name: \"yes\", action: ()=>{\n                    removeDay(day)\n                    }}],() => {\n                })\n            }else removeDay(day)\n        }\n    }\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        tourInfoReducer({\n            type: 'MOVE_DAY',\n            oldIndex: oldIndex,\n            newIndex: newIndex\n        })\n        setCurrentDay(newIndex)\n    }\n\n    return (\n        <div className={classes.root}>\n            <SortableList\n                pressDelay={200}\n                disableAutoscroll={false}\n                elements={tourInfo.days}\n                currentDay={currentDay}\n                onSortEnd={onSortEnd}\n                removeDayCallback={removeDayCallback}\n                onSelectCallback={handleSelect}\n                tourInfoReducer={tourInfoReducer}/>\n            <div className={classes.footerWrapper}>\n                <Button\n                    variant=\"text\"\n                    color=\"secondary\"\n                    size=\"large\"\n                    className={classes.addDayButton}\n                    onClick={addDayHandler}\n                    startIcon={<AddIcon/>}>\n                    Add another day\n                </Button>\n            </div>\n\n        </div>\n    )\n}\n\nDaysWrapper.propTypes = {\n    setCurrentDay: PropTypes.func.isRequired,\n    currentDay: PropTypes.number.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n    tourInfo: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DaysWrapper)\n","import {arrayMove} from \"react-sortable-hoc\";\nimport {ElementType} from \"./Tour\";\n\nexport default function TourDataReducer(state, action) {\n\n    let days = []\n\n    switch (action.type) {\n        case 'ADD_ELEMENT':\n            if(state.days !== null && action.data.type === ElementType.place && state.days.some(day => day.tour !== null && day.tour.some(place => place.type === ElementType.place && place.data.details.placeId === action.data.data.details.placeId))){\n                if(action.onError !== null && action.onError !== undefined){\n                    action.onError()\n                }\n                return state\n            }\n\n            state.days.forEach((item, index) => {\n                if (index === action.day) {\n                    days.push({\n                        ...item,\n                        tour: [\n                            ...item.tour,\n                            action.data\n                        ]\n                    })\n                } else days.push(item)\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'UPDATE_ELEMENT':\n            state.days.forEach((item, index) => {\n                if (index === action.day) {\n                    let tour = item.tour\n                    tour[action.index] = {...tour[action.index], data: {...tour[action.index].data, ...action.data}}\n                    days.push({\n                        ...item,\n                        tour: tour\n                    })\n                } else days.push(item)\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'INSERT_TRANSPORT_FOR_PLACE':\n            state.days.forEach((item, index) => {\n                if (index === action.day) {\n                    let tour = item.tour\n                    let index = tour.findIndex((item) => item.type === ElementType.place && item.data.details.placeId === action.placeId)\n                    tour.splice(index + 1, 0, action.data)\n                    days.push({\n                        ...item,\n                        tour: tour\n                    })\n                } else days.push(item)\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'ADD_DAY':\n            return {\n                ...state,\n                days: [\n                    ...state.days,\n                    action.data\n                ]\n            }\n        case 'MOVE_DAY':\n            return {\n                ...state,\n                days: arrayMove(state.days, action.oldIndex, action.newIndex)\n            }\n        case 'MOVE_ELEMENT':\n            days = state.days.map((item, index) => {\n                if (index === action.day)\n                    return {...item, tour: arrayMove(item.tour, action.oldIndex, action.newIndex)}\n                else return item\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'UPDATE_DAY':\n            days = state.days.map((item, index) => {\n                if (index === action.day) {\n                    return {...item, ...action.data}\n                } else return item\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'REMOVE_ELEMENT':\n            days = state.days.map((item, index) => {\n                if (index === action.day)\n                    return {...item, tour: item.tour.filter((value, index) => index !== action.index)}\n                else return item\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'REMOVE_DAY':\n            days = state.days.filter((item, index) => index !== action.day)\n            return {\n                ...state,\n                days: days\n            }\n        case 'UPDATE_TOUR':\n            return {\n                ...state,\n                ...action.data\n            }\n        case 'SET_ALL':\n            return action.data\n\n        default:\n            return state\n    }\n\n}\n","import React, {useEffect} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport AutoCompleteChip from \"../AutocompleteChip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport green from \"@material-ui/core/colors/green\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(4),\n    },\n    nameField: {\n        width: \"100%\"\n    },\n    descriptionField: {\n        marginTop: theme.spacing(2),\n        width: \"100%\",\n        height: \"auto\"\n    },\n    publicityDiv: {\n        width: \"100%\",\n\n    },\n    button: {\n        margin: theme.spacing(2),\n        color: \"#ffffff\"\n    },\n});\n\nfunction TourInfoComponent({classes, tourInfo, tourInfoReducer, errorInfo, setErrorInfo, availableTags, selectedTags, setSelectedTags, setAvailableTags, tourId}) {\n\n    const handleDescriptionChange = (e) => {\n        tourInfoReducer({\n            type: 'UPDATE_TOUR',\n            data: {description: e.target.value}\n        })\n    }\n    const handleTitleChange = (e) => {\n        tourInfoReducer({\n            type: 'UPDATE_TOUR',\n            data:  {name: e.target.value}\n        })\n    }\n\n    useEffect(()=>{\n        if(tourInfo.name === \"\")\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: true}}})\n        else\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: false}}})\n    }, [tourInfo.name])\n\n    let shouldDisplayTitleMissingError = errorInfo.showErrors && errorInfo.errors.titleMissing\n\n    const verifyTour = () => {\n        tourInfoReducer({\n            type: 'UPDATE_TOUR',\n            data:  {isVerified: true}\n        })\n    }\n\n    const publishTour = () => {\n        tourInfoReducer({\n            type: 'UPDATE_TOUR',\n            data:  {isPublished: !tourInfo.isPublished}\n        })\n\n    }\n\n    const ColorButton = withStyles((theme) => ({\n        root: {\n            color: \"white\",\n            backgroundColor: green[500],\n            '&:hover': {\n                backgroundColor: green[700],\n            },\n        },\n    }))(Button);\n\n\n    return (\n        <div className={classes.root}>\n            <TextField label=\"Tour name\"\n                       variant=\"outlined\"\n                       error={shouldDisplayTitleMissingError}\n                       helperText={shouldDisplayTitleMissingError ? \"Please provide a title for your tour\" : \"\"}\n                       value={tourInfo.name}\n                       onChange={handleTitleChange}\n                       defaultValue=\"My tour name\" className={classes.nameField}/>\n            <TextField\n                className={classes.descriptionField}\n                multiline\n                label=\"Description\"\n                value={tourInfo.description}\n                variant=\"outlined\"\n                onChange={handleDescriptionChange}\n            />\n            <br/><br/>\n            <Typography component=\"h6\" variant=\"h6\">\n                Tags for this tour\n            </Typography>\n            <AutoCompleteChip\n                options={availableTags}\n                id=\"tagId\"\n                setOptions={setAvailableTags}\n                setSelectedOptions={setSelectedTags}\n                selectedOptions={selectedTags}\n            />\n\n            {tourId !== undefined &&\n                <div className={classes.publicityDiv}>\n                    {tourInfo.isVerified ?\n                        <div>\n                            <FormControlLabel\n                                control={<Switch checked={tourInfo.isPublished} onChange={publishTour} name=\"isPublic\"/>}\n                                label=\"Make this tour public?\"\n                            />\n                        </div>\n                        :\n                    <ColorButton\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={verifyTour}\n                        className={classes.button}\n                    >\n                        Verify tour\n                    </ColorButton>\n                    }\n\n\n                </div>\n            }\n\n        </div>\n    )\n}\n\nTourInfoComponent.propTypes = {\n    tourInfo: PropTypes.object.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n    availableTags: PropTypes.array.isRequired,\n    setAvailableTags: PropTypes.func.isRequired,\n    selectedTags: PropTypes.array.isRequired,\n    setSelectedTags: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(TourInfoComponent)","import React, {useContext, useEffect, useMemo, useRef, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer} from \"react-google-maps\"\nimport {ElementType} from \"./Tour\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FilterBlock from \"../add_place_components/FilterBlock\";\nimport CustomControlsManager from \"../maps/CustomControlsManager\";\nimport API from \"../../Networking/API\";\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst google = window.google;\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(4),\n    }, cover: {\n        [theme.breakpoints.down(\"lg\")]: {\n            height: \"200px\",\n        },\n        [theme.breakpoints.only(\"lg\")]: {\n            flex: 1,\n            height: \"auto\",\n        },\n    },\n    largeIcon: {\n        width: theme.spacing(14),\n        height: theme.spacing(14),\n    },\n});\n\n\n/**\n * Tours map component\n * @type {React.ComponentClass<WithGoogleMapProps>}\n */\nconst MyMapComponent = withGoogleMap(props =>\n    <GoogleMap\n        ref={props.refMap}\n        defaultZoom={8}\n        defaultCenter={{lat: 55.2983804, lng: 23.9132164}}>\n\n        {props.children}\n\n    </GoogleMap>\n);\n\n\nfunction TourMap({classes, tourInfo, currentDay, addPlace, removePlace}) {\n\n    const [directions, setDirection] = useState();\n\n    const [infoWindows, setInfoWindows] = useState([]);\n    const [directionPlaces, setDirectionPlaces] = useState([])\n\n\n    const [places, setPlaces] = useState([]);\n    const [placesInfoWindows, setPlacesInfoWindows] = useState([]);\n\n    const [loadingArea, setLoadingArea] = useState(false);\n    const refMap = useRef(null);\n\n    const {filterQuery} = useContext(PlacesFilterContext);\n\n    const constructPlaceData = () => {\n        let p = tourInfo.days[currentDay].tour.filter(item => item.type === ElementType.place);\n        let places = [];\n        p.forEach(item => {\n            let placeId = item.data.details.placeId;\n            let lat = item.data.details.latitude;\n            let lng = item.data.details.longitude;\n            let name = item.data.details.name;\n            let photos = item.data.details.photos;\n            places.push({placeId: placeId, latitude: lat, longitude: lng, name: name, photo: photos.length > 0 ? photos[0].url : null});\n        });\n        setInfoWindows(Array(places.length).fill(false))\n        setDirectionPlaces(places);\n        return places\n    };\n\n    useEffect(() => {\n        const places = constructPlaceData();\n        if(places.length>1){\n            const waypoints = places.map(p =>({\n                location: {lat: p.latitude, lng:p.longitude},\n                stopover: true\n            }));\n\n            const origin = waypoints.shift().location;\n            let destination = null;\n\n            if (waypoints.length > 0)\n                destination = waypoints.pop().location;\n            else\n                destination = origin;\n\n            const directionsService = new google.maps.DirectionsService();\n\n            directionsService.route(\n                {\n                    origin: origin,\n                    destination: destination,\n                    travelMode: google.maps.TravelMode.DRIVING,\n                    waypoints: waypoints\n                },\n                (result, status) => {\n                    if (status === google.maps.DirectionsStatus.OK) {\n                        setDirection(result)\n                    } else {\n                        alert(status);\n                    }\n                }\n            );\n        } else {\n            setDirection(null)\n        }\n    }, [currentDay, tourInfo.days]);\n\n\n    function fetchPlaces(){\n        console.log(\"Getting all places...\", refMap.current.getCenter().lat())\n        getAllPlaces(filterQuery + \"&p=\" + 0 + \"&s=\" + 100 + \"&l=\" + refMap.current.getCenter().lat() + \",\" + refMap.current.getCenter().lng() + \"range=\" + 50)\n    }\n\n    useEffect(() => {\n        if(!loadingArea){\n            if(refMap.current != null){\n                fetchPlaces()\n            }\n        }\n    }, [filterQuery]);\n\n    function getAllPlaces(query) {\n        setLoadingArea(true);\n        API.Places.getAllPlacesAdmin(query).then(locations => {\n            setPlacesInfoWindows(Array(locations.list.length).fill(false));\n            setPlaces(locations.list)\n            setLoadingArea(false)\n        }).catch(err => {\n            console.log(err);\n            setLoadingArea(false)\n        })\n    }\n\n    function addPlaceToTourDay(place) {\n        setPlacesInfoWindows(Array(places.length).fill(false));\n        addPlace(place, ElementType.place)\n    }\n\n    function removePlaceFromTourDay(place) {\n        tourInfo.days[currentDay].tour.map((row, index)=>{\n            if(row.type === ElementType.place){\n                if(row.data.details.placeId === place.placeId){\n                    removePlace(index)\n                }\n            }\n        })\n    }\n\n    /**\n     * Renders places markers on the map\n     * @return {*[]}\n     */\n    function PlacesMarkers() {\n        return places.map((location, i) => {\n            const latitude = parseFloat(location.latitude);\n            const longitude = parseFloat(location.longitude);\n            return <Marker\n                zIndex={1}\n                key={location.placeId}\n                position={{lat: latitude, lng: longitude}}\n                onClick={() => {\n                    let markers = Object.assign({}, placesInfoWindows);\n                    markers[i] = true;\n                    setPlacesInfoWindows(markers)\n                }}\n            >\n                {placesInfoWindows[i] && (\n                    <InfoWindow onCloseClick={() => {\n                        let markers = Object.assign({}, placesInfoWindows);\n                        markers[i] = false;\n                        setPlacesInfoWindows(markers)\n                    }\n                    }>\n                        <div style={{display: \"flex\", flexDirection: \"column\"}}>\n                            <Typography variant=\"h6\">\n                                {location.name}\n                            </Typography>\n\n                            <Button\n                                onClick={()=>{addPlaceToTourDay(location)}}\n                                variant=\"text\"\n                                color=\"secondary\"\n                                size=\"large\"\n                                startIcon={<AddIcon/>}>\n                                Add this place to tour!\n                            </Button>\n                        </div>\n                    </InfoWindow>\n                )}\n            </Marker>\n        })\n    }\n\n\n    const searchAreaComponent = useMemo(() => (\n        <CustomControlsManager position={window.google.maps.ControlPosition.TOP_CENTER}>\n            <div>\n                {loadingArea ?\n                    <CircularProgress />\n                    :\n                    <Button variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                               fetchPlaces()\n                            }}\n                    >\n                        Search area...\n                    </Button>\n                }\n\n            </div>\n        </CustomControlsManager>\n    ), [loadingArea]);\n\n    return (\n        <div className={classes.root}>\n            <FilterBlock/>\n            <MyMapComponent\n                loadingElement={<div style={{height: `100%`}}/>}\n                containerElement={<div style={{height: `400px`}}/>}\n                mapElement={<div style={{height: `100%`}}/>}\n                refMap={refMap}>\n\n                {searchAreaComponent}\n                <PlacesMarkers/>\n\n                {/* Rendering direction path*/}\n                {directions ?\n                    <DirectionsRenderer\n                        options={{suppressMarkers: true, draggable: false}}\n                        draggable={false}\n                        directions={directions}/> : null}\n\n                {/* Rendering direction places markers*/}\n                {directionPlaces.map((marker, index) => {\n                    const position = { lat: marker.latitude, lng: marker.longitude };\n                    return <Marker\n                        zIndex={2}\n                        icon={{\n                            url: require('../../res/selectedTourIcon.svg'),\n                            scaledSize: new window.google.maps.Size(48, 48),\n                            origin: new window.google.maps.Point(0, 0),\n                            labelOrigin: new window.google.maps.Point(24, 16),\n                        }}\n                        key={index}\n                        position={position}\n                        label={{text: `${index+1}`, color: \"white\"}}\n                        onClick={\n                        ()=>{\n                            let info = Object.assign({}, infoWindows);\n                            info[index] = true;\n                            setInfoWindows(info);\n                        }\n                    }>\n                        {infoWindows[index] && (\n                        <InfoWindow onCloseClick={()=>{\n                            let info = Object.assign({}, infoWindows);\n                            info[index] = false;\n                            setInfoWindows(info);\n                        }}>\n                                <Card style={{display:\"flex\", flexDirection: \"column\",alignItems:\"center\"}}>\n                                    {marker.photo ?<Avatar alt=\"Remy Sharp\" src={marker.photo} className={classes.largeIcon}/> : null}\n\n                                    <Typography>\n                                        {marker.name}\n                                    </Typography>\n                                    <Button\n                                        onClick={()=>removePlaceFromTourDay(marker)}\n                                        style={{marginTop: 12}}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        startIcon={<DeleteIcon />}\n                                    >\n                                        Remove from tour\n                                    </Button>\n\n                                </Card>\n                        </InfoWindow>\n                        )}\n                    </Marker>\n                })}\n\n            </MyMapComponent>\n\n        </div>\n    )\n}\n\nTourMap.propTypes = {\n    tourInfo: PropTypes.object.isRequired,\n    currentDay: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(TourMap)\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TourPlacesWrapper from \"./TourPlacesWrapper\";\nimport PlaceSearch from \"./PlaceSearch\";\nimport DaysWrapper from \"./DaysWrapper\";\nimport TourDataReducer from \"./TourReducer\";\nimport TourInfoComponent from \"./TourInfoComponent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TourMap from \"./TourMap\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../Networking/API\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\nimport shortid from 'shortid';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport const ElementType = {\n    place: 0,\n    transport: 1\n}\nexport const PlaceType = {\n    api: 1,\n    local: 0\n}\n\nconst styles = theme => ({\n    root: {\n        [theme.breakpoints.down(\"lg\")]: {\n            overflow: \"scroll\",\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            overflow: \"initial\",\n            display: \"flex\",\n        },\n        height: `calc(100% - 64px)`,\n        width: \"100%\",\n        '&::-webkit-scrollbar': {\n            display: \"none\"\n        },\n    },\n    loader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100vw\",\n        height: \"100vh\"\n    },\n    rightLayout: {\n        flex: 2,\n        '&::-webkit-scrollbar': {\n            display: \"none\"\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            height: \"100%\",\n            overflowY: \"scroll\",\n\n        },\n    },\n    leftLayout: {\n        [theme.breakpoints.up(\"lg\")]: {\n            height: \"100%\",\n        },\n        overflowY: \"scroll\",\n\n        flex: 1,\n        '&::-webkit-scrollbar': {\n            display: \"none\"\n        },\n    },\n    actionsArea: {\n        padding: theme.spacing(1),\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n    },\n\n})\n\nconst sampleTourData = {\n    name: \"\",\n    description: \"\",\n    isVerified: true,\n    isPublished: false,\n    days: [\n        {\n            description: \"\",\n            elementIdentifier: \"jkasfbjkdsbjk\",\n            tour: []\n        }\n    ]\n}\n\nfunction Tour({classes, match}) {\n\n    const [localPlacesFound, setLocalPlacesFound] = useState([])\n    const [apiPlacesFound, setApiPlacesFound] = useState([])\n    const [currentDay, setCurrentDay] = useState(0)\n    const [tourId, setTourId] = useState(match.params.tourId)\n    const [isLoading, setIsLoading] = useState(match.params.tourId !== undefined);\n\n    const [selectedTags, setSelectedTags] = useState([])\n    const [availableTags, setAvailableTags] = useState([])\n\n    const [errorInfo, setErrorInfo] = useState({\n            errors: {\n                titleMissing: false,\n                /* Any client-side verification errors may by added here, and handled in individual components */\n            },\n            showErrors: false\n        }\n    )\n\n    const [tourInfo, dispatchTourInfo] = React.useReducer(TourDataReducer, sampleTourData)\n    const {addConfig} = UseSnackbarContext();\n\n    const handleAddPlaceClick = (placeInfo, type) => {\n        dispatchTourInfo({\n            type: 'ADD_ELEMENT',\n            day: currentDay,\n            data: {\n                type: ElementType.place,\n                data: {\n                    type: type,\n                    details: {...placeInfo}\n                },\n            },\n            onError: () => {\n                addConfig(false, \"This place already exists in this tour.\")\n            }\n        })\n    }\n\n    const removeElementCallback = (index) => {\n        dispatchTourInfo({\n            type: 'REMOVE_ELEMENT',\n            day: currentDay,\n            index: index\n        })\n    };\n\n    useEffect(() => {\n        if (tourId !== undefined) { //If user wants to edit a tour, we download all tour data. loadData also downloads tags\n            loadData()\n        }else{ //Otherwise, we just download tags instead.\n            API.Tags.getAllTags().then(response => {\n                setAvailableTags(response)\n            }).catch(() => {\n                addConfig(false, \"Tags failed to load\")\n            })\n        }\n    }, [])\n\n    const parseTourInfoResponse = (response) => {\n        let aggregatedDays = [];\n        response.days.forEach(day => {\n            let aggregatedElements = [];\n            day.data.forEach(place => {\n                let aggregatedPlace = {\n                    type: ElementType.place,\n                    data: {details: place.place, type: place.place.type}\n                }\n                delete aggregatedPlace.data.details.type\n                aggregatedElements.push(aggregatedPlace)\n                place.transport.forEach(transport => {\n                    aggregatedElements.push({\n                        type: ElementType.transport,\n                        data: {transport: transport.fk_transportId - 1, elementIdentifier: shortid.generate()}\n                    })\n                })\n            })\n            let aggregatedDay = {...day, tour: aggregatedElements, elementIdentifier: shortid.generate()}\n            delete aggregatedDay.data\n            aggregatedDays.push(aggregatedDay)\n        })\n        let aggregatedTour = {...response, days: aggregatedDays}\n        dispatchTourInfo({type: 'SET_ALL', data: aggregatedTour})\n    }\n\n    const loadData = () => {\n        Promise.all([\n            API.Tour.getTour(\"?id=\" + tourId),\n            API.Tags.getAllTags(),\n            API.Tour.getTourTags(\"?id=\" + tourId),\n            ]\n        ).catch(() => {\n            addConfig(false, \"Tour has failed to load\")\n            setTourId(undefined)\n        }).then((response) => {\n            parseTourInfoResponse(response[0])\n            setAvailableTags(response[1])\n            setSelectedTags(response[2])\n        }).finally(() => {\n            setIsLoading(false)\n        })\n    }\n\n    const handleSave = () => {\n        let containsErrors = false;\n        Object.keys(errorInfo.errors).map(function (keyName, keyIndex) {\n            if (errorInfo.errors[keyName]) {\n                setErrorInfo(state => {\n                    return {...state, showErrors: true}\n                })\n                containsErrors = true;\n            }\n        })\n        if (containsErrors) return\n        setErrorInfo(state => {\n            return {...state, showErrors: false}\n        })\n\n        const aggregatedDays = []\n        tourInfo.days.forEach(day => {\n            let aggregatedDay = {...day, data: []}\n            delete aggregatedDay.tour\n            delete aggregatedDay.elementIdentifier\n            for (let i = 0; i < day.tour.length; i++) {\n                let element = day.tour[i]\n                if (element.type !== ElementType.place)\n                    continue;\n                let transport = []\n                for (let j = i + 1; j < day.tour.length && day.tour[j].type === ElementType.transport; j++) {\n                    transport.push({fk_transportId: day.tour[j].data.transport + 1})\n                }\n                let aggregatedPlace = {\n                    place: {\n                        type: element.data.type,\n                        placeId: element.data.details.placeId\n                    },\n                    transport: transport\n                }\n                aggregatedDay.data.push(aggregatedPlace)\n            }\n            aggregatedDays.push(aggregatedDay)\n        })\n        let aggregatedTour = {...tourInfo, days: aggregatedDays}\n\n        if (tourId === undefined) {\n            API.Tour.insertTour(aggregatedTour).then((response) => {\n                setTourId(response)\n                return response\n            }).then((response) => Promise.all(\n                [\n                    API.Tour.updateTourTags(selectedTags, \"?p=\" + response)\n                ]\n            )).then((() => {\n                addConfig(true, \"Tour has been inserted successfully!\")\n            })).catch((error) => {\n                addConfig(false, \"Something went wrong while saving this tour.\")\n            })\n        } else {\n            Promise.all([\n                API.Tour.updateTour(aggregatedTour, \"?id=\" + tourId),\n                API.Tour.updateTourTags(selectedTags, \"?p=\" + tourId)\n            ])\n            .then(() => {\n                addConfig(true, \"Tour has been updated successfully!\")\n            }).catch((error) => {\n                addConfig(false, \"Something went wrong while saving this tour.\")\n            })\n        }\n\n    };\n\n    const leftLayout = useMemo(() => (\n        <div className={classes.leftLayout}>\n            <PlaceSearch addPlaceCallback={handleAddPlaceClick} localPlacesFound={localPlacesFound}\n                         setLocalPlacesFound={setLocalPlacesFound} apiPlacesFound={apiPlacesFound}\n                         setApiPlacesFound={setApiPlacesFound}/>\n        </div>\n    ), [localPlacesFound, apiPlacesFound, currentDay])\n\n\n    let dayInfoWithoutDesc = JSON.stringify(tourInfo.days.map(day => {\n        let dayCopy = {...day}\n        delete dayCopy.description\n        return dayCopy\n    }))\n\n    const mapComponent = useMemo(() => (\n        <React.Fragment>\n            <TourMap tourInfo={tourInfo}\n                     currentDay={currentDay}\n                     addPlace={handleAddPlaceClick}\n                     removePlace={removeElementCallback}\n            />\n            <TourPlacesWrapper errorInfo={errorInfo} setErrorInfo={setErrorInfo}\n                               currentDay={currentDay} tourInfoReducer={dispatchTourInfo} tourInfo={tourInfo}/>\n        </React.Fragment>\n    ), [dayInfoWithoutDesc, currentDay])\n\n    const tourDaysComponents = useMemo(() => (\n        <div>\n            <DaysWrapper currentDay={currentDay} setCurrentDay={setCurrentDay} tourInfo={tourInfo}\n                         tourInfoReducer={dispatchTourInfo}/>\n            <Divider variant=\"middle\"/>\n            {mapComponent}\n\n        </div>\n    ), [tourInfo.days, currentDay, errorInfo]);\n\n    const rightLayout = useMemo(() => (\n        <Paper className={classes.rightLayout}>\n            <TourInfoComponent tourInfo={tourInfo} tourInfoReducer={dispatchTourInfo} errorInfo={errorInfo}\n                               setErrorInfo={setErrorInfo}\n                               tourId={tourId}\n                               setSelectedTags={setSelectedTags} selectedTags={selectedTags} availableTags={availableTags} setAvailableTags={setAvailableTags}/>\n            <Divider variant=\"middle\"/>\n            {tourDaysComponents}\n            <div className={classes.actionsArea}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\n                    Save this tour\n                </Button>\n            </div>\n        </Paper>\n    ), [tourInfo, currentDay, errorInfo, availableTags, selectedTags]);\n\n    const theme = useTheme();\n    const largeScreen = useMediaQuery(theme.breakpoints.up('lg'));\n\n    const content = (\n        <React.Fragment>\n            {largeScreen ?\n                <React.Fragment>\n                    {leftLayout}\n                    {rightLayout}\n                </React.Fragment> :\n                <React.Fragment>\n                    {rightLayout}\n                    {leftLayout}\n                </React.Fragment>\n            }\n        </React.Fragment>\n    );\n\n    return (\n        <div className={classes.root}>\n            {isLoading ? <div className={classes.loader}><CircularProgress/></div> : content}\n        </div>\n    )\n}\n\n\nexport default withStyles(styles)(Tour)\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TableComponent from \"../components/TableComponent\";\nimport API from \"../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Box from \"@material-ui/core/Box\";\nimport history from \"../helpers/history\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Popover from \"@material-ui/core/Popover\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    input: {\n        display: \"none\"\n    },\n\n    sortingButtons: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\"\n\n    },\n    root:{\n        height:\"100vh\",\n        width:\"100%\",\n        overflow: \"auto\"\n    },\n    buttonsDiv: {\n        backgroundColor: \"red\",\n        justifyContent: \"flex-end\"\n    },\n    content:{\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    }\n});\n\n\nconst headCells = [\n    { id: 'name', numeric: false, disablePadding: false, label: 'Tour name', isId: true},\n    { id: 'description', numeric: false, disablePadding: false, label: 'Tour description',isId: false},\n    { id: 'lastModified', numeric: false, disablePadding: false, label: 'Date modified',isId: false},\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\n];\n\nfunction Tours(props) {\n\n    const [data, setData] = useState([]);\n    const [pageData, setPageData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { classes } = props;\n\n    const [filterOptions, setFilterOptions] = useState([\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\n\n    const [filterQuery, setFilterQuery] = useState(\"\");\n\n\n    const { addAlertConfig } = UseAlertDialogContext();\n    const { addConfig } = UseSnackbarContext();\n\n    useEffect(()=>{\n        if(!isLoading){\n            getAllTours(\"?o=\"+filterQuery);\n        }\n    },[filterQuery]);\n\n    function parseData(data){\n        console.log(\"deita\", data.list)\n        setIsLoading(false);\n        let placesData = [];\n        data.list.map(row => {\n            placesData.push(row)\n        });\n\n        delete data.list;\n        setData(placesData);\n        setPageData(data);\n    }\n\n    function updateTourCallback(id){\n        history.push(\"/app/addtour/\"+id)\n    }\n    function removePlaceCallback(id){\n        console.log(\"tour id\", id)\n\n        addAlertConfig(Strings.DIALOG_TOUR_DELETE_TITLE, Strings.DIALOG_TOUR_DELETE_MESSAGE, [{name: \"Delete\", action: () => {\n                setIsLoading(true);\n                API.Tour.removeTour(\"?id=\"+id).then(response=>{\n                    let tmp = [];\n                    data.map(row=>{\n                        if(row[\"tourId\"] !== id){\n                            tmp.push(row)\n                        }\n                    });\n                    setData(tmp);\n                    addConfig(true, Strings.SNACKBAR_TOUR_REMOVE_SUCCESS)\n                    setIsLoading(false)\n                }).catch(error=>{\n                    setIsLoading(false);\n                    addConfig(false, Strings.SNACKBAR_ERROR)\n                })\n            }}],  ()=>{setIsLoading(false)})\n    }\n\n    const changePageCallback = (p=0, keyword=\"\") => {\n        setIsLoading(true);\n        getAllTours(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword+\"&o=\"+filterQuery)\n    };\n\n\n    //Sorting stuff\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const filterOptionsChanged = (name) =>{\n        let filters = [];\n        let fq = [];\n        filterOptions.map(row=>{\n            if(row.filterName === name){\n                row.filter = !row.filter\n            }\n            if(row.filter){\n                fq.push(row.filterName)\n            }\n            filters.push(row)\n        });\n\n        setFilterQuery(fq.join(\",\"));\n        setFilterOptions(filters)\n    };\n\n    const customToolbarElements = () =>{\n        return <div>\n            <Tooltip aria-describedby={id} title=\"Filter list\">\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\n                    <FilterListIcon />\n                </IconButton>\n            </Tooltip>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={()=>{setAnchorEl(null)}}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <div className={classes.sortingButtons}>\n                    {filterOptions.map(row=>{\n                        return <FormControlLabel\n                            control={<Checkbox checked={row.filter} onChange={()=>filterOptionsChanged(row.filterName)} name={row.filterName} />}\n                            label={row.filterLabel}\n                        />\n                    })}\n                </div>\n\n            </Popover>\n        </div>\n    };\n    /*------------------------------------------------------------------------------------------------------*/\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content} >\n                <TableComponent\n                    title={\"Tours\"}\n                    headCells={headCells}\n                    data={data}\n                    pagingInfo={pageData}\n                    checkable={false}\n                    changePageCallback={changePageCallback}\n                    updateCallback={updateTourCallback}\n                    removeCallback={removePlaceCallback}\n                    id={\"tourId\"}\n                    isLoading={isLoading}\n                    customToolbarElements={customToolbarElements()}\n                />\n\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <Button\n                        onClick={()=>{history.push(\"/app/addtour\")}}\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        startIcon={<AddIcon />}>\n                        Add\n                    </Button>\n                </Box>\n            </div>\n\n        </div>\n    );\n\n    function getAllTours(urlParams=\"\") {\n        API.Tour.getAllToursAdmin(urlParams).then(response=>{\n            console.log(response);\n            parseData(response)\n        }).catch(error=>{\n            console.log(error)\n        })\n    }\n}\n\nTours.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Tours);","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nfunction AddDialog(props){\n\n    function validateInput(){\n        var error = false;\n        if(text.length <= 3)\n            error = true\n        setError(error)\n        return error\n    }\n\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\n    const [text, setText] = useState(\"\")\n    const [error, setError] = useState(false)\n    return(\n        <div>\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\n                    {header}\n                </DialogTitle>\n                <DialogContent dividers>\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCallback} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button autoFocus color=\"primary\" onClick={() => {\n                        !validateInput() && action(text)\n                    }}>\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nAddDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    action: PropTypes.func.isRequired,\n    onCloseCallback: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(AddDialog)\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useState} from \"react\";\nimport TableComponent from \"./TableComponent\";\nimport API from \"../Networking/API\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../helpers/history\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddDialog from \"./AddDialog\";\nimport UseEditDialogContext from \"../contexts/UseEditDialogContext\";\n\nconst styles = theme => ({\n    root: {\n        height: \"100vh\",\n        width: \"100%\",\n        overflow: \"auto\",\n    },\n    content: {\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    },\n    buttonWrapper: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        width: \"100%\",\n    }\n})\n\nconst categoriesHeadCells = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Category name', isId: false},\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\n]\nconst tagsHeadCells = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Tag name', isId: false},\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\n]\n\nfunction Resources({classes}) {\n\n    const {addAlertConfig} = UseAlertDialogContext();\n    const {addConfig} = UseSnackbarContext();\n    const {addEditDialogConfig} = UseEditDialogContext();\n\n    const [loading, setIsLoading] = useState({\n        categories: false,\n        tags: false\n    })\n\n    const [categories, setCategories] = useState([])\n    const [tags, setTags] = useState([])\n\n    useEffect(() => {\n        setIsLoading({categories: true, tags: true})\n        Promise.all([\n                API.Categories.getAllCategories(),\n                API.Tags.getAllTags()\n            ]\n        ).then(response => {\n            setCategories(response[0])\n            setTags(response[1])\n        }).catch(() => {\n            addConfig(false, \"Could not retrieve data!\")\n        }).finally(() => {\n            setIsLoading(oldData => {return{ ...oldData, categories: false, tags: false}})\n        })\n    }, [])\n\n    const handleAddCategory = () => {\n        addEditDialogConfig({\n            title: \"Add category\",\n            explanation: \"Type the category name\",\n            onDoneCallback: (text) => {\n               API.Categories.addCategory([{name: text}]).then((response)=>{\n                   addConfig(true, \"Category inserted successfully\")\n                   setCategories(oldData => [...oldData, {name: text, categoryId: response[0]}])\n                }).catch(error=>{\n                   addConfig(false, \"Failed to add category.\")\n               })\n            },\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\n            textFieldLabel: \"Restaurants, hiking, etc...\"\n        })\n    }\n\n    const removeCategoryCallback = (categoryId) => {\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\n        addAlertConfig(\"Warning\", \"Are you sure you want the category, named '\" + categoryName + \"'?\", [{\n            name: \"yes\", action: () => {\n                setIsLoading(oldData => {\n                    return {...oldData, categories: true}\n                })\n                API.Categories.removeCategory([{categoryId: categoryId}]).then(() => {\n                    addConfig(true, \"Category successfully removed.\")\n                    setCategories(oldData => oldData.filter(item => item.categoryId !== categoryId))\n                }).catch(() => {\n                    addConfig(false, \"An error has occurred while removing category.\")\n                }).finally(() => {\n                    setIsLoading(oldData => {\n                        return {...oldData, categories: false}\n                    })\n                })\n            }\n        }], () => {\n        })\n    }\n\n    const updateCategoryHandler = (categoryId) => {\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\n        addEditDialogConfig({\n            title: \"Edit category\",\n            explanation: \"Type the category name\",\n            defaultText: categoryName,\n            onDoneCallback: (text) => {\n                API.Categories.updateCategory([{name: text, categoryId: categoryId}]).then(()=>{\n                    addConfig(true, \"Category updated successfully\")\n                    setCategories(oldData => {return oldData.map(item => {\n                        if(item.categoryId === categoryId)\n                            return {...item, name: text}\n                        else return item\n                    })})\n                }).catch(()=>{\n                    addConfig(false, \"Failed to update category.\")\n                })\n            },\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\n            textFieldLabel: \"Restaurants, hiking, etc...\"\n        })\n    }\n\n    const updateTagHandler = (id) => {\n        let tagName = tags.filter(item => item.tagId === id)[0].name\n        addEditDialogConfig({\n            title: \"Edit tag\",\n            explanation: \"Type the tag name\",\n            defaultText: tagName,\n            onDoneCallback: (text) => {\n                API.Tags.updateTags([{name: text, tagId: id}]).then(()=>{\n                    addConfig(true, \"Tag updated successfully\")\n                    setTags(oldData => {return oldData.map(item => {\n                        if(item.tagId === id)\n                            return {...item, name: text}\n                        else return item\n                    })})\n                }).catch(()=>{\n                    addConfig(false, \"Failed to update tag.\")\n                })\n            },\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\n            textFieldLabel: \"Warm, quick, cozy...\"\n        })\n    }\n\n    const removeTagHandler = (id) => {\n        let tagName = tags.filter(item => item.tagId === id)[0].name\n        addAlertConfig(\"Warning\", \"Are you sure you want the tag, named '\" + tagName + \"'?\", [{\n            name: \"yes\", action: () => {\n                setIsLoading(oldData => {\n                    return {...oldData, tags: true}\n                })\n                API.Tags.removeTags([{tagId: id}]).then(() => {\n                    addConfig(true, \"Tag successfully removed.\")\n                    setTags(oldData => oldData.filter(item => item.tagId !== id))\n                }).catch(() => {\n                    addConfig(false, \"An error has occurred while removing tag.\")\n                }).finally(() => {\n                    setIsLoading(oldData => {\n                        return {...oldData, tags: false}\n                    })\n                })\n            }\n        }], () => {\n        })\n    }\n\n    const handleAddTag = () => {\n        addEditDialogConfig({\n            title: \"Add tag\",\n            explanation: \"Type the tag name\",\n            onDoneCallback: (text) => {\n                API.Tags.addTag([{name: text}]).then((response)=>{\n                    addConfig(true, \"Tag inserted successfully\")\n                    setTags(oldData => [...oldData, {name: text, tagId: response[0]}])\n                }).catch(()=>{\n                    addConfig(false, \"Failed to add tag.\")\n                })\n            },\n            validateInput: (input) => {return input.length >= 4 ? 0 : 1},\n            textFieldLabel: \"Warm, quick, cozy...\"\n        })\n    }\n\n    const searchFunction = (keyword, item) => {\n        if(keyword.length < 3) return true\n        return item.name.includes(keyword)\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content}>\n\n                <TableComponent\n                    title={\"Categories\"}\n                    headCells={categoriesHeadCells}\n                    data={categories}\n                    pagingInfo={null}\n                    checkable={false}\n                    searchFunction={searchFunction}\n                    changePageCallback={() => {}}\n                    updateCallback={updateCategoryHandler}\n                    removeCallback={removeCategoryCallback}\n                    id={\"categoryId\"}\n                    isLoading={loading.categories}\n                />\n\n                <Box className={classes.buttonWrapper}>\n                    <Button\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        onClick={handleAddCategory}\n                        startIcon={<AddIcon/>}>\n                        Add a new category\n                    </Button>\n                </Box>\n\n                <br/>\n\n                <TableComponent\n                    title={\"Tags\"}\n                    headCells={tagsHeadCells}\n                    data={tags}\n                    pagingInfo={null}\n                    checkable={false}\n                    searchFunction={searchFunction}\n                    changePageCallback={() => {}}\n                    updateCallback={updateTagHandler}\n                    removeCallback={removeTagHandler}\n                    id={\"tagId\"}\n                    isLoading={loading.tags}\n                />\n\n                <Box className={classes.buttonWrapper}>\n                    <Button\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        onClick={handleAddTag}\n                        startIcon={<AddIcon/>}>\n                        Add a new tag\n                    </Button>\n                </Box>\n            </div>\n\n        </div>\n    )\n}\n\nResources.propTypes = {\n};\n\nexport default withStyles(styles)(Resources)\n","import React, {useEffect, useState} from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from \"@material-ui/core/Typography\";\nimport AutoCompleteChip from \"./AutocompleteChip\";\nimport API from \"../Networking/API\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\n\nconst UpdateUserDialog = ({open, setOpen, userData, availableRoles, setAvailableRoles}) => {\n\n    const [selectedRoles, setSelectedRoles] = useState([]);\n\n    const {addConfig} = UseSnackbarContext();\n    const {addAlertConfig} = UseAlertDialogContext();\n\n    useEffect(()=>{\n        setSelectedRoles(userData.roles)\n    },[userData.roles]);\n\n    function setRoles() {\n        addAlertConfig(\"Update user\", \"Are you sure you want to update this user's permissions?\", [{\n            name: \"Yes\",\n            action: () => {\n                let roles = []\n                selectedRoles.map(row=>{\n                    roles.push(row.roleId)\n                });\n                API.User.setRoles({userId: userData.id, roles: roles}).then(response=>{\n                    addConfig(true, \"Updated user successfully\");\n                    setOpen(false)\n                }).catch(error=>{\n                    addConfig(false, \"Could not update user\")\n                })\n            }\n        }])\n    }\n\n    const renderRoles = <div>\n\n    </div>\n\n    return(\n        <Dialog\n            open={open}\n            fullWidth={true}\n            maxWidth={'lg'}\n            onClose={()=>{setOpen(false)}}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">Update user - {userData.name + \" \" + userData.surname}</DialogTitle>\n            <DialogContent>\n                <Typography variant=\"h6\">\n                    Change user permissions\n                </Typography>\n\n                <AutoCompleteChip\n                    id=\"roleId\"\n                    name=\"role\"\n                    label=\"Select sources\"\n                    options={availableRoles}\n                    setOptions={setAvailableRoles}\n                    setSelectedOptions={setSelectedRoles}\n                    selectedOptions={selectedRoles}\n                />\n\n                {\n                    selectedRoles.map(row=>{\n                        return <div>\n                            <b>{row.role}</b> - {row.description}\n                            <br/>\n                        </div>\n                    })\n                }\n\n\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={()=>setOpen(false)}\n                        color=\"primary\">\n                    Close\n                </Button>\n\n                <Button onClick={()=>setRoles()}\n                        color=\"primary\">\n                    Update user\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n};\n\n\nexport default UpdateUserDialog\n","import React, {useEffect, useState} from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from \"@material-ui/core/Typography\";\nimport AutoCompleteChip from \"./AutocompleteChip\";\nimport API from \"../Networking/API\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport {averageTimeSpent} from \"../helpers/averageTimeSpent\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {load} from \"dotenv\";\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    textField:{\n        marginTop: 16\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    }\n\n});\n\nfunction AddUserDialog({classes, open, setOpen, availableRoles}){\n\n\n    const {addConfig} = UseSnackbarContext();\n    const {addAlertConfig} = UseAlertDialogContext();\n\n    const [user, setUser] = useState({name: \"\", surname: \"\", password: \"\", email: \"\", role: -1});\n    const [error, setError] = useState({name: false, surname: false, password: false, email: false, role: false});\n\n    const [loading, setLoading] = useState(false)\n\n    const userDataChanged = (event) => {\n        const {name, value} = event.target;\n        let userData = Object.assign({}, user);\n        userData[name] = value\n        setUser(userData)\n    };\n\n    function parseRoleFromId(id){\n        return availableRoles.map(row=>{\n            if(row.roleId===id){\n                return  row.role + \" - \" + row.description\n            }\n        })\n    }\n\n    function checkErrors(){\n        let errors = Object.assign({}, error)\n        let hasErrors = false;\n        for (let key in user) {\n            errors[key] = user[key] === \"\" || user[key] === -1;\n            if(errors[key] === true){\n                hasErrors = true\n            }\n        }\n        setError(errors);\n        return hasErrors\n    }\n\n    function addUser(){\n        if(checkErrors()){\n            return\n        }\n        addAlertConfig(\"Add new editor\", \"Are you sure you want to add new editor?. This user has role: \" + parseRoleFromId(user.role), [{\n            name: \"Yes\",\n            action: () => {\n                setLoading(true);\n                API.Auth.register(user).then(userId=>{\n                    API.User.setRoles({userId: userId, roles: [user.role]}).then(response=>{\n                        addConfig(true, \"User was added successfully!\")\n                        setOpen(false);\n                        setLoading(false)\n                    }).catch(error=>{\n                        setOpen(false);\n                        addConfig(false, \"Could not map user permissions!\");\n                        setLoading(false)\n                    })\n                }).catch(error=>{\n                    addConfig(false, error.message);\n                    setLoading(false)\n                })\n            }\n        }])\n    }\n\n\n    return(\n        <Dialog\n            open={open}\n            fullWidth={true}\n            maxWidth={\"md\"}\n            onClose={()=>{setOpen(false)}}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            {loading ? <LinearProgress /> : null}\n            <DialogTitle id=\"alert-dialog-title\">Add new editor</DialogTitle>\n            <DialogContent>\n                    <div className={classes.root}>\n                        <TextField id=\"outlined-basic\"\n                                   error={error.name}\n                                   required\n                                   label=\"Name\"\n                                   name=\"name\"\n                                   value={user['name']}\n                                   onChange={userDataChanged}\n                                   variant=\"outlined\"\n                                   className={classes.textField}\n                        />\n\n                        <TextField id=\"outlined-basic\"\n                                   required\n                                   error={error.surname}\n                                   label=\"Surname\"\n                                   name=\"surname\"\n                                   value={user['surname']}\n                                   onChange={userDataChanged}\n                                   variant=\"outlined\"\n                                   className={classes.textField}\n                        />\n                        <TextField id=\"outlined-basic\"\n                                   required\n                                   error={error.email}\n                                   label=\"Email\"\n                                   name=\"email\"\n                                   value={user['email']}\n                                   onChange={userDataChanged}\n                                   variant=\"outlined\"\n                                   className={classes.textField}\n                        />\n                        <TextField id=\"outlined-basic\"\n                                   required\n                                   error={error.password}\n                                   autoComplete='new-password'\n                                   label=\"Password\"\n                                   name=\"password\"\n                                   value={user['password']}\n                                   onChange={userDataChanged}\n                                   variant=\"outlined\"\n                                   type=\"password\"\n                                   className={classes.textField}\n                        />\n                        <br/>\n                        <Alert severity=\"info\">\n                            Make sure to use secure password as it will give access to modify data in admin panel.\n                            <br/>\n                            *Password must contain between 8 and 30 characters\n                            <br/>\n                            *Password must have atleast one digit\n                            <br/>\n                            *Password must have atleast one upper character\n                        </Alert>\n\n                        <Divider className={classes.textField} medium />\n\n                        <FormControl error={error.role} variant=\"outlined\" className={classes.textField}>\n                            <InputLabel>User role</InputLabel>\n                            <Select\n                                onChange={(e, value) =>{\n                                    let userTmp = Object.assign({},user);\n                                    userTmp.role = value.props.value\n                                    setUser(userTmp)\n                                }}\n                                value={user.role}\n                                label=\"Select user role\"\n                            >\n                                <option value=\"-1\">None</option>\n                                {\n                                    availableRoles.map(row=>{\n                                        return <option value={row.roleId}> {row.role}</option>\n                                    })\n                                }\n                            </Select>\n                            <FormHelperText>Select one of the available user roles</FormHelperText>\n                        </FormControl>\n\n                        {user.role === 1 ? <Alert className={classes.textField}\n                            severity=\"warning\">\n                            ROLE_ADMIN will have full access to the system. Make sure you know this person!\n                            </Alert> :\n                        null\n                        }\n\n                        <Typography variant=\"h6\" style={{marginTop: 48}}>\n                            Available roles\n                        </Typography>\n                        <div className={classes.textField}>\n                            {\n                                availableRoles.map(row=>{\n                                    return (\n                                        <Typography variant=\"subtitle1\" gutterBottom>\n                                            {row.role} - {row.description}\n                                        </Typography>\n                                    )\n\n                                })\n                            }\n                        </div>\n\n                    </div>\n\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={()=>setOpen(false)}\n                        color=\"primary\">\n                    Close\n                </Button>\n\n                <Button\n                    color=\"primary\"\n                    onClick={()=>{\n                        addUser()\n                    }}\n                >\n                    Add user\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n};\n\nexport default withStyles(styles)(AddUserDialog)\n","import React, {useContext, useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TableComponent from \"../components/TableComponent\";\nimport API from \"../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Box from \"@material-ui/core/Box\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UpdateUserDialog from \"../components/UpdateUserDialog\";\nimport AddUserDialog from \"../components/AddUserDialog\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    input: {\n        display: \"none\"\n    },\n    root: {\n        height: \"100vh\",\n        width: \"100%\",\n        overflow: \"auto\"\n    },\n    buttonsDiv: {\n        backgroundColor: \"red\",\n        justifyContent: \"flex-end\"\n    },\n    content: {\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    },\n    autocomplete: {\n        width: '200px',\n        height: '40px',\n        fontSize: \"14px\",\n        border: \"0\",\n        borderBottom: \"2px solid grey\",\n        outline: \"0\",\n        marginBottom: \"4px\"\n    }\n});\n\n\nconst headCells = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Name', isId: true},\n    {id: 'surname', numeric: false, disablePadding: false, label: 'Surname', isId: false},\n    {id: 'email', numeric: false, disablePadding: false, label: 'Contact email', isId: false},\n    {id: 'phoneNumber', numeric: false, disablePadding: false, label: 'Phone number', isId: false},\n    {id: 'parsedRoles', numeric: false, disablePadding: false, label: 'Roles', isId: false},\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\n];\n\nfunction Places(props) {\n\n    const [data, setData] = useState([]);\n    const [selectedUser, setSelectedUser] = useState({});\n    const [allRoles, setAllRoles] = useState([])\n    const [pageData, setPageData] = useState([])\n    const [isLoading, setIsLoading] = useState(true);\n    const {classes} = props;\n\n    const [openUpdateDialog, setOpenUpdateDialog] = useState(false);\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n\n\n    // const {filterQuery} = useContext(PlacesFilterContext)\n    const {addAlertConfig} = UseAlertDialogContext();\n    const {addConfig} = UseSnackbarContext();\n\n\n    useEffect(()=>{\n        API.User.getAllRoles().then(roles=>{\n            console.log(roles);\n            setAllRoles(roles);\n        }).catch(error=>{\n            addConfig(false, error.message)\n        })\n    },[]);\n\n\n\n    function requestUsers(p = 1, keyword = \"\") {\n        getAllUsers(\"\" + \"?p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\n    }\n\n    function parseData(data) {\n\n        setIsLoading(false);\n        let usersData = [];\n        data.list.map(row => {\n            let rolesList = [];\n            row.roles.map(role =>{\n                rolesList.push(role.role)\n            });\n            row.parsedRoles = rolesList.join(',');\n            usersData.push(row)\n        });\n\n        delete data.list;\n        setData(usersData);\n        console.log(usersData);\n        setPageData(data);\n    }\n\n    function updatePlaceCallback(id) {\n        data.map(row=>{\n            if(row.id === id ){\n                setSelectedUser(row)\n            }\n        });\n        setOpenUpdateDialog(true)\n    }\n\n    const changePageCallback = (p = 0, keyword = \"\") => {\n            setIsLoading(true);\n            requestUsers(p, keyword)\n    };\n\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content}>\n\n                {openUpdateDialog ? <UpdateUserDialog open={openUpdateDialog}\n                                                      setOpen={setOpenUpdateDialog}\n                                                      availableRoles={allRoles}\n                                                      setAvailableRoles={setAllRoles}\n                                                      userData={selectedUser}/>\n                                                      :\n                    null\n                }\n\n                {openAddDialog ? <AddUserDialog open={openAddDialog}\n                                                availableRoles={allRoles}\n                                                setOpen={setOpenAddDialog}/> : null}\n\n                <TableComponent\n                    title={\"Users\"}\n                    headCells={headCells}\n                    data={data}\n                    pagingInfo={pageData}\n                    checkable={false}\n                    changePageCallback={changePageCallback}\n                    updateCallback={updatePlaceCallback}\n                    id={\"id\"}\n                    isLoading={isLoading}\n                />\n\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <Button\n                        onClick={() => {\n                                setOpenAddDialog(true)\n                        }}\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        startIcon={<AddIcon/>}>\n                        Add user\n                    </Button>\n                </Box>\n            </div>\n            <Button>\n                Clear filters\n            </Button>\n        </div>\n    );\n\n    function getAllUsers(urlParams = \"\") {\n        API.User.getAllUsers(urlParams).then(response=>{\n            console.log(response)\n                setIsLoading(false);\n                parseData(response)\n        }).catch(error=>{\n                setIsLoading(false);\n                console.log(error)\n        })\n    }\n}\n\nPlaces.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Places);\n\n","import React, {useEffect, useState} from \"react\";\nimport {getRefreshToken} from \"../helpers/tokens\";\nimport API from \"../Networking/API\";\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({children}) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(()=>{\n        let refreshToken = getRefreshToken();\n        if(refreshToken !== \"\" && refreshToken !== undefined){\n            // console.log(\"Refresh token\", refreshToken)\n                API.User.getUserProfile().then(user=>{\n                    // console.log(\"Fetched user\", user);\n                    setCurrentUser(user);\n                    setIsLoading(false)\n                }).catch(error=>{\n                    console.log(error);\n                    setIsLoading(false)\n                })\n        }else{\n            console.log(\"Refresh token is empty. No actions taken.\")\n        }\n    },[]);\n\n    return (\n        <AuthContext.Provider\n            value={{\n                currentUser,\n                setCurrentUser,\n                isLoading\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};","import React, {Fragment, useContext, useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Places from \"../pages/Places\";\nimport AddPlace from \"../pages/AddPlace\";\nimport history from \"../helpers/history\";\nimport ApiPlaces from \"../pages/ApiPlaces\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\nimport NotFoundPage from \"../pages/NotFoundPage\";\nimport Redirect from \"react-router-dom/es/Redirect\";\n\nimport Tour from \"./tour_components/Tour\";\nimport { useLocation } from 'react-router-dom'\nimport Tours from \"../pages/Tours\";\nimport Resources from \"./Resources\";\nimport {PlacesFilterProvider} from \"../contexts/PlacesFilterContext\";\nimport ManageUsers from \"../pages/ManageUsers\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport API from \"../Networking/API\";\nimport {AuthContext} from \"../contexts/AuthContext\";\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles((theme) => ({\n    root1: {\n        overflow: \"hidden\",\n        display: 'flex',\n        height: \"100vh\",\n        background: \"#F1F1F1\"\n    },\n    appBar: {\n        height: \"64px\",\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        width: \"100vw\",\n        height: \"100%\",\n        //padding: theme.spacing(3),\n        // transition: theme.transitions.create('margin', {\n        //     easing: theme.transitions.easing.sharp,\n        //     duration: theme.transitions.duration.leavingScreen,\n        // }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        width: \"100vw\",\n        height: \"100%\",\n        // transition: theme.transitions.create('margin', {\n        //     easing: theme.transitions.easing.easeOut,\n        //     duration: theme.transitions.duration.enteringScreen,\n        // }),\n        marginLeft: 0\n    },\n}));\n\nconst PlacesWithContext = () =>  (\n    <PlacesFilterProvider>\n        <Places/>\n    </PlacesFilterProvider>\n);\nconst TourWithContext = (props) =>  (\n    <PlacesFilterProvider>\n        <Tour {...props}/>\n    </PlacesFilterProvider>\n);\n\nexport default function Appbar(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n    const { title, setTitle } = UseAppBarTitleContext();\n    const {addAlertConfig} = UseAlertDialogContext();\n    let location = useLocation();\n\n    const { currentUser } = useContext(AuthContext);\n\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const handleListItemClick = (url,title) =>{\n        handleDrawerClose();\n        setTitle(title);\n\n        let re = new RegExp(url+'([0-9]*)?');\n        if(re.test(location.pathname)){\n            history.push(url);\n            history.go(0);\n        }\n    };\n\n    function handleLogout() {\n        addAlertConfig(\"Logout\", \"Are you sure you want to logout\", [{\n            name: \"Yes\",\n            action: () => {\n                localStorage.removeItem(\"access_token\");\n                localStorage.removeItem(\"refresh_token\")\n                history.push(\"/login\")\n            }\n        }])\n    }\n\n    const hasPermission = (perm) => {\n        return currentUser != null && currentUser.permissions.some(permission => permission.permission === perm)\n    };\n\n    return (\n        <div className={classes.root1}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <Typography variant=\"h6\" style={{width: \"100%\"}}>\n                        {currentUser != null ? currentUser.name : \"Loading user profile\"}\n                    </Typography>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n\n                <Divider />\n                <List>\n                    <ListItem button component={Link} to=\"/app/home\" onClick={()=>handleListItemClick(\"/app/home\",\"Home\")}>\n                        <ListItemText>Home</ListItemText>\n                    </ListItem>\n                    <Divider light />\n                    <ListItem button component={Link} to=\"/app/places\" onClick={()=>handleListItemClick(\"/app/places\",\"Places\")} >\n                        <ListItemText>Places</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/tours\" onClick={()=>handleListItemClick(\"/app/tours\",\"Tours\")} >\n                        <ListItemText>Tours</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/apiplaces\" onClick={()=>handleListItemClick(\"/app/apiplaces\",\"Api places\")} >\n                        <ListItemText>Explore API places</ListItemText>\n                    </ListItem>\n                    { hasPermission(\"place:insert\") &&\n                        <ListItem button component={Link} to=\"/app/addplace\" onClick={()=>handleListItemClick(\"/app/addplace\",\"Add Place\")} >\n                            <ListItemText>Add place</ListItemText>\n                        </ListItem>\n                    }\n                    { hasPermission(\"tour:modify\") &&\n                        <ListItem button component={Link} to=\"/app/addtour\"\n                                  onClick={() => handleListItemClick(\"/app/addtour\", \"Add tour\")}>\n                            <ListItemText>Add tour</ListItemText>\n                        </ListItem>\n                    }\n                    <ListItem button component={Link} to=\"/app/resources\" onClick={()=>handleListItemClick(\"/app/resources\",\"Manage resources\")} >\n                        <ListItemText>Resources</ListItemText>\n                    </ListItem>\n                    { hasPermission(\"role:manage\") &&\n                        <ListItem button component={Link} to=\"/app/users\" onClick={()=>handleListItemClick(\"/app/users\",\"Manage users\")} >\n                            <ListItemText>Manage users</ListItemText>\n                        </ListItem>\n                    }\n                    <Divider light />\n                    <ListItem button onClick={()=>handleLogout()} >\n                        <ListItemText>Logout</ListItemText>\n                    </ListItem>\n                </List>\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n                <Switch>\n                    <Route exact path=\"/app/home\" component={Home} />\n                    <Route path=\"/app/places\" component={PlacesWithContext} />\n                    <Route path=\"/app/tours\" component={Tours} />\n                    <Route path=\"/app/addplace/:placeId?\" component={AddPlace} />\n                    <Route path=\"/app/apiplaces\" component={ApiPlaces} />\n                    <Route path=\"/app/addtour/:tourId?\" component={TourWithContext} />\n                    <Route path=\"/app/resources\" component={Resources} />\n                    <Route path=\"/app/users\" component={ManageUsers} />\n                    <Redirect from=\"*\" to=\"/404\"/>\n                </Switch>\n\n            </main>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport Appbar from './components/Appbar.js';\nimport AppBarTitleProvider from \"./contexts/AppBarTitleContext\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\n\nclass App extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <AppBarTitleProvider>\n                        <Appbar />\n                    </AppBarTitleProvider>\n                    </MuiPickersUtilsProvider>\n            </React.Fragment>\n        );\n    }\n}\nexport default App;","import React, {useContext, useEffect, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport history from \"../helpers/history\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {AuthContext} from \"../contexts/AuthContext\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport {isAuthenticated} from \"../helpers/tokens\";\nimport API from \"../Networking/API\";\nimport {func} from \"prop-types\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n                Traveldirection {' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    loaderMain: {\n        width: \"100%\",\n        height: \"100%\",\n        alignItems:\"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"red\"\n    }\n}));\n\nexport default function LoginPage() {\n    const classes = useStyles();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loading, setIsLoading] = useState(false);\n    const { addConfig } = UseSnackbarContext();\n    const { currentUser, setCurrentUser } = useContext(AuthContext);\n\n    const handleLogin = () =>{\n        setIsLoading(true);\n        console.log(\"handleLogin\", {identifier: email, password: password});\n        API.Auth.login({identifier: email, password: password}).then(response=>{\n            if(!checkAccess(response.authorities)){\n                addConfig(false, \"Only admins and editors can access admin panel!\")\n                setIsLoading(false);\n                return\n            }\n            setIsLoading(false);\n            localStorage.setItem(\"access_token\", response.access_token);\n            localStorage.setItem(\"refresh_token\", response.refresh_token);\n            API.User.getUserProfile().then(response=>{\n                console.log(\"User profile:\", response);\n                setCurrentUser(response);\n                history.push(\"/app/home\");\n            }).catch(error=>{\n                setIsLoading(false);\n                addConfig(false, error.message)\n            });\n        }).catch(error=>{\n            setIsLoading(false);\n            addConfig(false, error.message)\n        });\n    };\n\n    function checkAccess(roles){\n        var hasAccess = false\n        roles.map(row=>{\n            console.log(row)\n            if(row.authority === \"ROLE_ADMIN\"){\n                hasAccess = true\n            }\n        });\n        return hasAccess\n    }\n\n    if (isAuthenticated()) {\n        return <Redirect to=\"/app\" />;\n    }\n\n    const handleKeyPress = (event) =>{\n        if (event.which === 13 || event.keyCode === 13) {\n            handleLogin();\n            return false;\n        }\n        return true;\n    };\n\n    return <Container component=\"main\" maxWidth=\"xs\" onKeyPress={(e)=>handleKeyPress(e)}>\n\n                            {loading && <LinearProgress />}\n                            <CssBaseline />\n                            <div className={classes.paper}>\n                                <Avatar className={classes.avatar}>\n                                    <LockOutlinedIcon />\n                                </Avatar>\n                                <Typography component=\"h1\" variant=\"h5\">\n                                    Sign in\n                                </Typography>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    value={email}\n                                    onChange={(e)=>{setEmail(e.target.value)}}\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    value={password}\n                                    onChange={(e)=>{setPassword(e.target.value)}}\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                />\n                                <Button\n                                    onClick={()=>{handleLogin()}}\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                >\n                                    Sign In\n                                </Button>\n                            </div>\n                            <Box mt={8}>\n                                <Copyright />\n                            </Box>\n                        </Container>\n\n}","import Route from \"react-router-dom/es/Route\";\nimport React, {useContext} from \"react\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport {isAuthenticated} from \"../helpers/tokens\";\n\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={routeProps =>\n                isAuthenticated() === true ? (\n                    <Component {...routeProps} />\n                ) : (\n                    <Redirect to={\"/login\"} />\n                )\n            }\n        />\n    );\n};","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\n\n\nexport default function SnackbarFeedback(props){\n\n    const { config, removeConfig } = UseSnackbarContext();\n\n    return(\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"error\") : \"\"}>\n                {!!config && config.message}\n            </Alert>\n        </Snackbar>\n    )\n}\n","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\"\n\nconst AlertDialogFeedback = () => {\n\n    const {alertConfig, removeAlertConfig} = UseAlertDialogContext();\n\n    function remove() {\n        if(alertConfig.onClose !== undefined){\n            alertConfig.onClose()\n        }\n        removeAlertConfig()\n    }\n\n    return(\n        <Dialog\n            open={!!alertConfig}\n            onClose={remove}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{!!alertConfig ? alertConfig.title : \"\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {!!alertConfig ? alertConfig.message : \"\"}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={remove}\n                        color=\"primary\">\n                    Close\n                </Button>\n                {!!alertConfig && alertConfig.actions.map(row=>{\n                    return <Button onClick={()=>{\n                        remove();\n                        row.action();\n                    }}\n                    color=\"primary\"\n                    >\n                            {row.name}\n                    </Button>\n                })}\n            </DialogActions>\n        </Dialog>\n    )\n};\n\n\nexport default AlertDialogFeedback\n","import Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport React, {useState} from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\n\n\nexport const TextInputDialog = () => {\n\n    const {dialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen} = UseEditDialogContext();\n    const [inputText, setInputText] = useState(\"\")\n    const [error, setError] = useState(0)\n\n    const deInit = () => {\n        setError(0)\n        setDialogOpen(false)\n        setInputText(\"\")\n    }\n\n    const handleClose = () => {\n        deInit()\n    }\n\n    const handleDone = () => {\n        let errorCode = dialogConfig.validateInput(inputText)\n        setError(errorCode)\n        if(errorCode !== 0) return\n\n        if(dialogConfig.onDoneCallback !== undefined)\n            dialogConfig.onDoneCallback(inputText)\n        deInit()\n    }\n    const handleInput = (e) => {\n        setInputText(e.target.value)\n    }\n\n    return (\n        <div>\n            <Dialog open={dialogOpen} aria-labelledby=\"form-dialog-title\" fullWidth>\n                <DialogTitle id=\"form-dialog-title\">{dialogConfig.title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {dialogConfig.explanation}\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        helperText={error !== 0 && dialogConfig.errorMessages[error] !== null ? dialogConfig.errorMessages[error] : \"\"}\n                        error={error !== 0}\n                        margin=\"dense\"\n                        id=\"name\"\n                        onInput={handleInput}\n                        label={dialogConfig.textFieldLabel}\n                        defaultValue={dialogConfig.defaultText}\n                        type=\"email\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleDone} color=\"primary\">\n                        Done\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport history from \"./helpers/history\";\nimport LoginPage from \"./pages/LoginPage\";\nimport {Router, Route, Link, Switch} from \"react-router-dom\";\nimport {AuthenticatedRoute} from \"./components/AuthenticatedRoute\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\nimport AlertDialogProvider from \"./contexts/AlertDialogContext\";\nimport AlertDialogFeedback from \"./components/feedback/AlertDialogFeedback\";\nimport {AuthProvider} from \"./contexts/AuthContext\";\nimport {PlacesFilterProvider} from \"./contexts/PlacesFilterContext\";\nimport EditDialogProvider from \"./contexts/EditDialogContext\";\nimport {TextInputDialog} from \"./components/feedback/TextInputDialog\";\nimport LoadingScreen from \"./components/LoadingScreen\";\n\nrequire('dotenv').config();\n\nReactDOM.render(\n    <React.Fragment>\n        <AuthProvider>\n            {/*<LoadingScreen />*/}\n            <Router history={history}>\n                <SnackbarProvider>\n                    <AlertDialogProvider>\n                        <EditDialogProvider>\n                            <SnackbarFeedback/>\n                            <AlertDialogFeedback/>\n                            <TextInputDialog/>\n                            <Switch>\n                                <Redirect exact from=\"/\" to=\"/login\"/>\n                                <Redirect exact from=\"/app\" to=\"/app/home\"/>\n                                <AuthenticatedRoute path=\"/app\" component={App}/>\n                                <Route path=\"/login\" component={LoginPage}/>\n                                <Route path=\"*\" component={NotFoundPage}/>\n                                <Redirect from=\"*\" to=\"/404\"/>\n                            </Switch>\n                        </EditDialogProvider>\n                    </AlertDialogProvider>\n                </SnackbarProvider>\n            </Router>\n        </AuthProvider>\n    </React.Fragment>\n    , document.getElementById('root'));\n"],"sourceRoot":""}