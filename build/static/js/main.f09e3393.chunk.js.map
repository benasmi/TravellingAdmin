{"version":3,"sources":["res/selectedTourIcon.svg","res/selectedParking.svg","res/availableParking.svg","pages/Home.js","components/TableComponent.js","helpers/debounce.js","helpers/history.js","helpers/tokens.js","Networking/NetworkLayerCentral.js","Networking/API.js","contexts/AlertDialogContext.js","contexts/UseAlertDialogContext.js","helpers/stringResources.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","components/AutocompleteChip.js","contexts/AppStateStorageContext.js","contexts/AppResourcesContext.js","contexts/PlacesFilterContext.js","components/add_place_components/FilterBlock.js","pages/Places.js","helpers/priceRange.js","helpers/averageTimeSpent.js","components/AddSourceDialog.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/maps/MapGeolocation.js","components/maps/MapToolbar.js","components/maps/MapLock.js","components/maps/CustomControlsManager.js","components/maps/PlaceMap.js","components/add_place_components/PlaceLocation.js","components/maps/ParkingMap.js","components/add_place_components/ParkingLocation.js","contexts/EditDialogContext.js","contexts/UseEditDialogContext.js","components/add_place_components/PlaceDiscovery.js","components/ReviewCard.js","components/add_place_components/Reviews.js","contexts/AppBarTitleContext.js","contexts/UseAppBarTitleContext.js","components/recomendation/AddRecommendationDialog.js","components/recomendation/RecommendationListDialog.js","components/ApiPlaceCard.js","components/recomendation/Recommendation.js","components/schedule_components/WorkingShift.js","components/schedule_components/WorkingHoursVariant.js","components/schedule_components/ScheduleWorkingHours.js","components/schedule_components/Schedule.js","components/schedule_components/SchedulesContainer.js","pages/AddPlace.js","components/tour_components/TransportItem.js","components/tour_components/TourPlaceComponent.js","components/tour_components/TourPlacesWrapper.js","components/SearchInputComponent.js","components/tour_components/PlaceSearch.js","components/tour_components/DayCard.js","components/tour_components/DaysWrapper.js","components/tour_components/TourReducer.js","components/tour_components/TourInfoComponent.js","components/tour_components/TourMap.js","components/tour_components/Tour.js","pages/Tours.js","components/feedback/AbstractionCategoryDialog.js","components/Resources.js","components/UpdateUserDialog.js","components/AddUserDialog.js","pages/ManageUsers.js","contexts/AuthContext.js","contexts/EditRecommendationContext.js","components/recomendation/EditRecommendationDialog.js","pages/RecommendationsPage.js","components/Appbar.js","App.js","pages/LoginPage.js","components/AuthenticatedRoute.js","pages/NotFoundPage.js","components/feedback/SnackbarFeedback.js","components/feedback/AlertDialogFeedback.js","components/feedback/TextInputDialog.js","index.js"],"names":["module","exports","withStyles","theme","button","margin","spacing","input","display","props","classes","EnhancedTableHead","headCells","TableHead","TableRow","map","headCell","TableCell","key","id","align","numeric","padding","label","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","customToolbarElements","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","style","flexDirection","width","undefined","alignItems","justifyContent","Typography","className","variant","component","TextField","onChange","event","target","useStyles","paper","marginBottom","table","minWidth","visuallyHidden","border","clip","height","overflow","position","top","centerCell","textAlign","rowNotPublished","rowNotVerified","rowBasic","TableComponent","searchFunction","pagingInfo","data","updateCallback","removeCallback","isLoading","initialKeyword","defaultProps","page","setPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","aria-label","TableBody","filter","item","slice","row","index","labelId","rowStyle","hover","onClick","rowId","role","tabIndex","header","isId","scope","e","stopPropagation","preventDefault","IconButton","fontSize","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","rowsPerPage","pageNum","onChangePage","newPage","history","getAccessToken","localStorage","getItem","getRefreshToken","isAuthenticated","request","options","contentType","a","authorize","client","axios","create","baseURL","headers","interceptors","response","use","error","originalRequest","config","url","status","code","console","log","Promise","reject","removeItem","push","startsWith","_retry","API","Auth","refreshToken","then","token","access_token","Authorization","setItem","catch","err","onSuccess","onError","debug","message","RequestType","getRequest","path","urlData","method","postRequest","postMultipartRequest","formData","Explore","getExplorePage","updateExplorePage","Recommendation","removeRecommendation","updateRecommendation","removePlaceFromRecommendation","addObjectToRecommendation","getAllRecommendations","urlParams","createRecommendation","User","setRoles","getAllRoles","getAllUsers","getUserProfile","register","login","Tour","insertTour","getTour","updateTour","getAllToursAdmin","removeTour","getTourCategories","updateTourCategories","SourcePlace","updateSourcesForPlace","Source","getSources","addSource","Places","getClosesPlacesAdmin","getAllCities","getAllCounties","getAllCountries","getAllMunicipalities","getAllPlaces","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","removePlace","Tags","getAllTags","addTag","params","removeTags","updateTags","updateFeaturedTags","Categories","addCategory","getAllCategories","removeCategory","updateCategory","getAllAbstractedCategories","updateAbstractedCategories","abstractedCategoriesLeftOver","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","Reviews","getPlaceReviews","AlertDialogContext","React","createContext","alertConfig","addAlertConfig","removeAlertConfig","AlertDialogProvider","children","setAlertConfig","contextValue","actions","onClose","Provider","UseAlertDialogContext","useContext","Strings","DIALOG_PLACE_PUBLISH_TITLE","DIALOG_PLACE_PUBLISH_MESSAGE","DIALOG_PLACE_UNPUBLISH_MESSAGE","DIALOG_PLACE_INSERT_TITLE","DIALOG_PLACE_INSERT","DIALOG_PLACE_UPDATE_TITLE","DIALOG_PLACE_UPDATE","DIALOG_PLACE_VERIFY_TITLE","DIALOG_PLACE_VERIFY_MESSAGE","DIALOG_PLACE_DELETE_TITLE","DIALOG_PLACE_DELETE_MESSAGE","DIALOG_TOUR_DELETE_TITLE","DIALOG_TOUR_DELETE_MESSAGE","SNACKBAR_PLACE_INSERTED_SUCCESS","SNACKBAR_PLACE_REMOVE_SUCCESS","SNACKBAR_TOUR_INSERTED_SUCCESS","SNACKBAR_TOUR_REMOVE_SUCCESS","SNACKBAR_ERROR","SNACKBAR_CHANGES_SAVED","SnackbarContext","addConfig","removeConfig","SnackbarProvider","setConfig","success","UseSnackbarContext","autoComplete","chip","flexWrap","listStyle","autoCompleteChipContainer","setOptions","selectedOptions","setSelectedOptions","name","initialData","setInitialData","getCurrentVal","setCurrentVal","firstLoad","setFirstLoad","handleDelete","found","row1","JSON","stringify","Box","option","Chip","onDelete","Autocomplete","disableClearable","getOptionLabel","renderInput","AppStateStorageContext","AppStateStorageProvider","placesPageConfig","setPlacesPageConfig","savePlacesTableInfo","AppResourcesContext","AppResourcesProvider","globalCategories","setGlobalCategories","globalTags","setGlobalTags","PlacesFilterContext","buildUrl","require","initialDates","insertionStart","moment","Date","format","insertionEnd","add","modificationStart","modificationEnd","PlacesFilterProvider","categories","setCategories","selectedCategories","setSelectedCategories","tags","setTags","selectedTags","setSelectedTags","cities","setCities","selectedCities","setSelectedCities","countries","setCountries","selectedCountries","setSelectedCountries","municipalities","setMunicipalities","selectedMunicipalities","setSelectedMunicipalities","counties","setCounties","selectedCounties","setSelectedCounties","initialLoading","setInitialLoading","resetFilterOptions","setResetFilterOptions","filterLabel","filterName","filterOptions","setFilterOptions","dates","setDates","queryParams","di","dm","parseFilterOptions","parseCategories","parseTags","filterQuery","setFilterQuery","parse","restrictions","res","categoryId","tagId","countryRestrictions","munRestrictions","all","filterOptionsCleared","areFiltersCleared","o","c","filterDiv","sortingButtons","rightLayout","boxShadow","datesLayout","flexGrow","setOpen","datesVisible","setDatesVisible","filterDateChange","date","cDate","Object","assign","Grid","container","direction","xs","sm","FormControlLabel","control","Checkbox","checked","generalOptions","filterOptionsChanged","AutocompleteChip","inputProps","justify","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","Button","marginTop","filters","clearFilters","disablePadding","buttonsDiv","content","breakpoints","down","up","autocomplete","borderBottom","outline","setData","pageData","setPageData","setIsLoading","requestAllPlaces","p","parseData","placesData","list","checkable","i","placeId","getPlaceNameById","action","tmp","startIcon","priceRange","averageTimeSpent","closeButton","right","grey","open","setDialogOpen","setText","setUrl","setError","Dialog","fullWidth","DialogTitle","DialogContent","dividers","ev","DialogActions","autoFocus","validateInput","placeInfo","setPlaceInfo","selectedSources","setSelectedSources","updatePlaceInfo","newValue","place","valuetext","setAvailableSources","dialogOpen","availableSources","val","required","placeholder","InputLabelProps","shrink","multiline","rows","marginLeft","bookInAdvance","Slider","defaultValue","getAriaValueText","step","max","marks","FormControl","InputLabel","Select","native","parseInt","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","pressDelay","disableAutoscroll","onSortEnd","oldIndex","newIndex","arrayMove","axis","acceptedFileFormats","dropzoneArea","onCloseCallback","onFinishCallback","loading","selectedFiles","setSelectedFiles","acceptedFiles","maxFileSize","showAlerts","dropzoneProps","disabled","filesLimit","onDrop","files","existingFiles","file","existingFile","imagefile","FormData","append","finally","addImageDialogOpen","setAddImageDialogOpen","handleAddPhoto","Geocode","setApiKey","geocodeFromLatLng","newLat","newLng","fromLatLng","address","results","formatted_address","addressArray","address_components","city","types","long_name","getCity","country","getCountry","county","getCounty","municipality","getMunicipality","latitude","longitude","isLocked","locationCallback","errorParsingLocation","handleKeyPress","which","keyCode","test","fromAddress","geometry","location","lat","lng","loc","split","parseFloat","onKeyPress","onPlaceSelected","navigator","geolocation","getCurrentPosition","coords","alert","setIsLocked","Switch","old","Alert","severity","CustomControlsManager","context","window","google","maps","ControlPosition","TOP_LEFT","MAP","controlDiv","document","createElement","controls","removeAt","createPortal","contextTypes","PropTypes","object","MapComponent","withGoogleMap","defaultZoom","ref","refInstance","center","defaultCenter","largeIcon","locationMarker","setLocationMarker","setParkingLocationMarker","otherPlacesData","setOtherPlacesData","infoWindows","setInfoWindows","refMap","useRef","s","range","l","Fragment","loadingElement","containerElement","mapElement","zIndex","icon","scaledSize","Size","origin","Point","markers","onCloseClick","Avatar","alt","visible","draggable","onDragEnd","latLng","BOTTOM_CENTER","mapCenter","current","getCenter","locationData","setLocationData","setParkingLocation","changeLocationData","setMainInfoWindow","onMarkerDragEnd","setPosition","mainInfoWindow","parking","parkingData","calcCrow","nearestParkingCount","addNewParking","parkingIsAttached","selectedParkingData","parkingId","anchor","parkingInfoWindows","setParkingInfoWindows","addExistingParking","lat1","lon1","lat2","lon2","dLat","toRad","dLon","sin","cos","atan2","sqrt","Value","PI","ParkingMap","setParkingData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","SortableItem","elevation","SortableList","oldArray","EditDialogContext","dialogConfig","addEditDialogConfig","removeEditDialogConfig","defaultOptions","errorMessages","explanation","onDoneCallback","textFieldLabel","defaultText","payload","EditDialogProvider","setDialogConfig","UseEditDialogContext","slider","marginRight","sliderContainer","sliderInput","availableCategories","setAvailableCategories","availableTags","setAvailableTags","grade","setGrade","info","tagName","newTag","1","2","categoryName","newCat","Input","Number","onBlur","ReviewCard","review","CardContent","photoUrl","surname","Rating","rating","readOnly","upvotes","timeAdded","reviewsInfo","reviews","overflowX","setReviews","anchorEl","setAnchorEl","Boolean","filterBy","setFilterBy","getReviewsForPlace","debounceScroll","debounce","round","scrollWidth","scrollLeft","clientWidth","totalReviews","handleScrollDebounced","handleClose","overallStarRating","precision","Tooltip","aria-describedby","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","RadioGroup","Radio","onScroll","persist","handleScroll","AppBarTitleContext","setTitle","AppBarTitleProvider","UseAppBarTitleContext","textField","formControl","addCallback","subtitle","description","setLoading","dataChanged","recData","addRecommendation","errors","hasErrors","checkErrors","insertedData","maxWidth","FormLabel","objectId","recommendations","setRecommendations","pagingData","setPagingData","showAddNewRecommendation","setShowAddNewRecommendation","getRecommendations","keywordChange","scrollHeight","scrollTop","clientHeight","pages","List","overflowY","maxHeight","ListItem","rec","recommendationId","ListItemIcon","ListItemText","Divider","recommendation","unshift","CategoriesDisplay","SubheaderDisplay","media","expand","transform","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","renderActionArea","CardHeader","subheader","substring","website","RecommendationType","paperContent","onEditCallback","objects","intervalContainer","pickerStyle","scheduleData","setScheduleData","scheduleOpenIndex","variantId","enableLastAccommodation","currentSchedule","currentVariant","variants","find","x","elementId","shifts","shift","lastShift","firstShift","TimePicker","ampm","openTime","shiftId","time","oldData","newData","closeTime","lastAccommodation","pop","shiftToPush","shortid","generate","weekdays","fullName","weekdayPickerContainer","weekdayButton","minHeight","removeButtonContainer","weekdayPicker","weekDayIndex","dayActive","days","some","day","newScheduleData","includes","splice","indexOf","WorkingShift","findIndex","generateDefaultPeriod","weekdayButtonContainer","pickerInput","schedule","setSchedule","dayIndex","periods","period","openDay","splitSchedule","minutesStep","InputProps","changeOpenTime","changeCloseTime","lastperiod","orientation","flexItem","schedules","newSchedules","newPeriods","periodsForThisDay","determineGlobalSplitScheduleOpenTime","determineGlobalSplitScheduleCloseTime","scheduleDateContainer","setScheduleOpenIndex","seasonalScheduleEnabled","DatePicker","views","from","to","defaultScheduleData","tabContainer","tabsLayout","addScheduleButtonContainer","setSeasonalScheduleEnabled","isScheduleEnabled","setIsScheduleEnabled","setLastAccommodation","Tabs","indicatorColor","textColor","Tab","state","enabled","loader","bottom","match","phoneNumber","isPublic","isVerified","source","price","parkingMarkerData","setParkingMarkerData","sources","setSources","setPlaceId","firstTimeLoading","setFirstTimeLoading","showRecommendationDialog","setShowRecommendationDialog","ColorButton","green","formFeedback","saveChanges","formPlaceInfo","plc","updateAll","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","updateSources","newSchedule","newPeriod","subtract","closeDay","scheduleDefault","er","hasSchedule","minutes","setAllData","responses","basicPlaceInfo","useMemo","placePhotos","placeLocation","parkingLocation","placeDiscovery","scheduleContainer","CircularProgress","obj","transportTypes","flexFlow","transportSelectWrapper","transportSelect","transportId","transportChangeCallback","currentTransport","setCurrentTransport","NativeSelect","transport","cardRoot","only","details","cover","addParkingWrapper","elementData","tourInfoReducer","currentDay","elementIndex","lastElement","handleEditPlace","descriptionInput","note","fk_transportId","TourPlaceSortable","removePlaceCallback","tourPlaceComponent","removeElementCallback","tourInfo","tour","ElementType","errorInfo","setErrorInfo","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debouncedInput","InputBase","searchInputComponent","placeCard","addPlaceCallback","setApiPlacesFound","apiPlacesFound","localPlacesFound","setLocalPlacesFound","localPlacesLoading","setLocalPlacesLoading","placeType","mappedPlaces","forEach","generatePlaceCards","radioButtonArea","cardArea","headerWrap","onSelectCallback","handleRemoveDay","updateDescriptionGlobally","DayCardSortable","dayInfo","removeDayCallback","elements","elementIdentifier","addDayButton","footerWrapper","setCurrentDay","removeDay","TourDataReducer","nameField","descriptionField","publicityDiv","tourId","titleMissing","shouldDisplayTitleMissingError","showErrors","helperText","isPublished","MyMapComponent","addPlace","directions","setDirection","directionPlaces","setDirectionPlaces","places","setPlaces","placesInfoWindows","setPlacesInfoWindows","loadingArea","setLoadingArea","fetchPlaces","query","locations","Array","fill","PlacesMarkers","constructPlaceData","waypoints","stopover","destination","DirectionsService","route","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","searchAreaComponent","TOP_CENTER","suppressMarkers","marker","labelOrigin","sampleTourData","leftLayout","actionsArea","setTourId","recommendationsDialogOpen","setRecommendationsDialogOpen","useReducer","dispatchTourInfo","handleAddPlaceClick","loadData","aggregatedDays","aggregatedElements","aggregatedPlace","aggregatedDay","aggregatedTour","parseTourInfoResponse","handleSave","containsErrors","keys","keyIndex","element","dayInfoWithoutDesc","dayCopy","tourPlacesMemoized","mapComponent","daysWrapperMemoized","tourDaysComponents","tourInfoMemoized","useTheme","largeScreen","useMediaQuery","getAllTours","handleClick","fq","join","AbstractionCategoryDialog","inputText","setInputText","deInit","oldVal","category","DialogContentText","onInput","errorCode","categoriesHeadCells","categoriesAbstractedHeadCells","tagsHeadCells","buttonWrapper","abstractedCategories","setAbstractedCategories","abstractedDialogConfig","setAbstractedDialogConfig","featuredTags","setFeaturedTags","abstractedCats","tag","isFeatured","cats","mappedCategories","elem","parseAbstractedCats","abstractedCat","alignSelf","UpdateUserDialog","userData","availableRoles","setAvailableRoles","selectedRoles","setSelectedRoles","roles","roleId","userId","password","email","user","setUser","userDataChanged","addUser","medium","userTmp","FormHelperText","gutterBottom","selectedUser","setSelectedUser","allRoles","setAllRoles","openUpdateDialog","setOpenUpdateDialog","openAddDialog","setOpenAddDialog","requestUsers","usersData","rolesList","parsedRoles","AuthContext","AuthProvider","currentUser","setCurrentUser","EditRecommendationContext","EditRecommendationProvider","currentlyEditing","rootList","setRootList","startEditing","conf","finishEditing","removedId","tempRootList","setRecommendation","newRec","RecommendationPlaceSortable","removeObjectFromRecommendation","recommendedPlaceCard","RecommendationPlaceSortableContainer","alignContent","editRecommendation","constructRecommendationForUpdate","leftTop","leftContent","borderStyle","rightTop","rightContent","homeRecommendations","setHomeRecommendations","unique","newList","existingRecommendations","uniqueList","j","RecommendationSkeleton","Skeleton","animation","explorable","setList","group","order","sortable","evt","onEnd","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","TourWithContext","RecommendationsWithContext","Appbar","useLocation","handleDrawerClose","handleListItemClick","RegExp","pathname","go","hasPermission","perm","permissions","permission","CssBaseline","AppBar","clsx","edge","Drawer","Link","exact","Home","Tours","AddPlace","Resources","ManageUsers","Redirect","App","Component","Copyright","getFullYear","form","submit","loaderMain","AuthenticatedRoute","rest","Route","render","routeProps","footer","SnackbarFeedback","Snackbar","autoHideDuration","AlertDialogFeedback","remove","TextInputDialog","ReactDOM","setEmail","setPassword","handleLogin","identifier","hasAccess","authority","checkAccess","authorities","refresh_token","Container","mt","getElementById"],"mappings":"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","file":"static/js/main.f09e3393.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/selectedTourIcon.127fd3ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/selectedParking.102bdd14.svg\";","module.exports = __webpack_public_path__ + \"static/media/availableParking.6ac3f9ec.svg\";","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    }\r\n});\r\n\r\n\r\n\r\nconst Home = props => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport useDebounce from \"../helpers/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\n\r\n/**\r\n * Table head\r\n * @param headCells\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction EnhancedTableHead({headCells}) {\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right'  : 'left' }\r\n                        padding={'default'}\r\n                    >\r\n                        {headCell.label}\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    headCells: PropTypes.object.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { title, changePageCallback, keyword, setKeyword, customToolbarElements} = props;\r\n    const debouncedSearch = useDebounce(keyword, 300);\r\n\r\n\r\n    useEffect( () => {\r\n            changePageCallback(1,keyword)\r\n        },\r\n        [debouncedSearch]\r\n    );\r\n\r\n    return (\r\n        <Toolbar>\r\n            <div style={{display: 'flex', flexDirection: 'column', width: '100%'}}>\r\n                <div>\r\n                    {customToolbarElements !== undefined ? customToolbarElements : null}\r\n                </div>\r\n                <div style={{display: \"flex\", width: '100%', alignItems: \"center\", justifyContent: 'space-between'}}>\r\n                    <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                        {title}\r\n                    </Typography>\r\n                    <TextField id=\"standard-basic\" label=\"Search\" value={keyword} onChange={ event =>{setKeyword(event.target.value)}}/>\r\n                </div>\r\n            </div>\r\n\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    centerCell: {\r\n        textAlign: \"center\",\r\n        width: '100%'\r\n    },\r\n    rowNotPublished:{\r\n        backgroundColor: \"#ffcdd2\"\r\n    },\r\n    rowNotVerified:{\r\n        backgroundColor: \"#fff9c4\"\r\n    },\r\n    rowBasic: {\r\n        backgroundColor: \"#FFFFFF\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function TableComponent({title,\r\n                                           searchFunction,\r\n                                           headCells,\r\n                                           pagingInfo,\r\n                                           data,\r\n                                           changePageCallback,\r\n                                           updateCallback,\r\n                                           removeCallback,\r\n                                           id,\r\n                                           isLoading,\r\n                                           customToolbarElements,\r\n                                           initialKeyword\r\n}) {\r\n    TableComponent.propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        headCells: PropTypes.object.isRequired,\r\n        pagingInfo: PropTypes.object,\r\n        data: PropTypes.object.isRequired,\r\n        checkable: PropTypes.bool.isRequired,\r\n        changePageCallback: PropTypes.func,\r\n        updateCallback: PropTypes.func,\r\n        removeCallback: PropTypes.func,\r\n        id: PropTypes.string.isRequired,\r\n        isLoading: PropTypes.bool,\r\n        customToolbarElements: PropTypes.object,\r\n        initialKeyword: PropTypes.string,\r\n    };\r\n\r\n    TableComponent.defaultProps = {\r\n        initialKeyword: ''\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const rowsPerPage = 10;\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [keyword, setKeyword] = useState(initialKeyword);\r\n\r\n    const handleClick = (event, rowId) => {\r\n        if(updateCallback !== undefined){\r\n            updateCallback(rowId)\r\n        }\r\n    };\r\n    const handleChangePage = (event, newPage) => {\r\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\r\n    };\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <div style={{height: 8}}>\r\n                    {isLoading ? <LinearProgress/> : null }\r\n                </div>\r\n                <EnhancedTableToolbar\r\n                    title={title}\r\n                    changePageCallback={changePageCallback}\r\n                    keyword={keyword}\r\n                    setKeyword={setKeyword}\r\n                    customToolbarElements={customToolbarElements}\r\n                />\r\n                 <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={'medium'}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead headCells={headCells}/>\r\n                        <TableBody>\r\n                            {data\r\n                                .filter(item => searchFunction === undefined ? true : searchFunction(keyword, item))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    const rowStyle = row['isVerified'] !== undefined  && row['isVerified'] === false ? classes.rowNotVerified :\r\n                                        row['isPublic'] !== undefined && row['isPublic'] === false ? classes.rowNotPublished :  classes.rowBasic;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            className={rowStyle}\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row[id])}\r\n                                            role=\"checkbox\"\r\n                                            tabIndex={-1}\r\n                                            key={row[id]}\r\n                                        >\r\n\r\n                                            {headCells.map(header=>{\r\n                                                if(header.isId){\r\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\r\n                                                            {row[header.id]}\r\n                                                        </TableCell>\r\n                                                }else if(header.id === 'actions' ){\r\n                                                        return <TableCell >\r\n                                                            <div onClick={e => {e.stopPropagation(); e.preventDefault()}}>\r\n                                                                {updateCallback !== undefined ? <IconButton onClick={(event)=>{\r\n                                                                    updateCallback(row[id]);\r\n                                                                    return 0\r\n                                                                }} size=\"small\" aria-label=\"edit\" >\r\n                                                                    <EditIcon fontSize=\"small\" />\r\n                                                                </IconButton> : null}\r\n\r\n                                                                {removeCallback !== undefined ? <IconButton size=\"small\" aria-label=\"delete\" onClick={()=>removeCallback(row[id])}>\r\n                                                                    <DeleteIcon  fontSize=\"small\" />\r\n                                                                </IconButton> : null}\r\n\r\n                                                            </div>\r\n                                                            </TableCell>\r\n                                                }else{\r\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\r\n                                                }\r\n\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: 53 * emptyRows}}>\r\n\r\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\r\n                                        <TableCell colSpan={6} className={classes.centerCell}>\r\n                                            <Typography variant=\"h6\" noWrap>\r\n                                                No results\r\n                                            </Typography>\r\n                                        </TableCell>}\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10]}\r\n                    component=\"div\"\r\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\r\n                    onChangePage={handleChangePage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\r\nexport default function useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(\r\n        () => {\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n\r\n        [value]\r\n    );\r\n\r\n    return debouncedValue;\r\n}","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","export const getAccessToken = () => localStorage.getItem('access_token');\r\nexport const getRefreshToken = () => localStorage.getItem('refresh_token');\r\nexport const isAuthenticated = () => !!getAccessToken();","import React from \"react\";\r\nimport axios from \"axios\"\r\nimport history from \"../helpers/history\";\r\nimport {getAccessToken, getRefreshToken} from \"../helpers/tokens\";\r\nimport API from \"./API\";\r\n\r\nconst request = async function (options, contentType, authorize= true) {\r\n\r\n    const header = {\r\n        'Content-Type': (contentType == null) ? 'application/json' : contentType,\r\n        'Accept': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Authorization': \"Bearer \" + getAccessToken(),\r\n        'device': 'web'\r\n    };\r\n\r\n    if(!authorize){\r\n        delete header['Authorization']\r\n    }\r\n\r\n    const client = axios.create({\r\n        baseURL: false ? \"http://localhost:8080/\" : \"https://www.traveldirection.ax.lt:8080/\",\r\n        headers: header\r\n    });\r\n\r\n\r\n\r\n    // Add a response interceptor\r\n    client.interceptors.response.use(function (response) {\r\n        return response;\r\n    },  function (error) {\r\n\r\n        // console.log(\"Interceptor error\", error);\r\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n        // Do something with response error\r\n        const originalRequest = error.config;\r\n        const url = originalRequest.url;\r\n        const status = error.response.status;\r\n\r\n\r\n        if (error.response.status === 408 || error.code === 'ECONNABORTED' || error.code === \"ERR_INTERNET_DISCONNECTED\") {\r\n            console.log(`A timeout happend on url ${error.config.url}`)\r\n            return Promise.reject(error)\r\n        }\r\n\r\n        // Logout user if token refresh didn't work or user is disabled\r\n        if (url === 'api/v1/auth/refresh') {\r\n            console.log(\"Asking for refresh token\");\r\n            console.log(\"Unable to issue new JWT token. Redirecting to login page!\");\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"refresh_token\");\r\n            history.push(\"/login\");\r\n            return Promise.reject(error);\r\n        }else if(url.startsWith(\"api/v1/auth\")){\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        //Do not request for new JWT if response code is not Authorized\r\n        if (status !== 403) {\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        if (status === 403 && originalRequest._retry === undefined) {\r\n            console.log(\"Users token has expired!\");\r\n\r\n            originalRequest._retry = true;\r\n\r\n            return API.Auth.refreshToken(getRefreshToken()).then(response=>{\r\n                    console.log(\"Retrieving new token and making the same request!\");\r\n                    let token = response.access_token;\r\n                    originalRequest.headers.Authorization = \"Bearer \" + token;\r\n                    localStorage.setItem(\"access_token\", token);\r\n                    return axios(originalRequest)\r\n            }).catch(err=>{\r\n                return Promise.reject(error)\r\n            })\r\n        }\r\n\r\n        return Promise.reject(error)\r\n    });\r\n\r\n    const onSuccess = function (response) {\r\n        // console.log('Request Successful!', response);\r\n        return response.data;\r\n    };\r\n\r\n    const onError = function (error) {\r\n        if (error.response) {\r\n            console.debug('Status:', error.response.status);\r\n            if (error.response.status === 403) {\r\n                history.push(\"/login\")\r\n            }\r\n            console.debug('Data:', error.response.data);\r\n            console.debug('Headers:', error.response.headers);\r\n        } else {\r\n            console.debug('Error Message:', error.message);\r\n        }\r\n\r\n        return Promise.reject(error.response.data);\r\n    };\r\n\r\n    return client(options)\r\n        .then(onSuccess)\r\n        .catch(onError);\r\n};\r\n\r\nconst getRequest = function (path, urlData = \"\") {\r\n    return request({\r\n        url: path + urlData,\r\n        method: 'GET'\r\n    });\r\n};\r\n\r\nconst postRequest = function (path, data, urlData = \"\", authorize=true) {\r\n    console.log(\"Authorize\",authorize);\r\n    return request({\r\n        url: path + urlData,\r\n        method: 'POST',\r\n        data: data\r\n    }, null, authorize);\r\n};\r\n\r\nconst postMultipartRequest = function (path, formData) {\r\n    return request({\r\n        url: path,\r\n        method: 'POST',\r\n        data: formData\r\n    }, 'multipart/form-data');\r\n};\r\n\r\nconst RequestType = {\r\n    getRequest, postRequest, postMultipartRequest\r\n};\r\n\r\nexport default RequestType\r\n\r\n\r\n","import RequestType from '../Networking/NetworkLayerCentral'\r\n\r\n//Places\r\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\r\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\r\nconst getClosesPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin/closest\", urlParams);\r\n\r\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\r\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\r\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\r\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\r\nconst removePlace = (urlParams) => RequestType.getRequest(\"api/v1/place/delete\", urlParams);\r\n\r\nconst getAllCities = (urlParams) =>RequestType.getRequest(\"api/v1/place/city/all\",urlParams);\r\nconst getAllCounties = (urlParams) =>RequestType.getRequest(\"api/v1/place/county/all\",urlParams);\r\nconst getAllCountries = (urlParams) =>RequestType.getRequest(\"api/v1/place/country/all\",urlParams);\r\nconst getAllMunicipalities = (urlParams) =>RequestType.getRequest(\"api/v1/place/municipality/all\",urlParams);\r\n\r\nconst Places = {getClosesPlacesAdmin,getAllCities,getAllCounties, getAllCountries, getAllMunicipalities, getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces, removePlace};\r\n\r\n//Tags\r\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\r\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\r\nconst removeTags = (params) => RequestType.postRequest(\"api/v1/tags/delete\", params);\r\nconst updateTags = (params) => RequestType.postRequest(\"api/v1/tags/update\", params);\r\nconst updateFeaturedTags = (data) => RequestType.postRequest(\"api/v1/tags/featured/update\", data);\r\nconst Tags = {getAllTags, addTag, removeTags, updateTags, updateFeaturedTags};\r\n\r\n//Category\r\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\r\nconst removeCategory = (params) => RequestType.postRequest(\"api/v1/categories/delete\", params);\r\nconst updateCategory = (params) => RequestType.postRequest(\"api/v1/categories/update\", params);\r\nconst getAllCategories = (params) => RequestType.getRequest(\"api/v1/categories/all\", params);\r\nconst getAllAbstractedCategories = (params) => RequestType.getRequest(\"api/v1/categories/all/abstracted\", params);\r\nconst updateAbstractedCategories = (data) => RequestType.postRequest(\"api/v1/categories/update/abstracted\", data);\r\nconst abstractedCategoriesLeftOver = () => RequestType.getRequest(\"api/v1/categories/abstracted/left\");\r\nconst Categories = {addCategory, getAllCategories, removeCategory, updateCategory, getAllAbstractedCategories, updateAbstractedCategories, abstractedCategoriesLeftOver};\r\n\r\n//Photo\r\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\r\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\r\nconst Photos = {addPhoto, uploadPhoto};\r\n\r\n\r\n//Parking\r\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\r\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\r\nconst Parking = {getParkingByLocation, insertNewParking};\r\n\r\n\r\n//TagsPlace\r\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\r\nconst TagsPlace = {updateTagsForPlace};\r\n\r\n//CategoriesPlace\r\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\r\nconst CategoriesPlace = {updateCategoriesForPlace};\r\n\r\n//PhotoPlace\r\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\r\nconst ParkingPlace = {updateParkingForPlace};\r\n\r\n//PhotoPlace\r\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\r\nconst PhotoPlace = {updatePhotoForPlace};\r\n\r\n//Schedule\r\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\r\nconst Schedule = {updateScheduleForPlace};\r\n\r\n//ReviewsPlace\r\nconst getPlaceReviews = (urlParams) => RequestType.getRequest(\"api/v1/reviews/all\", urlParams);\r\nconst Reviews = {getPlaceReviews};\r\n\r\n//Sources\r\nconst getSources = () => RequestType.getRequest(\"api/v1/source/all\");\r\nconst addSource = (data) => RequestType.postRequest(\"api/v1/source/insert\",data);\r\nconst Source = {getSources, addSource};\r\n\r\n//SourcePlace\r\nconst updateSourcesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/sourceplace/update\", data, urlParams);\r\nconst SourcePlace = {updateSourcesForPlace};\r\n\r\n//Tours\r\nconst insertTour = (data) => RequestType.postRequest(\"api/v1/tour/insert\",data)\r\nconst updateTour = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/update\",data, urlParams)\r\nconst updateTourCategories = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/categories/update\",data, urlParams)\r\nconst getTour = (urlParams) => RequestType.getRequest(\"api/v1/tour\",urlParams)\r\nconst getTourCategories = (urlParams) => RequestType.getRequest(\"api/v1/tour/categories\",urlParams)\r\nconst removeTour = (urlParams) => RequestType.getRequest(\"api/v1/tour/delete\", urlParams);\r\nconst getAllToursAdmin = (urlParams) => RequestType.getRequest(\"api/v1/tour/searchadmin\", urlParams);\r\nconst Tour = {insertTour, getTour, updateTour, getAllToursAdmin, removeTour, getTourCategories, updateTourCategories}\r\n\r\n//Auth\r\nconst login = (data) => RequestType.postRequest(\"api/v1/auth/login\", data, \"\", false);\r\nconst register = (data) => RequestType.postRequest(\"api/v1/auth/registration\",data, \"\", false);\r\nconst refreshToken = (data) => RequestType.postRequest(\"api/v1/auth/refresh\", data, \"\", false);\r\n\r\nconst Auth = {register, login, refreshToken};\r\n\r\n//User\r\nconst getUserProfile = () => RequestType.getRequest(\"api/v1/user/info\");\r\nconst getAllUsers = (urlParams) => RequestType.getRequest(\"api/v1/user/search\", urlParams);\r\nconst getAllRoles = () => RequestType.getRequest(\"api/v1/user/roles/all\");\r\nconst setRoles = (data) => RequestType.postRequest(\"api/v1/user/setRoles\", data);\r\n\r\nconst User = {setRoles, getAllRoles, getAllUsers, getUserProfile};\r\n\r\n//Recommendation\r\nconst createRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/create\", data);\r\nconst getAllRecommendations = (urlParams) => RequestType.getRequest(\"api/v1/recommendation/search\", urlParams);\r\nconst addPlaceToRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/addObject\", data);\r\nconst removePlaceFromRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/removeObject\", data);\r\nconst updateRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/update\", data)\r\nconst removeRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/remove\", data)\r\n\r\nconst Recommendation = { removeRecommendation, updateRecommendation, removePlaceFromRecommendation, addObjectToRecommendation: addPlaceToRecommendation, getAllRecommendations, createRecommendation }\r\n\r\n//Explore\r\n\r\nconst updateExplorePage = (data) => RequestType.postRequest(\"api/v1/explore/update\", data)\r\nconst getExplorePage = () => RequestType.getRequest(\"api/v1/explore/\")\r\n\r\nconst Explore = { getExplorePage, updateExplorePage }\r\n\r\nconst API = {Explore, Recommendation, User, Auth, Tour, SourcePlace, Source,Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule, Reviews};\r\n\r\nexport default API\r\n\r\n","// src/common/providers/APIErrorProvider/index.js\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nexport const AlertDialogContext = React.createContext({\r\n    alertConfig: null,\r\n    addAlertConfig: () => {},\r\n    removeAlertConfig: () => {}\r\n});\r\n\r\nexport default function AlertDialogProvider({ children }) {\r\n    const [alertConfig, setAlertConfig] = useState(null);\r\n    const contextValue = {\r\n        alertConfig,\r\n        addAlertConfig: (title, message, actions, onClose = undefined) => setAlertConfig({ title, message, actions, onClose}),\r\n        removeAlertConfig: () => setAlertConfig(null)\r\n    };\r\n\r\n    return (\r\n        <AlertDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </AlertDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AlertDialogContext} from \"./AlertDialogContext\";\r\n\r\nexport default function UseAlertDialogContext() {\r\n    const { alertConfig, addAlertConfig, removeAlertConfig } = useContext(AlertDialogContext);\r\n    return { alertConfig, addAlertConfig, removeAlertConfig };\r\n}\r\n","const Strings = {\r\n    DIALOG_PLACE_PUBLISH_TITLE : 'Place publicity',\r\n    DIALOG_PLACE_PUBLISH_MESSAGE: \"This place will be visible for all users. Are you sure?\",\r\n    DIALOG_PLACE_UNPUBLISH_MESSAGE :\"This place will not be visible anymore. Are you sure?\",\r\n\r\n    DIALOG_PLACE_INSERT_TITLE: \"Insert place\",\r\n    DIALOG_PLACE_INSERT: \"Are you sure you want to insert this place?\",\r\n\r\n    DIALOG_PLACE_UPDATE_TITLE: \"Update place\",\r\n    DIALOG_PLACE_UPDATE: \"Are you sure you want to make changes to this place?\",\r\n\r\n    DIALOG_PLACE_VERIFY_TITLE: \"Place verification\",\r\n    DIALOG_PLACE_VERIFY_MESSAGE: \"This is a user's suggested place. Are you sure you want to verify this place and make it visible to others?\",\r\n\r\n    DIALOG_PLACE_DELETE_TITLE: \"Delete place\",\r\n    DIALOG_PLACE_DELETE_MESSAGE: \"This action will remove this place permanently. Are you sure you want to proceed?\",\r\n\r\n    DIALOG_TOUR_DELETE_TITLE: \"Delete tour\",\r\n    DIALOG_TOUR_DELETE_MESSAGE: \"This action will remove this tour permanently. Are you sure you want to proceed?\",\r\n\r\n    SNACKBAR_PLACE_INSERTED_SUCCESS: \"Place inserted successfully\",\r\n    SNACKBAR_PLACE_REMOVE_SUCCESS: \"Place was removed successfully\",\r\n\r\n    SNACKBAR_TOUR_INSERTED_SUCCESS: \"Tour inserted successfully\",\r\n    SNACKBAR_TOUR_REMOVE_SUCCESS: \"Tour was removed successfully\",\r\n\r\n    SNACKBAR_ERROR: \"Something went wrong!\",\r\n    SNACKBAR_CHANGES_SAVED: \"All changes saved!\"\r\n};\r\n\r\nexport default Strings;","import React, { useState, useCallback } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nexport const SnackbarContext = React.createContext({\r\n    config: null,\r\n    addConfig: () => {},\r\n    removeConfig: () => {}\r\n});\r\n\r\n\r\nexport default function SnackbarProvider({ children }) {\r\n    const [config, setConfig] = useState(null);\r\n\r\n    const removeConfig = () => setConfig(null);\r\n    const addConfig = (success, message) => setConfig({ success, message });\r\n\r\n    const contextValue = {\r\n        config,\r\n        addConfig: (success, message) => addConfig(success, message),\r\n        removeConfig: () => removeConfig()\r\n    };\r\n\r\n    return (\r\n        <SnackbarContext.Provider value={contextValue}>\r\n            {children}\r\n        </SnackbarContext.Provider>\r\n    );\r\n}","import { useContext } from 'react';\r\nimport {SnackbarContext} from \"./SnackbarContext\";\r\n\r\nexport default function UseSnackbarContext() {\r\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\r\n    return { config, addConfig, removeConfig };\r\n}\r\n","\r\nimport React, {useEffect, useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    autoComplete: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(1),\r\n        margin: 0,\r\n    },\r\n    autoCompleteChipContainer: {\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction AutoCompleteChip(props){\r\n\r\n    const {options, setOptions, selectedOptions, setSelectedOptions, classes, label, id, name} = props;\r\n    const [initialData, setInitialData] = useState([]);\r\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\r\n    const [firstLoad, setFirstLoad] = useState(true);\r\n\r\n    function handleDelete(data) {\r\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\r\n        setOptions(\r\n            [\r\n                ...options,\r\n                data\r\n            ]\r\n        )\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(selectedOptions.length===0){\r\n\r\n            setOptions(\r\n                initialData\r\n            )\r\n        }\r\n    },[selectedOptions]);\r\n\r\n    useEffect(()=>{\r\n        if(firstLoad && options.length>0){\r\n            let data = [];\r\n            options.map(row=>{\r\n                let found = false;\r\n                selectedOptions.map(row1=>{\r\n                    if(JSON.stringify(row) === JSON.stringify(row1)){\r\n                        found = true\r\n                    }\r\n                });\r\n                if(!found){\r\n                   data.push(row)\r\n                }\r\n            });\r\n            setOptions(data);\r\n            setInitialData(data);\r\n            setFirstLoad(false)\r\n        }\r\n    },[options]);\r\n\r\n    function handleInput(event, value){\r\n        setCurrentVal({\"name\": \"\"});\r\n        setSelectedOptions(\r\n            [\r\n                ...selectedOptions,\r\n                value\r\n            ]\r\n        );\r\n        setOptions(options.filter(item => item !== value))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Box  className={classes.autoCompleteChipContainer}>\r\n                {selectedOptions.length !== 0 &&\r\n                <Box component=\"ul\" className={classes.root}>\r\n                    {\r\n                        selectedOptions.map(option => {\r\n                            return id !== undefined ?\r\n                                <li key={option[id]}>\r\n                                    <Chip\r\n                                        variant=\"outlined\"\r\n                                        label={name!== undefined ? option[name] : option.name}\r\n                                        onDelete={() => handleDelete(option)}\r\n                                        className={classes.chip}\r\n                                    />\r\n                                </li>\r\n                                :\r\n                                <li key={option}>\r\n                                        <Chip\r\n                                            variant=\"outlined\"\r\n                                            label={option}\r\n                                            onDelete={() => handleDelete(option)}\r\n                                            className={classes.chip}\r\n                                        />\r\n                                </li>\r\n                                }\r\n\r\n                            )\r\n                    }\r\n                </Box>\r\n                }\r\n\r\n                <Autocomplete\r\n                    className={classes.autoComplete}\r\n                    value={getCurrentVal}\r\n                    options={options}\r\n                    onChange={handleInput}\r\n                    disableClearable\r\n                    getOptionLabel={(option) => {\r\n                        if(typeof(option) === 'string')\r\n                            return option\r\n                        else\r\n                            return option.name\r\n                    }}\r\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\r\n                />\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nAutoCompleteChip.propTypes = {\r\n    setSelectedOptions: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    setOptions: PropTypes.func.isRequired,\r\n    selectedOptions: PropTypes.array.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    label: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AutoCompleteChip)","import React, {useEffect, useState} from 'react';\r\n\r\nexport const AppStateStorageContext = React.createContext();\r\n\r\nexport default function AppStateStorageProvider({ children }) {\r\n\r\n    const [placesPageConfig, setPlacesPageConfig] = useState({keyword: '', page: 1})\r\n\r\n    function savePlacesTableInfo(keyword, page){\r\n        const config = { ...placesPageConfig }\r\n        config.keyword = keyword;\r\n        config.page = page;\r\n        console.log(\"Saving\", {keyword, page})\r\n        setPlacesPageConfig(config)\r\n    }\r\n\r\n\r\n    return (\r\n        <AppStateStorageContext.Provider value={{\r\n            savePlacesTableInfo,\r\n            placesPageConfig\r\n\r\n        }}>\r\n            {children}\r\n        </AppStateStorageContext.Provider>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport API from \"../Networking/API\";\r\n\r\nexport const AppResourcesContext = React.createContext();\r\n\r\nexport default function AppResourcesProvider({ children }) {\r\n    const [globalCategories, setGlobalCategories] = useState([]);\r\n    const [globalTags, setGlobalTags] = useState([]);\r\n\r\n\r\n    const getCategories = () => {\r\n        API.Categories.getAllCategories().then(setGlobalCategories).catch(error=>{\r\n        });\r\n    };\r\n\r\n    const getTags = () =>{\r\n        API.Tags.getAllTags().then(setGlobalTags).catch(err=>{\r\n        })\r\n    };\r\n\r\n\r\n    useEffect(()=>{\r\n        getCategories();\r\n        getTags();\r\n    },[]);\r\n\r\n    return (\r\n        <AppResourcesContext.Provider value={{\r\n            globalCategories,\r\n            globalTags\r\n\r\n        }}>\r\n            {children}\r\n        </AppResourcesContext.Provider>\r\n    );\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport API from \"../Networking/API\";\r\nimport * as moment from \"moment\";\r\nimport {AppStateStorageContext} from \"./AppStateStorageContext\";\r\nimport {AppResourcesContext} from \"./AppResourcesContext\";\r\nexport const PlacesFilterContext = React.createContext();\r\nvar buildUrl = require('build-url');\r\n\r\n\r\nconst initialDates = {\r\n    insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n    insertionEnd: moment(new Date()).add(1,'day').format(),\r\n    modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n    modificationEnd: moment(new Date()).add(1,'day').format()\r\n};\r\n\r\nexport const PlacesFilterProvider = ({children}) => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    const [tags, setTags] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n\r\n    const [cities, setCities] = useState([]);\r\n    const [selectedCities, setSelectedCities] = useState([]);\r\n\r\n    const [countries, setCountries] = useState([]);\r\n    const [selectedCountries, setSelectedCountries] = useState([]);\r\n\r\n    const [municipalities, setMunicipalities] = useState([]);\r\n    const [selectedMunicipalities, setSelectedMunicipalities] = useState([]);\r\n\r\n    const [counties, setCounties] = useState([]);\r\n    const [selectedCounties, setSelectedCounties] = useState([]);\r\n\r\n    const [initialLoading, setInitialLoading] = useState(true);\r\n    const [resetFilterOptions, setResetFilterOptions] = useState(false);\r\n\r\n    const {globalCategories, globalTags} = useContext(AppResourcesContext);\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [dates, setDates] = useState(initialDates);\r\n\r\n    const [filterQuery, setFilterQuery] = useState( buildUrl(null, {\r\n        queryParams: {\r\n            di: [dates.insertionStart, dates.insertionEnd],\r\n            dm: [dates.modificationStart, dates.modificationEnd],\r\n            filterOptions: parseFilterOptions(),\r\n            categories: parseCategories(),\r\n            tags: parseTags(),\r\n            countries: selectedCountries,\r\n            cities: selectedCities,\r\n            municipalities: selectedMunicipalities\r\n        }\r\n    }));\r\n\r\n\r\n    useEffect(()=>{\r\n        setCategories(JSON.parse(JSON.stringify(globalCategories)))\r\n    },[globalCategories]);\r\n\r\n    useEffect(()=>{\r\n        setTags(JSON.parse(JSON.stringify(globalTags)))\r\n    },[globalTags]);\r\n\r\n\r\n    const getAllCities = (restrictions=\"\") =>{\r\n        API.Places.getAllCities(restrictions).then(res=>{\r\n            setCities(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllCounties = () =>{\r\n        API.Places.getAllCounties().then(res=>{\r\n            setCounties(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllCountries = () =>{\r\n        API.Places.getAllCountries().then(res=>{\r\n            setCountries(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllMunicipalities = (restrictions=\"\") =>{\r\n        API.Places.getAllMunicipalities(restrictions).then(res=>{\r\n            setMunicipalities(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            getAllMunicipalities(buildUrl(null, {\r\n                queryParams: {\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }));\r\n            getAllCities(buildUrl(null, {\r\n                queryParams: {\r\n                    munRestrictions: selectedMunicipalities,\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }))\r\n        }\r\n    },[selectedCountries]);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            getAllCities(buildUrl(null, {\r\n                queryParams: {\r\n                    munRestrictions: selectedMunicipalities,\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }))\r\n        }\r\n    }, [selectedMunicipalities]);\r\n\r\n    useEffect(()=>{\r\n        Promise.all([\r\n            getAllCities(),\r\n            getAllCountries(),\r\n            getAllCounties(),\r\n            getAllMunicipalities()\r\n        ]).then(response => {\r\n            setInitialLoading(false);\r\n            // console.log(\"All data received!\")\r\n        }).catch(err => {\r\n        })\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            if(!resetFilterOptions){\r\n                setFilterQuery(buildUrl(null, {\r\n                    queryParams: {\r\n                        di: [dates.insertionStart, dates.insertionEnd],\r\n                        dm: [dates.modificationStart, dates.modificationEnd],\r\n                        o: parseFilterOptions(),\r\n                        c: parseCategories(),\r\n                        tags: parseTags(),\r\n                        countries: selectedCountries,\r\n                        cities: selectedCities,\r\n                        municipalities: selectedMunicipalities\r\n                    }\r\n                }))\r\n            }else{\r\n                if(areFiltersCleared()){\r\n                    setResetFilterOptions(false)\r\n                }\r\n            }\r\n        }\r\n    },[selectedCategories, selectedTags, selectedCities,selectedCountries,selectedMunicipalities,dates,filterOptions,resetFilterOptions]);\r\n\r\n    function areFiltersCleared() {\r\n        let filterOptionsCleared = true;\r\n        filterOptions.map(row=>{\r\n            if(row.filter){\r\n                filterOptionsCleared = false\r\n            }\r\n        });\r\n        return filterOptionsCleared &&\r\n            selectedCategories.length === 0 &&\r\n            selectedTags.length === 0 &&\r\n            selectedCities.length === 0 &&\r\n            selectedCountries.length ===0 &&\r\n            dates.insertionStart === initialDates.insertionStart &&\r\n            dates.modificationStart === initialDates.modificationStart\r\n    }\r\n\r\n    function parseCategories(){\r\n        return selectedCategories.map(row => row.categoryId);\r\n    }\r\n\r\n    function parseTags(){\r\n        return selectedTags.map(row => row.tagId);\r\n    }\r\n\r\n\r\n    function parseFilterOptions(){\r\n        let options = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filter === true)\r\n                options.push(row.filterName)\r\n        });\r\n        return options\r\n    }\r\n\r\n    const contextValue = {\r\n        filterQuery,\r\n        setResetFilterOptions,\r\n\r\n        dates,\r\n        setDates,\r\n\r\n        filterOptions,\r\n        setFilterOptions,\r\n\r\n        categories,\r\n        setCategories,\r\n        selectedCategories,\r\n        setSelectedCategories,\r\n\r\n        tags,\r\n        setTags,\r\n        selectedTags,\r\n        setSelectedTags,\r\n\r\n        counties,\r\n        setCounties,\r\n        selectedCounties,\r\n        setSelectedCounties,\r\n\r\n        cities,\r\n        setCities,\r\n        selectedCities,\r\n        setSelectedCities,\r\n\r\n        countries,\r\n        setCountries,\r\n        selectedCountries,\r\n        setSelectedCountries,\r\n\r\n        municipalities,\r\n        setMunicipalities,\r\n        selectedMunicipalities,\r\n        setSelectedMunicipalities\r\n    };\r\n\r\n    return (\r\n        <PlacesFilterContext.Provider value={contextValue}>\r\n            {children}\r\n        </PlacesFilterContext.Provider>\r\n    );\r\n};","import React, {useContext, useEffect, useState} from \"react\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport moment from \"moment\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport MuiPickersUtilsProvider from \"@material-ui/pickers/MuiPickersUtilsProvider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst style = theme =>({\r\n    filterDiv: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    sortingButtons: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(1),\r\n        height: \"100%\"\r\n\r\n    },\r\n    rightLayout: {\r\n        boxShadow: \"0 0 1px 0 #666\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(1)\r\n    },\r\n    datesLayout:{\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n        marginBottom: \"8px\",\r\n        boxShadow: \"0 0 1px 0 #666\",\r\n        padding: theme.spacing(1)\r\n    },\r\n    paper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center'\r\n\r\n    }\r\n});\r\n\r\n\r\n\r\nfunction FilterBlock({classes, setOpen}) {\r\n    const {\r\n        tags, setTags, selectedTags, setSelectedTags,\r\n        categories, setCategories, selectedCategories, setSelectedCategories,\r\n        cities, setCities, selectedCities, setSelectedCities,\r\n        countries, setCountries, selectedCountries, setSelectedCountries,\r\n        municipalities, setMunicipalities, selectedMunicipalities, setSelectedMunicipalities,\r\n        filterOptions, setFilterOptions, setResetFilterOptions,\r\n        dates, setDates} = useContext(PlacesFilterContext);\r\n\r\n\r\n    const [datesVisible, setDatesVisible] = useState(false);\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let generalOptions = Object.assign([], filterOptions);\r\n        generalOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n        });\r\n        setFilterOptions(generalOptions)\r\n    };\r\n\r\n    function filterDateChange(date, id) {\r\n        let cDate = Object.assign( {}, dates);\r\n        cDate[id] = moment(date).format('YYYY-MM-DD');\r\n        setDates(cDate)\r\n    }\r\n\r\n    function clearFilters() {\r\n        setResetFilterOptions(true);\r\n\r\n        setSelectedTags([]);\r\n        setSelectedCities([]);\r\n        setSelectedCountries([]);\r\n        setSelectedCategories([]);\r\n        setSelectedMunicipalities([]);\r\n\r\n        let filters = Object.assign(filterOptions, []);\r\n        filters.map(row=>{\r\n            row.filter = false\r\n        });\r\n        setFilterOptions(filters);\r\n\r\n        setDates({\r\n            insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n            insertionEnd: moment(new Date()).add(1,'day').format(),\r\n            modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n            modificationEnd: moment(new Date()).add(1,'day').format()\r\n        })\r\n    }\r\n\r\n    return <Paper className={classes.root}>\r\n        <Grid container direction=\"row\" spacing={3}>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\">\r\n                        General options\r\n                    </Typography>\r\n                    <div className={classes.sortingButtons}>\r\n                        {filterOptions.map(row=>{\r\n                            return <FormControlLabel\r\n                                key={row.filterName}\r\n                                control={<Checkbox\r\n                                checked={row.filter}\r\n                                onChange={()=>filterOptionsChanged(row.filterName)}\r\n                                name={row.filterName} />}\r\n                                label={row.filterLabel}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                    <Typography variant=\"h6\">\r\n                        Filter by categories\r\n                    </Typography>\r\n                    <AutocompleteChip label=\"Select categories\"\r\n                                      id=\"categoryId\"\r\n                                      options={categories}\r\n                                      setOptions={setCategories}\r\n                                      selectedOptions={selectedCategories}\r\n                                      setSelectedOptions={setSelectedCategories}/>\r\n\r\n                    <Typography variant=\"h6\">\r\n                        Filter by tags\r\n                    </Typography>\r\n                    <AutocompleteChip label=\"Select tags\"\r\n                                      id=\"tagId\"\r\n                                      options={tags}\r\n                                      setOptions={setTags}\r\n                                      selectedOptions={selectedTags}\r\n                                      setSelectedOptions={setSelectedTags}/>\r\n\r\n\r\n                </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\">\r\n                        Filter by countries\r\n                    </Typography>\r\n                    <AutocompleteChip label=\"Select countries\"\r\n                                      options={countries}\r\n                                      setOptions={setCountries}\r\n                                      selectedOptions={selectedCountries}\r\n                                      setSelectedOptions={setSelectedCountries}/>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by municipalities\r\n                            </Typography>\r\n                            <AutocompleteChip label=\"Select municipalities\"\r\n                                              options={municipalities}\r\n                                              setOptions={setMunicipalities}\r\n                                              selectedOptions={selectedMunicipalities}\r\n                                              setSelectedOptions={setSelectedMunicipalities}/>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by cities\r\n                            </Typography>\r\n                            <AutocompleteChip label=\"Select cities\"\r\n                                              options={cities}\r\n                                              setOptions={setCities}\r\n                                              selectedOptions={selectedCities}\r\n                                              setSelectedOptions={setSelectedCities}/>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <div style={{display: 'flex', flexDirection: 'row', alignItems:'center', justifyContent: 'center'}}>\r\n                        <Typography variant=\"h6\">\r\n                            Filter by dates\r\n                        </Typography>\r\n                        <Checkbox\r\n                            checked={datesVisible}\r\n                            onChange={event => setDatesVisible(event.target.checked)}\r\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                        />\r\n                    </div>\r\n\r\n                    { datesVisible && <>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Insertion dates\r\n                    </Typography>\r\n                    <Grid container justify=\"space-around\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                format=\"MM-dd-yyyy\"\r\n                                margin=\"normal\"\r\n                                id=\"insertionStart\"\r\n                                onChange={(date)=>filterDateChange(date,\"insertionStart\")}\r\n                                value={dates.insertionStart}\r\n                                label=\"Date start\"\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                format=\"MM-dd-yyyy\"\r\n                                margin=\"normal\"\r\n                                value={dates.insertionEnd}\r\n                                onChange={(date)=>filterDateChange(date,\"insertionEnd\")}\r\n                                id=\"insertionEnd\"\r\n                                label=\"Date end\"\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    </Grid>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Modification dates\r\n                    </Typography>\r\n                    <Grid container justify=\"space-around\">\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.modificationStart}\r\n                            onChange={(date)=>filterDateChange(date,\"modificationStart\")}\r\n                            id=\"modificationStart\"\r\n                            label=\"Date start\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.modificationEnd}\r\n                            onChange={(date)=>filterDateChange(date,\"modificationEnd\")}\r\n                            id=\"modificationEnd\"\r\n                            label=\"Date end\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                        </>}\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n        <Button\r\n            style={{marginTop: 8}}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => clearFilters()}>\r\n            Clear filters\r\n        </Button>\r\n    </Paper>\r\n}\r\n\r\nexport default withStyles(style)(FilterBlock)","import React, {useContext, useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport FilterBlock from \"../components/add_place_components/FilterBlock\";\r\nimport {PlacesFilterContext} from \"../contexts/PlacesFilterContext\";\r\nimport {AppStateStorageContext} from \"../contexts/AppStateStorageContext\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    autocomplete: {\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline: \"0\",\r\n        marginBottom: \"4px\"\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\r\n    {id: 'address', numeric: false, disablePadding: false, label: 'Address', isId: false},\r\n    {id: 'city', numeric: false, disablePadding: false, label: 'City', isId: false},\r\n    {id: 'country', numeric: false, disablePadding: false, label: 'Country', isId: false},\r\n    {id: 'dateModified', numeric: false, disablePadding: false, label: 'Date modified', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n];\r\n\r\nfunction Places(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const {classes} = props;\r\n\r\n\r\n    const {filterQuery} = useContext(PlacesFilterContext);\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    const {placesPageConfig, savePlacesTableInfo} = useContext(AppStateStorageContext)\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        if(!isLoading){\r\n            savePlacesTableInfo(placesPageConfig.keyword, 1);\r\n            requestAllPlaces(1, placesPageConfig.keyword);\r\n        }else{\r\n            requestAllPlaces()\r\n        }\r\n    }, [filterQuery]);\r\n\r\n\r\n    function getPlaceNameById(id) {\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i].placeId === id)\r\n                return data[i].name\r\n        }\r\n    }\r\n\r\n    function requestAllPlaces(p = placesPageConfig.page, keyword = placesPageConfig.keyword) {\r\n        console.log(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n        getAllPlaces(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n    }\r\n\r\n    function parseData(data) {\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        console.log(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updatePlaceCallback(id) {\r\n        history.push(\"/app/addplace/\" + id)\r\n    }\r\n\r\n    function removePlaceCallback(id) {\r\n        setIsLoading(true);\r\n        addAlertConfig(Strings.DIALOG_PLACE_DELETE_TITLE + \" - \" + getPlaceNameById(id), Strings.DIALOG_PLACE_DELETE_MESSAGE, [{\r\n            name: \"Remove\",\r\n            action: () => {\r\n                API.Places.removePlace(\"?p=\" + id).then(response => {\r\n                    let tmp = [];\r\n                    data.map(row => {\r\n                        if (row.placeId !== id) {\r\n                            tmp.push(row)\r\n                        }\r\n                    });\r\n                    setData(tmp);\r\n                    addConfig(true, Strings.SNACKBAR_PLACE_REMOVE_SUCCESS)\r\n                    setIsLoading(false)\r\n                }).catch(error => {\r\n                    setIsLoading(false);\r\n                    addConfig(false, Strings.SNACKBAR_ERROR)\r\n                })\r\n            }\r\n        }], () => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const changePageCallback = (p = 0, keyword = \"\") => {\r\n        if(!isLoading){\r\n            setIsLoading(true);\r\n            savePlacesTableInfo(keyword, p)\r\n            requestAllPlaces(p, keyword)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                <FilterBlock setOpen={true}/>\r\n\r\n                <TableComponent\r\n                    title={\"Places\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updatePlaceCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    initialKeyword={placesPageConfig.keyword}\r\n                    id={\"placeId\"}\r\n                    isLoading={isLoading}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={() => {\r\n                            history.push(\"/app/addplace\")\r\n                        }}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n            <Button>\r\n                Clear filters\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    function getAllPlaces(urlParams = \"\") {\r\n        API.Places.getAllPlacesAdmin(urlParams).then(response => {\r\n            setIsLoading(false);\r\n            parseData(response)\r\n        }).catch(error => {\r\n            setIsLoading(false);\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nPlaces.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Places);","export const priceRange = [\r\n    {\r\n        value: 0,\r\n        label: \"FREE\",\r\n    },\r\n    {\r\n        value: 25,\r\n        label: \"$\",\r\n    },\r\n    {\r\n        value: 50,\r\n        label: \"$$\",\r\n    },\r\n    {\r\n        value: 75,\r\n        label: \"$$$\",\r\n    },\r\n    {\r\n        value: 100,\r\n        label: \"$$$$\",\r\n    },\r\n    {\r\n        value: 125,\r\n        label: \"$$$$$\",\r\n    }\r\n];\r\n","export const averageTimeSpent = [\r\n    {\r\n        value: 5,\r\n        label: 5,\r\n    },\r\n    {\r\n        value: 10,\r\n        label: 10,\r\n    },\r\n    {\r\n        value: 15,\r\n        label: 15,\r\n    },\r\n    {\r\n        value: 30,\r\n        label: 30,\r\n    },\r\n    {\r\n        value: 45,\r\n        label: 45,\r\n    },\r\n    {\r\n        value: 60,\r\n        label: 60,\r\n    },\r\n    {\r\n        value: 90,\r\n        label: 90,\r\n    },\r\n    {\r\n        value: 120,\r\n        label: 120,\r\n    },\r\n    {\r\n        value: 150,\r\n        label: 150,\r\n    },\r\n    {\r\n        value: 180,\r\n        label: 180,\r\n    },\r\n    {\r\n        value: 210,\r\n        label: 210,\r\n    },\r\n    {\r\n        value: 240,\r\n        label: 240,\r\n    },\r\n    {\r\n        value: 270,\r\n        label: 270,\r\n    },\r\n];","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    }\r\n});\r\n\r\nfunction AddSourceDialog(props){\r\n\r\n    function validateInput(){\r\n        let error = false;\r\n        if(text.length <= 3 || url.length <=3)\r\n            error = true;\r\n        setError(error);\r\n        return error\r\n    }\r\n\r\n    let {classes, open, action, setDialogOpen} = props;\r\n    const [text, setText] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    return(\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Insert source\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                        <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}\r\n                                   label=\"Source name\" variant=\"outlined\" fullWidth />\r\n                        <TextField style={{marginTop:\"16px\"}} error={error} onChange = {(ev) => {setUrl(ev.target.value)}}\r\n                                   label=\"Source url\" variant=\"outlined\" fullWidth />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={()=>setDialogOpen(false)} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text, url);\r\n                        setDialogOpen(false)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\nexport default withStyles(styles)(AddSourceDialog)","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {priceRange} from \"../../helpers/priceRange\";\r\nimport {averageTimeSpent} from \"../../helpers/averageTimeSpent\"\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport API from \"../../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddSourceDialog from \"../AddSourceDialog\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\n\r\nconst styles = theme => ({});\r\nlet previousPrice = \"\";\r\n\r\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo, selectedSources, setSelectedSources}) {\r\n\r\n    const updatePlaceInfo = (event, newValue) => {\r\n        const {name, value, id} = event.target;\r\n        let place = Object.assign({}, placeInfo, {});\r\n        if (id !== \"\") {\r\n            place[id] = valuetext(newValue[0]);\r\n        } else {\r\n            place[name] = value\r\n        }\r\n        setPlaceInfo(place)\r\n    };\r\n\r\n    const getSources = () =>{\r\n        API.Source.getSources().then(response=>{\r\n            setAvailableSources(response)\r\n        }).catch(error=>{\r\n\r\n        })\r\n    };\r\n\r\n    const handleAddSource = (name, url) =>{\r\n        API.Source.addSource({name: name, url: url}).then(response=>{\r\n            setAvailableSources(\r\n                [\r\n                    ...availableSources,\r\n                    response\r\n                ]\r\n            );\r\n            setSelectedSources([\r\n                ...selectedSources,\r\n                response\r\n            ]);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getSources()\r\n    },[]);\r\n\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [availableSources, setAvailableSources] = useState([]);\r\n\r\n    function valuetext(value) {\r\n        let val = \"\";\r\n        priceRange.map(row => {\r\n            if (row.value === value)\r\n                val = row.label\r\n        });\r\n        return val\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\">\r\n            Basic place information\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Place name\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter the place name\"\r\n            fullWidth\r\n            value={placeInfo['name']}\r\n            name=\"name\"\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Place description\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Describe the place thoroughly\"\r\n            fullWidth\r\n            multiline\r\n            name=\"description\"\r\n            value={placeInfo['description']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            rows={15}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Phone number\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter phone number\"\r\n            fullWidth\r\n            name=\"phoneNumber\"\r\n            value={placeInfo['phoneNumber']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n      <FormControlLabel\r\n          style={{width: '100%', marginLeft: 5}}\r\n          control={\r\n            <Checkbox\r\n                name=\"checkedB\"\r\n                color=\"primary\"\r\n                checked={placeInfo['bookInAdvance'] || false}\r\n                onChange={(e) => setPlaceInfo(place => {\r\n                  return {\r\n                    ...place,\r\n                    bookInAdvance: !place.bookInAdvance || false\r\n                  }\r\n                }\r\n                )}\r\n            />\r\n          }\r\n          label={<span style={{fontSize: 16}}>Requires booking in advance</span>}\r\n      />\r\n        <TextField\r\n            label=\"Website\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter website\"\r\n            fullWidth\r\n            name=\"website\"\r\n            value={placeInfo['website']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n       <AutoCompleteChip\r\n                id=\"source\"\r\n                label=\"Select sources\"\r\n                options={availableSources}\r\n                setOptions={setAvailableSources}\r\n                setSelectedOptions={setSelectedSources}\r\n                selectedOptions={selectedSources}\r\n       />\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={() => setDialogOpen(true)}\r\n            startIcon={<AddIcon />}>\r\n            Add missing source\r\n        </Button>\r\n        <AddSourceDialog\r\n            action={handleAddSource}\r\n            open={dialogOpen}\r\n            setDialogOpen={setDialogOpen}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Typography>\r\n                Price\r\n            </Typography>\r\n            <Slider\r\n                id=\"price\"\r\n                onChange={updatePlaceInfo}\r\n                value={priceRange.map(row => {\r\n                    if (row.label === placeInfo['price']) return row.value\r\n                })}\r\n                style={{width: \"60%\", marginLeft: \"48px\"}}\r\n                defaultValue={0}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider-always\"\r\n                step={25}\r\n                max={125}\r\n                marks={priceRange}\r\n            />\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Typography>\r\n                Average time spent\r\n            </Typography>\r\n            <FormControl variant=\"outlined\" style={{width: \"60%\", marginLeft: \"48px\"}}>\r\n                <InputLabel>Minutes</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={parseInt(placeInfo['averageTimeSpent'], 10)}\r\n                    onChange={updatePlaceInfo}\r\n                    label=\"Average Time spent\"\r\n                    inputProps={{\r\n                        name: 'averageTimeSpent'\r\n                    }}\r\n                >\r\n                    <option value=\"-1\">None</option>\r\n                    {\r\n                        averageTimeSpent.map(row=>{\r\n                            return <option value={parseInt(row.value, 10)}> {row.value}</option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport React, {useMemo, useState} from \"react\"\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Delete from \"@material-ui/icons/Delete\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst imgWithClick = {cursor: \"pointer\"};\r\n\r\nconst Photo = ({index, onItemDelete, photo, margin, direction, top, left}) => {\r\n\r\n    const styles = {\r\n        imgContainer: {\r\n            margin: margin,\r\n            display: 'inline',\r\n            position: 'relative',\r\n            width: '300px',\r\n            height: '300px',\r\n        }\r\n    }\r\n    if (direction === \"column\") {\r\n        styles.imgContainer.position = \"absolute\";\r\n        styles.imgContainer.imgStyle.left = left;\r\n        styles.imgContainer.imgStyle.top = top;\r\n    }\r\n\r\n    const handleDelete = event => {\r\n        onItemDelete(photo);\r\n    }\r\n\r\n    return (\r\n\r\n        <Card style={styles.imgContainer}>\r\n            <CardMedia\r\n                style={{height: 0, paddingTop: '80%'}}\r\n                image={photo.src}\r\n            />\r\n            <CardActions disableSpacing>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon/>}\r\n                    onClick={(event) => {\r\n                        handleDelete(event)\r\n                    }}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n\r\n        </Card>\r\n    )\r\n\r\n};\r\n\r\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\r\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\r\nconst SortableGallery = SortableContainer(({items, onItemDelete}) => (\r\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>}/>\r\n));\r\n\r\nfunction ReorderablePhotos(props) {\r\n    let {setPhotos, photos, srcName, keyName} = props\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\r\n    };\r\n\r\n    function handleItemDelete(photo) {\r\n        setPhotos(photos.filter(item => {\r\n            return item[keyName].toString() !== photo.key\r\n        }))\r\n    }\r\n\r\n    let modifiedData = photos.map(item => {\r\n        return (\r\n            {\r\n                key: item[keyName].toString(),\r\n                src: item[srcName],\r\n                width: 1,\r\n                height: 1\r\n            })\r\n\r\n    })\r\n    return (\r\n        <div>\r\n            <SortableGallery pressDelay={200}\r\n                             disableAutoscroll={false} items={modifiedData} onSortEnd={onSortEnd}\r\n                             axis={\"xy\"} onItemDelete={handleItemDelete}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {DropzoneArea} from \"material-ui-dropzone\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../Networking/API\";\r\n\r\nconst styles = theme => ({\r\n    dropzoneArea: {\r\n        overflow: \"hidden\"\r\n    }\r\n});\r\n\r\nconst acceptedFileFormats = ['.jpeg', '.png', '.bmp', '.jpg']\r\n\r\nfunction AddImageDialog(props) {\r\n\r\n    const {onCloseCallback, open, onFinishCallback, classes} = props\r\n    const [loading, setIsLoading] = useState(false)\r\n    const [selectedFiles, setSelectedFiles] = useState([])\r\n\r\n    const submitCallback = () => {\r\n        setIsLoading(true)\r\n\r\n        Promise.all(selectedFiles.map(imagefile => {\r\n            let formData = new FormData()\r\n            formData.append(\"image\", imagefile)\r\n            return API.Photos.uploadPhoto(formData).then(response => response)\r\n        })).then(response => {\r\n            console.log(response)\r\n            onFinishCallback(response)\r\n        }).catch(error => {\r\n            onFinishCallback(null)\r\n        }).finally(() => {\r\n            setSelectedFiles([])\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleDrop = (files )=> {\r\n        setSelectedFiles(existingFiles => [...existingFiles, ...files])\r\n    }\r\n\r\n    const handleDelete = (file) => {\r\n        console.log(file.name)\r\n        setSelectedFiles(files => {return files.filter(existingFile => existingFile !== file)})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Photo upload\r\n                </DialogTitle>\r\n                {loading && <LinearProgress variant=\"query\"/>}\r\n                <DialogContent dividers>\r\n                    <DropzoneArea\r\n                        className={classes.dropzoneArea}\r\n                        acceptedFiles={acceptedFileFormats}\r\n                        maxFileSize={25000000}\r\n                        showAlerts={['error']}\r\n                        dropzoneProps={{disabled: loading}} filesLimit={5} onDrop={handleDrop}\r\n                    onDelete={handleDelete}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={submitCallback} color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddImageDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onFinishCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddImageDialog)\r\n","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ReorderablePhotos from \"../ReorderablePhotos\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddImageDialog from \"../AddImageDialog\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PhotosInfo({classes, setPhotos, photos}) {\r\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    function handleAddPhoto(files) {\r\n        setAddImageDialogOpen(false);\r\n        if(files == null){\r\n            addConfig(false, \"Something went wrong\")\r\n            return;\r\n        }\r\n        addConfig(true, \"Photos were uploaded successfully.\")\r\n\r\n        setPhotos([\r\n            ...photos,\r\n            ...files]\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h6\" >\r\n                Photos\r\n            </Typography>\r\n            <Card variant={\"outlined\"} className={classes.outline}>\r\n\r\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\r\n\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{width: '15%'}}\r\n                    className={classes.button}\r\n                    onClick={() => setAddImageDialogOpen(true)}\r\n                    startIcon={<AddIcon />}>\r\n                    Add photo\r\n                </Button>\r\n\r\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(files) => handleAddPhoto(files)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\r\n\r\n            </Card>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PhotosInfo)\r\n\r\n\r\n","import React from \"react\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nGeocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\r\n\r\n/**\r\n * Get country from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCountry = (addressArray) =>{\r\n    if(addressArray!==undefined){\r\n        let country = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\r\n                country = addressArray[ i ].long_name;\r\n                return country;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get country from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCity = ( addressArray ) => {\r\n    if(addressArray !== undefined){\r\n        let city = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'locality' === addressArray[ i ].types[0] ) {\r\n                city = addressArray[ i ].long_name;\r\n                return city;\r\n            }\r\n        }\r\n        return city;\r\n    }\r\n};\r\n\r\n/**\r\n * Get district from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCounty = ( addressArray ) => {\r\n        if(addressArray !== undefined){\r\n            let county = '';\r\n            for( let i = 0; i < addressArray.length; i++ ) {\r\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n                    county = addressArray[ i ].long_name;\r\n                    return county;\r\n                }\r\n            }\r\n            return county\r\n        }\r\n    };\r\n/**\r\n * Get district from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getMunicipality = ( addressArray ) => {\r\n    if(addressArray !== undefined){\r\n        let municipality = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\r\n                municipality = addressArray[ i ].long_name;\r\n                return municipality;\r\n            }\r\n        }\r\n        return municipality;\r\n    }\r\n};\r\n\r\n/**\r\n * Geocode location from address\r\n * @param address\r\n * @type string\r\n * @return location object\r\n */\r\nexport function geocodeFromAddress(address){\r\n    return Geocode.fromAddress( address ).then(\r\n        response => {\r\n            const { lat, lng } = response.results[0].geometry.location;\r\n            if(lat !== undefined && lng !== undefined){\r\n                return geocodeFromLatLng(lat, lng).then(loc=>{\r\n                    return loc\r\n                })\r\n            }else{\r\n                return null\r\n            }\r\n        },\r\n        err=>{\r\n            return null\r\n        }\r\n    )\r\n}\r\n\r\n/**\r\n * Geocode location from latitude and longitude\r\n * @param newLat\r\n * @param newLng\r\n * @return location object\r\n */\r\n\r\n\r\nexport function geocodeFromLatLng(newLat, newLng){\r\n    return Geocode.fromLatLng( newLat , newLng ).then(\r\n        response => {\r\n            const address = response.results[0].formatted_address\r\n            const addressArray =  response.results[0].address_components\r\n            if(addressArray!==undefined){\r\n                const city = getCity( addressArray ),\r\n                    country = getCountry( addressArray ),\r\n                    county = getCounty(addressArray),\r\n                    municipality = getMunicipality(addressArray);\r\n                let loc = {address: address, city: city, country: country, latitude: newLat, longitude: newLng, county: county, municipality: municipality};\r\n                return loc;\r\n            }\r\n            return null\r\n        },\r\n        error => {\r\n            return null\r\n        }\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\r\nimport PropTypes from \"prop-types\";\r\nimport {geocodeFromAddress, geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    autocomplete:{\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline:\"0\",\r\n        marginBottom: \"4px\"\r\n    },\r\n    root: {\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"8px\",\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction MapToolbar({classes, isLocked, locationCallback}) {\r\n\r\n    const [loading, setIsLoading] = useState(false);\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    /**\r\n     * Handle manual address and coordinates filling with key presses and return location\r\n     * @param event\r\n     * @return {boolean}\r\n     */\r\n\r\n    function errorParsingLocation(){\r\n        addAlertConfig(\"Error parsing location!\", \"Make sure that address you provided is correct!\",[])\r\n    }\r\n\r\n    function handleKeyPress(event){\r\n        const value = event.target.value;\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            setIsLoading(true);\r\n            if (/[a-zA-Z]+/.test(value)){\r\n                geocodeFromAddress(value).then(location=>{\r\n                    location!==null ? locationCallback(location) : errorParsingLocation();\r\n                    setIsLoading(false)\r\n                })\r\n            }else{\r\n                let position = value.split(/[ ,]+/);\r\n                if(position.length === 2){\r\n                    geocodeFromLatLng(parseFloat(position[0]), parseFloat(position[1])).then(location=>{\r\n                        location!==null ? locationCallback(location) : errorParsingLocation();\r\n                        setIsLoading(false)\r\n                    })\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Handle place selection from google maps autocomplete\r\n     * @param place\r\n     * @return {{country: (*|string), address: *, city: (*|string), latitude: *, longitude: *}|null}\r\n     */\r\n    const onPlaceSelected = (place) => {\r\n        setIsLoading(true);\r\n        const addressArray = place.address_components;\r\n        if (addressArray !== undefined) {\r\n            const lat = place.geometry.location.lat(),\r\n                lng = place.geometry.location.lng();\r\n            geocodeFromLatLng(lat, lng).then(location => {\r\n                location !== null ? locationCallback(location) : errorParsingLocation();\r\n                setIsLoading(false)\r\n            });\r\n        }\r\n        return null\r\n    };\r\n\r\n    /**\r\n     * Get current location\r\n     */\r\n    function getCurrentPosition(){\r\n        setIsLoading(true)\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n            let newLat = position.coords.latitude,\r\n                newLng = position.coords.longitude;\r\n            geocodeFromLatLng(newLat, newLng).then(location=>{\r\n                location!==null ? locationCallback(location) : errorParsingLocation();\r\n\r\n                setIsLoading(false)\r\n            });\r\n        }, error=>{\r\n            setIsLoading(false)\r\n            alert(error.message + \"\\n\" + JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    return <div className={classes.root}>\r\n        <div className={classes.content}>\r\n            <Autocomplete\r\n                onKeyPress={(event)=>{if(!isLocked)handleKeyPress(event)}}\r\n                onPlaceSelected={(place)=>{if(!isLocked)onPlaceSelected(place)} }\r\n                className={classes.autocomplete}\r\n                types={['(regions)']}\r\n            />\r\n            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\">\r\n                <MyLocationIcon\r\n                    onClick={()=>{if(!isLocked)getCurrentPosition()}}\r\n                    fontSize=\"large\"\r\n                    color=\"primary\"\r\n                />\r\n            </IconButton>\r\n        </div>\r\n        {loading ? <LinearProgress /> : null}\r\n\r\n    </div>\r\n\r\n\r\n}\r\n\r\nMapToolbar.propTypes = {\r\n    isLocked: PropTypes.bool.isRequired,\r\n    locationCallback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(MapToolbar)","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"8px\",\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction MapLock({classes, isLocked, setIsLocked}) {\r\n    return <div className={classes.root}>\r\n        <FormControlLabel\r\n            control={<Switch />}\r\n            label=\"Lock\"\r\n            checked={isLocked}\r\n            onChange={()=>{\r\n               setIsLocked(old=>!old)\r\n            }}\r\n        />\r\n        {isLocked ?\r\n            <Alert  severity=\"error\">Map is currently locked. If you want to do any changes unlock it.</Alert> : null}\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(MapLock)","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { MAP } from 'react-google-maps/lib/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CustomControlsManager(\r\n    { position = window.google.maps.ControlPosition.TOP_LEFT, children },\r\n    context\r\n) {\r\n    const map = context[MAP];\r\n\r\n    const controlDiv = document.createElement('div');\r\n\r\n    useEffect(() => {\r\n        const controls = map.controls[position];\r\n        const index = controls.length;\r\n        controls.push(controlDiv);\r\n        return () => {\r\n            controls.removeAt(index);\r\n        };\r\n    });\r\n\r\n    return createPortal(\r\n        <div style={{ marginBottom: 8, marginTop: 8 }}>{children}</div>,\r\n        controlDiv\r\n    );\r\n}\r\n\r\nCustomControlsManager.contextTypes = {\r\n    [MAP]: PropTypes.object,\r\n};","import React, {useEffect, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow} from \"react-google-maps\"\r\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport MapToolbar from \"./MapToolbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport MapLock from \"./MapLock\";\r\nimport CustomControlsManager from \"./CustomControlsManager\";\r\nimport ExploreIcon from '@material-ui/icons/Explore';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../../Networking/API\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from \"@material-ui/core/Card\";\r\nvar buildUrl = require('build-url');\r\nconst styles = theme => ({ largeIcon: {\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n    }});\r\n\r\nconst MapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        defaultZoom={15}\r\n        ref={props.refInstance}\r\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\r\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n        {props.children}\r\n\r\n    </GoogleMap>\r\n\r\n);\r\n\r\n\r\n\r\nfunction PlaceMap({classes, placeInfo,locationMarker,setLocationMarker,setParkingLocationMarker}) {\r\n\r\n    const [otherPlacesData, setOtherPlacesData] = useState([]);\r\n    const [infoWindows, setInfoWindows] = useState([]);\r\n\r\n    const [isLocked, setIsLocked] = useState(placeInfo.placeId !== \"\");\r\n    const refMap = useRef(null);\r\n\r\n    function mapToolbarCallback(location) {\r\n        setParkingLocationMarker(location);\r\n        setLocationMarker(location)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getClosestPlaces()\r\n    },[locationMarker]);\r\n\r\n    function getClosestPlaces(){\r\n        API.Places.getAllPlacesAdmin(buildUrl(null, {\r\n            queryParams: {\r\n                p: \"0\",\r\n                s: \"10\",\r\n                range: 3,\r\n                l: [locationMarker.latitude, locationMarker.longitude]\r\n            }\r\n        })).then(response=>{\r\n            setOtherPlacesData(response.list);\r\n        }).catch(error=>{\r\n\r\n        })\r\n    }\r\n\r\n    function onMarkerDragEnd(event) {\r\n        let newLat = event.latLng.lat(),\r\n            newLng = event.latLng.lng();\r\n        geocodeFromLatLng(newLat, newLng).then(location => {\r\n            setLocationMarker(location);\r\n            setParkingLocationMarker(location)\r\n        })\r\n    }\r\n    \r\n    return <React.Fragment>\r\n        <MapToolbar\r\n            isLocked={isLocked}\r\n            locationCallback={mapToolbarCallback}/>\r\n\r\n        <MapComponent\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            refInstance={refMap}\r\n            position={locationMarker}\r\n        >\r\n            {\r\n                otherPlacesData.map((location, i) =>{\r\n                    const latitude = parseFloat(location.latitude);\r\n                    const longitude = parseFloat(location.longitude);\r\n                        return placeInfo.placeId === \"\" ? <Marker\r\n                            key={location.placeId}\r\n                            zIndex={1}\r\n                            position={{lat: latitude, lng: longitude}}\r\n                            icon={{\r\n                                url: require('../../res/selectedTourIcon.svg'),\r\n                                scaledSize: new window.google.maps.Size(48, 48),\r\n                                origin: new window.google.maps.Point(0, 0)\r\n                            }}\r\n                            onClick={() => {\r\n                                if (!isLocked) {\r\n                                    let markers = Object.assign([], infoWindows);\r\n                                    markers[i] = true;\r\n                                    setInfoWindows(markers)\r\n                                }\r\n                            }}\r\n                        >\r\n                            {infoWindows[i] && (\r\n                                <InfoWindow onCloseClick={() => {\r\n                                    let markers = Object.assign([], infoWindows);\r\n                                    markers[i] = false;\r\n                                    setInfoWindows(markers)\r\n                                }\r\n                                }>\r\n\r\n                                    <Card style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                                        {location.photos.length > 0 ? <Avatar alt=\"Remy Sharp\" src={location.photos[0].url}\r\n                                                                          className={classes.largeIcon}/> : null}\r\n                                        <Typography variant=\"h6\">\r\n                                            {location.name}\r\n                                        </Typography>\r\n\r\n                                    </Card>\r\n                                </InfoWindow>\r\n                            )}\r\n                        </Marker> : null\r\n\r\n                })\r\n            }\r\n\r\n            <Marker\r\n                name={'Dolores park'}\r\n                visible={true}\r\n                draggable={!isLocked}\r\n                zIndex={2}\r\n                onDragEnd={e => onMarkerDragEnd(e)}\r\n                position={{lat: locationMarker.latitude, lng: locationMarker.longitude}}>\r\n            </Marker>\r\n\r\n            <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\r\n                <div>\r\n                    <IconButton aria-label=\"delete\" onClick={()=>{\r\n                        if(!isLocked){\r\n                            const mapCenter = refMap.current.getCenter();\r\n                            geocodeFromLatLng(mapCenter.lat(), mapCenter.lng()).then(location=>{\r\n                                setLocationMarker(location)\r\n                                setParkingLocationMarker(location)\r\n                            });\r\n                        }\r\n                    }}>\r\n                        <ExploreIcon fontSize={\"large\"}/>\r\n                    </IconButton>\r\n                </div>\r\n            </CustomControlsManager>\r\n        </MapComponent>\r\n\r\n\r\n\r\n        <MapLock\r\n            isLocked={isLocked}\r\n            setIsLocked={setIsLocked}\r\n        />\r\n    </React.Fragment>\r\n\r\n\r\n}\r\n\r\nPlaceMap.propTypes = {\r\n    locationMarker: PropTypes.object.isRequired,\r\n    setLocationMarker: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PlaceMap)","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PlaceMap from \"../maps/PlaceMap\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PlaceLocation({locationData, setLocationData, setParkingLocation, placeInfo}) {\r\n\r\n    function changeLocationData(event){\r\n        const {name, value} = event.target;\r\n        let data = Object.assign({}, locationData, {});\r\n        data[name] = value;\r\n\r\n        setParkingLocation(data);\r\n        setLocationData(data)\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select place location from map\r\n        </Typography>\r\n        <br/>\r\n        <PlaceMap\r\n            placeInfo={placeInfo}\r\n            locationMarker={locationData}\r\n            setParkingLocationMarker={setParkingLocation}\r\n            setLocationMarker={setLocationData}\r\n        />\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Address\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place address\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['address']}\r\n            name='address'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"City\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place city\"\r\n            fullWidth\r\n            value={locationData['city']}\r\n            name='city'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"County\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place county\"\r\n            fullWidth\r\n            value={locationData['county']}\r\n            name='county'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Municipality\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place municipality\"\r\n            fullWidth\r\n            value={locationData['municipality']}\r\n            name='municipality'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Country\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place country\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['country']}\r\n            name='country'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            rows={4}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceLocation)","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from \"react-google-maps\";\r\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport MapToolbar from \"./MapToolbar\";\r\nimport API from \"../../Networking/API\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CustomControlsManager from \"./CustomControlsManager\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExploreIcon from \"@material-ui/icons/Explore\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\n\r\nconst MapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        ref={props.refInstance}\r\n        defaultZoom={12}\r\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\r\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n        <Marker\r\n            onClick={()=>{if(!props.isLocked)props.setMainInfoWindow(true)}}\r\n            name={'Dolores park'}\r\n            visible={true}\r\n            draggable={!props.isLocked}\r\n            onDragEnd={e => onMarkerDragEnd(e, props.setPosition)}\r\n            position={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n            {props.mainInfoWindow && (\r\n                <InfoWindow onCloseClick={()=>{props.setMainInfoWindow(false)}}>\r\n                    <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                        {props.position.address}\r\n                        <Button\r\n                            onClick={()=>{\r\n                                let c = nearestParkingCount(props.position, props.parkingData);\r\n                                if(c>0){\r\n                                    props.addAlertConfig(\"Parkings nearby already exist!\", c+\" parking(-s) within 150 meter already exist(-s).\" +\r\n                                        \" Are you sure you don't want to use already existings parking locations?\",[{name:\"ADD NEW PARKING!\", action: ()=>{\r\n                                            props.addNewParking(props.position)\r\n                                        }}])\r\n                                }else{\r\n                                    props.addNewParking(props.position)\r\n                                }\r\n                            }}\r\n                            variant=\"text\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            startIcon={<AddIcon />}>\r\n                            Add new parking\r\n                        </Button>\r\n                    </div>\r\n                </InfoWindow>\r\n            )}\r\n        </Marker>\r\n\r\n        <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\r\n            <div>\r\n                <IconButton aria-label=\"delete\" onClick={()=>{\r\n                    if(!props.isLocked){\r\n                        let loc = Object.assign({},props.position, {});\r\n                        const mapCenter = props.refInstance.current.getCenter();\r\n                        loc.latitude = mapCenter.lat();\r\n                        loc.longitude = mapCenter.lng();\r\n                        props.setPosition(loc)\r\n                    }\r\n                }}>\r\n                    <ExploreIcon fontSize={\"large\"}/>\r\n                </IconButton>\r\n            </div>\r\n        </CustomControlsManager>\r\n\r\n        {\r\n            props.parkingData.map((location, i) =>{\r\n                const latitude = parseFloat(location.latitude);\r\n                const longitude = parseFloat(location.longitude);\r\n                console.log(parkingIsAttached(location, props.selectedParkingData));\r\n                return <Marker\r\n                    key={location.parkingId}\r\n                    position={{ lat: latitude, lng: longitude}}\r\n                    icon={{\r\n                        url: parkingIsAttached(location, props.selectedParkingData) ? require('../../res/selectedParking.svg') :\r\n                            require('../../res/availableParking.svg'),\r\n                        scaledSize: new window.google.maps.Size(20, 48),\r\n                        origin: new window.google.maps.Point(0, 0),\r\n                        anchor: new window.google.maps.Point(10, 35)\r\n                    }}\r\n                    onClick={()=>{\r\n                        if(!props.isLocked){\r\n                            let markers = Object.assign({},props.parkingInfoWindows, {});\r\n                            markers[i] = true;\r\n                            props.setParkingInfoWindows(markers)\r\n                        }\r\n                    }}\r\n                >\r\n                    {props.parkingInfoWindows[i] && (\r\n                        <InfoWindow onCloseClick={()=>{\r\n                                let markers = Object.assign({},props.parkingInfoWindows, {});\r\n                                markers[i] = false;\r\n                                props.setParkingInfoWindows(markers)\r\n                            }\r\n                        }>\r\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                                <Typography variant=\"h6\">\r\n                                    {location.address}\r\n                                </Typography>\r\n                                {parkingIsAttached(location, props.selectedParkingData) ? <div>\r\n                                        <Alert severity=\"success\">This parking location is already attached! See below in \"Selected parking locations\" section.</Alert>\r\n                                </div> :\r\n                                <Button\r\n                                    onClick={()=>{props.addExistingParking(location)}}\r\n                                    variant=\"text\"\r\n                                    color=\"secondary\"\r\n                                    size=\"large\"\r\n                                    startIcon={<AddIcon />}>\r\n                                    Add parking\r\n                                </Button>\r\n                                }\r\n                            </div>\r\n                        </InfoWindow>\r\n                    )}\r\n\r\n                </Marker>\r\n\r\n            })\r\n        }\r\n\r\n    </GoogleMap>\r\n);\r\n\r\nfunction parkingIsAttached(parking, selectedParkingData) {\r\n    for(let i = 0; i<selectedParkingData.length; i++){\r\n        if(selectedParkingData[i].address === parking.address)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction calcCrow(lat1, lon1, lat2, lon2)\r\n{\r\n    var R = 6371; // km\r\n    var dLat = toRad(lat2-lat1);\r\n    var dLon = toRad(lon2-lon1);\r\n    var lat1 = toRad(lat1);\r\n    var lat2 = toRad(lat2);\r\n\r\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    var d = R * c;\r\n    return d;\r\n}\r\nfunction toRad(Value) {return Value * Math.PI / 180}\r\n\r\nfunction nearestParkingCount(parking, parkingData){\r\n    let count = 0;\r\n    for(let i = 0; i<parkingData.length; i++){\r\n        let distance = calcCrow(parking.latitude, parking.longitude, parkingData[i].latitude, parkingData[i].longitude);\r\n        if(distance<=0.15){\r\n            count++;\r\n        }\r\n    }\r\n    return count\r\n}\r\n\r\n\r\nfunction onMarkerDragEnd(event, setLocationMarker) {\r\n    let newLat = event.latLng.lat(),\r\n        newLng = event.latLng.lng();\r\n    geocodeFromLatLng(newLat, newLng).then(location => {\r\n        setLocationMarker(location)\r\n    })\r\n}\r\n\r\nfunction ParkingMap({placeInfo,\r\n                        locationMarker,\r\n                        setLocationMarker,\r\n                        addNewParking,\r\n                        addExistingParking,\r\n                        selectedParkingData\r\n                    }) {\r\n\r\n    const [parkingData, setParkingData] = useState([]);\r\n    const [mainInfoWindow, setMainInfoWindow] = useState(false);\r\n    const [parkingInfoWindows, setParkingInfoWindows] = useState(false);\r\n    const [isLocked, setIsLocked] = useState(false);\r\n    const refMap = useRef(null);\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    function getClosestParking(){\r\n        API.Parking.getParkingByLocation(\"?lat=\"+locationMarker.latitude+\"&lng=\"+locationMarker.longitude).then(response=>{\r\n            setParkingData(response);\r\n        }).catch(error=>{\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getClosestParking()\r\n    },[locationMarker]);\r\n\r\n    function mapToolbarCallback(location) {\r\n        setMainInfoWindow(true);\r\n        setLocationMarker(location)\r\n    }\r\n\r\n    return <React.Fragment>\r\n        <MapToolbar\r\n            isLocked={isLocked}\r\n            locationCallback={mapToolbarCallback}/>\r\n\r\n        <MapComponent\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            mainInfoWindow={mainInfoWindow}\r\n            setMainInfoWindow={setMainInfoWindow}\r\n            addNewParking={addNewParking}\r\n            addExistingParking={addExistingParking}\r\n            parkingInfoWindows={parkingInfoWindows}\r\n            setParkingInfoWindows={setParkingInfoWindows}\r\n            parkingData={parkingData}\r\n            position={locationMarker}\r\n            setPosition={setLocationMarker}\r\n            isLocked={isLocked}\r\n            refInstance={refMap}\r\n            selectedParkingData={selectedParkingData}\r\n            addAlertConfig={addAlertConfig}\r\n        />\r\n\r\n    </React.Fragment>\r\n}\r\n\r\n\r\nParkingMap.propTypes = {\r\n    placeInfo: PropTypes.object.isRequired,\r\n    locationMarker: PropTypes.object.isRequired,\r\n    setLocationMarker: PropTypes.func.isRequired,\r\n    addNewParking: PropTypes.func.isRequired,\r\n    addExistingParking: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ParkingMap","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../../Networking/API\";\r\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport ParkingMap from \"../maps/ParkingMap\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction ParkingLocation({classes, locationData, setLocationData, allSelectedParkingData, setAllSelectedParkingData, placeInfo}) {\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\r\n    };\r\n\r\n    function addNewParking(markerData){\r\n        if(!parkingExists(markerData)){\r\n            API.Parking.insertNewParking([markerData]).then(response=>{\r\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\r\n                addConfig(true)\r\n            }).catch(error=>{\r\n                addConfig(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    function addExistingParking(location) {\r\n        if(!parkingExists(location)){\r\n            setAllSelectedParkingData(oldArray=> [...oldArray, location])\r\n        }\r\n    }\r\n\r\n    function parkingExists(markerData){\r\n        for(let i = 0; i<allSelectedParkingData.length; i++){\r\n            if(allSelectedParkingData[i].address === markerData.address){\r\n                addConfig(false, \"This parking is already attached!\");\r\n                return true;\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    const SortableItem = SortableElement(({value}) => (\r\n        <Paper className={classes.paper} elevation={3}>\r\n            <Typography>\r\n                {value.address}\r\n            </Typography>\r\n            <IconButton aria-label=\"delete\" className={classes.margin}\r\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </Paper>\r\n    ));\r\n\r\n\r\n    const SortableList = SortableContainer(({items}) => {\r\n        return (\r\n            <ul>\r\n                {items.map((value, index) => (\r\n                <SortableItem key={index} index={index} value={value} />\r\n                ))}\r\n            </ul>\r\n        );\r\n    });\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Add parking\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select parking\r\n        </Typography>\r\n\r\n        <ParkingMap\r\n            selectedParkingData={allSelectedParkingData}\r\n            placeInfo={placeInfo}\r\n            locationMarker={locationData}\r\n            setLocationMarker={setLocationData}\r\n            addNewParking={addNewParking}\r\n            addExistingParking={addExistingParking}\r\n        />\r\n\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Selected parking locations\r\n        </Typography>\r\n        {allSelectedParkingData.length === 0 ? <Alert severity=\"error\">\r\n            This place has no selected parking! To select parking for this place do the following:\r\n            <br/>\r\n            1. Select your current location or any other location\r\n            <br/>\r\n            2. Select already existing nearby parking locations and click add\r\n            <br/>\r\n            3. If none of the location is valid, click on the orange marker and add new parking\r\n            </Alert> :\r\n            <SortableList pressDelay={200} disableAutoscroll={false} items={allSelectedParkingData} onSortEnd={onSortEnd} />\r\n        }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(ParkingLocation)","import React, { useState, useCallback } from 'react';\r\n\r\nexport const EditDialogContext = React.createContext({\r\n    dialogConfig: null,\r\n    dialogOpen: null,\r\n    setDialogOpen: null,\r\n    addEditDialogConfig: () => {},\r\n    removeEditDialogConfig: () => {}\r\n});\r\n\r\nconst defaultOptions = {\r\n\r\n    /**\r\n     * The dialog's title.\r\n     */\r\n    title: \"Sample title\",\r\n\r\n    /**\r\n     * Object, that defines an error message for each error returned by validateInput function.\r\n     * Should follow this structure: {errorCode: \"message\", differentErrorCode: \"Message\"}\r\n     * Keys of this object are integers (that represent the error code)\r\n     */\r\n    errorMessages: {},\r\n\r\n    /**\r\n     * Explanation text for this dialog.\r\n     */\r\n    explanation: \"Sample explanation\",\r\n\r\n    /**\r\n     * A callback for when user presses cancel.\r\n     */\r\n    onCloseCallback: () => {},\r\n\r\n    /**\r\n     * A callback for when the user input passes error checks and done button is pressed\r\n     * @param input is the input text\r\n     */\r\n    onDoneCallback: (input) => {},\r\n\r\n    /**\r\n     * The label text to be displayed above textfield\r\n     */\r\n    textFieldLabel: \"Type here\",\r\n\r\n    /**\r\n     * Should return 0 if input is valid.\r\n     * If the input is not valid, it should return an error code.\r\n     * Any returned code, that is not 0 is considered to be an error.\r\n     * The error code returned may have a message in errorMessages prop.\r\n     * @param input\r\n     * @returns {number}\r\n     */\r\n    validateInput: (input) => 0,\r\n\r\n    /**\r\n     * The default text to be displayed in TextField\r\n     */\r\n    defaultText: \"\",\r\n\r\n    /**\r\n     * Additional payload\r\n     */\r\n    payload: {}\r\n\r\n\r\n}\r\n\r\nexport default function EditDialogProvider({ children }) {\r\n    const [dialogConfig, setDialogConfig] = useState(defaultOptions);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const contextValue = {\r\n        dialogConfig,\r\n        dialogOpen: dialogOpen,\r\n        setDialogOpen: setDialogOpen,\r\n        addEditDialogConfig: (options) => {\r\n            setDialogConfig({\r\n                ...defaultOptions,\r\n                ...options\r\n            });\r\n            setDialogOpen(true)\r\n        },\r\n        removeEditDialogConfig: () => setDialogConfig(null)\r\n    };\r\n\r\n    return (\r\n        <EditDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </EditDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {EditDialogContext} from \"./EditDialogContext\";\r\n\r\nexport default function UseEditDialogContext() {\r\n    const { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen } = useContext(EditDialogContext);\r\n    return { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen};\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport API from \"../../Networking/API\";\r\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\n\r\nconst styles = theme => ({\r\n  outline: {\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n    width: '100%'\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: \"8px\"\r\n  },\r\n  slider:{\r\n    flex: 1,\r\n    marginRight: 10\r\n  },\r\n  sliderContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  sliderInput: {\r\n\r\n  },\r\n});\r\n\r\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories, placeInfo, setPlaceInfo}) {\r\n\r\n  const [availableCategories, setAvailableCategories] = useState([]);\r\n  const [availableTags, setAvailableTags] = useState([]);\r\n\r\n  const grade = placeInfo.grade\r\n  const setGrade = (value) => {\r\n    setPlaceInfo(info => {\r\n      return {...info, grade: value}\r\n    })\r\n  }\r\n\r\n  const {addEditDialogConfig} = UseEditDialogContext();\r\n  const {addConfig} = UseSnackbarContext();\r\n\r\n  const updateTags = () => {\r\n    API.Tags.getAllTags().then(response => {\r\n      setAvailableTags(response);\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  };\r\n  const updateCategories = () => {\r\n    API.Categories.getAllCategories().then(response => {\r\n      setAvailableCategories(response)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateTags();\r\n    updateCategories();\r\n  }, []);\r\n\r\n\r\n  const promptAddTag = () => {\r\n    addEditDialogConfig({\r\n      title: \"Add tag\",\r\n      explanation: \"Type the tag name\",\r\n      onDoneCallback: (tagName) => {\r\n        API.Tags.addTag([{name: tagName}]).then(response => {\r\n          let newTag = {tagId: response[0], name: tagName}\r\n          setAvailableTags(\r\n              [\r\n                ...availableTags,\r\n                newTag\r\n              ]\r\n          );\r\n          setSelectedTags([\r\n            ...selectedTags,\r\n            newTag\r\n          ]);\r\n\r\n        }).catch(() => {\r\n          addConfig(false, \"Failed to add tag.\")\r\n        })\r\n      },\r\n      errorMessages: {\r\n        1: \"The tag name is too short\",\r\n        2: \"A tag with identical name already exists. You should choose the existing tag instead\"\r\n      },\r\n      validateInput: (input) => {\r\n        if (input.length < 0) {\r\n          return 1 //Input too short\r\n        } else if (availableTags.filter(item => item.name === input).length !== 0) {\r\n          return 2 //Identical tag already exists\r\n        }\r\n        return 0\r\n      },\r\n      textFieldLabel: \"Warm, quick, cozy...\"\r\n    })\r\n  }\r\n\r\n  const promptAddCategory = () => {\r\n    addEditDialogConfig({\r\n      title: \"Add category\",\r\n      explanation: \"Type the category name\",\r\n      onDoneCallback: (categoryName) => {\r\n        API.Categories.addCategory([{name: categoryName}]).then(response => {\r\n          let newCat = {categoryId: response[0], name: categoryName};\r\n          setAvailableCategories(\r\n              [\r\n                ...availableCategories,\r\n                newCat\r\n              ]\r\n          );\r\n          setSelectedCategories([\r\n            ...selectedCategories,\r\n            newCat\r\n          ]);\r\n        }).catch(error => {\r\n          addConfig(false, \"Failed to add category.\")\r\n        })\r\n      },\r\n      errorMessages: {\r\n        1: \"The category name is too short\",\r\n        2: \"A category with identical name already exists. You should choose the existing category instead\"\r\n      },\r\n      validateInput: (input) => {\r\n        if (input.length < 0) {\r\n          return 1 //Input too short\r\n        } else if (availableCategories.filter(item => item.name === input).length !== 0) {\r\n          return 2 //Identical category already exists\r\n        }\r\n        return 0\r\n      },\r\n      textFieldLabel: \"Restaurant, hotel, hiking...\"\r\n    })\r\n  }\r\n\r\n  return <div>\r\n    <Typography variant=\"h6\">\r\n      Place discovery settings\r\n    </Typography>\r\n    <br/>\r\n    <Typography variant=\"subtitle1\">\r\n      Select tags\r\n    </Typography>\r\n    <AutocompleteChip label=\"Select tags\"\r\n                      id=\"tagId\"\r\n                      options={availableTags}\r\n                      setOptions={setAvailableTags}\r\n                      selectedOptions={selectedTags}\r\n                      setSelectedOptions={setSelectedTags}/>\r\n\r\n    <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        onClick={promptAddTag}\r\n        startIcon={<AddIcon/>}>\r\n      Add missing tag\r\n    </Button>\r\n\r\n    <br/>\r\n    <br/>\r\n    <Typography variant=\"subtitle1\">\r\n      Select categories\r\n    </Typography>\r\n    <AutocompleteChip label=\"Select categories\"\r\n                      id=\"categoryId\"\r\n                      options={availableCategories}\r\n                      setOptions={setAvailableCategories}\r\n                      selectedOptions={selectedCategories}\r\n                      setSelectedOptions={setSelectedCategories}/>\r\n    <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        onClick={promptAddCategory}\r\n        startIcon={<AddIcon/>}>\r\n      Add missing category\r\n    </Button>\r\n\r\n    <br/>\r\n    <Typography variant=\"subtitle1\">\r\n      Grade this place\r\n    </Typography>\r\n\r\n    <div className={classes.sliderContainer}>\r\n      <Slider\r\n          className={classes.slider}\r\n          value={grade}\r\n          onChange={(event, value) => {\r\n            setGrade(value)\r\n          }\r\n          }\r\n          max={100}\r\n          min={0}\r\n          aria-labelledby=\"input-slider\"\r\n      />\r\n\r\n      <Input\r\n          className={classes.sliderInput}\r\n          value={grade}\r\n          margin=\"dense\"\r\n          onChange={(event) => {\r\n            setGrade(event.target.value === '' ? '' : Number(event.target.value));\r\n          }}\r\n          onBlur={() => {\r\n            if (grade < 0) {\r\n              setGrade(0);\r\n            } else if (grade > 100) {\r\n              setGrade(100);\r\n            }\r\n          }}\r\n          inputProps={{\r\n            step: 1,\r\n            min: 0,\r\n            max: 100,\r\n            type: 'number',\r\n            'aria-labelledby': 'input-slider',\r\n          }}\r\n      />\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceDiscovery)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        width: \"20%\",\r\n        padding: \"2px\",\r\n        marginRight: \"16px\"\r\n    },\r\n\r\n});\r\nexport default function ReviewCard({review}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <div style={{display: \"flex\"}} >\r\n                    <Avatar alt=\"Cindy Baker\" src={!!review.photoUrl ? review.photoUrl : \"/broken-image.jpg\"} />\r\n                    <div style={{display: \"flex\", flexDirection: \"column\", marginLeft:\"8px\"}}>\r\n                        <Typography title=\"subtitle1\">\r\n                            {review.name} {review.surname}\r\n                        </Typography>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <Rating size=\"small\" name=\"read-only\" value={review.rating} readOnly />\r\n                            <Typography title=\"subtitle1\">\r\n                                {\"+\" + review.upvotes}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                    {moment(review.timeAdded).format('LL')}\r\n                </Typography>\r\n                <div style={{marginTop: \"16px\"}}>\r\n                    {review.title}\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                        {review.review}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ReviewCard from \"../ReviewCard\";\r\nimport API from \"../../Networking/API\";\r\nimport debounce from \"lodash/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nconst styles = theme => ({\r\n    reviewsInfo:{\r\n        display: \"flex\",\r\n    },\r\n    reviews:{\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        margin: theme.spacing(2),\r\n        overflowX: \"scroll\"\r\n    },\r\n    sortingButtons: {\r\n        padding: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction Reviews({classes, placeInfo}) {\r\n\r\n    const [reviews, setReviews] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    const [filterBy, setFilterBy] = useState('mostRated');\r\n\r\n    function getReviewsForPlace(urlParams = \"?p=\"+placeInfo.placeId) {\r\n        API.Reviews.getPlaceReviews(urlParams).then(response=>{\r\n            setReviews(old=>[...old, ...response.list]);\r\n            setIsLoading(false)\r\n        }).catch(error=>{\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    //Get ordered by new filter\r\n    useEffect(()=>{\r\n            getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=1&o=\"+filterBy)\r\n    },[filterBy]);\r\n\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollWidth - e.target.scrollLeft - scrollOffset)  <= e.target.clientWidth;\r\n        if (bottom && !isLoading && reviews.length>0 && reviews.length<placeInfo.totalReviews) {\r\n            setIsLoading(true);\r\n            setPage(old=>{\r\n                getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=\"+(old+1)+\"&o=\"+filterBy);\r\n                return old+1\r\n            });\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    function changeSorting(e){\r\n        const {name, value} = e.target;\r\n        setFilterBy(value);\r\n        setReviews([]);\r\n        setPage(1);\r\n        handleClose()\r\n    }\r\n\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Reviews\r\n            <br/>\r\n            {\r\n               reviews.length > 0 ?\r\n                   <React.Fragment>\r\n                       <div style={{display:\"flex\", justifyContent: \"space-between\"}}>\r\n                           <div className={classes.reviewsInfo}>\r\n                               <Rating name=\"read-only\" value={placeInfo.overallStarRating} precision={0.2} readOnly />\r\n                               <Typography style={{marginLeft:\"8px\"}} variant=\"subtitle1\">\r\n                                   {placeInfo.totalReviews} reviews\r\n                               </Typography>\r\n                           </div>\r\n                           <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                               <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                                   <FilterListIcon />\r\n                               </IconButton>\r\n                           </Tooltip>\r\n                           <Popover\r\n                               id={id}\r\n                               open={open}\r\n                               anchorEl={anchorEl}\r\n                               onClose={handleClose}\r\n                               anchorOrigin={{\r\n                                   vertical: 'bottom',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                               transformOrigin={{\r\n                                   vertical: 'top',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                           >\r\n                               <RadioGroup className={classes.sortingButtons} aria-label=\"gender\" value={filterBy} name=\"gender1\"  onChange={changeSorting}>\r\n                                   <FormControlLabel value=\"mostRated\" control={<Radio />} label=\"Most rated\" />\r\n                                   <FormControlLabel value=\"newest\" control={<Radio />} label=\"Newest\" />\r\n                               </RadioGroup>\r\n                           </Popover>\r\n                       </div>\r\n\r\n                       <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                           <Typography>\r\n                               Showing: {reviews.length} out of {placeInfo.totalReviews}\r\n                           </Typography>\r\n                           <Typography>\r\n                               Sorting by: {filterBy}\r\n                           </Typography>\r\n                       </div>\r\n                       <div className={classes.reviews} onScroll={e=>handleScroll(e)}>\r\n                           {reviews.map(row=>{\r\n                               return <ReviewCard review={row}/>\r\n                           })}\r\n                       </div>\r\n                   </React.Fragment> : <Typography> No reviews for this place</Typography>\r\n            }\r\n\r\n        </Typography>\r\n        <br/>\r\n        {isLoading ? <LinearProgress/> : null }\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(Reviews)","import React, { useState } from 'react';\r\n\r\nexport const AppBarTitleContext = React.createContext({\r\n    title: \"\",\r\n    setTitle: () => {},\r\n});\r\n\r\nexport default function AppBarTitleProvider({ children }) {\r\n    const [title, setTitle] = useState(\"Home\");\r\n\r\n    const contextValue = {\r\n        title,\r\n        setTitle: (title) => setTitle(title)\r\n    };\r\n\r\n    return (\r\n        <AppBarTitleContext.Provider value={contextValue}>\r\n            {children}\r\n        </AppBarTitleContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AppBarTitleContext} from \"./AppBarTitleContext\";\r\n\r\nexport default function UseAppBarTitleContext() {\r\n    const { title, setTitle } = useContext(AppBarTitleContext);\r\n    return { title, setTitle };\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport API from \"../../Networking/API\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n\r\n});\r\n\r\nfunction AddRecommendationDialog({classes, open, setOpen, addCallback}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [data, setData] = useState({name: \"\", subtitle: \"\", description: \"\", type: \"1\"});\r\n    const [error, setError] = useState({name: false, subtitle: false, description: false});\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let recData = { ...data }\r\n        recData[name] = value\r\n        setData(recData)\r\n    };\r\n\r\n    function addRecommendation(){\r\n        if(checkErrors()){\r\n            return\r\n        }\r\n        setLoading(true)\r\n        addAlertConfig(\"Add new recommendation\", \"Are you sure you want to add this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Recommendation.createRecommendation(data).then(id=>{\r\n                    let insertedData = { ...data }\r\n                    insertedData.id = id\r\n                    addConfig(true, \"Recommendation added successfully\")\r\n                    addCallback(insertedData)\r\n                    setOpen(false)\r\n                }).catch((error)=>{\r\n                    console.log('recommendation error', error)\r\n                    addConfig(false, \"Something went wrong. Please try again.\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    function checkErrors(){\r\n        let errors = Object.assign({}, error)\r\n        let hasErrors = false;\r\n        for (let key in data) {\r\n            errors[key] = data[key] === \"\" || data[key] === -1;\r\n            if(errors[key] === true){\r\n                hasErrors = true\r\n            }\r\n        }\r\n        setError(errors);\r\n        return hasErrors\r\n    }\r\n\r\n    function recommendationTypeChanged(event) {\r\n        let recData = { ...data }\r\n        recData.type = event.target.value\r\n\r\n        setData(recData)\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add new recommendation</DialogTitle>\r\n            <DialogContent>\r\n                <div className={classes.root}>\r\n                    <TextField id=\"outlined-basic\"\r\n                               error={error.title}\r\n                               required\r\n                               label=\"Title\"\r\n                               name=\"name\"\r\n                               value={data['name']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               error={error.subtitle}\r\n                               label=\"Subtitle\"\r\n                               name=\"subtitle\"\r\n                               value={data['subtitle']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               error={error.description}\r\n                               label=\"Description\"\r\n                               name=\"description\"\r\n                               value={data['description']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <FormControl component=\"fieldset\" style={{marginTop: 32}}>\r\n                        <FormLabel component=\"legend\">Recommendation type</FormLabel>\r\n                        <RadioGroup aria-label=\"rec\" name=\"rec1\" value={data.type} onChange={recommendationTypeChanged}>\r\n                            <FormControlLabel value=\"1\" control={<Radio />} label=\"Places recommendation\" />\r\n                            <FormControlLabel value=\"2\" control={<Radio />} label=\"Tours recommendation\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </div>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        addRecommendation()\r\n                    }}\r\n                >\r\n                    Create recommendation\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(AddRecommendationDialog)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport API from \"../../Networking/API\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport history from \"../../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddRecommendationDialog from \"./AddRecommendationDialog\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport debounce from \"lodash/debounce\";\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start'\r\n    }\r\n});\r\n\r\nfunction RecommendationListDialog({classes, open, setOpen, objectId, type}){\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [recommendations, setRecommendations] = useState([]);\r\n    const [pagingData, setPagingData] = useState({pageNum: 1})\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [showAddNewRecommendation, setShowAddNewRecommendation] = useState(false)\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    function getRecommendations(page, keywordChange = false) {\r\n        API.Recommendation.getAllRecommendations(\"?p=\"+page+\"&keyword=\"+keyword+\"&type=\"+type).then(response=>{\r\n            if(keywordChange){\r\n                setRecommendations(response.list)\r\n            }else{\r\n                setRecommendations(old=>[...old, ...response.list])\r\n            }\r\n            delete response.list\r\n            setPagingData(response)\r\n        }).catch().finally(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        console.log(\"Handle scroll\")\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollHeight - e.target.scrollTop - scrollOffset)  <= e.target.clientHeight;\r\n        if (bottom && !loading && recommendations.length>0 && pagingData.pageNum<pagingData.pages) {\r\n            setLoading(true);\r\n            console.log(\"Requesting new page\")\r\n            getRecommendations(pagingData.pageNum+1);\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Keyword changed\")\r\n        getRecommendations(1, true);\r\n    }, [keyword])\r\n\r\n\r\n    function addPlaceToRecommendation(rec) {\r\n      API.Recommendation.addObjectToRecommendation({id: objectId, recommendationId: rec.id}).then(()=>{\r\n              addConfig(true, \"Added object to recommendation successfully!\")\r\n      }).catch(()=>{\r\n              addConfig(true, \"Failed to add!\")\r\n          }\r\n      ).finally(()=>{\r\n          setOpen(false)\r\n      })\r\n    }\r\n\r\n    function addNewRecommendationCallback(recommendation){\r\n        let recData = [ ...recommendations ]\r\n        recData.unshift(recommendation)\r\n\r\n        setRecommendations(recData)\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"sm\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add to recommendation</DialogTitle>\r\n            <DialogContent>\r\n                <div className={classes.root}>\r\n                    <div className={classes.root} >\r\n                        <TextField id=\"standard-search\" label=\"Search field\" value={keyword} type=\"search\" onChange={e=>{\r\n                            setKeyword(e.target.value)\r\n                        }} />\r\n                        {recommendations.length > 0 ?\r\n                            <React.Fragment>\r\n                                <List component=\"nav\" style={{ overflowY: \"scroll\", width: '100%', maxHeight: 400}} onScroll={handleScroll} aria-label=\"main mailbox folders\">\r\n                                    {recommendations.map(row=>{\r\n                                        return <ListItem key={row.name} style={{width: '100%'}} button onClick={()=>{addPlaceToRecommendation(row)}}>\r\n                                            <ListItemIcon>\r\n                                                <CheckBoxOutlineBlankIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={row.name} />\r\n                                        </ListItem>\r\n                                    })}\r\n\r\n                                </List>\r\n                            </React.Fragment>\r\n                            :\r\n\r\n                            <Alert severity=\"info\">Recommendations list is empty. You can add new recommendation below.</Alert>\r\n                        }\r\n\r\n\r\n                    </div>\r\n                    <Divider style={{width: '100%'}} />\r\n                    <Button\r\n                        onClick={()=>setShowAddNewRecommendation(true)}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        startIcon={<AddIcon/>}>\r\n                        Create new recommendation\r\n                    </Button>\r\n                </div>\r\n            <AddRecommendationDialog\r\n                open={showAddNewRecommendation}\r\n                setOpen={setShowAddNewRecommendation}\r\n                addCallback={addNewRecommendationCallback}\r\n            />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RecommendationListDialog)\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {Fragment, useState} from \"react\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n\r\n    },\r\n    media: {\r\n        height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n})\r\n\r\nfunction CategoriesDisplay({categories}){\r\n    return(\r\n        categories != null &&\r\n        <Box component=\"ul\"  style={{\r\n            display: 'flex',\r\n            justifyContent: 'left',\r\n            flexWrap: 'wrap',\r\n            listStyle: 'none',\r\n            padding: '0px'\r\n        }}>\r\n            {categories.map((data, index) => {\r\n                return (\r\n                    <li key={index}>\r\n                        <Chip\r\n                            variant=\"outlined\"\r\n                            style={{margin: \"5px\"}}\r\n                            label={data.name}\r\n                        />\r\n                    </li>\r\n\r\n                );\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction SubheaderDisplay({city, address, priceRange, rating}){\r\n    return(\r\n        <div>\r\n            {rating != null &&\r\n            <Fragment><Rating\r\n                readOnly={true}\r\n                value={rating}\r\n            /><br/></Fragment>}\r\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ApiPlaceCard({classes, placeData, renderActionArea}){\r\n\r\n    function truncateText(text){\r\n        if(text == null)\r\n            return \"\"\r\n        if(text.length > 500){\r\n            return text.substring(0, 500) + \"...\";\r\n        }else{\r\n            return text\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                action={\r\n                    renderActionArea != null && renderActionArea()\r\n                }\r\n                title={placeData.name}\r\n                subheader={<SubheaderDisplay  city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\r\n\r\n            />\r\n            {placeData.photos != null && placeData.photos.length > 0 &&\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={placeData.photos[0].url}\r\n            />}\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {truncateText(placeData.description)}\r\n                </Typography>\r\n\r\n                <CategoriesDisplay categories={placeData.categories}/>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n                {placeData.website}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nApiPlaceCard.propTypes = {\r\n    placeData: PropTypes.object.isRequired,\r\n    renderActionArea: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(ApiPlaceCard)","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\n\r\nconst styles = theme => ({\r\n    paperContent: {\r\n        marginTop: theme.spacing(4),\r\n        width: \"100%\",\r\n        padding: theme.spacing(2)\r\n    },\r\n});\r\n\r\nexport const RecommendationType = {\r\n    place: 1,\r\n    tour: 2\r\n}\r\n\r\nfunction Recommendation({classes, recommendation, onEditCallback}) {\r\n\r\n    return <Paper elevation = {4} className={classes.paperContent}>\r\n            <Chip\r\n                label={recommendation.type === 1 ? \"Place recommendation\" : \"Tour recommendation\"} />\r\n            <Typography variant=\"h6\">\r\n                {recommendation.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n                {recommendation.subtitle}\r\n            </Typography>\r\n\r\n            <div style={{display: \"flex\", flexDirection: 'row', overflowX: 'auto', width: '100%'}}>\r\n                <div style={{display:\"flex\", flexDirection: \"row\"}}>\r\n                    {recommendation.objects.length > 0 ?\r\n\r\n                        recommendation.objects.map((place, index)=>{\r\n                            delete place.description\r\n\r\n                            return <div style={{width: 300, padding: 16}}>\r\n                                <ApiPlaceCard placeData={place}/>\r\n                            </div>\r\n                        }) :\r\n\r\n                        <Alert severity=\"info\">This recommendation does not have any objects attached. You can attach\r\n                            Places or Tours by browsing in Places and Tours tables\r\n                        </Alert>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n        <Fragment>\r\n            <Button\r\n                style={{marginTop: 16}}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => onEditCallback()}\r\n                className={classes.button}>\r\n                Edit\r\n            </Button>\r\n        </Fragment>\r\n\r\n        </Paper>\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Recommendation)","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {DatePicker, TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport shortid from 'shortid';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n  },\r\n  intervalContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    margin: 0,\r\n    flexWrap: 'wrap',\r\n  },\r\n  pickerStyle: {\r\n    width: 50,\r\n    marginLeft: 3,\r\n    margin: 0,\r\n  }\r\n});\r\n\r\nfunction WorkingDayIntervals({classes, scheduleData, setScheduleData, scheduleOpenIndex, variantId, enableLastAccommodation}) {\r\n\r\n  const currentSchedule = scheduleData[scheduleOpenIndex];\r\n  const currentVariant = currentSchedule.variants.find(x => x.elementId === variantId)\r\n\r\n  const toggleSplitSchedule = () => {\r\n    if (currentVariant.shifts.length > 1)\r\n      setScheduleData(oldData => {\r\n        const newData = [...oldData];\r\n        const shifts = newData[scheduleOpenIndex].variants.find(variant => variantId === variant.elementId).shifts\r\n        while (shifts.length > 1)\r\n          shifts.pop()\r\n        return newData;\r\n      })\r\n    else\r\n      setScheduleData(oldData => {\r\n        const newData = [...oldData];\r\n        const shiftToPush = {\r\n          openTime: \"08:00\",\r\n          closeTime: \"18:00\",\r\n          elementId: shortid.generate()\r\n        }\r\n        if(enableLastAccommodation)\r\n          shiftToPush['lastAccommodation'] = \"18:00\"\r\n        newData[scheduleOpenIndex]\r\n            .variants\r\n            .find(variant => variantId === variant.elementId)\r\n            .shifts\r\n            .push(shiftToPush)\r\n        return newData;\r\n      })\r\n  }\r\n\r\n  const changeOpenTime = (shiftId, time) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      currentSchedule\r\n          .variants\r\n          .find(x => x.elementId === variantId)\r\n          .shifts\r\n          .find(shift => shift.elementId === shiftId)\r\n          .openTime = moment(time).format('HH:mm') ;\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const changeCloseTime = (shiftId, time) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      currentSchedule\r\n          .variants\r\n          .find(x => x.elementId === variantId)\r\n          .shifts\r\n          .find(shift => shift.elementId === shiftId)\r\n          .closeTime = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n  const changeLastAccommodationTime = (shiftId, time) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      currentSchedule\r\n          .variants\r\n          .find(x => x.elementId === variantId)\r\n          .shifts\r\n          .find(shift => shift.elementId === shiftId)\r\n          .lastAccommodation = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const shifts = currentVariant.shifts.map((shift, index) => {\r\n    const lastShift = index !== currentVariant.shifts.length - 1\r\n    const firstShift = index === 0\r\n    return (\r\n        <>\r\n          <div className={classes.intervalContainer}>\r\n\r\n            <Typography variant=\"h7\">\r\n              {firstShift ? 'O' : 'o'}pens at\r\n            </Typography>\r\n            <TimePicker\r\n                margin=\"normal\"\r\n                ampm={false}\r\n                className={classes.pickerStyle}\r\n                format=\"HH:mm\"\r\n                value={moment(shift.openTime, \"HH:mm\")}\r\n                onChange={(date) => changeOpenTime(shift.elementId, date)}\r\n            />\r\n            <Typography variant=\"h7\">\r\n              and closes at\r\n            </Typography>\r\n            <TimePicker\r\n                margin=\"normal\"\r\n                ampm={false}\r\n                className={classes.pickerStyle}\r\n                format=\"HH:mm\"\r\n                value={moment(shift.closeTime, \"HH:mm\")}\r\n                onChange={(date) => changeCloseTime(shift.elementId, date)}\r\n            />\r\n            {enableLastAccommodation &&\r\n            <>\r\n              <Typography variant=\"h7\">\r\n                last accommodation at\r\n              </Typography>\r\n              <TimePicker\r\n                  margin=\"normal\"\r\n                  ampm={false}\r\n                  className={classes.pickerStyle}\r\n                  format=\"HH:mm\"\r\n                  value={moment(shift.lastAccommodation, \"HH:mm\")}\r\n                  onChange={(date) => changeLastAccommodationTime(shift.elementId, date)}\r\n              />\r\n            </>\r\n            }\r\n\r\n          </div>\r\n          {lastShift && <Typography variant=\"h7\" style={{marginRight: 5}}>\r\n            THEN\r\n          </Typography>}\r\n        </>)\r\n  })\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        {shifts}\r\n        <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                  name=\"checkedB\"\r\n                  color=\"primary\"\r\n                  checked={currentVariant.shifts.length > 1}\r\n                  onChange={toggleSplitSchedule}\r\n              />\r\n            }\r\n            label=\"Split schedule\"\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(WorkingDayIntervals)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport WorkingShift from \"./WorkingShift\";\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    border: '1px dashed black',\r\n    padding: 8\r\n  },\r\n  weekdayPickerContainer: {\r\n    display: 'flex',\r\n    width: '100%'\r\n  },\r\n  weekdayButton: {\r\n    flex: 1,\r\n    margin: 5,\r\n    padding: 0,\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n  },\r\n  removeButtonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  }\r\n});\r\n\r\nexport const weekdays = [\r\n  {\r\n    id: 0,\r\n    name: \"Mon\",\r\n    fullName: \"Monday\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Tue\",\r\n    fullName: \"Tuesday\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Wed\",\r\n    fullName: \"Wednesday\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Thu\",\r\n    fullName: \"Thursday\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Fri\",\r\n    fullName: \"Friday\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Sat\",\r\n    fullName: \"Saturday\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Sun\",\r\n    fullName: \"Sunday\",\r\n  }\r\n]\r\n\r\n\r\nfunction WorkingHoursVariant({classes, enableLastAccommodation, scheduleData, setScheduleData, scheduleOpenIndex, variantId}) {\r\n\r\n  const currentSchedule = scheduleData[scheduleOpenIndex];\r\n  const currentVariant = currentSchedule.variants.filter(x => x.elementId === variantId)[0]\r\n\r\n  const toggleWeekday = (weekDayIndex) => {\r\n    setScheduleData(scheduleData => {\r\n      const newScheduleData = [...scheduleData];\r\n      let days = newScheduleData[scheduleOpenIndex].variants.find(item => item.elementId === variantId).days\r\n      if (days.includes(weekDayIndex))\r\n        days.splice(days.indexOf(weekDayIndex), 1);\r\n      else\r\n        days.push(weekDayIndex);\r\n      return newScheduleData\r\n    })\r\n  }\r\n\r\n  const weekdayReserved = (weekDayIndex) => {\r\n    return currentSchedule.variants.some(variant => variant.days.includes(weekDayIndex));\r\n  }\r\n\r\n  const weekdayPicker = (\r\n      <div className={classes.weekdayPickerContainer}>\r\n        {weekdays.map((item) => {\r\n          const dayActive = currentVariant.days.some(day => day === item.id);\r\n          return(\r\n              <Button onClick={() => toggleWeekday(item.id)}\r\n                      className={classes.weekdayButton}\r\n                      variant={\"contained\"}\r\n                      color={dayActive ? \"primary\" : \"secondary\"}\r\n                      disabled={!dayActive && weekdayReserved(item.id)}>\r\n                {item.name}\r\n              </Button>\r\n          )}\r\n        )\r\n        }\r\n      </div>\r\n  )\r\n\r\n  const handleDeleteVariant = () => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData];\r\n      const variants = newData[scheduleOpenIndex].variants;\r\n      variants.splice(variants.findIndex(variant => variant.elementId === variantId), 1)\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        {/*<Divider light/>*/}\r\n\r\n        {weekdayPicker}\r\n        <WorkingShift\r\n            enableLastAccommodation={enableLastAccommodation}\r\n            scheduleData={scheduleData}\r\n            scheduleOpenIndex={scheduleOpenIndex}\r\n            setScheduleData={setScheduleData}\r\n            variantId={variantId}/>\r\n        <div className={classes.removeButtonContainer}>\r\n          <Button\r\n              variant=\"text\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleDeleteVariant}\r\n              startIcon={<DeleteOutlineIcon/>}\r\n              style={{display: 'absolute'}}>Remove this variant</Button>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(WorkingHoursVariant)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport shortid from 'shortid';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    border: '1px dashed black',\r\n    padding: 8\r\n  },\r\n  weekdayPickerContainer: {\r\n    display: 'flex',\r\n    width: '100%',\r\n  },\r\n  weekdayButtonContainer: {\r\n    flex: 1,\r\n    // margin: 5,\r\n    padding: 0,\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    margin: 5,\r\n    padding: 0,\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n    width: '90%'\r\n  },\r\n  intervalContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n    margin: 0,\r\n    flexWrap: 'wrap',\r\n  },\r\n  pickerStyle: {\r\n    width: 35,\r\n    marginLeft: 3,\r\n    margin: 0,\r\n  },\r\n  pickerInput: {\r\n    fontSize: 13,\r\n    padding: 0,\r\n  },\r\n})\r\n\r\nexport const weekdays = [\r\n  {\r\n    id: 0,\r\n    name: \"Mon\",\r\n    fullName: \"Monday\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Tue\",\r\n    fullName: \"Tuesday\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Wed\",\r\n    fullName: \"Wednesday\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Thu\",\r\n    fullName: \"Thursday\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Fri\",\r\n    fullName: \"Friday\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Sat\",\r\n    fullName: \"Saturday\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Sun\",\r\n    fullName: \"Sunday\",\r\n  }\r\n]\r\n\r\nconst generateDefaultPeriod = () => {\r\n  return {\r\n    openTime: \"08:00\",\r\n    closeTime: \"18:00\",\r\n    elementId: shortid.generate()\r\n  }\r\n}\r\n\r\nfunction ScheduleWorkingHours({schedule, setSchedule, scheduleOpenIndex, classes}) {\r\n\r\n  const findPeriods = (dayIndex) => {\r\n    return schedule[scheduleOpenIndex].periods.filter(period => period.openDay === dayIndex)\r\n  }\r\n\r\n  const changeOpenTime = (elementId, time) => {\r\n    setSchedule(oldData => {\r\n      const newData = [...oldData]\r\n      newData[scheduleOpenIndex].periods.find(period => period.elementId === elementId).openTime = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n  const changeCloseTime = (elementId, time) => {\r\n    setSchedule(oldData => {\r\n      const newData = [...oldData]\r\n      newData[scheduleOpenIndex].periods.find(period => period.elementId === elementId).closeTime = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const determineGlobalCloseTime = () => {\r\n    if(schedule[scheduleOpenIndex].periods == null || schedule[scheduleOpenIndex].periods.length === 0)\r\n      return moment(\"08:00\", \"HH:mm\")\r\n    else\r\n      return moment(schedule[scheduleOpenIndex].periods[0].closeTime, \"HH:mm\")\r\n  }\r\n  const determineGlobalOpenTime = () => {\r\n    if(schedule[scheduleOpenIndex].periods == null || schedule[scheduleOpenIndex].periods.length === 0)\r\n      return moment(\"18:00\", \"HH:mm\")\r\n    else\r\n      return moment(schedule[scheduleOpenIndex].periods[0].openTime, \"HH:mm\")\r\n  }\r\n\r\n  const determineGlobalSplitScheduleCloseTime = () => {\r\n    for(let i = 0; i < 7; i++){\r\n      let periodsForThisDay =  schedule[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n      if (periodsForThisDay.length > 1)\r\n        return moment(periodsForThisDay[1].closeTime, \"HH:mm\")\r\n    }\r\n    return moment(\"18:00\", \"HH:mm\")\r\n  }\r\n  const determineGlobalSplitScheduleOpenTime = () => {\r\n    for(let i = 0; i < 7; i++){\r\n      let periodsForThisDay =  schedule[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n      if (periodsForThisDay.length > 1)\r\n        return moment(periodsForThisDay[1].openTime, \"HH:mm\")\r\n    }\r\n    return moment(\"13:00\", \"HH:mm\")\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <div className={classes.root}>\r\n          <div className={classes.weekdayPickerContainer}>\r\n            {weekdays.map((item, index) => {\r\n              const periods = findPeriods(index)\r\n              const splitSchedule = periods.length > 1\r\n\r\n              const toggleWorkday = () => {\r\n                if (periods.length > 0) {\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData]\r\n                    newData[scheduleOpenIndex].periods = newData[scheduleOpenIndex].periods.filter(period => period.openDay !== index)\r\n                    return newData\r\n                  })\r\n                } else {\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData]\r\n                    newData[scheduleOpenIndex].periods.push({...generateDefaultPeriod(), openDay: index})\r\n                    return newData\r\n                  })\r\n                }\r\n              }\r\n\r\n              const toggleSplitSchedule = () => {\r\n                if (splitSchedule)\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData];\r\n                    const periods = newData[scheduleOpenIndex].periods.filter(period => period.openDay === index)\r\n                    const lastperiod = periods.pop()\r\n                    newData[scheduleOpenIndex].periods = newData[scheduleOpenIndex].periods.filter(period => period.elementId != lastperiod.elementId)\r\n                    return newData;\r\n                  })\r\n                else\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData];\r\n                    newData[scheduleOpenIndex].periods.push({...generateDefaultPeriod(), openDay: index})\r\n                    return newData;\r\n                  })\r\n              }\r\n\r\n              return (\r\n                  <>\r\n                    <div className={classes.weekdayButtonContainer}>\r\n                      <Button variant={\"contained\"}\r\n                              color={periods.length !== 0 ? \"primary\" : \"secondary\"}\r\n                              className={classes.button}\r\n                              onClick={toggleWorkday}>\r\n                        {item.name}\r\n                      </Button>\r\n                      {periods.map((period) => {\r\n                        return <>\r\n                          <div className={classes.intervalContainer}>\r\n                            <TimePicker\r\n                                margin=\"normal\"\r\n                                ampm={false}\r\n                                className={classes.pickerStyle}\r\n                                format=\"HH:mm\"\r\n                                minutesStep={5}\r\n                                InputProps={{\r\n                                  classes: {\r\n                                    input: classes.pickerInput,\r\n                                  },\r\n                                }}\r\n                                value={moment(period.openTime, \"HH:mm\")}\r\n                                onChange={(time) => changeOpenTime(period.elementId, time)}\r\n                            />\r\n                            <Typography variant=\"h7\">\r\n                              -\r\n                            </Typography>\r\n                            <TimePicker\r\n                                margin=\"normal\"\r\n                                ampm={false}\r\n                                className={classes.pickerStyle}\r\n                                format=\"HH:mm\"\r\n                                minutesStep={5}\r\n                                InputProps={{\r\n                                  classes: {\r\n                                    input: classes.pickerInput,\r\n                                  },\r\n                                }}\r\n                                value={moment(period.closeTime, \"HH:mm\")}\r\n                                onChange={(time) => changeCloseTime(period.elementId, time)}\r\n                            />\r\n                          </div>\r\n                        </>\r\n                      })}\r\n                      {periods.length !== 0 && <FormControlLabel\r\n                          style={{width: '100%'}}\r\n                          control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                                checked={splitSchedule}\r\n                                onChange={toggleSplitSchedule}\r\n                            />\r\n                          }\r\n                          label={<span style={{fontSize: 13}}>Split</span>}\r\n                      />}\r\n\r\n                    </div>\r\n                    <Divider orientation=\"vertical\" flexItem/>\r\n                  </>\r\n              )\r\n            })}\r\n          </div>\r\n\r\n        </div>\r\n        <Typography variant=\"h7\">\r\n          Global time\r\n        </Typography>\r\n        <TimePicker\r\n            margin=\"normal\"\r\n            ampm={false}\r\n            format=\"HH:mm\"\r\n            className={classes.pickerStyle}\r\n            minutesStep={5}\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.pickerInput,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setSchedule(schedules => {\r\n                const newSchedules = [...schedules]\r\n                let newPeriods = []\r\n                for(let i = 0; i < 7; i++){\r\n                    let periodsForThisDay =  schedules[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n                    if (periodsForThisDay.length > 0){\r\n                      newPeriods.push({...periodsForThisDay[0], openTime: moment(e).format(\"HH:mm\")})\r\n                      if(periodsForThisDay.length > 1)\r\n                        newPeriods.push(periodsForThisDay[1])\r\n                    }\r\n                }\r\n                newSchedules[scheduleOpenIndex].periods = newPeriods\r\n                return newSchedules\r\n              })\r\n            }}\r\n            value={determineGlobalOpenTime()}\r\n        />\r\n        <Typography variant=\"h7\">\r\n          -\r\n        </Typography>\r\n        <TimePicker\r\n            margin=\"normal\"\r\n            ampm={false}\r\n            format=\"HH:mm\"\r\n            className={classes.pickerStyle}\r\n            minutesStep={5}\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.pickerInput,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setSchedule(schedules => {\r\n                const newSchedules = [...schedules]\r\n                let newPeriods = []\r\n                for(let i = 0; i < 7; i++){\r\n                  let periodsForThisDay =  schedules[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n                  if (periodsForThisDay.length > 0){\r\n                    newPeriods.push({...periodsForThisDay[0], closeTime: moment(e).format(\"HH:mm\")})\r\n                    if(periodsForThisDay.length > 1)\r\n                      newPeriods.push(periodsForThisDay[1])\r\n                  }\r\n                }\r\n                newSchedules[scheduleOpenIndex].periods = newPeriods\r\n                return newSchedules\r\n              })\r\n            }}\r\n            value={determineGlobalCloseTime()}\r\n        />\r\n\r\n        <br/>\r\n        <Typography variant=\"h7\">\r\n          Global split schedule time\r\n        </Typography>\r\n        <TimePicker\r\n            margin=\"normal\"\r\n            ampm={false}\r\n            format=\"HH:mm\"\r\n            className={classes.pickerStyle}\r\n            minutesStep={5}\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.pickerInput,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setSchedule(schedules => {\r\n                const newSchedules = [...schedules]\r\n                let newPeriods = []\r\n                for(let i = 0; i < 7; i++){\r\n                  let periodsForThisDay =  schedules[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n                  if (periodsForThisDay.length > 0){\r\n                    newPeriods.push(periodsForThisDay[0])\r\n                    if(periodsForThisDay.length > 1)\r\n                      newPeriods.push({...periodsForThisDay[1], openTime: moment(e).format(\"HH:mm\")})\r\n                  }\r\n                }\r\n                newSchedules[scheduleOpenIndex].periods = newPeriods\r\n                return newSchedules\r\n              })\r\n            }}\r\n            value={determineGlobalSplitScheduleOpenTime()}\r\n        />\r\n        <Typography variant=\"h7\">\r\n          -\r\n        </Typography>\r\n        <TimePicker\r\n            margin=\"normal\"\r\n            ampm={false}\r\n            format=\"HH:mm\"\r\n            className={classes.pickerStyle}\r\n            minutesStep={5}\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.pickerInput,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setSchedule(schedules => {\r\n                const newSchedules = [...schedules]\r\n                let newPeriods = []\r\n                for(let i = 0; i < 7; i++){\r\n                  let periodsForThisDay =  schedules[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n                  if (periodsForThisDay.length > 0){\r\n                    newPeriods.push(periodsForThisDay[0])\r\n                    if(periodsForThisDay.length > 1)\r\n                      newPeriods.push({...periodsForThisDay[1], closeTime: moment(e).format(\"HH:mm\")})\r\n                  }\r\n                }\r\n                newSchedules[scheduleOpenIndex].periods = newPeriods\r\n                return newSchedules\r\n              })\r\n            }}\r\n            value={determineGlobalSplitScheduleCloseTime()}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(ScheduleWorkingHours)\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {DatePicker, TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport WorkingHoursVariant, {weekdays} from \"./WorkingHoursVariant\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport shortid from 'shortid';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport ScheduleWorkingHours from \"./ScheduleWorkingHours\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    width: '100%',\r\n  },\r\n  scheduleDateContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    flexWrap: 'wrap',\r\n  },\r\n  pickerStyle: {\r\n    width: 100,\r\n    padding: 5,\r\n  }\r\n});\r\n\r\n\r\nfunction Schedule({classes, scheduleData, setScheduleData, scheduleOpenIndex, setScheduleOpenIndex, seasonalScheduleEnabled}) {\r\n\r\n  const currentSchedule = scheduleData[scheduleOpenIndex]\r\n\r\n  const changeFromDate = (date, value) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData];\r\n      newData[scheduleOpenIndex].from = moment(date).format('MM-DD');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const changeToDate = (date, value) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData];\r\n      newData[scheduleOpenIndex].to = moment(date).format('MM-DD');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const scheduleDateContainer = (\r\n      <div className={classes.scheduleDateContainer}>\r\n        <Typography variant=\"h8\">\r\n          This schedule applies from\r\n        </Typography>\r\n        <DatePicker\r\n            className={classes.pickerStyle}\r\n            views={[\"month\", \"date\"]}\r\n            // maxDate={currentSchedule.to}\r\n            value={moment(currentSchedule.from, \"MM-DD\")}\r\n            onChange={changeFromDate}\r\n        />\r\n        <Typography variant=\"h8\">\r\n          to\r\n        </Typography>\r\n        <DatePicker\r\n            className={classes.pickerStyle}\r\n            views={[\"month\", \"date\"]}\r\n            // minDate={currentSchedule.from}\r\n            value={moment(currentSchedule.to, \"MM-DD\")}\r\n            onChange={changeToDate}\r\n        />\r\n      </div>\r\n  )\r\n\r\n  const handleRemoveSchedule = () => {\r\n    setScheduleOpenIndex(index => {\r\n      setScheduleData(oldData => {\r\n        return  [...oldData].filter((item, i) => index !== i)\r\n      })\r\n      return index - 1;\r\n    })\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        {seasonalScheduleEnabled && scheduleDateContainer}\r\n        {scheduleOpenIndex !== 0 && <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={handleRemoveSchedule}\r\n            startIcon={<DeleteOutlineIcon/>}\r\n            style={{display: 'absolute'}}>Remove this schedule</Button>}\r\n\r\n        <ScheduleWorkingHours schedule={scheduleData} setSchedule={setScheduleData} scheduleOpenIndex={scheduleOpenIndex} />\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(Schedule)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Schedule from \"./Schedule\";\r\nimport moment from \"moment\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport shortid from 'shortid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start'\r\n  },\r\n  tabContainer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  tabsLayout: {\r\n    flex: 9,\r\n  },\r\n  addScheduleButtonContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'space-between'\r\n  }\r\n});\r\n\r\nexport const defaultScheduleData = [\r\n  {\r\n    from: \"01-25\",\r\n    to: \"02-20\",\r\n    periods: [\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 0,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 1,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 2,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 3,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 4,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"17:00\",\r\n        openDay: 5,\r\n        elementId: shortid.generate()\r\n      },\r\n    ],\r\n\r\n  }\r\n]\r\n\r\nfunction SchedulesContainer({classes, scheduleData, setScheduleData, scheduleOpenIndex, setScheduleOpenIndex, seasonalScheduleEnabled, setSeasonalScheduleEnabled, isScheduleEnabled, setIsScheduleEnabled, lastAccommodation, setLastAccommodation}) {\r\n\r\n  const handleAddSchedule = () => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      newData.push({\r\n        from: \"01-01\",\r\n        to: \"05-01\",\r\n        periods: [...defaultScheduleData[0].periods]\r\n      })\r\n      setScheduleOpenIndex(newData.length - 1)\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const tabsLayout = (\r\n      <div className={classes.tabContainer}>\r\n        <Tabs\r\n            value={scheduleOpenIndex}\r\n            onChange={(event, newValue) => setScheduleOpenIndex(newValue)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            className={classes.tabsLayout}\r\n        >\r\n          {\r\n            scheduleData.map((item, index) =>\r\n                <Tab onClick={() => setScheduleOpenIndex(index)}\r\n                     label={`${moment(item.from, \"MM-DD\").format(\"MMMM \")}-${moment(item.to, \"MM-DD\").format(\"MMMM \")}`}/>\r\n            )\r\n          }\r\n        </Tabs>\r\n        <div className={classes.addScheduleButtonContainer}>\r\n          <IconButton\r\n              onClick={handleAddSchedule}\r\n              variant=\"text\"\r\n              color=\"secondary\"\r\n              size=\"large\">\r\n            <AddIcon/>\r\n          </IconButton>\r\n        </div>\r\n\r\n      </div>\r\n  )\r\n\r\n  const handleToggleSeasonalSchedule = () => {\r\n    const enabled = !seasonalScheduleEnabled\r\n    setSeasonalScheduleEnabled(() => {\r\n      setScheduleOpenIndex(0)\r\n      return enabled\r\n    })\r\n    if(enabled){\r\n      setScheduleData(schedule => {\r\n        return [...schedule].map(item => {\r\n          return {\r\n            ...item,\r\n            from: \"01-01\",\r\n            to: \"02-01\"\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleEnableLastAccommodation = () => {\r\n    let accommodationTimeEnabled = lastAccommodation != null;\r\n    setLastAccommodation(accommodationTimeEnabled ? null : 30)\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <div className={classes.header}>\r\n          <Typography variant=\"h6\">\r\n            Working hours\r\n          </Typography>\r\n\r\n          <FormControlLabel\r\n              control={\r\n                <Switch\r\n                    checked={isScheduleEnabled}\r\n                    onChange={() => setIsScheduleEnabled(state => !state)}\r\n                    color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Enable schedule for this place?\"\r\n          />\r\n        </div>\r\n\r\n\r\n        { isScheduleEnabled &&\r\n        <>\r\n        <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                  checked={seasonalScheduleEnabled}\r\n                  onChange={handleToggleSeasonalSchedule}\r\n                  name=\"checkedB\"\r\n                  color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Enable seasonal schedule\"\r\n        />\r\n          <FormControlLabel\r\n          control={\r\n          <Checkbox\r\n              name=\"checkedB\"\r\n              color=\"primary\"\r\n              checked={lastAccommodation != null}\r\n              onChange={handleEnableLastAccommodation}\r\n          />\r\n        }\r\n          label=\"Specify last accommodation times\"\r\n          />\r\n          {lastAccommodation != null &&\r\n          <>\r\n            {/*<Typography variant=\"h8\">*/}\r\n            {/*  Minutes before close time*/}\r\n            {/*</Typography>*/}\r\n            <TextField\r\n                id=\"standard-number\"\r\n                label=\"Minutes to closing time\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                value={lastAccommodation}\r\n                onChange={(e) => setLastAccommodation(e.target.value)}\r\n            />\r\n          </>\r\n          }\r\n\r\n        {seasonalScheduleEnabled && tabsLayout}\r\n\r\n          <Schedule scheduleData={scheduleData}\r\n          seasonalScheduleEnabled={seasonalScheduleEnabled}\r\n          setScheduleData={setScheduleData} scheduleOpenIndex={scheduleOpenIndex} setScheduleOpenIndex={setScheduleOpenIndex}/>\r\n          </>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(SchedulesContainer)\r\n\r\n\r\n","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Paper} from '@material-ui/core';\r\nimport shortid from 'shortid';\r\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\r\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\r\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\r\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\r\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Reviews from \"../components/add_place_components/Reviews\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport RecommendationListDialog from \"../components/recomendation/RecommendationListDialog\";\r\nimport {RecommendationType} from \"../components/recomendation/Recommendation\";\r\nimport SchedulesContainer, {defaultScheduleData} from \"../components/schedule_components/SchedulesContainer\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  paperContent: {\r\n    marginTop: theme.spacing(4),\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      width: \"95%\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"70%\",\r\n      padding: theme.spacing(4),\r\n    },\r\n  },\r\n  root: {\r\n    height: \"100vh\",\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      height: \"100%\",\r\n    },\r\n  },\r\n  loader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100vw\",\r\n    height: \"100vh\"\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    height: `calc(93vh - 64px)`,\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      width: \"100%\",\r\n      padding: theme.spacing(1),\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"auto\",\r\n      padding: theme.spacing(8),\r\n    },\r\n    overflowY: \"auto\"\r\n  },\r\n  bottom: {\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      position: \"fixed\",\r\n      height: \"7vh\",\r\n      bottom: 0,\r\n      right: 0,\r\n    },\r\n    width: \"100%\",\r\n    zIndex: 5,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    padding: theme.spacing(1),\r\n  }\r\n});\r\n\r\n\r\nfunction AddPlace({classes, match}) {\r\n  const [placeInfo, setPlaceInfo] = useState({\r\n    placeId: \"\",\r\n    name: \"\", description: \"\", website: \"\", phoneNumber: \"\",\r\n    isPublic: false, isVerified: true, overallStarRating: 0, totalReviews: 0,\r\n    source: \"\", price: \"\", averageTimeSpent: \"0\", grade: 50\r\n  });\r\n\r\n\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n  const [scheduleData, setScheduleData] = useState(defaultScheduleData);\r\n  const [scheduleOpenIndex, setScheduleOpenIndex] = useState(0);\r\n  const [seasonalScheduleEnabled, setSeasonalScheduleEnabled] = useState(false);\r\n  const [lastAccommodation, setLastAccommodation] = useState(null);\r\n\r\n  const [photos, setPhotos] = useState([]);\r\n\r\n  const [locationData, setLocationData] = useState({\r\n    city: '',\r\n    address: '',\r\n    country: '',\r\n    latitude: 54.687157,\r\n    longitude: 25.279652,\r\n    county: '',\r\n    municipality: ''\r\n  });\r\n  const [parkingMarkerData, setParkingMarkerData] = useState({\r\n    city: '',\r\n    address: '',\r\n    country: '',\r\n    latitude: 54.687157,\r\n    longitude: 25.279652,\r\n    county: '',\r\n    municipality: ''\r\n  });\r\n  const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\r\n\r\n  const [sources, setSources] = useState([]);\r\n\r\n  const [isScheduleEnabled, setIsScheduleEnabled] = useState(false);\r\n\r\n  const [placeId, setPlaceId] = useState(match.params.placeId);\r\n\r\n  const [firstTimeLoading, setFirstTimeLoading] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [error, setError] = useState({name: false});\r\n  const [checkErrors, setCheckErrors] = useState(false);\r\n\r\n  const [showRecommendationDialog, setShowRecommendationDialog] = useState(false)\r\n\r\n  const {addConfig} = UseSnackbarContext();\r\n  const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n  const {title, setTitle} = UseAppBarTitleContext();\r\n\r\n  const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      color: \"white\",\r\n      backgroundColor: green[500],\r\n      '&:hover': {\r\n        backgroundColor: green[700],\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  useEffect(() => {\r\n    if (placeId !== undefined) {\r\n      getPlaceInfo()\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //Loaded place for editing\r\n    if (placeId === undefined) {\r\n      setTitle(\"Add new place\");\r\n      setFirstTimeLoading(false) //Just loaded add place window\r\n    }\r\n    //New Place has been just inserted, thus inserting other place info\r\n    if (placeId !== undefined && firstTimeLoading === false) {\r\n      Promise.all([\r\n        updateTagsData(placeId),\r\n        updateParkingData(placeId),\r\n        updateCategoriesData(placeId),\r\n        updatePhotoData(placeId),\r\n        updateSchedule(placeId),\r\n        updateSources(placeId)\r\n      ]).then(responses => {\r\n        formFeedback(true, Strings.SNACKBAR_PLACE_INSERTED_SUCCESS)\r\n      }).catch(error => {\r\n        formFeedback(false)\r\n      })\r\n    }\r\n\r\n  }, [placeId]);\r\n\r\n  useEffect(() => {\r\n    if (firstTimeLoading === false) {\r\n      updateAll()\r\n    }\r\n  }, [placeInfo['isPublic']]);\r\n\r\n  function addToRecommendation() {\r\n    setShowRecommendationDialog(true)\r\n  }\r\n\r\n  function getPlaceInfo() {\r\n    API.Places.getPlaceById(\"?full=true&p=\" + placeId).then(response => {\r\n      setAllData(response)\r\n      setTitle(\"Editing place/\" + response.name);\r\n    }).catch(error => {\r\n      formFeedback(false)\r\n    })\r\n  }\r\n\r\n  const parseScheduleData = (data) => {\r\n\r\n    data.some(schedule => {\r\n      return schedule.periods.some(period => {\r\n        if (period.lastAccommodation != null) {\r\n          setLastAccommodation(moment(period.lastAccommodation, 'HH:mm').minutes() - moment(period.closeTime, 'HH:mm').minutes())\r\n          return true\r\n        }\r\n        return false\r\n      })\r\n    })\r\n\r\n    if (data.length > 1 || data.some(schedule => schedule.from != null && schedule.to != null))\r\n      setSeasonalScheduleEnabled(true)\r\n\r\n    return (data.map(schedule => {\r\n      const newData = {...schedule}\r\n      newData.periods = newData.periods.map(period => {\r\n        const newPeriod = {...period}\r\n        newPeriod.elementId = shortid.generate()\r\n        return newPeriod\r\n      })\r\n      return newData\r\n    }))\r\n  }\r\n\r\n  const convertSchedule = (data) => {\r\n    return (data.map(schedule => {\r\n      const newSchedule = {...schedule}\r\n      if (!seasonalScheduleEnabled) {\r\n        delete newSchedule.from;\r\n        delete newSchedule.to;\r\n      }\r\n      newSchedule.periods = newSchedule.periods.map(period => {\r\n        const newPeriod = {...period}\r\n        if (lastAccommodation != null)\r\n          newPeriod.lastAccommodation = moment(newPeriod.closeTime, 'HH:mm').subtract(lastAccommodation, 'minutes').format('HH:mm')\r\n        newPeriod.closeDay = newPeriod.openDay\r\n        return newPeriod\r\n      })\r\n\r\n      newSchedule.scheduleDefault = false;\r\n      console.log(newSchedule)\r\n      return newSchedule\r\n    }))\r\n  }\r\n\r\n  function setAllData(place) {\r\n    setPlaceInfo({\r\n      placeId: place.placeId,\r\n      name: place.name,\r\n      description: place.description,\r\n      website: place.website,\r\n      phoneNumber: place.phoneNumber,\r\n      hasSchedule: place.hasSchedule,\r\n      isPublic: place.isPublic,\r\n      isVerified: place.isVerified,\r\n      overallStarRating: place.overallStarRating,\r\n      totalReviews: place.totalReviews,\r\n      price: place.price,\r\n      averageTimeSpent: place.averageTimeSpent,\r\n      bookInAdvance: place.bookInAdvance,\r\n      grade: place.grade\r\n    });\r\n\r\n    setLocationData({\r\n      city: place.city,\r\n      address: place.address,\r\n      country: place.country,\r\n      latitude: place.latitude,\r\n      longitude: place.longitude,\r\n      county: place.county,\r\n      municipality: place.municipality,\r\n    });\r\n\r\n    setParkingMarkerData({\r\n      city: place.city,\r\n      address: place.address,\r\n      country: place.country,\r\n      latitude: place.latitude,\r\n      longitude: place.longitude,\r\n      county: place.county,\r\n      municipality: place.municipality,\r\n    });\r\n\r\n    setScheduleData(place.schedule.length === 0 ? defaultScheduleData : parseScheduleData(place.schedule))\r\n    if (place.schedule.length === 0)\r\n      setIsScheduleEnabled(false)\r\n    else\r\n      setIsScheduleEnabled(true)\r\n\r\n    setSources(place.sources);\r\n    setSelectedTags(place.tags);\r\n    setSelectedCategories(place.categories);\r\n\r\n    setAllSelectedParkingData(place.parking);\r\n    setPhotos(place.photos);\r\n    setFirstTimeLoading(false)\r\n  }\r\n\r\n  function formFeedback(success, message = Strings.SNACKBAR_ERROR) {\r\n    addConfig(success, message);\r\n    setIsLoading(false)\r\n  }\r\n\r\n  function saveChanges() {\r\n    if (placeId === undefined) {\r\n      addAlertConfig(Strings.DIALOG_PLACE_INSERT_TITLE, Strings.DIALOG_PLACE_INSERT, [{\r\n        name: \"Insert\", action: () => {\r\n          setIsLoading(true);\r\n          insertBasicPlaceInfo()\r\n        }\r\n      }])\r\n    } else {\r\n      addAlertConfig(Strings.DIALOG_PLACE_UPDATE_TITLE, Strings.DIALOG_PLACE_UPDATE, [{\r\n        name: \"save and publish\", action: () => {\r\n          let plc = Object.assign({}, placeInfo, {});\r\n          plc.isPublic = 1;\r\n          setPlaceInfo(plc);\r\n          setIsLoading(true);\r\n          updateAll()\r\n        }\r\n      }, {\r\n        name: \"save\", action: () => {\r\n          setIsLoading(true);\r\n          updateAll()\r\n        }\r\n      }])\r\n    }\r\n  }\r\n\r\n  function updateAll() {\r\n    Promise.all([\r\n      updatePlaceInfo(),\r\n      updateTagsData(placeId),\r\n      updatePhotoData(placeId),\r\n      updateCategoriesData(placeId),\r\n      updateParkingData(placeId),\r\n      updateSchedule(placeId),\r\n      updateSources(placeId)\r\n    ]).then(response => {\r\n      formFeedback(true, Strings.SNACKBAR_CHANGES_SAVED);\r\n    }).catch(err => {\r\n      formFeedback(false)\r\n    })\r\n  }\r\n\r\n  function updatePlaceInfo() {\r\n    API.Places.updatePlace(formPlaceInfo()).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n\r\n  }\r\n\r\n  function insertBasicPlaceInfo() {\r\n    API.Places.insertPlace(formPlaceInfo()).then(placeId => {\r\n      setPlaceId(placeId)\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updateParkingData(id) {\r\n    API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updateTagsData(id) {\r\n    API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updateSources(id) {\r\n    API.SourcePlace.updateSourcesForPlace(sources, \"?p=\" + id).then(response => {\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n\r\n  function updateCategoriesData(id) {\r\n    API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updatePhotoData(id) {\r\n    API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n\r\n  function updateSchedule(id) {\r\n    API.Schedule.updateScheduleForPlace(isScheduleEnabled ? convertSchedule(scheduleData) : [], \"?id=\" + id).then(response => {\r\n    }).catch(er => {\r\n    })\r\n\r\n  }\r\n\r\n  function formPlaceInfo() {\r\n    let d = Object.assign(placeInfo, locationData);\r\n    return d\r\n  }\r\n\r\n\r\n  function publishPlace() {\r\n    addAlertConfig(Strings.DIALOG_PLACE_PUBLISH_TITLE, placeInfo['isPublic'] ? Strings.DIALOG_PLACE_UNPUBLISH_MESSAGE : Strings.DIALOG_PLACE_PUBLISH_MESSAGE,\r\n        [{\r\n          name: \"Agree\", action: () => {\r\n            let obj = Object.assign({}, placeInfo, {});\r\n            obj['isPublic'] = !obj['isPublic'];\r\n            setPlaceInfo(obj);\r\n          }\r\n        }])\r\n\r\n  }\r\n\r\n  function verifyPlace() {\r\n    addAlertConfig(Strings.DIALOG_PLACE_VERIFY_TITLE, Strings.DIALOG_PLACE_VERIFY_MESSAGE, [{\r\n      name: \"agree\", action: () => {\r\n        let obj = Object.assign({}, placeInfo, {});\r\n        obj['isPublic'] = 1;\r\n        obj['isVerified'] = 1;\r\n        setPlaceInfo(obj);\r\n      }\r\n    }])\r\n  }\r\n\r\n  const basicPlaceInfo = useMemo(() => {\r\n    return <Paper elevation={4} className={classes.paperContent}>\r\n      <BasicPlaceInfo\r\n          error={error}\r\n          setError={setError}\r\n          checkErrors={checkErrors}\r\n          placeInfo={placeInfo}\r\n          setPlaceInfo={setPlaceInfo}\r\n          selectedSources={sources}\r\n          setSelectedSources={setSources}\r\n      />\r\n    </Paper>\r\n  }, [placeInfo.name,\r\n    placeInfo.description,\r\n    placeInfo.averageTimeSpent,\r\n    placeInfo.phoneNumber,\r\n    placeInfo.price,\r\n    placeInfo.website,\r\n      placeInfo.bookInAdvance,\r\n    sources\r\n  ])\r\n\r\n  const placePhotos = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <PhotosInfo\r\n              photos={photos}\r\n              setPhotos={setPhotos}\r\n          />\r\n        </Paper>\r\n    )\r\n  }, [photos])\r\n\r\n  const placeLocation = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <PlaceLocation\r\n              placeInfo={placeInfo}\r\n              locationData={locationData}\r\n              setParkingLocation={setParkingMarkerData}\r\n              setLocationData={setLocationData}/>\r\n        </Paper>\r\n    )\r\n  }, [locationData])\r\n\r\n  const parkingLocation = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <ParkingLocation\r\n              placeInfo={placeInfo}\r\n              allSelectedParkingData={allSelectedParkingData}\r\n              setAllSelectedParkingData={setAllSelectedParkingData}\r\n              locationData={parkingMarkerData}\r\n              setLocationData={setParkingMarkerData}/>\r\n        </Paper>\r\n    )\r\n  }, [allSelectedParkingData, parkingMarkerData])\r\n\r\n  const placeDiscovery = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <PlaceDiscovery\r\n              placeInfo={placeInfo}\r\n              setPlaceInfo={setPlaceInfo}\r\n              selectedTags={selectedTags}\r\n              setSelectedTags={setSelectedTags}\r\n              selectedCategories={selectedCategories}\r\n              setSelectedCategories={setSelectedCategories}/>\r\n        </Paper>\r\n    )\r\n  }, [selectedCategories, selectedTags, placeInfo])\r\n\r\n\r\n  const scheduleContainer = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          {<SchedulesContainer scheduleData={scheduleData} setScheduleData={setScheduleData}\r\n                               scheduleOpenIndex={scheduleOpenIndex}\r\n                               setScheduleOpenIndex={setScheduleOpenIndex}\r\n                               seasonalScheduleEnabled={seasonalScheduleEnabled}\r\n                               setSeasonalScheduleEnabled={setSeasonalScheduleEnabled}\r\n                               setLastAccommodation={setLastAccommodation}\r\n                               isScheduleEnabled={isScheduleEnabled}\r\n                               setIsScheduleEnabled={setIsScheduleEnabled}\r\n                               lastAccommodation={lastAccommodation}/>}\r\n        </Paper>\r\n    )\r\n  }, [scheduleData, scheduleOpenIndex, lastAccommodation, seasonalScheduleEnabled, isScheduleEnabled])\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n\r\n        {firstTimeLoading ? <div className={classes.loader}><CircularProgress/></div> :\r\n            <div className={classes.content}>\r\n\r\n              {basicPlaceInfo}\r\n\r\n              {placeId !== undefined ?\r\n                  <Paper elevation={4} className={classes.paperContent}>\r\n                    <Reviews\r\n                        placeInfo={placeInfo}\r\n                    />\r\n                  </Paper>\r\n                  : null}\r\n\r\n              {placePhotos}\r\n              {placeLocation}\r\n              {parkingLocation}\r\n              {placeDiscovery}\r\n              {scheduleContainer}\r\n            </div>}\r\n\r\n\r\n        {isLoading ? <LinearProgress/> : null}\r\n\r\n        <Paper elevation={1} className={classes.bottom}>\r\n\r\n          {\r\n            placeInfo['isVerified'] === false && placeId !== undefined ?\r\n                <ColorButton\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      verifyPlace()\r\n                    }}\r\n                    className={classes.button}\r\n                >\r\n                  Verify place\r\n                </ColorButton>\r\n                :\r\n                <FormControlLabel\r\n                    control={<Switch checked={placeInfo['isPublic']} onChange={() => {\r\n                      publishPlace()\r\n                    }\r\n                    } name=\"isPublic\"/>}\r\n                    label=\"Make this place public\"\r\n                />}\r\n          <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => saveChanges()}\r\n              className={classes.button}>\r\n            Save\r\n          </Button>\r\n\r\n          {placeId != null ?\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => addToRecommendation()}\r\n                  className={classes.button}>\r\n                Add to recommendation\r\n              </Button> : null\r\n          }\r\n\r\n\r\n          <RecommendationListDialog\r\n              open={showRecommendationDialog}\r\n              setOpen={setShowRecommendationDialog}\r\n              objectId={placeInfo.placeId}\r\n              type={RecommendationType.place}\r\n          />\r\n\r\n        </Paper>\r\n      </div>)\r\n\r\n}\r\n\r\nAddPlace.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AddPlace)\r\n\r\n\r\n","import React, { useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MetroIcon from '@material-ui/icons/DirectionsTransit';\r\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\r\nimport CarIcon from '@material-ui/icons/DriveEta';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\nimport FlightIcon from '@material-ui/icons/Flight';\r\nimport TramIcon from '@material-ui/icons/Tram';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\"\r\n    },\r\n    transportSelectWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    transportSelect: {\r\n        marginLeft: theme.spacing(1),\r\n        width: \"100px\"\r\n    }\r\n});\r\n\r\nconst transportTypes = [\r\n    {\r\n        icon: <MetroIcon/>,\r\n        label: \"Metro\"\r\n    },\r\n    {\r\n        icon: <DirectionsBikeIcon/>,\r\n        label: \"Bike\"\r\n    },\r\n    {\r\n        icon: <DirectionsBusIcon/>,\r\n        label: \"Bus\"\r\n    },\r\n    {\r\n        icon: <CarIcon/>,\r\n        label: \"Car\"\r\n    },\r\n    {\r\n        icon: <TrainIcon/>,\r\n        label: \"Train\"\r\n    },\r\n    {\r\n        icon: <FlightIcon/>,\r\n        label: \"Plane\"\r\n    },\r\n    {\r\n        icon: <DirectionsWalkIcon/>,\r\n        label: \"Walk\"\r\n    },\r\n    {\r\n        icon: <TramIcon/>,\r\n        label: \"Tram\"\r\n    }\r\n]\r\n\r\nfunction TransportItem({classes, transportId, transportChangeCallback}) {\r\n\r\n    const [currentTransport, setCurrentTransport] = useState(transportId == null ? 0 : transportId)\r\n\r\n    const handleTransportChange = (e) => {\r\n        setCurrentTransport(e.target.value)\r\n        transportChangeCallback({transport: parseInt(e.target.value)})\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MoreVertIcon/>\r\n            <div className={classes.transportSelectWrapper}>\r\n                {transportTypes[currentTransport].icon}\r\n                <FormControl className={classes.transportSelect} >\r\n                    <NativeSelect\r\n                        value={currentTransport}\r\n                        onChange={handleTransportChange}\r\n                    >\r\n                        {transportTypes.map((item, index) => {\r\n                            return <option key={index} value={index}> {item.label}</option>\r\n                        })}\r\n                    </NativeSelect>\r\n                </FormControl>\r\n                {/*<Typography variant=\"subtitle2\" style={{flex: 1, display: 'flex', alignItems: 'flex-end', justifyContent: 'flex-end'}}>*/}\r\n                {/*    Estimated 15 min | 4km*/}\r\n                {/*</Typography>*/}\r\n            </div>\r\n            <MoreVertIcon/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TransportItem)","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport TransportItem from \"./TransportItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n  cardRoot: {\r\n    [theme.breakpoints.only(\"lg\")]: {\r\n      display: 'flex',\r\n      // alignItems: \"flex-start\"\r\n    },\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 5\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      height: \"200px\",\r\n    },\r\n    [theme.breakpoints.only(\"lg\")]: {\r\n      flex: 1,\r\n      height: \"auto\",\r\n    },\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexFlow: \"column wrap\"\r\n  },\r\n  addParkingWrapper: {\r\n    display: \"inline-block\"\r\n  }\r\n})\r\n\r\n\r\nfunction TourPlaceComponent({classes, elementData, removeCallback, tourInfoReducer, currentDay, elementIndex, lastElement, handleEditPlace}) {\r\n\r\n  function truncateText(text) {\r\n    if (text == null)\r\n      return \"\"\r\n    if (text.length > 500) {\r\n      return text.substring(0, 500) + \"...\";\r\n    } else {\r\n      return text\r\n    }\r\n  }\r\n\r\n  const handleRemoveTransport = () => {\r\n\r\n  }\r\n\r\n  const handleChangeTransport = ({transport}) => {\r\n    tourInfoReducer({\r\n      type: 'UPDATE_ELEMENT',\r\n      day: currentDay,\r\n      index: elementIndex,\r\n      data: {\r\n        ...elementData,\r\n        transport: {\r\n          fk_transportId: transport\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleAddTransport = () => {\r\n    tourInfoReducer({\r\n      type: 'UPDATE_ELEMENT',\r\n      day: currentDay,\r\n      index: elementIndex,\r\n      data: {\r\n        ...elementData,\r\n        transport: {\r\n          fk_transportId: 1\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <Card className={classes.cardRoot} onClick={() => handleEditPlace(elementData.data.details.placeId)}>\r\n\r\n          {elementData.data.details.photos != null && elementData.data.details.photos.length > 0 &&\r\n          <CardMedia\r\n              className={classes.cover}\r\n              image={elementData.data.details.photos[0].url}\r\n\r\n          />\r\n          }\r\n\r\n          <div className={classes.details}>\r\n            <CardContent className={classes.content}>\r\n              <Typography component=\"h5\" variant=\"h5\">\r\n                {elementData.data.details.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                {truncateText(elementData.data.details.description)}\r\n              </Typography>\r\n            </CardContent>\r\n          </div>\r\n          <CardHeader\r\n              onClick={e => {e.stopPropagation(); e.preventDefault()}}\r\n              action={\r\n                <IconButton aria-label=\"remove\" onClick={() => removeCallback(elementData)}>\r\n                  <RemoveIcon/>\r\n                </IconButton>\r\n              }\r\n          />\r\n        </Card>\r\n\r\n        <TextField\r\n            className={classes.descriptionInput}\r\n            multiline\r\n            value={elementData.data.note}\r\n            label=\"Add a note\"\r\n            style={{marginTop: 10, marginBottom: 5}}\r\n            variant=\"outlined\"\r\n            onChange={(e) => {\r\n              tourInfoReducer({\r\n                type: 'UPDATE_ELEMENT',\r\n                day: currentDay,\r\n                index: elementIndex,\r\n                data: {\r\n                  ...elementData,\r\n                  note: e.target.value\r\n                }\r\n              })\r\n            }}\r\n        />\r\n\r\n        {elementData.data.transport != null && !lastElement &&\r\n        <TransportItem transportChangeCallback={handleChangeTransport}\r\n                       transportId={elementData.data.transport.fk_transportId}/>}\r\n\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nTourPlaceComponent.propTypes = {\r\n  elementData: PropTypes.object.isRequired,\r\n  removeCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourPlaceComponent)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport TourPlaceComponent from \"./TourPlaceComponent\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ElementType} from \"./Tour\";\r\nimport { SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport TransportItem from \"./TransportItem\";\r\nimport shortid from 'shortid';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst styles = theme => ({\r\n    tourPlaceComponent: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\",\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst TourPlaceSortable = SortableElement(({handleEditPlace, currentDay, elementData, removePlaceCallback, classes, tourInfoReducer, elementIndex, lastElement}) => (\r\n    <div>\r\n        <TourPlaceComponent removeCallback={removePlaceCallback} classes={{root: classes.tourPlaceComponent}}\r\n                            elementData={elementData}\r\n                            tourInfoReducer={tourInfoReducer}\r\n                            elementIndex={elementIndex}\r\n                            currentDay={currentDay}\r\n                            handleEditPlace={handleEditPlace}\r\n                            lastElement={lastElement}/>\r\n    </div>\r\n));\r\n\r\nconst SortableList = SortableContainer(({handleEditPlace, currentDay, removeElementCallback, tourInfo, classes, tourInfoReducer}) => {\r\n\r\n    return (\r\n\r\n        <ul>\r\n            {tourInfo.days[currentDay].tour.map((item, index) => {\r\n\r\n                switch (item.type) {\r\n                    case ElementType.place:\r\n                        return <TourPlaceSortable key={item.data.details.placeId} elementIndex={index}\r\n                                                  elementData={item}\r\n                                                  lastElement={index === tourInfo.days[currentDay].tour.length - 1}\r\n                                                  index={index}\r\n                                                  classes={classes}\r\n                                                  currentDay={currentDay}\r\n                                                  handleEditPlace={handleEditPlace}\r\n                                                  tourInfoReducer={tourInfoReducer}\r\n                                                  removePlaceCallback={() => removeElementCallback(index)}/>\r\n                }\r\n            })}\r\n        </ul>\r\n    )\r\n});\r\n\r\nfunction TourPlacesWrapper({classes, tourInfo, tourInfoReducer, currentDay, errorInfo, setErrorInfo, handleEditPlace}) {\r\n\r\n    const removeElementCallback = (index) => {\r\n        tourInfoReducer({\r\n            type: 'REMOVE_ELEMENT',\r\n            day: currentDay,\r\n            index: index\r\n        })\r\n    };\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        tourInfoReducer({\r\n            type: 'MOVE_ELEMENT',\r\n            day: currentDay,\r\n            oldIndex: oldIndex,\r\n            newIndex: newIndex\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {tourInfo.days[currentDay].tour.length === 0 &&\r\n            <Alert severity=\"warning\">You have not added any places for the currently selected day.</Alert>}\r\n            <SortableList\r\n                pressDelay={200}\r\n                disableAutoscroll={false}\r\n                tourInfoReducer={tourInfoReducer}\r\n                tourInfo={tourInfo}\r\n                onSortEnd={onSortEnd}\r\n                handleEditPlace={handleEditPlace}\r\n                currentDay={currentDay}\r\n                classes={classes}\r\n                removeElementCallback={removeElementCallback}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nTourPlacesWrapper.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourPlacesWrapper)\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport {debounce} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: theme.spacing(2)\r\n        // width: 400,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    divider: {\r\n        // height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function SearchInputComponent({hint, searchCallback}) {\r\n    const classes = useStyles();\r\n\r\n    const debouncedInput = (event) => {\r\n        searchCallback(event.target.value)\r\n    }\r\n\r\n    const debounceInput = debounce(event => debouncedInput(event), 500)\r\n\r\n    const handleInput = (event) => {\r\n        event.persist()\r\n        debounceInput(event)\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder={hint}\r\n                inputProps={{ 'aria-label': hint }}\r\n                onChange={handleInput}\r\n            />\r\n            <IconButton className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n        </Paper>\r\n    );\r\n}","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport SearchInputComponent from \"../SearchInputComponent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\nimport DnsIcon from \"@material-ui/icons/Dns\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport API from \"../../Networking/API\";\r\n\r\nconst styles = theme => ({\r\n    searchInputComponent: {\r\n\r\n    },\r\n    placeCard: {\r\n        margin: theme.spacing(1, 8, 1, 8),\r\n    },\r\n})\r\n\r\n\r\nfunction PlaceSearch({classes, addPlaceCallback, apiPlacesFound, setApiPlacesFound, localPlacesFound, setLocalPlacesFound}) {\r\n\r\n    // const [apiPlacesLoading, setApiPlacesLoading] = useState(false)\r\n    const [localPlacesLoading, setLocalPlacesLoading] = useState(false)\r\n\r\n    const placeType = {\r\n        local: 0,\r\n        api: 1\r\n    }\r\n\r\n    const generatePlaceCards = () => {\r\n        let genProps = (placeInfo, type) => {\r\n            return {\r\n                classes: {root: classes.placeCard},\r\n                key: placeInfo.placeId,\r\n                renderActionArea: () => {\r\n                    return (\r\n                        <div>\r\n                            <Button color=\"primary\" onClick={() => addPlaceCallback(placeInfo, type)}>\r\n                                <AddIcon/>\r\n                            </Button>\r\n                            <Tooltip title={type === placeType.local ? \"This place is from our database\" : \"This place is from API\"} aria-label=\"add\">\r\n                                {type === placeType.local ? <LocalLibraryIcon/> : <DnsIcon/>}\r\n                            </Tooltip>\r\n                        </div>\r\n                    )\r\n                },\r\n                placeData : placeInfo\r\n            }\r\n        }\r\n\r\n        let mappedPlaces = []\r\n        localPlacesFound.forEach(item => {\r\n            mappedPlaces.push(<ApiPlaceCard {...genProps(item, placeType.local)}/>)\r\n        })\r\n        // apiPlacesFound.forEach(item => {\r\n        //     mappedPlaces.push( <ApiPlaceCard {...genProps(item, placeType.api)}/>)\r\n        // })\r\n        return mappedPlaces\r\n    }\r\n\r\n    const searchCallback = (keyword) => {\r\n        if(keyword.length < 3)\r\n            return;\r\n        setLocalPlacesFound([])\r\n        setApiPlacesFound([])\r\n        // setApiPlacesLoading(true)\r\n        setLocalPlacesLoading(true)\r\n        API.Places.getAllPlacesAdmin(\"?keyword=\" + keyword).then(response=>{\r\n            setLocalPlacesFound(response.list)\r\n            setLocalPlacesLoading(false)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n\r\n        // API.Places.searchApiPlaces(\"?keyword=\" + keyword).then(response => {\r\n        //     setApiPlacesFound(response)\r\n        //     setApiPlacesLoading(false)\r\n        // }).catch(error => {\r\n        //     console.log(error)\r\n        // })\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <SearchInputComponent hint=\"Search for a place\" searchCallback={searchCallback} className={classes.searchInputComponent}/>\r\n            {(localPlacesLoading) ?\r\n                <CircularProgress  /> :\r\n                <React.Fragment>\r\n                    {generatePlaceCards()}\r\n                </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PlaceSearch)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    radioButtonArea: {\r\n    },\r\n    cardArea: {\r\n        flex: 1,\r\n        display: \"flex\"\r\n    },\r\n    content: {\r\n        flex: '1 1 auto',\r\n    },\r\n    descriptionInput: {\r\n        marginTop: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    },\r\n    headerWrap: {}\r\n})\r\n\r\nfunction DayCard({classes, onSelectCallback, index, currentDay, tourInfoReducer, description, handleRemoveDay}) {\r\n\r\n    const updateDescriptionGlobally = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_DAY',\r\n            day: index,\r\n            data: {\r\n                description: e\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.radioButtonArea}>\r\n                <Radio checked={index === currentDay} onChange={(e) => {\r\n                    onSelectCallback(index)\r\n                }}/>\r\n            </div>\r\n            <Card className={classes.cardArea}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        Day {index + 1}\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                        className={classes.descriptionInput}\r\n                        multiline\r\n                        label=\"Description\"\r\n                        value={description == null ? '' : description}\r\n                        variant=\"outlined\"\r\n                        onChange={(e) => {\r\n                            updateDescriptionGlobally(e.target.value)\r\n                        }}\r\n                    />\r\n                </CardContent>\r\n                <CardHeader\r\n                    action={\r\n                        <IconButton  aria-label=\"remove\" onClick={() => handleRemoveDay(index)}>\r\n                            <RemoveIcon/>\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nDayCard.propTypes = {\r\n    onSelectCallback: PropTypes.func.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DayCard)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport DayCard from \"./DayCard\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport shortid from 'shortid';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    addDayButton: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    footerWrapper: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n})\r\n\r\nconst DayCardSortable = SortableElement(({dayInfo, day, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => (\r\n    <DayCard\r\n        description={dayInfo.description}\r\n        currentDay={currentDay}\r\n        index={day}\r\n        handleRemoveDay={removeDayCallback}\r\n        onSelectCallback={onSelectCallback}\r\n        tourInfoReducer={tourInfoReducer}/>\r\n));\r\n\r\nconst SortableList = SortableContainer(({elements, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => {\r\n\r\n    return (\r\n        <ul style={{padding: \"0px\"}}>\r\n            {elements.map((item, index) => {\r\n                return <DayCardSortable\r\n                    currentDay={currentDay}\r\n                    day={index}\r\n                    index={index}\r\n                    removeDayCallback={removeDayCallback}\r\n                    key={item.elementIdentifier}\r\n                    dayInfo={item}\r\n                    onSelectCallback={onSelectCallback}\r\n                    tourInfoReducer={tourInfoReducer}/>\r\n            })}\r\n        </ul>\r\n    );\r\n});\r\n\r\nfunction DaysWrapper({classes, currentDay, setCurrentDay, tourInfo, tourInfoReducer}) {\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    const handleSelect = (index) => {\r\n        setCurrentDay(index)\r\n    }\r\n\r\n    const addDayHandler = () => {\r\n        tourInfoReducer({\r\n            type: 'ADD_DAY',\r\n            data: {\r\n                description: \"\",\r\n                elementIdentifier: shortid.generate(),\r\n                tour: []\r\n            }\r\n        })\r\n    }\r\n\r\n    const removeDay = (day) => {\r\n        tourInfoReducer({\r\n                type: 'REMOVE_DAY',\r\n                day: day,\r\n            }\r\n        )\r\n        if(day === currentDay)\r\n            setCurrentDay(day - 1)\r\n    }\r\n\r\n    const removeDayCallback = (day) => {\r\n        if(tourInfo.days.length === 1){\r\n            addAlertConfig(\"Warning\", \"The tour has to have at least one day\", [])\r\n        }else{\r\n            if(tourInfo.days[day].tour.length > 0){ //This day has at least one place/transport added to it\r\n                addAlertConfig(\"Warning\", \"Are you sure you want to remove this day?\",[{name: \"yes\", action: ()=>{\r\n                    removeDay(day)\r\n                    }}],() => {\r\n                })\r\n            }else removeDay(day)\r\n        }\r\n    }\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        tourInfoReducer({\r\n            type: 'MOVE_DAY',\r\n            oldIndex: oldIndex,\r\n            newIndex: newIndex\r\n        })\r\n        setCurrentDay(newIndex)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <SortableList\r\n                pressDelay={200}\r\n                disableAutoscroll={false}\r\n                elements={tourInfo.days}\r\n                currentDay={currentDay}\r\n                onSortEnd={onSortEnd}\r\n                removeDayCallback={removeDayCallback}\r\n                onSelectCallback={handleSelect}\r\n                tourInfoReducer={tourInfoReducer}/>\r\n            <div className={classes.footerWrapper}>\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    className={classes.addDayButton}\r\n                    onClick={addDayHandler}\r\n                    startIcon={<AddIcon/>}>\r\n                    Add another day\r\n                </Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nDaysWrapper.propTypes = {\r\n    setCurrentDay: PropTypes.func.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    tourInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DaysWrapper)\r\n","import {arrayMove} from \"react-sortable-hoc\";\r\nimport {ElementType} from \"./Tour\";\r\n\r\nexport default function TourDataReducer(state, action) {\r\n\r\n    let days = []\r\n\r\n    switch (action.type) {\r\n        case 'ADD_ELEMENT':\r\n            if(state.days !== null && action.data.type === ElementType.place && state.days.some(day => day.tour !== null && day.tour.some(place => place.type === ElementType.place && place.data.details.placeId === action.data.data.details.placeId))){\r\n                if(action.onError !== null && action.onError !== undefined){\r\n                    action.onError()\r\n                }\r\n                return state\r\n            }\r\n\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    days.push({\r\n                        ...item,\r\n                        tour: [\r\n                            ...item.tour,\r\n                            action.data\r\n                        ]\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'UPDATE_ELEMENT':\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    let tour = item.tour\r\n                    tour[action.index] = {...tour[action.index], data: {...tour[action.index].data, ...action.data}}\r\n                    days.push({\r\n                        ...item,\r\n                        tour: tour\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'ADD_DAY':\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...state.days,\r\n                    action.data\r\n                ]\r\n            }\r\n        case 'MOVE_DAY':\r\n            return {\r\n                ...state,\r\n                days: arrayMove(state.days, action.oldIndex, action.newIndex)\r\n            }\r\n        case 'MOVE_ELEMENT':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day)\r\n                    return {...item, tour: arrayMove(item.tour, action.oldIndex, action.newIndex)}\r\n                else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'UPDATE_DAY':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day) {\r\n                    return {...item, ...action.data}\r\n                } else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'REMOVE_ELEMENT':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day)\r\n                    return {...item, tour: item.tour.filter((value, index) => index !== action.index)}\r\n                else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'REMOVE_DAY':\r\n            days = state.days.filter((item, index) => index !== action.day)\r\n            return {\r\n                ...state,\r\n                days: days\r\n            }\r\n        case 'UPDATE_TOUR':\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case 'SET_ALL':\r\n            return action.data\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PropTypes from \"prop-types\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(4),\r\n    },\r\n    nameField: {\r\n        width: \"100%\"\r\n    },\r\n    descriptionField: {\r\n        marginTop: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    },\r\n    publicityDiv: {\r\n        width: \"100%\",\r\n\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2),\r\n        color: \"#ffffff\"\r\n    },\r\n});\r\n\r\nfunction TourInfoComponent({classes, tourInfo, tourInfoReducer, errorInfo, setErrorInfo, availableCategories, selectedCategories, setSelectedCategories, setAvailableCategories, tourId}) {\r\n\r\n    const handleDescriptionChange = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data: {description: e.target.value}\r\n        })\r\n    }\r\n    const handleTitleChange = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {name: e.target.value}\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(tourInfo.name === \"\")\r\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: true}}})\r\n        else\r\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: false}}})\r\n    }, [tourInfo.name])\r\n\r\n    let shouldDisplayTitleMissingError = errorInfo.showErrors && errorInfo.errors.titleMissing\r\n\r\n    const verifyTour = () => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {isVerified: true}\r\n        })\r\n    }\r\n\r\n    const publishTour = () => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {isPublished: !tourInfo.isPublished}\r\n        })\r\n\r\n    }\r\n\r\n    const ColorButton = withStyles((theme) => ({\r\n        root: {\r\n            color: \"white\",\r\n            backgroundColor: green[500],\r\n            '&:hover': {\r\n                backgroundColor: green[700],\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField label=\"Tour name\"\r\n                       variant=\"outlined\"\r\n                       error={shouldDisplayTitleMissingError}\r\n                       helperText={shouldDisplayTitleMissingError ? \"Please provide a title for your tour\" : \"\"}\r\n                       value={tourInfo.name}\r\n                       onChange={handleTitleChange}\r\n                       className={classes.nameField}/>\r\n            <TextField\r\n                className={classes.descriptionField}\r\n                multiline\r\n                label=\"Description\"\r\n                value={tourInfo.description}\r\n                variant=\"outlined\"\r\n                onChange={handleDescriptionChange}\r\n            />\r\n            <br/><br/>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n                Categories for this tour\r\n            </Typography>\r\n            <AutoCompleteChip\r\n                options={availableCategories}\r\n                id=\"categoryId\"\r\n                label=\"Select category\"\r\n                setOptions={setAvailableCategories}\r\n                setSelectedOptions={setSelectedCategories}\r\n                selectedOptions={selectedCategories}\r\n            />\r\n\r\n            {tourId !== undefined &&\r\n                <div className={classes.publicityDiv}>\r\n                    {tourInfo.isVerified ?\r\n                        <div>\r\n                            <FormControlLabel\r\n                                control={<Switch checked={tourInfo.isPublished} onChange={publishTour} name=\"isPublic\"/>}\r\n                                label=\"Make this tour public?\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                    <ColorButton\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={verifyTour}\r\n                        className={classes.button}\r\n                    >\r\n                        Verify tour\r\n                    </ColorButton>\r\n                    }\r\n\r\n\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTourInfoComponent.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    availableCategories: PropTypes.array.isRequired,\r\n    setAvailableCategories: PropTypes.func.isRequired,\r\n    selectedCategories: PropTypes.array.isRequired,\r\n    setSelectedCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourInfoComponent)","import React, {useContext, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer} from \"react-google-maps\"\r\nimport {ElementType} from \"./Tour\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FilterBlock from \"../add_place_components/FilterBlock\";\r\nimport CustomControlsManager from \"../maps/CustomControlsManager\";\r\nimport API from \"../../Networking/API\";\r\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst google = window.google;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(4),\r\n    }, cover: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            height: \"200px\",\r\n        },\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            flex: 1,\r\n            height: \"auto\",\r\n        },\r\n    },\r\n    largeIcon: {\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n    },\r\n});\r\n\r\n\r\n/**\r\n * Tours map component\r\n * @type {React.ComponentClass<WithGoogleMapProps>}\r\n */\r\nconst MyMapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        ref={props.refMap}\r\n        defaultZoom={8}\r\n        defaultCenter={{lat: 55.2983804, lng: 23.9132164}}>\r\n\r\n        {props.children}\r\n\r\n    </GoogleMap>\r\n);\r\n\r\n\r\nfunction TourMap({classes, tourInfo, currentDay, addPlace, removePlace}) {\r\n\r\n    const [directions, setDirection] = useState();\r\n\r\n    console.log('rerender')\r\n\r\n    const [infoWindows, setInfoWindows] = useState([]);\r\n    const [directionPlaces, setDirectionPlaces] = useState([])\r\n\r\n\r\n    const [places, setPlaces] = useState([]);\r\n    const [placesInfoWindows, setPlacesInfoWindows] = useState([]);\r\n\r\n    const [loadingArea, setLoadingArea] = useState(false);\r\n    const refMap = useRef(null);\r\n\r\n    const {filterQuery} = useContext(PlacesFilterContext);\r\n\r\n    const constructPlaceData = () => {\r\n        let p = tourInfo.days[currentDay].tour.filter(item => item.type === ElementType.place);\r\n        let places = [];\r\n        p.forEach(item => {\r\n            let placeId = item.data.details.placeId;\r\n            let lat = item.data.details.latitude;\r\n            let lng = item.data.details.longitude;\r\n            let name = item.data.details.name;\r\n            let photos = item.data.details.photos;\r\n            places.push({placeId: placeId, latitude: lat, longitude: lng, name: name, photo: photos.length > 0 ? photos[0].url : null});\r\n        });\r\n        setInfoWindows(Array(places.length).fill(false))\r\n        setDirectionPlaces(places);\r\n        return places\r\n    };\r\n\r\n    useEffect(() => {\r\n        const places = constructPlaceData();\r\n        if(places.length>1){\r\n            const waypoints = places.map(p =>({\r\n                location: {lat: p.latitude, lng:p.longitude},\r\n                stopover: true\r\n            }));\r\n\r\n            const origin = waypoints.shift().location;\r\n            let destination = null;\r\n\r\n            if (waypoints.length > 0)\r\n                destination = waypoints.pop().location;\r\n            else\r\n                destination = origin;\r\n\r\n            const directionsService = new google.maps.DirectionsService();\r\n\r\n            directionsService.route(\r\n                {\r\n                    origin: origin,\r\n                    destination: destination,\r\n                    travelMode: google.maps.TravelMode.DRIVING,\r\n                    waypoints: waypoints\r\n                },\r\n                (result, status) => {\r\n                    if (status === google.maps.DirectionsStatus.OK) {\r\n                        setDirection(result)\r\n                    } else {\r\n                        alert(status);\r\n                    }\r\n                }\r\n            );\r\n        } else {\r\n            setDirection(null)\r\n        }\r\n    }, [currentDay, tourInfo.days]);\r\n\r\n\r\n    function fetchPlaces(){\r\n        console.log(\"Getting all places...\", refMap.current.getCenter().lat())\r\n        getAllPlaces(filterQuery + \"&p=\" + 0 + \"&s=\" + 100 + \"&l=\" + refMap.current.getCenter().lat() + \",\" + refMap.current.getCenter().lng() + \"range=\" + 50)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!loadingArea){\r\n            if(refMap.current != null){\r\n                fetchPlaces()\r\n            }\r\n        }\r\n    }, [filterQuery]);\r\n\r\n    function getAllPlaces(query) {\r\n        setLoadingArea(true);\r\n        API.Places.getAllPlacesAdmin(query).then(locations => {\r\n            setPlacesInfoWindows(Array(locations.list.length).fill(false));\r\n            setPlaces(locations.list)\r\n            setLoadingArea(false)\r\n        }).catch(err => {\r\n            console.log(err);\r\n            setLoadingArea(false)\r\n        })\r\n    }\r\n\r\n    function addPlaceToTourDay(place) {\r\n        setPlacesInfoWindows(Array(places.length).fill(false));\r\n        addPlace(place, ElementType.place)\r\n    }\r\n\r\n    function removePlaceFromTourDay(place) {\r\n        tourInfo.days[currentDay].tour.map((row, index)=>{\r\n            if(row.type === ElementType.place){\r\n                if(row.data.details.placeId === place.placeId){\r\n                    removePlace(index)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Renders places markers on the map\r\n     * @return {*[]}\r\n     */\r\n    function PlacesMarkers() {\r\n        return places.map((location, i) => {\r\n            const latitude = parseFloat(location.latitude);\r\n            const longitude = parseFloat(location.longitude);\r\n            return <Marker\r\n                zIndex={1}\r\n                key={location.placeId}\r\n                position={{lat: latitude, lng: longitude}}\r\n                onClick={() => {\r\n                    let markers = Object.assign({}, placesInfoWindows);\r\n                    markers[i] = true;\r\n                    setPlacesInfoWindows(markers)\r\n                }}\r\n            >\r\n                {placesInfoWindows[i] && (\r\n                    <InfoWindow onCloseClick={() => {\r\n                        let markers = Object.assign({}, placesInfoWindows);\r\n                        markers[i] = false;\r\n                        setPlacesInfoWindows(markers)\r\n                    }\r\n                    }>\r\n                        <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                            <Typography variant=\"h6\">\r\n                                {location.name}\r\n                            </Typography>\r\n\r\n                            <Button\r\n                                onClick={()=>{addPlaceToTourDay(location)}}\r\n                                variant=\"text\"\r\n                                color=\"secondary\"\r\n                                size=\"large\"\r\n                                startIcon={<AddIcon/>}>\r\n                                Add this place to tour!\r\n                            </Button>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )}\r\n            </Marker>\r\n        })\r\n    }\r\n\r\n\r\n    const searchAreaComponent = useMemo(() => (\r\n        <CustomControlsManager position={window.google.maps.ControlPosition.TOP_CENTER}>\r\n            <div>\r\n                {loadingArea ?\r\n                    <CircularProgress />\r\n                    :\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                               fetchPlaces()\r\n                            }}\r\n                    >\r\n                        Search area...\r\n                    </Button>\r\n                }\r\n\r\n            </div>\r\n        </CustomControlsManager>\r\n    ), [loadingArea]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FilterBlock/>\r\n            <MyMapComponent\r\n                loadingElement={<div style={{height: `100%`}}/>}\r\n                containerElement={<div style={{height: `400px`}}/>}\r\n                mapElement={<div style={{height: `100%`}}/>}\r\n                refMap={refMap}>\r\n\r\n                {searchAreaComponent}\r\n                <PlacesMarkers/>\r\n\r\n                {/* Rendering direction path*/}\r\n                {directions ?\r\n                    <DirectionsRenderer\r\n                        options={{suppressMarkers: true, draggable: false}}\r\n                        draggable={false}\r\n                        directions={directions}/> : null}\r\n\r\n                {/* Rendering direction places markers*/}\r\n                {directionPlaces.map((marker, index) => {\r\n                    const position = { lat: marker.latitude, lng: marker.longitude };\r\n                    return <Marker\r\n                        zIndex={2}\r\n                        icon={{\r\n                            url: require('../../res/selectedTourIcon.svg'),\r\n                            scaledSize: new window.google.maps.Size(48, 48),\r\n                            origin: new window.google.maps.Point(0, 0),\r\n                            labelOrigin: new window.google.maps.Point(24, 16),\r\n                        }}\r\n                        key={index}\r\n                        position={position}\r\n                        label={{text: `${index+1}`, color: \"white\"}}\r\n                        onClick={\r\n                        ()=>{\r\n                            let info = Object.assign({}, infoWindows);\r\n                            info[index] = true;\r\n                            setInfoWindows(info);\r\n                        }\r\n                    }>\r\n                        {infoWindows[index] && (\r\n                        <InfoWindow onCloseClick={()=>{\r\n                            let info = Object.assign({}, infoWindows);\r\n                            info[index] = false;\r\n                            setInfoWindows(info);\r\n                        }}>\r\n                                <Card style={{display:\"flex\", flexDirection: \"column\",alignItems:\"center\"}}>\r\n                                    {marker.photo ?<Avatar alt=\"Remy Sharp\" src={marker.photo} className={classes.largeIcon}/> : null}\r\n\r\n                                    <Typography>\r\n                                        {marker.name}\r\n                                    </Typography>\r\n                                    <Button\r\n                                        onClick={()=>removePlaceFromTourDay(marker)}\r\n                                        style={{marginTop: 12}}\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        startIcon={<DeleteIcon />}\r\n                                    >\r\n                                        Remove from tour\r\n                                    </Button>\r\n\r\n                                </Card>\r\n                        </InfoWindow>\r\n                        )}\r\n                    </Marker>\r\n                })}\r\n\r\n            </MyMapComponent>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTourMap.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourMap)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useMemo, useState} from \"react\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TourPlacesWrapper from \"./TourPlacesWrapper\";\r\nimport PlaceSearch from \"./PlaceSearch\";\r\nimport DaysWrapper from \"./DaysWrapper\";\r\nimport TourDataReducer from \"./TourReducer\";\r\nimport TourInfoComponent from \"./TourInfoComponent\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TourMap from \"./TourMap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../Networking/API\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport shortid from 'shortid';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport RecommendationListDialog from \"../recomendation/RecommendationListDialog\";\r\nimport {RecommendationType} from \"../recomendation/Recommendation\";\r\nimport history from \"../../helpers/history\";\r\nimport TransportItem from \"./TransportItem\";\r\n\r\nexport const ElementType = {\r\n  place: 0,\r\n  transport: 1\r\n}\r\nexport const PlaceType = {\r\n  api: 1,\r\n  local: 0\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      overflow: \"scroll\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      overflow: \"initial\",\r\n      display: \"flex\",\r\n    },\r\n    height: `calc(100% - 64px)`,\r\n    width: \"100%\",\r\n    '&::-webkit-scrollbar': {\r\n      display: \"none\"\r\n    },\r\n  },\r\n  loader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100vw\",\r\n    height: \"100vh\"\r\n  },\r\n  rightLayout: {\r\n    flex: 2,\r\n    '&::-webkit-scrollbar': {\r\n      display: \"none\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      height: \"100%\",\r\n      overflowY: \"scroll\",\r\n\r\n    },\r\n  },\r\n  leftLayout: {\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      height: \"100%\",\r\n    },\r\n    overflowY: \"scroll\",\r\n\r\n    flex: 1,\r\n    '&::-webkit-scrollbar': {\r\n      display: \"none\"\r\n    },\r\n  },\r\n  actionsArea: {\r\n    padding: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n\r\n})\r\n\r\nconst sampleTourData = {\r\n  name: \"\",\r\n  description: \"\",\r\n  isVerified: true,\r\n  isPublished: false,\r\n  days: [\r\n    {\r\n      description: \"\",\r\n      elementIdentifier: \"jkasfbjkdsbjk\",\r\n      tour: []\r\n    }\r\n  ]\r\n}\r\n\r\nfunction Tour({classes, match}) {\r\n\r\n  const [localPlacesFound, setLocalPlacesFound] = useState([])\r\n  const [apiPlacesFound, setApiPlacesFound] = useState([])\r\n  const [currentDay, setCurrentDay] = useState(0)\r\n  const [tourId, setTourId] = useState(match.params.tourId)\r\n  const [isLoading, setIsLoading] = useState(match.params.tourId !== undefined);\r\n  const [recommendationsDialogOpen, setRecommendationsDialogOpen] = useState(false)\r\n\r\n  const [selectedCategories, setSelectedCategories] = useState([])\r\n  const [availableCategories, setAvailableCategories] = useState([])\r\n\r\n  const [errorInfo, setErrorInfo] = useState({\r\n        errors: {\r\n          titleMissing: false,\r\n          /* Any client-side verification errors may by added here, and handled in individual components */\r\n        },\r\n        showErrors: false\r\n      }\r\n  )\r\n\r\n  const [tourInfo, dispatchTourInfo] = React.useReducer(TourDataReducer, sampleTourData)\r\n  const {addConfig} = UseSnackbarContext();\r\n\r\n  const handleAddPlaceClick = (placeInfo, type) => {\r\n    dispatchTourInfo({\r\n      type: 'ADD_ELEMENT',\r\n      day: currentDay,\r\n      data: {\r\n        type: ElementType.place,\r\n        data: {\r\n          type: type,\r\n          details: {...placeInfo},\r\n          transport: {fk_transportId: 3},\r\n          note: ''\r\n        },\r\n      },\r\n      onError: () => {\r\n        addConfig(false, \"This place already exists in this tour.\")\r\n      }\r\n    })\r\n  }\r\n\r\n  const removeElementCallback = (index) => {\r\n    dispatchTourInfo({\r\n      type: 'REMOVE_ELEMENT',\r\n      day: currentDay,\r\n      index: index\r\n    })\r\n  };\r\n\r\n  const handleEditPlace = (placeId) => {\r\n    window.open(`https://www.traveldirection.ax.lt/app/addplace/${placeId}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (tourId !== undefined) { //If user wants to edit a tour, we download all tour data. loadData also downloads categories\r\n      loadData()\r\n    } else { //Otherwise, we just download categories instead.\r\n      API.Categories.getAllCategories().then(response => {\r\n        setAvailableCategories(response)\r\n      }).catch(() => {\r\n        addConfig(false, \"Categories failed to load\")\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const parseTourInfoResponse = (response) => {\r\n    let aggregatedDays = [];\r\n    response.days.forEach(day => {\r\n      let aggregatedElements = [];\r\n      day.data.forEach(place => {\r\n        let aggregatedPlace = {\r\n          type: ElementType.place,\r\n          data: {\r\n            details: place.place, type: place.place.type, transport: place.transport == null ? {fk_transportId: 3} : {\r\n              fk_transportId: place.transport.fk_transportId - 1\r\n            }, note: place.note == null ? '' : place.note\r\n          }\r\n        }\r\n        delete aggregatedPlace.data.details.type\r\n        aggregatedElements.push(aggregatedPlace)\r\n      })\r\n      let aggregatedDay = {...day, tour: aggregatedElements, elementIdentifier: shortid.generate()}\r\n      delete aggregatedDay.data\r\n      aggregatedDays.push(aggregatedDay)\r\n    })\r\n    let aggregatedTour = {...response, days: aggregatedDays}\r\n    dispatchTourInfo({type: 'SET_ALL', data: aggregatedTour})\r\n  }\r\n\r\n  const loadData = () => {\r\n    Promise.all([\r\n          API.Tour.getTour(\"?id=\" + tourId),\r\n          API.Categories.getAllCategories(),\r\n          API.Tour.getTourCategories(\"?id=\" + tourId),\r\n        ]\r\n    ).catch(() => {\r\n      addConfig(false, \"Tour has failed to load\")\r\n      setTourId(undefined)\r\n    }).then((response) => {\r\n      parseTourInfoResponse(response[0])\r\n      setAvailableCategories(response[1])\r\n      setSelectedCategories(response[2])\r\n    }).finally(() => {\r\n      setIsLoading(false)\r\n    })\r\n  }\r\n\r\n  const handleSave = () => {\r\n    let containsErrors = false;\r\n    Object.keys(errorInfo.errors).map(function (keyName, keyIndex) {\r\n      if (errorInfo.errors[keyName]) {\r\n        setErrorInfo(state => {\r\n          return {...state, showErrors: true}\r\n        })\r\n        containsErrors = true;\r\n      }\r\n    })\r\n    if (containsErrors) return\r\n    setErrorInfo(state => {\r\n      return {...state, showErrors: false}\r\n    })\r\n\r\n    const aggregatedDays = []\r\n    tourInfo.days.forEach(day => {\r\n      let aggregatedDay = {...day, data: []}\r\n      delete aggregatedDay.tour\r\n      delete aggregatedDay.elementIdentifier\r\n      for (let i = 0; i < day.tour.length; i++) {\r\n        let element = day.tour[i]\r\n        if (element.type !== ElementType.place)\r\n          continue;\r\n        let aggregatedPlace = {\r\n          place: {\r\n            type: element.data.type,\r\n            placeId: element.data.details.placeId\r\n          },\r\n          note: element.data.note\r\n        }\r\n        if (i !== day.tour.length - 1)\r\n          aggregatedPlace.transport = {fk_transportId: element.data.transport.fk_transportId + 1}\r\n        else\r\n          aggregatedPlace.transport = {fk_transportId: null}\r\n\r\n        aggregatedDay.data.push(aggregatedPlace)\r\n      }\r\n      aggregatedDays.push(aggregatedDay)\r\n    })\r\n    let aggregatedTour = {...tourInfo, days: aggregatedDays}\r\n\r\n    if (tourId === undefined) {\r\n      API.Tour.insertTour(aggregatedTour).then((response) => {\r\n        setTourId(response)\r\n        return response\r\n      }).then((response) => Promise.all(\r\n          [\r\n            API.Tour.updateTourCategories(selectedCategories, \"?p=\" + response)\r\n          ]\r\n      )).then((() => {\r\n        addConfig(true, \"Tour has been inserted successfully!\")\r\n      })).catch((error) => {\r\n        addConfig(false, \"Something went wrong while saving this tour.\")\r\n      })\r\n    } else {\r\n      Promise.all([\r\n        API.Tour.updateTour(aggregatedTour, \"?id=\" + tourId),\r\n        API.Tour.updateTourCategories(selectedCategories, \"?p=\" + tourId)\r\n      ])\r\n          .then(() => {\r\n            addConfig(true, \"Tour has been updated successfully!\")\r\n          }).catch((error) => {\r\n        addConfig(false, \"Something went wrong while saving this tour.\")\r\n      })\r\n    }\r\n\r\n  };\r\n\r\n  const leftLayout = useMemo(() => (\r\n      <div className={classes.leftLayout}>\r\n        <PlaceSearch addPlaceCallback={handleAddPlaceClick} localPlacesFound={localPlacesFound}\r\n                     setLocalPlacesFound={setLocalPlacesFound} apiPlacesFound={apiPlacesFound}\r\n                     setApiPlacesFound={setApiPlacesFound}/>\r\n      </div>\r\n  ), [localPlacesFound, apiPlacesFound, currentDay])\r\n\r\n\r\n  let dayInfoWithoutDesc = JSON.stringify(tourInfo.days.map(day => {\r\n    let dayCopy = {...day}\r\n    delete dayCopy.description\r\n    return dayCopy.tour.map(day => day.data.details)\r\n  }))\r\n\r\n\r\n  const tourPlacesMemoized = useMemo(() => (<TourPlacesWrapper errorInfo={errorInfo} setErrorInfo={setErrorInfo}\r\n                                                               handleEditPlace={handleEditPlace}\r\n                                                               currentDay={currentDay} tourInfoReducer={dispatchTourInfo} tourInfo={tourInfo}/>), [errorInfo, currentDay, JSON.stringify(tourInfo.days.map(day => day.tour))])\r\n  const mapComponent = useMemo(() => (\r\n      <React.Fragment>\r\n        <TourMap tourInfo={tourInfo}\r\n                 currentDay={currentDay}\r\n                 addPlace={handleAddPlaceClick}\r\n                 removePlace={removeElementCallback}\r\n        />\r\n      </React.Fragment>\r\n  ), [dayInfoWithoutDesc, currentDay])\r\n\r\n  const daysWrapperMemoized = useMemo(() => (<DaysWrapper currentDay={currentDay} setCurrentDay={setCurrentDay}\r\n                                                          tourInfo={tourInfo}\r\n                                                          tourInfoReducer={dispatchTourInfo}/>), [JSON.stringify(tourInfo.days.map(day => {\r\n    return {...day, tour: null}\r\n  }))])\r\n\r\n  const tourDaysComponents = useMemo(() => (\r\n      <div>\r\n        {daysWrapperMemoized}\r\n        <Divider variant=\"middle\"/>\r\n        {mapComponent}\r\n        {tourPlacesMemoized}\r\n      </div>\r\n  ), [tourInfo.days, currentDay, errorInfo]);\r\n\r\n  const tourInfoMemoized = useMemo(() => (\r\n      <TourInfoComponent tourInfo={tourInfo} tourInfoReducer={dispatchTourInfo} errorInfo={errorInfo}\r\n                         setErrorInfo={setErrorInfo}\r\n                         tourId={tourId}\r\n                         setSelectedCategories={setSelectedCategories} selectedCategories={selectedCategories}\r\n                         availableCategories={availableCategories}\r\n                         setAvailableCategories={setAvailableCategories}/>), [availableCategories, selectedCategories, tourId, errorInfo, tourInfo.name, tourInfo.description, tourInfo.isPublished, tourInfo.isVerified])\r\n\r\n  const rightLayout = useMemo(() => (\r\n      <Paper className={classes.rightLayout}>\r\n        {tourInfoMemoized}\r\n        <Divider variant=\"middle\"/>\r\n        {tourDaysComponents}\r\n        <div className={classes.actionsArea}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => setRecommendationsDialogOpen(true)}\r\n                  disabled={tourId == null}>\r\n            Add tour to recommendation\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n            Save this tour\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n  ), [tourInfo, currentDay, errorInfo, availableCategories, selectedCategories]);\r\n\r\n  const theme = useTheme();\r\n  const largeScreen = useMediaQuery(theme.breakpoints.up('lg'));\r\n\r\n  const content = (\r\n      <React.Fragment>\r\n        {largeScreen ?\r\n            <React.Fragment>\r\n              {leftLayout}\r\n              {rightLayout}\r\n            </React.Fragment> :\r\n            <React.Fragment>\r\n              {rightLayout}\r\n              {leftLayout}\r\n            </React.Fragment>\r\n        }\r\n      </React.Fragment>\r\n  );\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <RecommendationListDialog\r\n            setOpen={setRecommendationsDialogOpen}\r\n            open={recommendationsDialogOpen}\r\n            objectId={tourId}\r\n            type={RecommendationType.tour}/>\r\n        {isLoading ? <div className={classes.loader}><CircularProgress/></div> : content}\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Tour)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n\r\n    sortingButtons: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n\r\n    },\r\n    root:{\r\n        height:\"100vh\",\r\n        width:\"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content:{\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Tour name', isId: true},\r\n    { id: 'description', numeric: false, disablePadding: false, label: 'Tour description',isId: false},\r\n    { id: 'lastModified', numeric: false, disablePadding: false, label: 'Date modified',isId: false},\r\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\r\n];\r\n\r\nfunction Tours(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { classes } = props;\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [filterQuery, setFilterQuery] = useState(\"\");\r\n\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    useEffect(()=>{\r\n        if(!isLoading){\r\n            getAllTours(\"?o=\"+filterQuery);\r\n        }\r\n    },[filterQuery]);\r\n\r\n    function parseData(data){\r\n        console.log(\"deita\", data.list)\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updateTourCallback(id){\r\n        history.push(\"/app/addtour/\"+id)\r\n    }\r\n    function removePlaceCallback(id){\r\n        console.log(\"tour id\", id)\r\n\r\n        addAlertConfig(Strings.DIALOG_TOUR_DELETE_TITLE, Strings.DIALOG_TOUR_DELETE_MESSAGE, [{name: \"Delete\", action: () => {\r\n                setIsLoading(true);\r\n                API.Tour.removeTour(\"?id=\"+id).then(response=>{\r\n                    let tmp = [];\r\n                    data.map(row=>{\r\n                        if(row[\"tourId\"] !== id){\r\n                            tmp.push(row)\r\n                        }\r\n                    });\r\n                    setData(tmp);\r\n                    addConfig(true, Strings.SNACKBAR_TOUR_REMOVE_SUCCESS)\r\n                    setIsLoading(false)\r\n                }).catch(error=>{\r\n                    setIsLoading(false);\r\n                    addConfig(false, Strings.SNACKBAR_ERROR)\r\n                })\r\n            }}],  ()=>{setIsLoading(false)})\r\n    }\r\n\r\n    const changePageCallback = (p=0, keyword=\"\") => {\r\n        setIsLoading(true);\r\n        getAllTours(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword+\"&o=\"+filterQuery)\r\n    };\r\n\r\n\r\n    //Sorting stuff\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let filters = [];\r\n        let fq = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n            if(row.filter){\r\n                fq.push(row.filterName)\r\n            }\r\n            filters.push(row)\r\n        });\r\n\r\n        setFilterQuery(fq.join(\",\"));\r\n        setFilterOptions(filters)\r\n    };\r\n\r\n    const customToolbarElements = () =>{\r\n        return <div>\r\n            <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                    <FilterListIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={()=>{setAnchorEl(null)}}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.sortingButtons}>\r\n                    {filterOptions.map(row=>{\r\n                        return <FormControlLabel\r\n                            control={<Checkbox checked={row.filter} onChange={()=>filterOptionsChanged(row.filterName)} name={row.filterName} />}\r\n                            label={row.filterLabel}\r\n                        />\r\n                    })}\r\n                </div>\r\n\r\n            </Popover>\r\n        </div>\r\n    };\r\n    /*------------------------------------------------------------------------------------------------------*/\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content} >\r\n                <TableComponent\r\n                    title={\"Tours\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updateTourCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    id={\"tourId\"}\r\n                    isLoading={isLoading}\r\n                    customToolbarElements={customToolbarElements()}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={()=>{history.push(\"/app/addtour\")}}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon />}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n    function getAllTours(urlParams=\"\") {\r\n        API.Tour.getAllToursAdmin(urlParams).then(response=>{\r\n            console.log(response);\r\n            parseData(response)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nTours.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Tours);","import Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport API from \"../../Networking/API\";\r\n\r\n\r\nexport const AbstractionCategoryDialog = ({dialogConfig, setDialogConfig, onDoneCallback}) => {\r\n\r\n\r\n\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [error, setError] = useState(0)\r\n\r\n    const [options, setOptions] = useState();\r\n    const [selectedOptions, setSelectedOptions] = useState();\r\n\r\n\r\n    const deInit = () => {\r\n        setError(0)\r\n        setDialogConfig(oldVal=>{\r\n            return {\r\n                ...oldVal,\r\n                open:false\r\n            }\r\n        });\r\n        setInputText(\"\")\r\n    };\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(dialogConfig)\r\n            setInputText(dialogConfig.category.name);\r\n            API.Categories.abstractedCategoriesLeftOver().then((options)=>{\r\n                console.log(\"Opcionais\", options)\r\n                setOptions(options)\r\n            }).catch((err)=>{\r\n\r\n            }).finally(()=>{\r\n\r\n            });\r\n            setSelectedOptions(dialogConfig.payload.selectedOptions);\r\n    },[dialogConfig]);\r\n\r\n    const handleClose = () => {\r\n        deInit()\r\n    };\r\n\r\n    const handleDone = () => {\r\n        let errorCode = validateInput(inputText);\r\n        setError(errorCode);\r\n        if(errorCode !== 0) return;\r\n        onDoneCallback(selectedOptions, inputText, dialogConfig.category.categoryId);\r\n        deInit()\r\n    };\r\n\r\n    function validateInput(input){\r\n        return input.length > 0 ? 0 : 1\r\n    }\r\n    const handleInput = (e) => {\r\n        setInputText(e.target.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={dialogConfig.open} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n                <DialogTitle id=\"form-dialog-title\">Edit abstraction category</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Type the abstraction category name\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        helperText={error !== 0 ? \"Contains errors\" : \"\"}\r\n                        error={error !== 0}\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        onInput={handleInput}\r\n                        label=\"Restaurants, hiking, etc...\"\r\n                        defaultValue={dialogConfig.category.name}\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    {options && selectedOptions && <AutoCompleteChip\r\n                        label=\"Select categories to include in abstraction\"\r\n                        id=\"categoryId\"\r\n                        options={options}\r\n                        setOptions={setOptions}\r\n                        selectedOptions={selectedOptions}\r\n                        setSelectedOptions={setSelectedOptions}\r\n                    />}\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleDone} color=\"primary\">\r\n                        Done\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport TableComponent from \"./TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport UseEditDialogContext from \"../contexts/UseEditDialogContext\";\r\nimport AutoCompleteChip from \"./AutocompleteChip\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {AbstractionCategoryDialog} from \"./feedback/AbstractionCategoryDialog\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\",\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    buttonWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        width: \"100%\",\r\n    }\r\n});\r\n\r\nconst categoriesHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Category name', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n];\r\n\r\nconst categoriesAbstractedHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Category name', isId: false},\r\n    {id: 'label', numeric: false, disablePadding: false, label: 'Mapped categories', isId: false},\r\n    {id: 'count', numeric: false, disablePadding: false, label: 'Count', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n];\r\n\r\nconst tagsHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Tag name', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n];\r\n\r\nfunction Resources({classes}) {\r\n\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addEditDialogConfig} = UseEditDialogContext();\r\n\r\n    const [loading, setIsLoading] = useState({\r\n        categories: false,\r\n        tags: false\r\n    });\r\n\r\n\r\n    const [abstractedCategories, setAbstractedCategories] = useState([]);\r\n\r\n    const [abstractedDialogConfig, setAbstractedDialogConfig] = useState({\r\n        open:false,\r\n        category: {name: \"asd\", categoryId: -1},\r\n        payload: {\r\n            options: [],\r\n            selectedOptions: []\r\n        }\r\n    });\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [tags, setTags] = useState([]);\r\n    const [featuredTags, setFeaturedTags] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setIsLoading({categories: true, tags: true, abstractedCats: true});\r\n        Promise.all([\r\n                API.Categories.getAllCategories(),\r\n                API.Tags.getAllTags(),\r\n                API.Categories.getAllAbstractedCategories()\r\n            ]\r\n        ).then(response => {\r\n            setCategories(response[0]);\r\n            parseTags(response[1]);\r\n            parseAbstractedCats(response[2]);\r\n        }).catch(() => {\r\n            addConfig(false, \"Could not retrieve data!\")\r\n        }).finally(() => {\r\n            setIsLoading(oldData => {return{ ...oldData, categories: false, tags: false, abstractedCats: false}})\r\n        })\r\n    }, [])\r\n\r\n    function parseTags(response){\r\n\r\n        console.log(\"Tags\", response)\r\n        setTags(response);\r\n\r\n        const featuredTags = response.filter(tag => tag.isFeatured === true);\r\n        console.log(\"Featured tags\", featuredTags)\r\n        setFeaturedTags(featuredTags);\r\n    }\r\n\r\n    function parseAbstractedCats(response) {\r\n        let cats = response;\r\n        for(let i = 0; i<cats.length; i++){\r\n            cats[i].count = cats[i].mappedCategories.length;\r\n            cats[i].label = cats[i].mappedCategories.map(elem=>{\r\n                return elem.name;\r\n            }).join(' | ')\r\n        }\r\n        setAbstractedCategories(cats)\r\n    }\r\n\r\n\r\n    const handleAddCategory = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add category\",\r\n            explanation: \"Type the category name\",\r\n            onDoneCallback: (text) => {\r\n               API.Categories.addCategory([{name: text}]).then((response)=>{\r\n                   addConfig(true, \"Category inserted successfully\")\r\n                   setCategories(oldData => [...oldData, {name: text, categoryId: response[0]}])\r\n                }).catch(error=>{\r\n                   addConfig(false, \"Failed to add category.\")\r\n               })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Restaurants, hiking, etc...\"\r\n        })\r\n    }\r\n\r\n    const removeCategoryCallback = (categoryId) => {\r\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\r\n        addAlertConfig(\"Warning\", \"Are you sure you want the category, named '\" + categoryName + \"'?\", [{\r\n            name: \"yes\", action: () => {\r\n                setIsLoading(oldData => {\r\n                    return {...oldData, categories: true}\r\n                })\r\n                API.Categories.removeCategory([{categoryId: categoryId}]).then(() => {\r\n                    addConfig(true, \"Category successfully removed.\")\r\n                    setCategories(oldData => oldData.filter(item => item.categoryId !== categoryId))\r\n                }).catch(() => {\r\n                    addConfig(false, \"An error has occurred while removing category.\")\r\n                }).finally(() => {\r\n                    setIsLoading(oldData => {\r\n                        return {...oldData, categories: false}\r\n                    })\r\n                })\r\n            }\r\n        }], () => {\r\n        })\r\n    };\r\n\r\n    const updateCategoryHandler = (categoryId) => {\r\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\r\n        addEditDialogConfig({\r\n            title: \"Edit category\",\r\n            explanation: \"Type the category name\",\r\n            defaultText: categoryName,\r\n            onDoneCallback: (text) => {\r\n                API.Categories.updateCategory([{name: text, categoryId: categoryId}]).then(()=>{\r\n                    addConfig(true, \"Category updated successfully\")\r\n                    setCategories(oldData => {return oldData.map(item => {\r\n                        if(item.categoryId === categoryId)\r\n                            return {...item, name: text}\r\n                        else return item\r\n                    })})\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to update category.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Restaurants, hiking, etc...\"\r\n        })\r\n    };\r\n\r\n    function onDoneUpdatingAbstractedCategory(selectedOptions, text, id) {\r\n        console.log({selectedOptions, text, id})\r\n        API.Categories.updateAbstractedCategories(\r\n            {name: text,\r\n                categoryId: id,\r\n                mappedCategories: selectedOptions\r\n            }).then(()=>{\r\n            addConfig(true, \"Abstraction category updated successfully\");\r\n            setAbstractedCategories(oldData => {return oldData.map(item => {\r\n                if(item.categoryId === id)\r\n                    return {...item, name: text,\r\n                        mappedCategories: selectedOptions,\r\n                        count: selectedOptions.length,\r\n                        label: selectedOptions.map(row=>{\r\n                            return row.name;\r\n                        }).join(' | ')\r\n                    };\r\n                else return item\r\n            })})\r\n        }).catch(()=>{\r\n            addConfig(false, \"Failed to update abstraction category.\")\r\n        })\r\n    }\r\n\r\n    const updateAbstractionCategoryHandler = (categoryId) => {\r\n        let abstractedCat = abstractedCategories.filter(item => item.categoryId === categoryId)[0];\r\n        setAbstractedDialogConfig({\r\n            open: true,\r\n            category: abstractedCat,\r\n            payload: {\r\n                options: categories,\r\n                selectedOptions: abstractedCat.mappedCategories\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    const updateTagHandler = (id) => {\r\n        let tagName = tags.filter(item => item.tagId === id)[0].name\r\n        console.log(tagName)\r\n        addEditDialogConfig({\r\n            title: \"Edit tag\",\r\n            explanation: \"Type the tag name\",\r\n            defaultText: tagName,\r\n            onDoneCallback: (text) => {\r\n                console.log({id, text});\r\n                API.Tags.updateTags([{name: text, tagId: id}]).then(()=>{\r\n                    addConfig(true, \"Tag updated successfully\");\r\n                    setTags(oldData => {return oldData.map(item => {\r\n                        if(item.tagId === id)\r\n                            return {...item, name: text}\r\n                        else return item\r\n                    })})\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to update tag.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    };\r\n\r\n    const removeTagHandler = (id) => {\r\n        let tagName = tags.filter(item => item.tagId === id)[0].name\r\n        addAlertConfig(\"Warning\", \"Are you sure you want the tag, named '\" + tagName + \"'?\", [{\r\n            name: \"yes\", action: () => {\r\n                setIsLoading(oldData => {\r\n                    return {...oldData, tags: true}\r\n                })\r\n                API.Tags.removeTags([{tagId: id}]).then(() => {\r\n                    addConfig(true, \"Tag successfully removed.\")\r\n                    setTags(oldData => oldData.filter(item => item.tagId !== id))\r\n                }).catch(() => {\r\n                    addConfig(false, \"An error has occurred while removing tag.\")\r\n                }).finally(() => {\r\n                    setIsLoading(oldData => {\r\n                        return {...oldData, tags: false}\r\n                    })\r\n                })\r\n            }\r\n        }], () => {\r\n        })\r\n    }\r\n\r\n    const handleAddTag = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add tag\",\r\n            explanation: \"Type the tag name\",\r\n            onDoneCallback: (text) => {\r\n                API.Tags.addTag([{name: text}]).then((response)=>{\r\n                    addConfig(true, \"Tag inserted successfully\")\r\n                    setTags(oldData => [...oldData, {name: text, tagId: response[0]}])\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to add tag.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    };\r\n\r\n    const searchFunction = (keyword, item) => {\r\n        if(keyword == null || keyword.length < 1) return true;\r\n        return item.name.includes(keyword)\r\n    };\r\n\r\n    function SuperTags() {\r\n        return (\r\n            <div>\r\n                <AutoCompleteChip\r\n                    options={tags}\r\n                    setOptions={setTags}\r\n                    selectedOptions={featuredTags}\r\n                    setSelectedOptions={setFeaturedTags}\r\n                    id='tagId'\r\n                    label=\"Select featured tags\"\r\n                />\r\n                <Alert severity=\"error\">\r\n                    Please, bare in mind that there shouldn't be more than ~8 featured tags.\r\n                    These selections directly influence search results in Travelgo app.\r\n                </Alert>\r\n                <Button\r\n                    style={{alignSelf: 'flex-end', marginBottom: 32, marginTop: 16}}\r\n                    onClick={()=>{\r\n                        API.Tags.updateFeaturedTags(\r\n                            featuredTags\r\n                        ).then(()=>{\r\n                            addConfig(true, \"Featured tags updated and now live!\")\r\n                        }).catch(()=>{\r\n                            addConfig(false, \"Error updating featured tags\")\r\n                        })\r\n                    }}\r\n                    variant='contained'\r\n                    color='primary'\r\n                >\r\n                    Save featured tags\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n\r\n                <TableComponent\r\n                    title={\"Categories\"}\r\n                    headCells={categoriesHeadCells}\r\n                    data={categories}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateCategoryHandler}\r\n                    removeCallback={removeCategoryCallback}\r\n                    id={\"categoryId\"}\r\n                    isLoading={loading.categories}\r\n                />\r\n\r\n                <Box className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleAddCategory}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add a new category\r\n                    </Button>\r\n                </Box>\r\n\r\n                <br/>\r\n                <br/>\r\n\r\n                <AbstractionCategoryDialog\r\n                    setDialogConfig={setAbstractedDialogConfig}\r\n                    dialogConfig={abstractedDialogConfig}\r\n                    onDoneCallback={onDoneUpdatingAbstractedCategory}\r\n                />\r\n                <TableComponent\r\n                    title={\"Abstracted categories\"}\r\n                    headCells={categoriesAbstractedHeadCells}\r\n                    data={abstractedCategories}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateAbstractionCategoryHandler}\r\n                    removeCallback={()=>{}}\r\n                    id={\"categoryId\"}\r\n                    isLoading={loading.categories}\r\n                />\r\n\r\n                <br/>\r\n\r\n                <TableComponent\r\n                    title={\"Tags\"}\r\n                    headCells={tagsHeadCells}\r\n                    data={tags}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateTagHandler}\r\n                    removeCallback={removeTagHandler}\r\n                    customToolbarElements={SuperTags()}\r\n                    id={\"tagId\"}\r\n                    isLoading={loading.tags}\r\n                />\r\n\r\n                <Box className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleAddTag}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add a new tag\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nResources.propTypes = {\r\n};\r\n\r\nexport default withStyles(styles)(Resources)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutoCompleteChip from \"./AutocompleteChip\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\n\r\nconst UpdateUserDialog = ({open, setOpen, userData, availableRoles, setAvailableRoles}) => {\r\n\r\n    const [selectedRoles, setSelectedRoles] = useState([]);\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    useEffect(()=>{\r\n        setSelectedRoles(userData.roles)\r\n    },[userData.roles]);\r\n\r\n    function setRoles() {\r\n        addAlertConfig(\"Update user\", \"Are you sure you want to update this user's permissions?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                let roles = []\r\n                selectedRoles.map(row=>{\r\n                    roles.push(row.roleId)\r\n                });\r\n                API.User.setRoles({userId: userData.id, roles: roles}).then(response=>{\r\n                    addConfig(true, \"Updated user successfully\");\r\n                    setOpen(false)\r\n                }).catch(error=>{\r\n                    addConfig(false, \"Could not update user\")\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n    const renderRoles = <div>\r\n\r\n    </div>\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={'lg'}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">Update user - {userData.name + \" \" + userData.surname}</DialogTitle>\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Change user permissions\r\n                </Typography>\r\n\r\n                <AutoCompleteChip\r\n                    id=\"roleId\"\r\n                    name=\"role\"\r\n                    label=\"Select sources\"\r\n                    options={availableRoles}\r\n                    setOptions={setAvailableRoles}\r\n                    setSelectedOptions={setSelectedRoles}\r\n                    selectedOptions={selectedRoles}\r\n                />\r\n\r\n                {\r\n                    selectedRoles.map(row=>{\r\n                        return <div>\r\n                            <b>{row.role}</b> - {row.description}\r\n                            <br/>\r\n                        </div>\r\n                    })\r\n                }\r\n\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button onClick={()=>setRoles()}\r\n                        color=\"primary\">\r\n                    Update user\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\n\r\nexport default UpdateUserDialog\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutoCompleteChip from \"./AutocompleteChip\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {averageTimeSpent} from \"../helpers/averageTimeSpent\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {load} from \"dotenv\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n\r\n});\r\n\r\nfunction AddUserDialog({classes, open, setOpen, availableRoles}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [user, setUser] = useState({name: \"\", surname: \"\", password: \"\", email: \"\", role: -1});\r\n    const [error, setError] = useState({name: false, surname: false, password: false, email: false, role: false});\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const userDataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let userData = Object.assign({}, user);\r\n        userData[name] = value\r\n        setUser(userData)\r\n    };\r\n\r\n    function parseRoleFromId(id){\r\n        return availableRoles.map(row=>{\r\n            if(row.roleId===id){\r\n                return  row.role + \" - \" + row.description\r\n            }\r\n        })\r\n    }\r\n\r\n    function checkErrors(){\r\n        let errors = Object.assign({}, error)\r\n        let hasErrors = false;\r\n        for (let key in user) {\r\n            errors[key] = user[key] === \"\" || user[key] === -1;\r\n            if(errors[key] === true){\r\n                hasErrors = true\r\n            }\r\n        }\r\n        setError(errors);\r\n        return hasErrors\r\n    }\r\n\r\n    function addUser(){\r\n        if(checkErrors()){\r\n            return\r\n        }\r\n        addAlertConfig(\"Add new editor\", \"Are you sure you want to add new editor?. This user has role: \" + parseRoleFromId(user.role), [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Auth.register(user).then(userId=>{\r\n                    API.User.setRoles({userId: userId, roles: [user.role]}).then(response=>{\r\n                        addConfig(true, \"User was added successfully!\")\r\n                        setOpen(false);\r\n                        setLoading(false)\r\n                    }).catch(error=>{\r\n                        setOpen(false);\r\n                        addConfig(false, \"Could not map user permissions!\");\r\n                        setLoading(false)\r\n                    })\r\n                }).catch(error=>{\r\n                    addConfig(false, error.message);\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add new editor</DialogTitle>\r\n            <DialogContent>\r\n                    <div className={classes.root}>\r\n                        <TextField id=\"outlined-basic\"\r\n                                   error={error.name}\r\n                                   required\r\n                                   label=\"Name\"\r\n                                   name=\"name\"\r\n                                   value={user['name']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.surname}\r\n                                   label=\"Surname\"\r\n                                   name=\"surname\"\r\n                                   value={user['surname']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.email}\r\n                                   label=\"Email\"\r\n                                   name=\"email\"\r\n                                   value={user['email']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.password}\r\n                                   autoComplete='new-password'\r\n                                   label=\"Password\"\r\n                                   name=\"password\"\r\n                                   value={user['password']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   type=\"password\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <br/>\r\n                        <Alert severity=\"info\">\r\n                            Make sure to use secure password as it will give access to modify data in admin panel.\r\n                            <br/>\r\n                            *Password must contain between 8 and 30 characters\r\n                            <br/>\r\n                            *Password must have atleast one digit\r\n                            <br/>\r\n                            *Password must have atleast one upper character\r\n                        </Alert>\r\n\r\n                        <Divider className={classes.textField} medium />\r\n\r\n                        <FormControl error={error.role} variant=\"outlined\" className={classes.textField}>\r\n                            <InputLabel>User role</InputLabel>\r\n                            <Select\r\n                                onChange={(e, value) =>{\r\n                                    let userTmp = Object.assign({},user);\r\n                                    userTmp.role = value.props.value\r\n                                    setUser(userTmp)\r\n                                }}\r\n                                value={user.role}\r\n                                label=\"Select user role\"\r\n                            >\r\n                                <option value=\"-1\">None</option>\r\n                                {\r\n                                    availableRoles.map(row=>{\r\n                                        return <option value={row.roleId}> {row.role}</option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                            <FormHelperText>Select one of the available user roles</FormHelperText>\r\n                        </FormControl>\r\n\r\n                        {user.role === 1 ? <Alert className={classes.textField}\r\n                            severity=\"warning\">\r\n                            ROLE_ADMIN will have full access to the system. Make sure you know this person!\r\n                            </Alert> :\r\n                        null\r\n                        }\r\n\r\n                        <Typography variant=\"h6\" style={{marginTop: 48}}>\r\n                            Available roles\r\n                        </Typography>\r\n                        <div className={classes.textField}>\r\n                            {\r\n                                availableRoles.map(row=>{\r\n                                    return (\r\n                                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                                            {row.role} - {row.description}\r\n                                        </Typography>\r\n                                    )\r\n\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        addUser()\r\n                    }}\r\n                >\r\n                    Add user\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\nexport default withStyles(styles)(AddUserDialog)\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UpdateUserDialog from \"../components/UpdateUserDialog\";\r\nimport AddUserDialog from \"../components/AddUserDialog\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    autocomplete: {\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline: \"0\",\r\n        marginBottom: \"4px\"\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Name', isId: true},\r\n    {id: 'surname', numeric: false, disablePadding: false, label: 'Surname', isId: false},\r\n    {id: 'email', numeric: false, disablePadding: false, label: 'Contact email', isId: false},\r\n    {id: 'phoneNumber', numeric: false, disablePadding: false, label: 'Phone number', isId: false},\r\n    {id: 'parsedRoles', numeric: false, disablePadding: false, label: 'Roles', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n];\r\n\r\nfunction Places(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState({});\r\n    const [allRoles, setAllRoles] = useState([])\r\n    const [pageData, setPageData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const {classes} = props;\r\n\r\n    const [openUpdateDialog, setOpenUpdateDialog] = useState(false);\r\n    const [openAddDialog, setOpenAddDialog] = useState(false);\r\n\r\n\r\n    // const {filterQuery} = useContext(PlacesFilterContext)\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n\r\n    useEffect(()=>{\r\n        API.User.getAllRoles().then(roles=>{\r\n            console.log(roles);\r\n            setAllRoles(roles);\r\n        }).catch(error=>{\r\n            addConfig(false, error.message)\r\n        })\r\n    },[]);\r\n\r\n\r\n\r\n    function requestUsers(p = 1, keyword = \"\") {\r\n        getAllUsers(\"\" + \"?p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n    }\r\n\r\n    function parseData(data) {\r\n\r\n        setIsLoading(false);\r\n        let usersData = [];\r\n        data.list.map(row => {\r\n            let rolesList = [];\r\n            row.roles.map(role =>{\r\n                rolesList.push(role.role)\r\n            });\r\n            row.parsedRoles = rolesList.join(',');\r\n            usersData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(usersData);\r\n        console.log(usersData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updatePlaceCallback(id) {\r\n        data.map(row=>{\r\n            if(row.id === id ){\r\n                setSelectedUser(row)\r\n            }\r\n        });\r\n        setOpenUpdateDialog(true)\r\n    }\r\n\r\n    const changePageCallback = (p = 0, keyword = \"\") => {\r\n            setIsLoading(true);\r\n            requestUsers(p, keyword)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n\r\n                {openUpdateDialog ? <UpdateUserDialog open={openUpdateDialog}\r\n                                                      setOpen={setOpenUpdateDialog}\r\n                                                      availableRoles={allRoles}\r\n                                                      setAvailableRoles={setAllRoles}\r\n                                                      userData={selectedUser}/>\r\n                                                      :\r\n                    null\r\n                }\r\n\r\n                {openAddDialog ? <AddUserDialog open={openAddDialog}\r\n                                                availableRoles={allRoles}\r\n                                                setOpen={setOpenAddDialog}/> : null}\r\n\r\n                <TableComponent\r\n                    title={\"Users\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updatePlaceCallback}\r\n                    id={\"id\"}\r\n                    isLoading={isLoading}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={() => {\r\n                                setOpenAddDialog(true)\r\n                        }}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add user\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n            <Button>\r\n                Clear filters\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    function getAllUsers(urlParams = \"\") {\r\n        API.User.getAllUsers(urlParams).then(response=>{\r\n            console.log(response)\r\n                setIsLoading(false);\r\n                parseData(response)\r\n        }).catch(error=>{\r\n                setIsLoading(false);\r\n                console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nPlaces.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Places);\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {getRefreshToken} from \"../helpers/tokens\";\r\nimport API from \"../Networking/API\";\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        let refreshToken = getRefreshToken();\r\n        if(refreshToken !== \"\" && refreshToken !== undefined){\r\n            // console.log(\"Refresh token\", refreshToken)\r\n                API.User.getUserProfile().then(user=>{\r\n                    // console.log(\"Fetched user\", user);\r\n                    setCurrentUser(user);\r\n                    setIsLoading(false)\r\n                }).catch(error=>{\r\n                    console.log(error);\r\n                    setIsLoading(false)\r\n                })\r\n        }else{\r\n            console.log(\"Refresh token is empty. No actions taken.\")\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser,\r\n                setCurrentUser,\r\n                isLoading\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};","import React, { useState, useCallback } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nexport const EditRecommendationContext = React.createContext()\r\n\r\n\r\nexport default function EditRecommendationProvider({ children }) {\r\n    const [config, setConfig] = useState({\r\n        open: false,\r\n        currentlyEditing: undefined,\r\n        rootList: [],\r\n        setRootList: ()=>{}\r\n    });\r\n\r\n    function startEditing(recommendation, rootList, setRootList) {\r\n        let conf = { ...config }\r\n\r\n        conf.open = true\r\n        conf.currentlyEditing = recommendation\r\n\r\n        conf.rootList = rootList\r\n        conf.setRootList = setRootList\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    function removeRecommendation(){\r\n        let conf = { ...config }\r\n        conf.open = false\r\n\r\n        let tempRootList = [...conf.rootList]\r\n        for(let i = 0; i<tempRootList.length; i++){\r\n            console.log(tempRootList[i].id)\r\n            if(tempRootList[i].id === conf.currentlyEditing.id){\r\n                tempRootList.splice(i, 1)\r\n            }\r\n        }\r\n        config.setRootList(tempRootList)\r\n        setConfig(conf)\r\n    }\r\n\r\n    function finishEditing(success=false, removedId= undefined) {\r\n        let conf = { ...config }\r\n        conf.open = false\r\n\r\n        if(removedId !== undefined){\r\n            for(let i = 0; i<conf.currentlyEditing.objects.length; i++){\r\n                if(conf.currentlyEditing.objects[i].id === removedId){\r\n                    conf.currentlyEditing.objects.splice(i, 1)\r\n                }\r\n            }\r\n        }\r\n\r\n        if(success){\r\n            let tempRootList = [...config.rootList]\r\n            for(let i = 0; i<tempRootList.length; i++){\r\n                if(tempRootList[i].id === conf.currentlyEditing.id){\r\n                    tempRootList[i] = conf.currentlyEditing\r\n                    break;\r\n                }\r\n            }\r\n            config.setRootList(tempRootList)\r\n        }\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    function setRecommendation(newRec){\r\n        let conf = { ...config }\r\n        conf.currentlyEditing = newRec\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    return (\r\n        <EditRecommendationContext.Provider value={{\r\n            config,\r\n            startEditing,\r\n            finishEditing,\r\n            removeRecommendation,\r\n            setRecommendation\r\n        }}>\r\n            {children}\r\n        </EditRecommendationContext.Provider>\r\n    );\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {EditRecommendationContext} from \"../../contexts/EditRecommendationContext\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport API from \"../../Networking/API\";\r\nimport {func} from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    recommendedPlaceCard: {\r\n        width: 300,\r\n        height: 300,\r\n        padding: 16,\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        alignContent: 'flex-end',\r\n        zIndex: 999999\r\n    }\r\n\r\n});\r\n\r\nconst RecommendationPlaceSortable = SortableElement(({classes, place, removeObjectFromRecommendation}) => (\r\n    <div className={classes.recommendedPlaceCard}>\r\n        <ApiPlaceCard\r\n            placeData={place}\r\n            renderActionArea={() => {\r\n                return (\r\n                    <div>\r\n                        <IconButton aria-label=\"delete\" onClick={()=>removeObjectFromRecommendation(place.id)}>\r\n                            <DeleteIcon color=\"secondary\" fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </div>\r\n                )\r\n            }\r\n            }\r\n        />\r\n    </div>)\r\n)\r\n\r\nconst RecommendationPlaceSortableContainer = SortableContainer(({classes, config, removeObjectFromRecommendation}) => {\r\n    return (\r\n        <div style={{display:\"flex\", flexDirection: \"row\"}}>\r\n            {config.currentlyEditing.objects.length > 0 ?\r\n\r\n                config.currentlyEditing.objects.map((place, index)=>{\r\n                    delete place.description\r\n\r\n                    return <RecommendationPlaceSortable\r\n                        classes={classes}\r\n                        removeObjectFromRecommendation={removeObjectFromRecommendation}\r\n                        key={place.id}\r\n                        index={index}\r\n                        place={place}\r\n                    />\r\n                }) :\r\n\r\n                <Alert severity=\"info\">This recommendation does not have any objects attached. You can attach\r\n                    Places or Tours by browsing in Places and Tours tables\r\n                </Alert>\r\n            }\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\nfunction EditRecommendationDialog({classes}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const { config, setRecommendation, finishEditing, removeRecommendation } = useContext(EditRecommendationContext)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let recData = {...config.currentlyEditing}\r\n        recData[name] = value\r\n\r\n        setRecommendation(recData)\r\n    };\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        console.log(\"OnSortEnd\")\r\n        let data = { ...config.currentlyEditing }\r\n        data.objects = arrayMove(data.objects, oldIndex, newIndex)\r\n\r\n        setRecommendation(data)\r\n    }\r\n\r\n    function removeObjectFromRecommendation(placeId) {\r\n        addAlertConfig(\"Remove object from recommendation\", \"Are you sure you want to remove this object from recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true)\r\n                API.Recommendation.removePlaceFromRecommendation(\r\n                    {id: placeId,\r\n                        recommendationId: config.currentlyEditing.id,\r\n                        type: config.currentlyEditing.type}\r\n                ).then(()=>{\r\n                    addConfig(true, \"Object removed from recommendation\")\r\n                    finishEditing(true, placeId)\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n\r\n    }\r\n\r\n    function deleteRecommendation(){\r\n        addAlertConfig(\"Remove recommendation\", \"Are you sure you want to remove this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Recommendation.removeRecommendation(config.currentlyEditing.id).then(()=>{\r\n                    addConfig(true, \"Removed recommendation successfully\")\r\n                    removeRecommendation()\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong. Please try again!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n    function constructRecommendationForUpdate(){\r\n        let rec = { ...config.currentlyEditing }\r\n        const objects = []\r\n        config.currentlyEditing.objects.map(row=>{\r\n            objects.push({id: row.id, type: rec.type})\r\n        })\r\n\r\n        rec.objects = objects\r\n\r\n        return rec\r\n    }\r\n\r\n\r\n    function editRecommendation(){\r\n        addAlertConfig(\"Edit recommendation\", \"Are you sure you want to edit this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                const rec = constructRecommendationForUpdate()\r\n                API.Recommendation.updateRecommendation(rec).then(()=>{\r\n                    addConfig(true, \"Updated recommendation successfuly\")\r\n                    finishEditing(true)\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong. Please try again!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    return(\r\n        <Dialog\r\n            open={config.open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{\r\n                finishEditing()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Edit recommendation</DialogTitle>\r\n            <DialogContent>\r\n                {config.currentlyEditing !== undefined ? <div className={classes.root}>\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Title\"\r\n                               name=\"name\"\r\n                               value={config.currentlyEditing['name']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Subtitle\"\r\n                               name=\"subtitle\"\r\n                               value={config.currentlyEditing['subtitle']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Description\"\r\n                               name=\"description\"\r\n                               value={config.currentlyEditing['description']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <div style={{display: \"flex\", flexDirection: 'row', overflowX: 'auto', width: '100%'}}>\r\n                        <RecommendationPlaceSortableContainer\r\n                            removeObjectFromRecommendation={removeObjectFromRecommendation}\r\n                            classes={classes}\r\n                            config={config}\r\n                            axis={'xy'}\r\n                            pressDelay={200}\r\n                            disableAutoscroll={false}\r\n                            onSortEnd={onSortEnd}/>\r\n                    </div>\r\n                </div> : null }\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>finishEditing()}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        editRecommendation()\r\n                    }}\r\n                >\r\n                    Save\r\n                </Button>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={()=>{\r\n                        deleteRecommendation()\r\n                    }}\r\n                >\r\n                    Delete recommendation\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(EditRecommendationDialog)","import React, {useContext, useEffect, useState} from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../Networking/API\";\r\nimport Recommendation from \"../components/recomendation/Recommendation\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport EditRecommendationDialog from \"../components/recomendation/EditRecommendationDialog\";\r\nimport {EditRecommendationContext} from \"../contexts/EditRecommendationContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport debounce from \"lodash/debounce\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        flexWrap: 'wrap',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    left: {\r\n        width: '50%',\r\n        height: '100%',\r\n        padding: 16,\r\n    },\r\n    leftTop:{\r\n        alignItems: 'flex-start',\r\n        height: '10%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    leftContent:{\r\n        padding: 16,\r\n        borderStyle: 'dashed',\r\n        height: '80%',\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    right:{\r\n        width: '50%',\r\n        height: '100%',\r\n        padding: 16,\r\n    },\r\n    rightTop: {\r\n        alignItems: 'flex-start',\r\n        height: '10%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n    rightContent: {\r\n        padding: 16,\r\n        borderStyle: 'dashed',\r\n        height: '80%',\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    }\r\n});\r\n\r\nfunction RecommendationsPage({classes}) {\r\n\r\n    const [recommendations, setRecommendations] = useState([]);\r\n    const [homeRecommendations, setHomeRecommendations] = useState([]);\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [pagingData, setPagingData] = useState({pageNum: 1})\r\n\r\n    const { startEditing } = useContext(EditRecommendationContext)\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    function getRecommendations(page, keywordChange = false) {\r\n        API.Recommendation.getAllRecommendations(\"?full=true&p=\"+page+\"&keyword=\"+keyword).then(response=>{\r\n            if(keywordChange){\r\n                setRecommendations(unique(response.list, homeRecommendations))\r\n            }else{\r\n                setRecommendations(old=>[...old, ...unique(response.list, homeRecommendations)])\r\n            }\r\n\r\n            delete response.list\r\n            setPagingData(response)\r\n        }).catch(()=>{\r\n\r\n        }).finally(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        Promise.all([\r\n            API.Explore.getExplorePage(\"?s=100\"),\r\n            API.Recommendation.getAllRecommendations(\"?full=true\")\r\n        ]).then((responses)=>{\r\n            setHomeRecommendations(responses[0].list)\r\n            setRecommendations(unique(responses[1].list, responses[0].list))\r\n        }).catch(()=>{\r\n\r\n        }).finally(()=>{\r\n            setLoading(false)\r\n        })\r\n\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!loading){\r\n            getRecommendations(1, true)\r\n        }\r\n    }, [keyword])\r\n\r\n    function unique(newList, existingRecommendations){\r\n        const uniqueList = []\r\n        let found = false;\r\n        for(let i = 0; i<newList.length; i++){\r\n            for(let j = 0; j<existingRecommendations.length; j++){\r\n                if(newList[i].id === existingRecommendations[j].id){\r\n                    found = true\r\n                    break;\r\n                }\r\n            }\r\n            if(!found){\r\n                uniqueList.push(newList[i])\r\n            }\r\n            found = false\r\n        }\r\n\r\n\r\n        return uniqueList\r\n    }\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        console.log(\"Handle scroll\")\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollHeight - e.target.scrollTop - scrollOffset)  <= e.target.clientHeight;\r\n        if (bottom && !loading && recommendations.length>0 && pagingData.pageNum<pagingData.pages) {\r\n            setLoading(true);\r\n            console.log(\"Requesting new page\")\r\n            getRecommendations(pagingData.pageNum+1);\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n\r\n    function RecommendationSkeleton(){\r\n        return(\r\n            <div>\r\n                <Skeleton animation='wave' variant=\"rect\" width={200} height={40} />\r\n                <Skeleton animation='wave' variant=\"text\" width={180}/>\r\n                <Skeleton animation='wave' variant=\"text\" width={250}/>\r\n                <div style={{display: 'flex', margin: 16, flexDirection: 'row'}}>\r\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\r\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\r\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\r\n                </div>\r\n                <Skeleton animation='wave' variant=\"text\" width={1000}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    function updateExplorePage() {\r\n        const explorable = []\r\n        homeRecommendations.map(row=>{\r\n            explorable.push(row.id)\r\n        })\r\n\r\n        // setLoading(true)\r\n        API.Explore.updateExplorePage(explorable).then(()=>{\r\n            addConfig(true, \"Updated explore page successfully!\")\r\n\r\n        }).catch(()=>{\r\n            addConfig(false, \"Unexpected error!\")\r\n        }).finally(()=>{\r\n            // setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.left}>\r\n                <div className={classes.leftTop}>\r\n                    <Typography variant=\"h4\">\r\n                        Home recommendations\r\n                    </Typography>\r\n\r\n                    <Button\r\n                        onClick={updateExplorePage}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        Save feed\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className={classes.leftContent}>\r\n                    {loading ? <>\r\n                            <RecommendationSkeleton />\r\n                            <RecommendationSkeleton style={{marginTop: 48}}/>\r\n                        </> :\r\n                        homeRecommendations.length > 0 ?\r\n                        <ReactSortable\r\n                            style={{width: '100%', height: '100%'}}\r\n                            list={homeRecommendations}\r\n                            setList={setHomeRecommendations}\r\n                            animation={150}\r\n                            group=\"cards\"\r\n                            onChange={(order, sortable, evt) => {}}\r\n                            onEnd={evt => {}}\r\n                        >\r\n                            {homeRecommendations.map(rec => (\r\n                                <Recommendation\r\n                                    key={rec.id}\r\n                                    recommendation={rec}\r\n                                    onEditCallback={()=> {\r\n                                        startEditing(rec, homeRecommendations, setHomeRecommendations)\r\n                                    }}\r\n                                />\r\n                            ))}\r\n                        </ReactSortable> : <Alert style={{marginTop: 48}} severity=\"info\">No recommendations are put in home tab. Click and Drag existing recommendations from right side.</Alert>\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={classes.right}>\r\n                <div className={classes.rightTop}>\r\n                    <Typography variant=\"h4\">\r\n                        Existing recommendations\r\n                    </Typography>\r\n\r\n                </div>\r\n                <div className={classes.rightContent} onScroll={handleScroll}>\r\n                    <TextField id=\"standard-search\" label=\"Search\" value={keyword} type=\"search\" onChange={e=>{\r\n                        setKeyword(e.target.value)\r\n                    }} />\r\n                    {loading ? <>\r\n                       <RecommendationSkeleton />\r\n                       <RecommendationSkeleton style={{marginTop: 16}}/>\r\n                    </> :\r\n                        recommendations.length > 0 ?\r\n\r\n                           <ReactSortable\r\n                           style={{width: '100%', height: '100%'}}\r\n                           list={recommendations}\r\n                           setList={setRecommendations}\r\n                           animation={150}\r\n                           group=\"cards\"\r\n                           onChange={(order, sortable, evt) => {}}\r\n                           onEnd={evt => {}}\r\n                           >\r\n                           {recommendations.map(rec => (\r\n                               <Recommendation\r\n                                   onEditCallback={()=>{\r\n                                       startEditing(rec, recommendations, setRecommendations)\r\n                                   }}\r\n                                   key={rec.id}\r\n                                   recommendation={rec}/>\r\n                           ))}\r\n                           </ReactSortable> :  <Alert style={{marginTop: 48}} severity=\"info\">Currently there are no available recommendations.</Alert>\r\n                       }\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <EditRecommendationDialog />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(RecommendationsPage);\r\n","import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Home from \"../pages/Home\";\r\nimport Places from \"../pages/Places\";\r\nimport AddPlace from \"../pages/AddPlace\";\r\nimport history from \"../helpers/history\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nimport Tour from \"./tour_components/Tour\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport Tours from \"../pages/Tours\";\r\nimport Resources from \"./Resources\";\r\nimport {PlacesFilterProvider} from \"../contexts/PlacesFilterContext\";\r\nimport ManageUsers from \"../pages/ManageUsers\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport {AuthContext} from \"../contexts/AuthContext\";\r\nimport RecommendationsPage from \"../pages/RecommendationsPage\";\r\nimport EditRecommendationProvider from \"../contexts/EditRecommendationContext\";\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root1: {\r\n        overflow: \"hidden\",\r\n        display: 'flex',\r\n        height: \"100vh\",\r\n        background: \"#F1F1F1\"\r\n    },\r\n    appBar: {\r\n        height: \"64px\",\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        //padding: theme.spacing(3),\r\n        // transition: theme.transitions.create('margin', {\r\n        //     easing: theme.transitions.easing.sharp,\r\n        //     duration: theme.transitions.duration.leavingScreen,\r\n        // }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        // transition: theme.transitions.create('margin', {\r\n        //     easing: theme.transitions.easing.easeOut,\r\n        //     duration: theme.transitions.duration.enteringScreen,\r\n        // }),\r\n        marginLeft: 0\r\n    },\r\n}));\r\n\r\n// const PlacesWithContext = () =>  (\r\n//     <AppStateStorageProvider>\r\n//         <Places/>\r\n//     </AppStateStorageProvider>\r\n// );\r\n\r\nconst TourWithContext = (props) =>  (\r\n    <PlacesFilterProvider>\r\n        <Tour {...props}/>\r\n    </PlacesFilterProvider>\r\n);\r\n\r\nconst RecommendationsWithContext = (props) =>  (\r\n    <EditRecommendationProvider>\r\n        <RecommendationsPage {...props}/>\r\n    </EditRecommendationProvider>\r\n);\r\n\r\n\r\nexport default function Appbar(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const { title, setTitle } = UseAppBarTitleContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    let location = useLocation();\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleListItemClick = (url,title) =>{\r\n        handleDrawerClose();\r\n        setTitle(title);\r\n\r\n        let re = new RegExp(url+'([0-9]*)?');\r\n        if(re.test(location.pathname)){\r\n            history.push(url);\r\n            history.go(0);\r\n        }\r\n    };\r\n\r\n    function handleLogout() {\r\n        addAlertConfig(\"Logout\", \"Are you sure you want to logout\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                localStorage.removeItem(\"access_token\");\r\n                localStorage.removeItem(\"refresh_token\")\r\n                history.push(\"/login\")\r\n            }\r\n        }])\r\n    }\r\n\r\n    const hasPermission = (perm) => {\r\n        return currentUser != null && currentUser.permissions.some(permission => permission.permission === perm)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root1}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <Typography variant=\"h6\" style={{width: \"100%\"}}>\r\n                        {currentUser != null ? currentUser.name : \"Loading user profile\"}\r\n                    </Typography>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button component={Link} to=\"/app/home\" onClick={()=>handleListItemClick(\"/app/home\",\"Home\")}>\r\n                        <ListItemText>Home</ListItemText>\r\n                    </ListItem>\r\n                    <Divider light />\r\n                    <ListItem button component={Link} to=\"/app/places\" onClick={()=>handleListItemClick(\"/app/places\",\"Places\")} >\r\n                        <ListItemText>Places</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/tours\" onClick={()=>handleListItemClick(\"/app/tours\",\"Tours\")} >\r\n                        <ListItemText>Tours</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/recommendations\" onClick={()=>handleListItemClick(\"/app/recommendations\",\"Recommendations\")} >\r\n                        <ListItemText>Recommendations</ListItemText>\r\n                    </ListItem>\r\n                    {/*<ListItem button component={Link} to=\"/app/apiplaces\" onClick={()=>handleListItemClick(\"/app/apiplaces\",\"Api places\")} >*/}\r\n                    {/*    <ListItemText>Explore API places</ListItemText>*/}\r\n                    {/*</ListItem>*/}\r\n                    { hasPermission(\"place:insert\") &&\r\n                        <ListItem button component={Link} to=\"/app/addplace\" onClick={()=>handleListItemClick(\"/app/addplace\",\"Add Place\")} >\r\n                            <ListItemText>Add place</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    { hasPermission(\"tour:modify\") &&\r\n                        <ListItem button component={Link} to=\"/app/addtour\"\r\n                                  onClick={() => handleListItemClick(\"/app/addtour\", \"Add tour\")}>\r\n                            <ListItemText>Add tour</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    <ListItem button component={Link} to=\"/app/resources\" onClick={()=>handleListItemClick(\"/app/resources\",\"Manage resources\")} >\r\n                        <ListItemText>Resources</ListItemText>\r\n                    </ListItem>\r\n                    { hasPermission(\"role:manage\") &&\r\n                        <ListItem button component={Link} to=\"/app/users\" onClick={()=>handleListItemClick(\"/app/users\",\"Manage users\")} >\r\n                            <ListItemText>Manage users</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    <Divider light />\r\n                    <ListItem button onClick={()=>handleLogout()} >\r\n                        <ListItemText>Logout</ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                <Switch>\r\n                    <Route exact path=\"/app/home\" component={Home} />\r\n                    <Route path=\"/app/places\" component={Places} />\r\n                    <Route path=\"/app/tours\" component={Tours} />\r\n                    <Route path=\"/app/addplace/:placeId?\" component={AddPlace} />\r\n                    <Route path=\"/app/recommendations\" component={RecommendationsWithContext} />\r\n                    <Route path=\"/app/addtour/:tourId?\" component={TourWithContext} />\r\n                    <Route path=\"/app/resources\" component={Resources} />\r\n                    <Route path=\"/app/users\" component={ManageUsers} />\r\n                    <Redirect from=\"*\" to=\"/404\"/>\r\n                </Switch>\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport Appbar from './components/Appbar.js';\r\nimport AppBarTitleProvider from \"./contexts/AppBarTitleContext\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <AppBarTitleProvider>\r\n                        <Appbar />\r\n                    </AppBarTitleProvider>\r\n                    </MuiPickersUtilsProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default App;","import React, {useContext, useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport history from \"../helpers/history\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {AuthContext} from \"../contexts/AuthContext\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {isAuthenticated} from \"../helpers/tokens\";\r\nimport API from \"../Networking/API\";\r\nimport {func} from \"prop-types\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n                Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    loaderMain: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        alignItems:\"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"red\"\r\n    }\r\n}));\r\n\r\nexport default function LoginPage() {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setIsLoading] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n    const { currentUser, setCurrentUser } = useContext(AuthContext);\r\n\r\n    const handleLogin = () =>{\r\n        setIsLoading(true);\r\n        console.log(\"handleLogin\", {identifier: email, password: password});\r\n        API.Auth.login({identifier: email, password: password}).then(response=>{\r\n            if(!checkAccess(response.authorities)){\r\n                addConfig(false, \"Only admins and editors can access admin panel!\")\r\n                setIsLoading(false);\r\n                return\r\n            }\r\n            setIsLoading(false);\r\n            localStorage.setItem(\"access_token\", response.access_token);\r\n            localStorage.setItem(\"refresh_token\", response.refresh_token);\r\n            API.User.getUserProfile().then(response=>{\r\n                console.log(\"User profile:\", response);\r\n                setCurrentUser(response);\r\n                history.push(\"/app/home\");\r\n            }).catch(error=>{\r\n                setIsLoading(false);\r\n                addConfig(false, error.message)\r\n            });\r\n        }).catch(error=>{\r\n            setIsLoading(false);\r\n            addConfig(false, error.message)\r\n        });\r\n    };\r\n\r\n    function checkAccess(roles){\r\n        var hasAccess = false\r\n        roles.map(row=>{\r\n            console.log(row)\r\n            if(row.authority === \"ROLE_ADMIN\"){\r\n                hasAccess = true\r\n            }\r\n        });\r\n        return hasAccess\r\n    }\r\n\r\n    if (isAuthenticated()) {\r\n        return <Redirect to=\"/app\" />;\r\n    }\r\n\r\n    const handleKeyPress = (event) =>{\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            handleLogin();\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    return <Container component=\"main\" maxWidth=\"xs\" onKeyPress={(e)=>handleKeyPress(e)}>\r\n\r\n                            {loading && <LinearProgress />}\r\n                            <CssBaseline />\r\n                            <div className={classes.paper}>\r\n                                <Avatar className={classes.avatar}>\r\n                                    <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <Typography component=\"h1\" variant=\"h5\">\r\n                                    Sign in\r\n                                </Typography>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={email}\r\n                                    onChange={(e)=>{setEmail(e.target.value)}}\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    autoFocus\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    value={password}\r\n                                    onChange={(e)=>{setPassword(e.target.value)}}\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                                <Button\r\n                                    onClick={()=>{handleLogin()}}\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    Sign In\r\n                                </Button>\r\n                            </div>\r\n                            <Box mt={8}>\r\n                                <Copyright />\r\n                            </Box>\r\n                        </Container>\r\n\r\n}","import Route from \"react-router-dom/es/Route\";\r\nimport React, {useContext} from \"react\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {isAuthenticated} from \"../helpers/tokens\";\r\n\r\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                isAuthenticated() === true ? (\r\n                    <Component {...routeProps} />\r\n                ) : (\r\n                    <Redirect to={\"/login\"} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {'Copyright © '}\r\n            Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: '100vh',\r\n    },\r\n    main: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: 'auto',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n    },\r\n}));\r\n\r\nexport default function NotFoundPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\r\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\r\n                    Page not found\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    {'Try something else'}\r\n                </Typography>\r\n            </Container>\r\n            <footer className={classes.footer}>\r\n                <Container maxWidth=\"sm\">\r\n                    <Copyright />\r\n                </Container>\r\n            </footer>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\n\r\nexport default function SnackbarFeedback(props){\r\n\r\n    const { config, removeConfig } = UseSnackbarContext();\r\n\r\n    return(\r\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\r\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"error\") : \"\"}>\r\n                {!!config && config.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\"\r\n\r\nconst AlertDialogFeedback = () => {\r\n\r\n    const {alertConfig, removeAlertConfig} = UseAlertDialogContext();\r\n\r\n    function remove() {\r\n        if(alertConfig.onClose !== undefined){\r\n            alertConfig.onClose()\r\n        }\r\n        removeAlertConfig()\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={!!alertConfig}\r\n            onClose={remove}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{!!alertConfig ? alertConfig.title : \"\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {!!alertConfig ? alertConfig.message : \"\"}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={remove}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                {!!alertConfig && alertConfig.actions.map(row=>{\r\n                    return <Button onClick={()=>{\r\n                        remove();\r\n                        row.action();\r\n                    }}\r\n                    color=\"primary\"\r\n                    >\r\n                            {row.name}\r\n                    </Button>\r\n                })}\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\n\r\nexport default AlertDialogFeedback\r\n","import Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\r\n\r\n\r\nexport const TextInputDialog = () => {\r\n\r\n    const {dialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen} = UseEditDialogContext();\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [error, setError] = useState(0)\r\n\r\n    const deInit = () => {\r\n        setError(0)\r\n        setDialogOpen(false)\r\n        setInputText(\"\")\r\n    }\r\n\r\n    const handleClose = () => {\r\n        deInit()\r\n    }\r\n\r\n    const handleDone = () => {\r\n        let errorCode = dialogConfig.validateInput(inputText)\r\n        setError(errorCode)\r\n        if(errorCode !== 0) return\r\n\r\n        if(dialogConfig.onDoneCallback !== undefined){\r\n            dialogConfig.onDoneCallback(inputText)\r\n            console.log(\"Input\", inputText)\r\n        }else{\r\n            console.log(\"On done in undefined\")\r\n        }\r\n        deInit()\r\n    }\r\n    const handleInput = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={dialogOpen} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n                <DialogTitle id=\"form-dialog-title\">{dialogConfig.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {dialogConfig.explanation}\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        helperText={error !== 0 && dialogConfig.errorMessages[error] !== null ? dialogConfig.errorMessages[error] : \"\"}\r\n                        error={error !== 0}\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        onInput={handleInput}\r\n                        label={dialogConfig.textFieldLabel}\r\n                        defaultValue={dialogConfig.defaultText}\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleDone} color=\"primary\">\r\n                        Done\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport history from \"./helpers/history\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport {Router, Route, Link, Switch} from \"react-router-dom\";\r\nimport {AuthenticatedRoute} from \"./components/AuthenticatedRoute\";\r\nimport NotFoundPage from \"./pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\r\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\r\nimport AlertDialogProvider from \"./contexts/AlertDialogContext\";\r\nimport AlertDialogFeedback from \"./components/feedback/AlertDialogFeedback\";\r\nimport {AuthProvider} from \"./contexts/AuthContext\";\r\nimport {PlacesFilterProvider} from \"./contexts/PlacesFilterContext\";\r\nimport EditDialogProvider from \"./contexts/EditDialogContext\";\r\nimport {TextInputDialog} from \"./components/feedback/TextInputDialog\";\r\nimport LoadingScreen from \"./components/LoadingScreen\";\r\nimport AppStateStorageProvider from \"./contexts/AppStateStorageContext\";\r\nimport {AbstractionCategoryDialog} from \"./components/feedback/AbstractionCategoryDialog\";\r\nimport AppResourcesProvider from \"./contexts/AppResourcesContext\";\r\n\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <AppStateStorageProvider>\r\n            <AuthProvider>\r\n                <Router history={history}>\r\n                    <AppResourcesProvider>\r\n                    <SnackbarProvider>\r\n                        <AlertDialogProvider>\r\n                            <EditDialogProvider>\r\n                                <SnackbarFeedback/>\r\n                                <AlertDialogFeedback/>\r\n                                <TextInputDialog/>\r\n                                {/*<AbstractionCategoryDialog/>*/}\r\n                                <PlacesFilterProvider>\r\n                                    <Switch>\r\n                                        <Redirect exact from=\"/\" to=\"/login\"/>\r\n                                        <Redirect exact from=\"/app\" to=\"/app/home\"/>\r\n                                        <AuthenticatedRoute path=\"/app\" component={App}/>\r\n                                        <Route path=\"/login\" component={LoginPage}/>\r\n                                        <Route path=\"*\" component={NotFoundPage}/>\r\n                                        <Redirect from=\"*\" to=\"/404\"/>\r\n                                    </Switch>\r\n                                </PlacesFilterProvider>\r\n                            </EditDialogProvider>\r\n                        </AlertDialogProvider>\r\n                    </SnackbarProvider>\r\n                    </AppResourcesProvider>\r\n                </Router>\r\n            </AuthProvider>\r\n        </AppStateStorageProvider>\r\n\r\n    </React.Fragment>\r\n    , document.getElementById('root'));\r\n"],"sourceRoot":""}