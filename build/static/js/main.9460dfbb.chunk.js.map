{"version":3,"sources":["res/selectedTourIcon.svg","res/selectedParking.svg","res/availableParking.svg","pages/Home.js","components/TableComponent.js","helpers/debounce.js","helpers/history.js","helpers/tokens.js","Networking/NetworkLayerCentral.js","Networking/API.js","contexts/AlertDialogContext.js","contexts/UseAlertDialogContext.js","helpers/stringResources.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","components/AutocompleteChip.js","contexts/AppStateStorageContext.js","contexts/PlacesFilterContext.js","components/add_place_components/FilterBlock.js","pages/Places.js","helpers/priceRange.js","helpers/averageTimeSpent.js","components/AddSourceDialog.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/maps/MapGeolocation.js","components/maps/MapToolbar.js","components/maps/MapLock.js","components/maps/CustomControlsManager.js","components/maps/PlaceMap.js","components/add_place_components/PlaceLocation.js","components/maps/ParkingMap.js","components/add_place_components/ParkingLocation.js","contexts/EditDialogContext.js","contexts/UseEditDialogContext.js","components/add_place_components/PlaceDiscovery.js","components/ReviewCard.js","components/add_place_components/Reviews.js","contexts/AppBarTitleContext.js","contexts/UseAppBarTitleContext.js","components/recomendation/AddRecommendationDialog.js","components/recomendation/RecommendationListDialog.js","components/ApiPlaceCard.js","components/recomendation/Recommendation.js","components/schedule_components/WorkingShift.js","components/schedule_components/WorkingHoursVariant.js","components/schedule_components/ScheduleWorkingHours.js","components/schedule_components/Schedule.js","components/schedule_components/SchedulesContainer.js","pages/AddPlace.js","components/SearchInputComponent.js","pages/ApiPlaces.js","pages/NotFoundPage.js","components/tour_components/TransportItem.js","components/tour_components/TourPlaceComponent.js","components/tour_components/TourPlacesWrapper.js","components/tour_components/PlaceSearch.js","components/tour_components/DayCard.js","components/tour_components/DaysWrapper.js","components/tour_components/TourReducer.js","components/tour_components/TourInfoComponent.js","components/tour_components/TourMap.js","components/tour_components/Tour.js","pages/Tours.js","components/AddDialog.js","components/Resources.js","components/UpdateUserDialog.js","components/AddUserDialog.js","pages/ManageUsers.js","contexts/AuthContext.js","contexts/EditRecommendationContext.js","components/recomendation/EditRecommendationDialog.js","pages/RecommendationsPage.js","components/Appbar.js","App.js","pages/LoginPage.js","components/AuthenticatedRoute.js","components/feedback/SnackbarFeedback.js","components/feedback/AlertDialogFeedback.js","components/feedback/TextInputDialog.js","index.js"],"names":["module","exports","withStyles","theme","button","margin","spacing","input","display","props","classes","descendingComparator","a","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","checkable","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","customToolbarElements","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","style","alignItems","TextField","target","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","centerCell","textAlign","rowNotPublished","rowNotVerified","rowBasic","TableComponent","searchFunction","pagingInfo","data","updateCallback","removeCallback","isLoading","initialKeyword","defaultProps","React","setOrder","setOrderBy","selected","setSelected","dense","rowsPerPage","setRowsPerPage","page","setPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","filter","item","undefined","slice","row","isItemSelected","indexOf","labelId","rowStyle","hover","rowId","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckboxChange","header","isId","scope","e","stopPropagation","preventDefault","fontSize","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","pageNum","onChangePage","newPage","onChangeRowsPerPage","parseInt","console","log","history","getAccessToken","localStorage","getItem","getRefreshToken","isAuthenticated","request","options","contentType","authorize","client","axios","create","baseURL","headers","interceptors","response","use","error","originalRequest","config","url","status","code","Promise","reject","removeItem","push","startsWith","_retry","API","Auth","refreshToken","then","token","access_token","Authorization","setItem","catch","err","onSuccess","onError","debug","message","RequestType","getRequest","path","urlData","method","postRequest","postMultipartRequest","formData","Explore","getExplorePage","updateExplorePage","Recommendation","removeRecommendation","updateRecommendation","removePlaceFromRecommendation","addObjectToRecommendation","getAllRecommendations","urlParams","createRecommendation","User","setRoles","getAllRoles","getAllUsers","getUserProfile","register","login","Tour","insertTour","getTour","updateTour","getAllToursAdmin","removeTour","getTourCategories","updateTourCategories","SourcePlace","updateSourcesForPlace","Source","getSources","addSource","Places","getClosesPlacesAdmin","getAllCities","getAllCounties","getAllCountries","getAllMunicipalities","getAllPlaces","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","removePlace","Tags","getAllTags","addTag","params","removeTags","updateTags","Categories","addCategory","getAllCategories","removeCategory","updateCategory","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","Reviews","getPlaceReviews","AlertDialogContext","createContext","alertConfig","addAlertConfig","removeAlertConfig","AlertDialogProvider","children","setAlertConfig","contextValue","actions","onClose","Provider","UseAlertDialogContext","useContext","Strings","DIALOG_PLACE_PUBLISH_TITLE","DIALOG_PLACE_PUBLISH_MESSAGE","DIALOG_PLACE_UNPUBLISH_MESSAGE","DIALOG_PLACE_INSERT_TITLE","DIALOG_PLACE_INSERT","DIALOG_PLACE_UPDATE_TITLE","DIALOG_PLACE_UPDATE","DIALOG_PLACE_VERIFY_TITLE","DIALOG_PLACE_VERIFY_MESSAGE","DIALOG_PLACE_DELETE_TITLE","DIALOG_PLACE_DELETE_MESSAGE","DIALOG_TOUR_DELETE_TITLE","DIALOG_TOUR_DELETE_MESSAGE","SNACKBAR_PLACE_INSERTED_SUCCESS","SNACKBAR_PLACE_REMOVE_SUCCESS","SNACKBAR_TOUR_INSERTED_SUCCESS","SNACKBAR_TOUR_REMOVE_SUCCESS","SNACKBAR_ERROR","SNACKBAR_CHANGES_SAVED","SnackbarContext","addConfig","removeConfig","SnackbarProvider","setConfig","success","UseSnackbarContext","autoComplete","chip","justifyContent","flexWrap","listStyle","autoCompleteChipContainer","setOptions","selectedOptions","setSelectedOptions","initialData","setInitialData","getCurrentVal","setCurrentVal","firstLoad","setFirstLoad","handleDelete","found","row1","JSON","stringify","Box","option","Chip","onDelete","Autocomplete","disableClearable","getOptionLabel","renderInput","AppStateStorageContext","AppStateStorageProvider","placesPageConfig","setPlacesPageConfig","savePlacesTableInfo","PlacesFilterContext","buildUrl","require","initialDates","insertionStart","moment","Date","format","insertionEnd","add","modificationStart","modificationEnd","PlacesFilterProvider","categories","setCategories","selectedCategories","setSelectedCategories","cities","setCities","selectedCities","setSelectedCities","countries","setCountries","selectedCountries","setSelectedCountries","municipalities","setMunicipalities","selectedMunicipalities","setSelectedMunicipalities","counties","setCounties","selectedCounties","setSelectedCounties","initialLoading","setInitialLoading","resetFilterOptions","setResetFilterOptions","filterLabel","filterName","filterOptions","setFilterOptions","dates","setDates","queryParams","di","dm","parseFilterOptions","parseCategories","filterQuery","setFilterQuery","getCategories","restrictions","res","cats","countryRestrictions","munRestrictions","all","filterOptionsCleared","areFiltersCleared","o","c","filterDiv","flexDirection","sortingButtons","rightLayout","boxShadow","datesLayout","flexGrow","setOpen","filterDateChange","date","cDate","Object","assign","Grid","container","xs","sm","FormControlLabel","control","generalOptions","filterOptionsChanged","AutocompleteChip","justify","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","Button","marginTop","filters","clearFilters","buttonsDiv","content","breakpoints","down","up","autocomplete","borderBottom","outline","setData","pageData","setPageData","setIsLoading","requestAllPlaces","p","parseData","placesData","list","i","placeId","getPlaceNameById","action","tmp","startIcon","priceRange","averageTimeSpent","closeButton","right","grey","open","setDialogOpen","setText","setUrl","setError","Dialog","fullWidth","DialogTitle","DialogContent","dividers","ev","DialogActions","autoFocus","validateInput","placeInfo","setPlaceInfo","selectedSources","setSelectedSources","updatePlaceInfo","newValue","place","valuetext","setAvailableSources","dialogOpen","availableSources","val","required","placeholder","InputLabelProps","shrink","multiline","rows","marginLeft","bookInAdvance","Slider","defaultValue","getAriaValueText","step","max","marks","FormControl","InputLabel","Select","native","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","pressDelay","disableAutoscroll","onSortEnd","oldIndex","newIndex","arrayMove","axis","acceptedFileFormats","dropzoneArea","onCloseCallback","onFinishCallback","loading","selectedFiles","setSelectedFiles","acceptedFiles","maxFileSize","showAlerts","dropzoneProps","disabled","filesLimit","onDrop","files","existingFiles","file","existingFile","imagefile","FormData","append","finally","addImageDialogOpen","setAddImageDialogOpen","handleAddPhoto","Geocode","setApiKey","geocodeFromLatLng","newLat","newLng","fromLatLng","address","results","formatted_address","addressArray","address_components","city","types","long_name","getCity","country","getCountry","county","getCounty","municipality","getMunicipality","latitude","longitude","isLocked","locationCallback","errorParsingLocation","handleKeyPress","which","keyCode","test","fromAddress","geometry","location","lat","lng","loc","split","parseFloat","onKeyPress","onPlaceSelected","navigator","geolocation","getCurrentPosition","coords","alert","setIsLocked","Switch","old","Alert","severity","CustomControlsManager","context","window","google","maps","ControlPosition","TOP_LEFT","MAP","controlDiv","document","createElement","controls","removeAt","createPortal","contextTypes","PropTypes","object","MapComponent","withGoogleMap","defaultZoom","ref","refInstance","center","defaultCenter","largeIcon","locationMarker","setLocationMarker","setParkingLocationMarker","otherPlacesData","setOtherPlacesData","infoWindows","setInfoWindows","refMap","useRef","s","range","l","Fragment","loadingElement","containerElement","mapElement","zIndex","icon","scaledSize","Size","origin","Point","markers","onCloseClick","Avatar","alt","visible","draggable","onDragEnd","latLng","BOTTOM_CENTER","mapCenter","current","getCenter","locationData","setLocationData","setParkingLocation","changeLocationData","setMainInfoWindow","onMarkerDragEnd","setPosition","mainInfoWindow","parking","parkingData","calcCrow","nearestParkingCount","addNewParking","parkingIsAttached","selectedParkingData","parkingId","anchor","parkingInfoWindows","setParkingInfoWindows","addExistingParking","lat1","lon1","lat2","lon2","dLat","toRad","dLon","sin","cos","atan2","sqrt","Value","PI","ParkingMap","setParkingData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","SortableItem","elevation","SortableList","oldArray","EditDialogContext","dialogConfig","addEditDialogConfig","removeEditDialogConfig","defaultOptions","errorMessages","explanation","onDoneCallback","textFieldLabel","defaultText","EditDialogProvider","setDialogConfig","UseEditDialogContext","slider","marginRight","sliderContainer","sliderInput","selectedTags","setSelectedTags","availableCategories","setAvailableCategories","availableTags","setAvailableTags","grade","setGrade","info","tagName","newTag","tagId","1","2","categoryName","newCat","categoryId","Input","Number","onBlur","ReviewCard","review","CardContent","photoUrl","surname","Rating","rating","readOnly","upvotes","timeAdded","reviewsInfo","reviews","overflowX","setReviews","anchorEl","setAnchorEl","Boolean","filterBy","setFilterBy","getReviewsForPlace","debounceScroll","debounce","round","scrollWidth","scrollLeft","clientWidth","totalReviews","handleScrollDebounced","handleClose","overallStarRating","precision","aria-describedby","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","RadioGroup","Radio","onScroll","persist","handleScroll","AppBarTitleContext","setTitle","AppBarTitleProvider","UseAppBarTitleContext","textField","formControl","addCallback","subtitle","description","setLoading","dataChanged","recData","addRecommendation","errors","hasErrors","checkErrors","insertedData","maxWidth","FormLabel","objectId","recommendations","setRecommendations","pagingData","setPagingData","showAddNewRecommendation","setShowAddNewRecommendation","getRecommendations","keywordChange","scrollHeight","scrollTop","clientHeight","pages","List","overflowY","maxHeight","ListItem","rec","recommendationId","ListItemIcon","ListItemText","Divider","recommendation","unshift","CategoriesDisplay","SubheaderDisplay","media","expand","transform","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","renderActionArea","CardHeader","subheader","substring","website","RecommendationType","paperContent","onEditCallback","objects","intervalContainer","pickerStyle","scheduleData","setScheduleData","scheduleOpenIndex","variantId","enableLastAccommodation","currentSchedule","currentVariant","variants","find","x","elementId","shifts","shift","lastShift","firstShift","TimePicker","ampm","openTime","shiftId","time","oldData","newData","closeTime","lastAccommodation","pop","shiftToPush","shortid","generate","weekdays","fullName","weekdayPickerContainer","weekdayButton","minHeight","removeButtonContainer","weekdayPicker","weekDayIndex","dayActive","days","some","day","newScheduleData","includes","splice","WorkingShift","findIndex","generateDefaultPeriod","weekdayButtonContainer","pickerInput","schedule","setSchedule","dayIndex","periods","period","openDay","splitSchedule","minutesStep","InputProps","changeOpenTime","changeCloseTime","lastperiod","orientation","flexItem","schedules","newSchedules","newPeriods","periodsForThisDay","determineGlobalSplitScheduleOpenTime","determineGlobalSplitScheduleCloseTime","scheduleDateContainer","setScheduleOpenIndex","seasonalScheduleEnabled","DatePicker","views","from","to","defaultScheduleData","tabContainer","tabsLayout","addScheduleButtonContainer","setSeasonalScheduleEnabled","isScheduleEnabled","setIsScheduleEnabled","setLastAccommodation","Tabs","indicatorColor","textColor","Tab","state","enabled","loader","bottom","match","phoneNumber","isPublic","isVerified","source","price","parkingMarkerData","setParkingMarkerData","sources","setSources","setPlaceId","firstTimeLoading","setFirstTimeLoading","showRecommendationDialog","setShowRecommendationDialog","ColorButton","green","formFeedback","saveChanges","formPlaceInfo","plc","updateAll","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","updateSources","newSchedule","newPeriod","subtract","closeDay","scheduleDefault","er","hasSchedule","minutes","tags","setAllData","responses","basicPlaceInfo","useMemo","placePhotos","placeLocation","parkingLocation","placeDiscovery","scheduleContainer","CircularProgress","obj","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debouncedInput","InputBase","topBar","searchBox","placeApiCard","isLoadingData","setIsLoadingData","word","query","encodeURI","elementType","isFitWidth","disableImagesLoaded","updateOnEachImageLoad","boxSizing","Copyright","getFullYear","footer","transportTypes","flexFlow","transportSelectWrapper","transportSelect","transportId","transportChangeCallback","currentTransport","setCurrentTransport","NativeSelect","transport","cardRoot","only","details","cover","addParkingWrapper","elementData","tourInfoReducer","currentDay","elementIndex","lastElement","handleEditPlace","descriptionInput","note","fk_transportId","TourPlaceSortable","removePlaceCallback","tourPlaceComponent","removeElementCallback","tourInfo","tour","ElementType","errorInfo","setErrorInfo","searchInputComponent","placeCard","addPlaceCallback","setApiPlacesFound","apiPlacesFound","localPlacesFound","setLocalPlacesFound","localPlacesLoading","setLocalPlacesLoading","placeType","mappedPlaces","forEach","generatePlaceCards","radioButtonArea","cardArea","headerWrap","onSelectCallback","handleRemoveDay","updateDescriptionGlobally","DayCardSortable","dayInfo","removeDayCallback","elements","elementIdentifier","addDayButton","footerWrapper","setCurrentDay","removeDay","TourDataReducer","nameField","descriptionField","publicityDiv","tourId","titleMissing","shouldDisplayTitleMissingError","showErrors","helperText","isPublished","MyMapComponent","addPlace","directions","setDirection","directionPlaces","setDirectionPlaces","places","setPlaces","placesInfoWindows","setPlacesInfoWindows","loadingArea","setLoadingArea","fetchPlaces","locations","Array","fill","PlacesMarkers","constructPlaceData","waypoints","stopover","destination","DirectionsService","route","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","searchAreaComponent","TOP_CENTER","suppressMarkers","marker","labelOrigin","sampleTourData","leftLayout","actionsArea","setTourId","recommendationsDialogOpen","setRecommendationsDialogOpen","useReducer","dispatchTourInfo","handleAddPlaceClick","loadData","aggregatedDays","aggregatedElements","aggregatedPlace","aggregatedDay","aggregatedTour","parseTourInfoResponse","handleSave","containsErrors","keys","keyIndex","element","dayInfoWithoutDesc","dayCopy","tourPlacesMemoized","mapComponent","daysWrapperMemoized","tourDaysComponents","tourInfoMemoized","useTheme","largeScreen","useMediaQuery","getAllTours","handleClick","fq","join","categoriesHeadCells","tagsHeadCells","buttonWrapper","setTags","UpdateUserDialog","userData","availableRoles","setAvailableRoles","selectedRoles","setSelectedRoles","roles","roleId","userId","password","email","user","setUser","userDataChanged","addUser","medium","userTmp","FormHelperText","gutterBottom","selectedUser","setSelectedUser","allRoles","setAllRoles","openUpdateDialog","setOpenUpdateDialog","openAddDialog","setOpenAddDialog","requestUsers","usersData","rolesList","parsedRoles","AuthContext","AuthProvider","currentUser","setCurrentUser","EditRecommendationContext","EditRecommendationProvider","currentlyEditing","rootList","setRootList","startEditing","conf","finishEditing","removedId","tempRootList","setRecommendation","newRec","RecommendationPlaceSortable","removeObjectFromRecommendation","recommendedPlaceCard","RecommendationPlaceSortableContainer","alignContent","editRecommendation","constructRecommendationForUpdate","leftTop","leftContent","borderStyle","rightTop","rightContent","homeRecommendations","setHomeRecommendations","unique","newList","existingRecommendations","uniqueList","j","RecommendationSkeleton","Skeleton","animation","explorable","setList","group","sortable","evt","onEnd","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","TourWithContext","RecommendationsWithContext","Appbar","useLocation","handleDrawerClose","handleListItemClick","RegExp","pathname","go","hasPermission","perm","permissions","permission","CssBaseline","AppBar","edge","Drawer","Link","exact","Home","Tours","AddPlace","Resources","ManageUsers","Redirect","App","Component","form","submit","loaderMain","AuthenticatedRoute","rest","Route","render","routeProps","SnackbarFeedback","Snackbar","autoHideDuration","AlertDialogFeedback","remove","DialogContentText","TextInputDialog","inputText","setInputText","deInit","onInput","errorCode","ReactDOM","setEmail","setPassword","handleLogin","identifier","hasAccess","authority","checkAccess","authorities","refresh_token","Container","mt","getElementById"],"mappings":"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","file":"static/js/main.9460dfbb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/selectedTourIcon.127fd3ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/selectedParking.102bdd14.svg\";","module.exports = __webpack_public_path__ + \"static/media/availableParking.6ac3f9ec.svg\";","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    }\r\n});\r\n\r\n\r\n\r\nconst Home = props => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport useDebounce from \"../helpers/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, checkable} = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n\r\n                {checkable ? <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell> : null}\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right'  : 'left' }\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    headCells: PropTypes.object.isRequired,\r\n    checkable: PropTypes.bool.isRequired\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected, title, changePageCallback, keyword, setKeyword, customToolbarElements} = props;\r\n\r\n\r\n    const debouncedSearch = useDebounce(keyword, 300);\r\n\r\n\r\n    useEffect( () => {\r\n            changePageCallback(1,keyword)\r\n        },\r\n        [debouncedSearch]\r\n    );\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n            )}\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"delete\">\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : <div style={{display: \"flex\", alignItems: \"center\"}}>\r\n                <TextField id=\"standard-basic\" label=\"Search\" value={keyword} onChange={ event =>{setKeyword(event.target.value)}}/>\r\n                {!!customToolbarElements ? customToolbarElements : null}\r\n            </div>}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    centerCell: {\r\n        textAlign: \"center\",\r\n        width: '100%'\r\n    },\r\n    rowNotPublished:{\r\n        backgroundColor: \"#ffcdd2\"\r\n    },\r\n    rowNotVerified:{\r\n        backgroundColor: \"#fff9c4\"\r\n    },\r\n    rowBasic: {\r\n        backgroundColor: \"#FFFFFF\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function TableComponent({title,\r\n                                           searchFunction,\r\n                                           headCells,\r\n                                           pagingInfo,\r\n                                           data,\r\n                                           checkable,\r\n                                           changePageCallback,\r\n                                           updateCallback,\r\n                                           removeCallback,\r\n                                           id,\r\n                                           isLoading,\r\n                                           customToolbarElements,\r\n                                           initialKeyword\r\n}) {\r\n\r\n    TableComponent.propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        headCells: PropTypes.object.isRequired,\r\n        pagingInfo: PropTypes.object,\r\n        data: PropTypes.object.isRequired,\r\n        checkable: PropTypes.bool.isRequired,\r\n        changePageCallback: PropTypes.func,\r\n        updateCallback: PropTypes.func,\r\n        removeCallback: PropTypes.func,\r\n        id: PropTypes.string.isRequired,\r\n        isLoading: PropTypes.bool,\r\n        customToolbarElements: PropTypes.object,\r\n        initialKeyword: PropTypes.string,\r\n    };\r\n\r\n    TableComponent.defaultProps = {\r\n        initialKeyword: ''\r\n    }\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [keyword, setKeyword] = useState(initialKeyword);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = data.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleCheckboxChange = (event, name) =>{\r\n\r\n            const selectedIndex = selected.indexOf(name);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(selected, name);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(selected.slice(1));\r\n            } else if (selectedIndex === selected.length - 1) {\r\n                newSelected = newSelected.concat(selected.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    selected.slice(0, selectedIndex),\r\n                    selected.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelected(newSelected);\r\n\r\n    };\r\n\r\n    const handleClick = (event, rowId) => {\r\n        if(updateCallback !== undefined){\r\n            updateCallback(rowId)\r\n        }\r\n    };\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n        console.log(\"handleChangeRowsPerPage\")\r\n\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                {isLoading ? <LinearProgress/> : null }\r\n                <EnhancedTableToolbar\r\n                    title={title}\r\n                    numSelected={selected.length}\r\n                    changePageCallback={changePageCallback}\r\n                    keyword={keyword}\r\n                    setKeyword={setKeyword}\r\n                    customToolbarElements={customToolbarElements}\r\n                />\r\n                 <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={data.length}\r\n                            headCells={headCells}\r\n                            checkable={checkable}\r\n                        />\r\n\r\n\r\n                        <TableBody>\r\n                            {stableSort(data, getComparator(order, orderBy))\r\n                                .filter(item => searchFunction === undefined ? true : searchFunction(keyword, item))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n\r\n                                    const isItemSelected = isSelected(row.name);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    const rowStyle = row['isVerified'] !== undefined  && row['isVerified'] === false ? classes.rowNotVerified :\r\n                                        row['isPublic'] !== undefined && row['isPublic'] === false ? classes.rowNotPublished :  classes.rowBasic;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            className={rowStyle}\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row[id])}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row[id]}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            {checkable ? <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    onChange={(event)=>handleCheckboxChange(event, row.name)}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell> : null}\r\n\r\n                                            {headCells.map(header=>{\r\n                                                if(header.isId){\r\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\r\n                                                            {row[header.id]}\r\n                                                        </TableCell>\r\n                                                }else if(header.id === 'actions' ){\r\n                                                        return <TableCell >\r\n                                                            <div onClick={e => {e.stopPropagation(); e.preventDefault()}}>\r\n                                                                {updateCallback !== undefined ? <IconButton onClick={(event)=>{\r\n                                                                    updateCallback(row[id])\r\n                                                                    return 0\r\n                                                                }} size=\"small\" aria-label=\"edit\" >\r\n                                                                    <EditIcon fontSize=\"small\" />\r\n                                                                </IconButton> : null}\r\n\r\n                                                                {removeCallback !== undefined ? <IconButton size=\"small\" aria-label=\"delete\" onClick={()=>removeCallback(row[id])}>\r\n                                                                    <DeleteIcon  fontSize=\"small\" />\r\n                                                                </IconButton> : null}\r\n\r\n                                                            </div>\r\n                                                            </TableCell>\r\n                                                }else{\r\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\r\n                                                }\r\n\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows}}>\r\n\r\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\r\n                                        <TableCell colSpan={6} className={classes.centerCell}>\r\n                                            <Typography variant=\"h6\" noWrap>\r\n                                                No results\r\n                                            </Typography>\r\n                                        </TableCell>}\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10]}\r\n                    component=\"div\"\r\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\r\nexport default function useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(\r\n        () => {\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n\r\n        [value]\r\n    );\r\n\r\n    return debouncedValue;\r\n}","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","export const getAccessToken = () => localStorage.getItem('access_token');\r\nexport const getRefreshToken = () => localStorage.getItem('refresh_token');\r\nexport const isAuthenticated = () => !!getAccessToken();","import React from \"react\";\r\nimport axios from \"axios\"\r\nimport history from \"../helpers/history\";\r\nimport {getAccessToken, getRefreshToken} from \"../helpers/tokens\";\r\nimport API from \"./API\";\r\n\r\nconst request = async function (options, contentType, authorize= true) {\r\n\r\n    const header = {\r\n        'Content-Type': (contentType == null) ? 'application/json' : contentType,\r\n        'Accept': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Authorization': \"Bearer \" + getAccessToken(),\r\n        'device': 'web'\r\n    };\r\n\r\n    if(!authorize){\r\n        delete header['Authorization']\r\n    }\r\n\r\n    const client = axios.create({\r\n        baseURL: false ? \"http://localhost:8080/\" : \"https://www.traveldirection.ax.lt:8080/\",\r\n        headers: header\r\n    });\r\n\r\n\r\n\r\n    // Add a response interceptor\r\n    client.interceptors.response.use(function (response) {\r\n        return response;\r\n    },  function (error) {\r\n\r\n        // console.log(\"Interceptor error\", error);\r\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n        // Do something with response error\r\n        const originalRequest = error.config;\r\n        const url = originalRequest.url;\r\n        const status = error.response.status;\r\n\r\n\r\n        if (error.response.status === 408 || error.code === 'ECONNABORTED' || error.code === \"ERR_INTERNET_DISCONNECTED\") {\r\n            console.log(`A timeout happend on url ${error.config.url}`)\r\n            return Promise.reject(error)\r\n        }\r\n\r\n        // Logout user if token refresh didn't work or user is disabled\r\n        if (url === 'api/v1/auth/refresh') {\r\n            console.log(\"Asking for refresh token\");\r\n            console.log(\"Unable to issue new JWT token. Redirecting to login page!\");\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"refresh_token\");\r\n            history.push(\"/login\");\r\n            return Promise.reject(error);\r\n        }else if(url.startsWith(\"api/v1/auth\")){\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        //Do not request for new JWT if response code is not Authorized\r\n        if (status !== 403) {\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        if (status === 403 && originalRequest._retry === undefined) {\r\n            console.log(\"Users token has expired!\");\r\n\r\n            originalRequest._retry = true;\r\n\r\n            return API.Auth.refreshToken(getRefreshToken()).then(response=>{\r\n                    console.log(\"Retrieving new token and making the same request!\");\r\n                    let token = response.access_token;\r\n                    originalRequest.headers.Authorization = \"Bearer \" + token;\r\n                    localStorage.setItem(\"access_token\", token);\r\n                    return axios(originalRequest)\r\n            }).catch(err=>{\r\n                return Promise.reject(error)\r\n            })\r\n        }\r\n\r\n        return Promise.reject(error)\r\n    });\r\n\r\n    const onSuccess = function (response) {\r\n        // console.log('Request Successful!', response);\r\n        return response.data;\r\n    };\r\n\r\n    const onError = function (error) {\r\n        if (error.response) {\r\n            console.debug('Status:', error.response.status);\r\n            if (error.response.status === 403) {\r\n                history.push(\"/login\")\r\n            }\r\n            console.debug('Data:', error.response.data);\r\n            console.debug('Headers:', error.response.headers);\r\n        } else {\r\n            console.debug('Error Message:', error.message);\r\n        }\r\n\r\n        return Promise.reject(error.response.data);\r\n    };\r\n\r\n    return client(options)\r\n        .then(onSuccess)\r\n        .catch(onError);\r\n};\r\n\r\nconst getRequest = function (path, urlData = \"\") {\r\n    return request({\r\n        url: path + urlData,\r\n        method: 'GET'\r\n    });\r\n};\r\n\r\nconst postRequest = function (path, data, urlData = \"\", authorize=true) {\r\n    console.log(\"Authorize\",authorize);\r\n    return request({\r\n        url: path + urlData,\r\n        method: 'POST',\r\n        data: data\r\n    }, null, authorize);\r\n};\r\n\r\nconst postMultipartRequest = function (path, formData) {\r\n    return request({\r\n        url: path,\r\n        method: 'POST',\r\n        data: formData\r\n    }, 'multipart/form-data');\r\n};\r\n\r\nconst RequestType = {\r\n    getRequest, postRequest, postMultipartRequest\r\n};\r\n\r\nexport default RequestType\r\n\r\n\r\n","import RequestType from '../Networking/NetworkLayerCentral'\r\n\r\n//Places\r\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\r\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\r\nconst getClosesPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin/closest\", urlParams);\r\n\r\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\r\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\r\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\r\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\r\nconst removePlace = (urlParams) => RequestType.getRequest(\"api/v1/place/delete\", urlParams);\r\n\r\nconst getAllCities = (urlParams) =>RequestType.getRequest(\"api/v1/place/city/all\",urlParams);\r\nconst getAllCounties = (urlParams) =>RequestType.getRequest(\"api/v1/place/county/all\",urlParams);\r\nconst getAllCountries = (urlParams) =>RequestType.getRequest(\"api/v1/place/country/all\",urlParams);\r\nconst getAllMunicipalities = (urlParams) =>RequestType.getRequest(\"api/v1/place/municipality/all\",urlParams);\r\n\r\nconst Places = {getClosesPlacesAdmin,getAllCities,getAllCounties, getAllCountries, getAllMunicipalities, getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces, removePlace};\r\n\r\n//Tags\r\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\r\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\r\nconst removeTags = (params) => RequestType.postRequest(\"api/v1/tags/delete\", params);\r\nconst updateTags = (params) => RequestType.postRequest(\"api/v1/tags/update\", params);\r\nconst Tags = {getAllTags, addTag, removeTags, updateTags};\r\n\r\n//Category\r\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\r\nconst removeCategory = (params) => RequestType.postRequest(\"api/v1/categories/delete\", params);\r\nconst updateCategory = (params) => RequestType.postRequest(\"api/v1/categories/update\", params);\r\nconst getAllCategories = (params) => RequestType.getRequest(\"api/v1/categories/all\", params);\r\nconst Categories = {addCategory, getAllCategories, removeCategory, updateCategory};\r\n\r\n//Photo\r\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\r\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\r\nconst Photos = {addPhoto, uploadPhoto};\r\n\r\n\r\n//Parking\r\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\r\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\r\nconst Parking = {getParkingByLocation, insertNewParking};\r\n\r\n\r\n//TagsPlace\r\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\r\nconst TagsPlace = {updateTagsForPlace};\r\n\r\n//CategoriesPlace\r\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\r\nconst CategoriesPlace = {updateCategoriesForPlace};\r\n\r\n//PhotoPlace\r\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\r\nconst ParkingPlace = {updateParkingForPlace};\r\n\r\n//PhotoPlace\r\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\r\nconst PhotoPlace = {updatePhotoForPlace};\r\n\r\n//Schedule\r\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\r\nconst Schedule = {updateScheduleForPlace};\r\n\r\n//ReviewsPlace\r\nconst getPlaceReviews = (urlParams) => RequestType.getRequest(\"api/v1/reviews/all\", urlParams);\r\nconst Reviews = {getPlaceReviews};\r\n\r\n//Sources\r\nconst getSources = () => RequestType.getRequest(\"api/v1/source/all\");\r\nconst addSource = (data) => RequestType.postRequest(\"api/v1/source/insert\",data);\r\nconst Source = {getSources, addSource};\r\n\r\n//SourcePlace\r\nconst updateSourcesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/sourceplace/update\", data, urlParams);\r\nconst SourcePlace = {updateSourcesForPlace};\r\n\r\n//Tours\r\nconst insertTour = (data) => RequestType.postRequest(\"api/v1/tour/insert\",data)\r\nconst updateTour = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/update\",data, urlParams)\r\nconst updateTourCategories = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/categories/update\",data, urlParams)\r\nconst getTour = (urlParams) => RequestType.getRequest(\"api/v1/tour\",urlParams)\r\nconst getTourCategories = (urlParams) => RequestType.getRequest(\"api/v1/tour/categories\",urlParams)\r\nconst removeTour = (urlParams) => RequestType.getRequest(\"api/v1/tour/delete\", urlParams);\r\nconst getAllToursAdmin = (urlParams) => RequestType.getRequest(\"api/v1/tour/searchadmin\", urlParams);\r\nconst Tour = {insertTour, getTour, updateTour, getAllToursAdmin, removeTour, getTourCategories, updateTourCategories}\r\n\r\n//Auth\r\nconst login = (data) => RequestType.postRequest(\"api/v1/auth/login\", data, \"\", false);\r\nconst register = (data) => RequestType.postRequest(\"api/v1/auth/registration\",data, \"\", false);\r\nconst refreshToken = (data) => RequestType.postRequest(\"api/v1/auth/refresh\", data, \"\", false);\r\n\r\nconst Auth = {register, login, refreshToken};\r\n\r\n//User\r\nconst getUserProfile = () => RequestType.getRequest(\"api/v1/user/info\");\r\nconst getAllUsers = (urlParams) => RequestType.getRequest(\"api/v1/user/search\", urlParams);\r\nconst getAllRoles = () => RequestType.getRequest(\"api/v1/user/roles/all\");\r\nconst setRoles = (data) => RequestType.postRequest(\"api/v1/user/setRoles\", data);\r\n\r\nconst User = {setRoles, getAllRoles, getAllUsers, getUserProfile};\r\n\r\n//Recommendation\r\nconst createRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/create\", data);\r\nconst getAllRecommendations = (urlParams) => RequestType.getRequest(\"api/v1/recommendation/search\", urlParams);\r\nconst addPlaceToRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/addObject\", data);\r\nconst removePlaceFromRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/removeObject\", data);\r\nconst updateRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/update\", data)\r\nconst removeRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/remove\", data)\r\n\r\nconst Recommendation = { removeRecommendation, updateRecommendation, removePlaceFromRecommendation, addObjectToRecommendation: addPlaceToRecommendation, getAllRecommendations, createRecommendation }\r\n\r\n//Explore\r\n\r\nconst updateExplorePage = (data) => RequestType.postRequest(\"api/v1/explore/update\", data)\r\nconst getExplorePage = () => RequestType.getRequest(\"api/v1/explore/\")\r\n\r\nconst Explore = { getExplorePage, updateExplorePage }\r\n\r\nconst API = {Explore, Recommendation, User, Auth, Tour, SourcePlace, Source,Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule, Reviews};\r\n\r\nexport default API\r\n\r\n","// src/common/providers/APIErrorProvider/index.js\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nexport const AlertDialogContext = React.createContext({\r\n    alertConfig: null,\r\n    addAlertConfig: () => {},\r\n    removeAlertConfig: () => {}\r\n});\r\n\r\nexport default function AlertDialogProvider({ children }) {\r\n    const [alertConfig, setAlertConfig] = useState(null);\r\n    const contextValue = {\r\n        alertConfig,\r\n        addAlertConfig: (title, message, actions, onClose = undefined) => setAlertConfig({ title, message, actions, onClose}),\r\n        removeAlertConfig: () => setAlertConfig(null)\r\n    };\r\n\r\n    return (\r\n        <AlertDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </AlertDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AlertDialogContext} from \"./AlertDialogContext\";\r\n\r\nexport default function UseAlertDialogContext() {\r\n    const { alertConfig, addAlertConfig, removeAlertConfig } = useContext(AlertDialogContext);\r\n    return { alertConfig, addAlertConfig, removeAlertConfig };\r\n}\r\n","const Strings = {\r\n    DIALOG_PLACE_PUBLISH_TITLE : 'Place publicity',\r\n    DIALOG_PLACE_PUBLISH_MESSAGE: \"This place will be visible for all users. Are you sure?\",\r\n    DIALOG_PLACE_UNPUBLISH_MESSAGE :\"This place will not be visible anymore. Are you sure?\",\r\n\r\n    DIALOG_PLACE_INSERT_TITLE: \"Insert place\",\r\n    DIALOG_PLACE_INSERT: \"Are you sure you want to insert this place?\",\r\n\r\n    DIALOG_PLACE_UPDATE_TITLE: \"Update place\",\r\n    DIALOG_PLACE_UPDATE: \"Are you sure you want to make changes to this place?\",\r\n\r\n    DIALOG_PLACE_VERIFY_TITLE: \"Place verification\",\r\n    DIALOG_PLACE_VERIFY_MESSAGE: \"This is a user's suggested place. Are you sure you want to verify this place and make it visible to others?\",\r\n\r\n    DIALOG_PLACE_DELETE_TITLE: \"Delete place\",\r\n    DIALOG_PLACE_DELETE_MESSAGE: \"This action will remove this place permanently. Are you sure you want to proceed?\",\r\n\r\n    DIALOG_TOUR_DELETE_TITLE: \"Delete tour\",\r\n    DIALOG_TOUR_DELETE_MESSAGE: \"This action will remove this tour permanently. Are you sure you want to proceed?\",\r\n\r\n    SNACKBAR_PLACE_INSERTED_SUCCESS: \"Place inserted successfully\",\r\n    SNACKBAR_PLACE_REMOVE_SUCCESS: \"Place was removed successfully\",\r\n\r\n    SNACKBAR_TOUR_INSERTED_SUCCESS: \"Tour inserted successfully\",\r\n    SNACKBAR_TOUR_REMOVE_SUCCESS: \"Tour was removed successfully\",\r\n\r\n    SNACKBAR_ERROR: \"Something went wrong!\",\r\n    SNACKBAR_CHANGES_SAVED: \"All changes saved!\"\r\n};\r\n\r\nexport default Strings;","import React, { useState, useCallback } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nexport const SnackbarContext = React.createContext({\r\n    config: null,\r\n    addConfig: () => {},\r\n    removeConfig: () => {}\r\n});\r\n\r\n\r\nexport default function SnackbarProvider({ children }) {\r\n    const [config, setConfig] = useState(null);\r\n\r\n    const removeConfig = () => setConfig(null);\r\n    const addConfig = (success, message) => setConfig({ success, message });\r\n\r\n    const contextValue = {\r\n        config,\r\n        addConfig: (success, message) => addConfig(success, message),\r\n        removeConfig: () => removeConfig()\r\n    };\r\n\r\n    return (\r\n        <SnackbarContext.Provider value={contextValue}>\r\n            {children}\r\n        </SnackbarContext.Provider>\r\n    );\r\n}","import { useContext } from 'react';\r\nimport {SnackbarContext} from \"./SnackbarContext\";\r\n\r\nexport default function UseSnackbarContext() {\r\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\r\n    return { config, addConfig, removeConfig };\r\n}\r\n","\r\nimport React, {useEffect, useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    autoComplete: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(1),\r\n        margin: 0,\r\n    },\r\n    autoCompleteChipContainer: {\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction AutoCompleteChip(props){\r\n\r\n    const {options, setOptions, selectedOptions, setSelectedOptions, classes, label, id, name} = props;\r\n    const [initialData, setInitialData] = useState([]);\r\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\r\n    const [firstLoad, setFirstLoad] = useState(true);\r\n\r\n    function handleDelete(data) {\r\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\r\n        setOptions(\r\n            [\r\n                ...options,\r\n                data\r\n            ]\r\n        )\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(selectedOptions.length===0){\r\n\r\n            setOptions(\r\n                initialData\r\n            )\r\n        }\r\n    },[selectedOptions]);\r\n\r\n    useEffect(()=>{\r\n        if(firstLoad && options.length>0){\r\n            let data = [];\r\n            options.map(row=>{\r\n                let found = false;\r\n                selectedOptions.map(row1=>{\r\n                    if(JSON.stringify(row) === JSON.stringify(row1)){\r\n                        found = true\r\n                    }\r\n                });\r\n                if(!found){\r\n                   data.push(row)\r\n                }\r\n            });\r\n            setOptions(data);\r\n            setInitialData(data);\r\n            setFirstLoad(false)\r\n        }\r\n    },[options]);\r\n\r\n    function handleInput(event, value){\r\n        setCurrentVal({\"name\": \"\"});\r\n        setSelectedOptions(\r\n            [\r\n                ...selectedOptions,\r\n                value\r\n            ]\r\n        );\r\n        setOptions(options.filter(item => item !== value))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Box  className={classes.autoCompleteChipContainer}>\r\n                {selectedOptions.length !== 0 &&\r\n                <Box component=\"ul\" className={classes.root}>\r\n                    {\r\n                        selectedOptions.map(option => {\r\n                            return id !== undefined ?\r\n                                <li key={option[id]}>\r\n                                    <Chip\r\n                                        variant=\"outlined\"\r\n                                        label={name!== undefined ? option[name] : option.name}\r\n                                        onDelete={() => handleDelete(option)}\r\n                                        className={classes.chip}\r\n                                    />\r\n                                </li>\r\n                                :\r\n                                <li key={option}>\r\n                                        <Chip\r\n                                            variant=\"outlined\"\r\n                                            label={option}\r\n                                            onDelete={() => handleDelete(option)}\r\n                                            className={classes.chip}\r\n                                        />\r\n                                </li>\r\n                                }\r\n\r\n                            )\r\n                    }\r\n                </Box>\r\n                }\r\n\r\n                <Autocomplete\r\n                    className={classes.autoComplete}\r\n                    value={getCurrentVal}\r\n                    options={options}\r\n                    onChange={handleInput}\r\n                    disableClearable\r\n                    getOptionLabel={(option) => {\r\n                        if(typeof(option) === 'string')\r\n                            return option\r\n                        else\r\n                            return option.name\r\n                    }}\r\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\r\n                />\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nAutoCompleteChip.propTypes = {\r\n    setSelectedOptions: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    setOptions: PropTypes.func.isRequired,\r\n    selectedOptions: PropTypes.array.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    label: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AutoCompleteChip)","import React, {useEffect, useState} from 'react';\r\n\r\nexport const AppStateStorageContext = React.createContext();\r\n\r\nexport default function AppStateStorageProvider({ children }) {\r\n\r\n    const [placesPageConfig, setPlacesPageConfig] = useState({keyword: '', page: 1})\r\n\r\n    function savePlacesTableInfo(keyword, page){\r\n        const config = { ...placesPageConfig }\r\n        config.keyword = keyword;\r\n        config.page = page;\r\n        console.log(\"Saving\", {keyword, page})\r\n        setPlacesPageConfig(config)\r\n    }\r\n\r\n\r\n    return (\r\n        <AppStateStorageContext.Provider value={{\r\n            savePlacesTableInfo,\r\n            placesPageConfig\r\n\r\n        }}>\r\n            {children}\r\n        </AppStateStorageContext.Provider>\r\n    );\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport API from \"../Networking/API\";\r\nimport * as moment from \"moment\";\r\nimport {func} from \"prop-types\";\r\nimport {AppStateStorageContext} from \"./AppStateStorageContext\";\r\nexport const PlacesFilterContext = React.createContext();\r\nvar buildUrl = require('build-url');\r\n\r\n\r\nconst initialDates = {\r\n    insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n    insertionEnd: moment(new Date()).add(1,'day').format(),\r\n    modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n    modificationEnd: moment(new Date()).add(1,'day').format()\r\n};\r\n\r\nexport const PlacesFilterProvider = ({children}) => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    const [cities, setCities] = useState([]);\r\n    const [selectedCities, setSelectedCities] = useState([]);\r\n\r\n    const [countries, setCountries] = useState([]);\r\n    const [selectedCountries, setSelectedCountries] = useState([]);\r\n\r\n    const [municipalities, setMunicipalities] = useState([]);\r\n    const [selectedMunicipalities, setSelectedMunicipalities] = useState([]);\r\n\r\n    const [counties, setCounties] = useState([]);\r\n    const [selectedCounties, setSelectedCounties] = useState([]);\r\n\r\n    const [initialLoading, setInitialLoading] = useState(true);\r\n    const [resetFilterOptions, setResetFilterOptions] = useState(false);\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [dates, setDates] = useState(initialDates);\r\n\r\n    const [filterQuery, setFilterQuery] = useState( buildUrl(null, {\r\n        queryParams: {\r\n            di: [dates.insertionStart, dates.insertionEnd],\r\n            dm: [dates.modificationStart, dates.modificationEnd],\r\n            filterOptions: parseFilterOptions(),\r\n            categories: parseCategories(),\r\n            countries: selectedCountries,\r\n            cities: selectedCities,\r\n            municipalities: selectedMunicipalities\r\n        }\r\n    }));\r\n\r\n    const {placesPageConfig, savePlacesTableInfo} = useContext(AppStateStorageContext)\r\n\r\n\r\n    const getCategories = (params=\"\") => {\r\n        API.Categories.getAllCategories().then(response=>{\r\n            setCategories(response);\r\n            // console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        });\r\n    };\r\n\r\n    const getAllCities = (restrictions=\"\") =>{\r\n        API.Places.getAllCities(restrictions).then(res=>{\r\n            setCities(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllCounties = () =>{\r\n        API.Places.getAllCounties().then(res=>{\r\n            setCounties(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllCountries = () =>{\r\n        API.Places.getAllCountries().then(res=>{\r\n            setCountries(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllMunicipalities = (restrictions=\"\") =>{\r\n        API.Places.getAllMunicipalities(restrictions).then(res=>{\r\n            setMunicipalities(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            // console.log(\"Selected countries changed\")\r\n            getAllMunicipalities(buildUrl(null, {\r\n                queryParams: {\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }));\r\n            getAllCities(buildUrl(null, {\r\n                queryParams: {\r\n                    munRestrictions: selectedMunicipalities,\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }))\r\n        }\r\n    },[selectedCountries]);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            // console.log(\"Selected munis changed\")\r\n            getAllCities(buildUrl(null, {\r\n                queryParams: {\r\n                    munRestrictions: selectedMunicipalities,\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }))\r\n        }\r\n    }, [selectedMunicipalities]);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Fetching...\");\r\n        Promise.all([\r\n            getCategories(),\r\n            getAllCities(),\r\n            getAllCountries(),\r\n            getAllCounties(),\r\n            getAllMunicipalities()\r\n        ]).then(response => {\r\n            setInitialLoading(false);\r\n            // console.log(\"All data received!\")\r\n        }).catch(err => {\r\n        })\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            if(!resetFilterOptions){\r\n                setFilterQuery(buildUrl(null, {\r\n                    queryParams: {\r\n                        di: [dates.insertionStart, dates.insertionEnd],\r\n                        dm: [dates.modificationStart, dates.modificationEnd],\r\n                        o: parseFilterOptions(),\r\n                        c: parseCategories(),\r\n                        countries: selectedCountries,\r\n                        cities: selectedCities,\r\n                        municipalities: selectedMunicipalities\r\n                    }\r\n                }))\r\n            }else{\r\n                if(areFiltersCleared()){\r\n                    setResetFilterOptions(false)\r\n                }\r\n            }\r\n        }\r\n    },[selectedCategories, selectedCities,selectedCountries,selectedMunicipalities,dates,filterOptions,resetFilterOptions]);\r\n\r\n    function areFiltersCleared() {\r\n        let filterOptionsCleared = true;\r\n        filterOptions.map(row=>{\r\n            if(row.filter){\r\n                filterOptionsCleared = false\r\n            }\r\n        });\r\n        return filterOptionsCleared &&\r\n            selectedCategories.length === 0 &&\r\n            selectedCities.length === 0 &&\r\n            selectedCountries.length ===0 &&\r\n            dates.insertionStart === initialDates.insertionStart &&\r\n            dates.modificationStart === initialDates.modificationStart\r\n    }\r\n\r\n    function parseCategories(){\r\n        let cats = [];\r\n        selectedCategories.map(row=>{\r\n            cats.push(row.name)\r\n        });\r\n        return cats\r\n    }\r\n\r\n    function parseFilterOptions(){\r\n        let options = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filter === true)\r\n                options.push(row.filterName)\r\n        });\r\n        return options\r\n    }\r\n\r\n    const contextValue = {\r\n        filterQuery,\r\n        setResetFilterOptions,\r\n\r\n        dates,\r\n        setDates,\r\n\r\n        filterOptions,\r\n        setFilterOptions,\r\n\r\n        categories,\r\n        setCategories,\r\n        selectedCategories,\r\n        setSelectedCategories,\r\n\r\n        counties,\r\n        setCounties,\r\n        selectedCounties,\r\n        setSelectedCounties,\r\n\r\n        cities,\r\n        setCities,\r\n        selectedCities,\r\n        setSelectedCities,\r\n\r\n        countries,\r\n        setCountries,\r\n        selectedCountries,\r\n        setSelectedCountries,\r\n\r\n        municipalities,\r\n        setMunicipalities,\r\n        selectedMunicipalities,\r\n        setSelectedMunicipalities\r\n    };\r\n\r\n    return (\r\n        <PlacesFilterContext.Provider value={contextValue}>\r\n            {children}\r\n        </PlacesFilterContext.Provider>\r\n    );\r\n};","import React, {useContext, useEffect, useState} from \"react\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport moment from \"moment\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport MuiPickersUtilsProvider from \"@material-ui/pickers/MuiPickersUtilsProvider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst style = theme =>({\r\n    filterDiv: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    sortingButtons: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(1),\r\n        height: \"100%\"\r\n\r\n    },\r\n    rightLayout: {\r\n        boxShadow: \"0 0 1px 0 #666\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(1)\r\n    },\r\n    datesLayout:{\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n        marginBottom: \"8px\",\r\n        boxShadow: \"0 0 1px 0 #666\",\r\n        padding: theme.spacing(1)\r\n    },\r\n    paper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center'\r\n\r\n    }\r\n});\r\n\r\n\r\n\r\nfunction FilterBlock({classes, setOpen}) {\r\n    const {\r\n        categories, setCategories, selectedCategories, setSelectedCategories,\r\n        cities, setCities, selectedCities, setSelectedCities,\r\n        countries, setCountries, selectedCountries, setSelectedCountries,\r\n        municipalities, setMunicipalities, selectedMunicipalities, setSelectedMunicipalities,\r\n        filterOptions, setFilterOptions, setResetFilterOptions,\r\n        dates, setDates} = useContext(PlacesFilterContext);\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let generalOptions = Object.assign([], filterOptions);\r\n        generalOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n        });\r\n        setFilterOptions(generalOptions)\r\n    };\r\n\r\n    function filterDateChange(date, id) {\r\n        let cDate = Object.assign( {}, dates);\r\n        cDate[id] = moment(date).format('YYYY-MM-DD');\r\n        setDates(cDate)\r\n    }\r\n\r\n    function clearFilters() {\r\n        setResetFilterOptions(true);\r\n\r\n        setSelectedCities([]);\r\n        setSelectedCountries([]);\r\n        setSelectedCategories([]);\r\n        setSelectedMunicipalities([]);\r\n\r\n        let filters = Object.assign(filterOptions, []);\r\n        filters.map(row=>{\r\n            row.filter = false\r\n        });\r\n        setFilterOptions(filters);\r\n\r\n        setDates({\r\n            insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n            insertionEnd: moment(new Date()).add(1,'day').format(),\r\n            modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n            modificationEnd: moment(new Date()).add(1,'day').format()\r\n        })\r\n    }\r\n\r\n    return <Paper className={classes.root}>\r\n        <Grid container direction=\"row\" spacing={3}>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\">\r\n                        General options\r\n                    </Typography>\r\n                    <div className={classes.sortingButtons}>\r\n                        {filterOptions.map(row=>{\r\n                            return <FormControlLabel\r\n                                key={row.filterName}\r\n                                control={<Checkbox\r\n                                checked={row.filter}\r\n                                onChange={()=>filterOptionsChanged(row.filterName)}\r\n                                name={row.filterName} />}\r\n                                label={row.filterLabel}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                    <Typography variant=\"h6\">\r\n                        Filter by categories\r\n                    </Typography>\r\n                    <AutocompleteChip label=\"Select categories\"\r\n                                      id=\"categoryId\"\r\n                                      options={categories}\r\n                                      setOptions={setCategories}\r\n                                      selectedOptions={selectedCategories}\r\n                                      setSelectedOptions={setSelectedCategories}/>\r\n\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by dates\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Insertion dates\r\n                            </Typography>\r\n                    <Grid container justify=\"space-around\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"insertionStart\"\r\n                            onChange={(date)=>filterDateChange(date,\"insertionStart\")}\r\n                            value={dates.insertionStart}\r\n                            label=\"Date start\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.insertionEnd}\r\n                            onChange={(date)=>filterDateChange(date,\"insertionEnd\")}\r\n                            id=\"insertionEnd\"\r\n                            label=\"Date end\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        </MuiPickersUtilsProvider>\r\n                    </Grid>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Modification dates\r\n                    </Typography>\r\n                    <Grid container justify=\"space-around\">\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.modificationStart}\r\n                            onChange={(date)=>filterDateChange(date,\"modificationStart\")}\r\n                            id=\"modificationStart\"\r\n                            label=\"Date start\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.modificationEnd}\r\n                            onChange={(date)=>filterDateChange(date,\"modificationEnd\")}\r\n                            id=\"modificationEnd\"\r\n                            label=\"Date end\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\">\r\n                        Filter by countries\r\n                    </Typography>\r\n                    <AutocompleteChip label=\"Select countries\"\r\n                                      options={countries}\r\n                                      setOptions={setCountries}\r\n                                      selectedOptions={selectedCountries}\r\n                                      setSelectedOptions={setSelectedCountries}/>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by municipalities\r\n                            </Typography>\r\n                            <AutocompleteChip label=\"Select municipalities\"\r\n                                              options={municipalities}\r\n                                              setOptions={setMunicipalities}\r\n                                              selectedOptions={selectedMunicipalities}\r\n                                              setSelectedOptions={setSelectedMunicipalities}/>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by cities\r\n                            </Typography>\r\n                            <AutocompleteChip label=\"Select cities\"\r\n                                              options={cities}\r\n                                              setOptions={setCities}\r\n                                              selectedOptions={selectedCities}\r\n                                              setSelectedOptions={setSelectedCities}/>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n        <Button\r\n            style={{marginTop: 8}}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => clearFilters()}>\r\n            Clear filters\r\n        </Button>\r\n    </Paper>\r\n}\r\n\r\nexport default withStyles(style)(FilterBlock)","import React, {useContext, useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport FilterBlock from \"../components/add_place_components/FilterBlock\";\r\nimport {PlacesFilterContext} from \"../contexts/PlacesFilterContext\";\r\nimport {AppStateStorageContext} from \"../contexts/AppStateStorageContext\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    autocomplete: {\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline: \"0\",\r\n        marginBottom: \"4px\"\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\r\n    {id: 'address', numeric: false, disablePadding: false, label: 'Address', isId: false},\r\n    {id: 'city', numeric: false, disablePadding: false, label: 'City', isId: false},\r\n    {id: 'country', numeric: false, disablePadding: false, label: 'Country', isId: false},\r\n    {id: 'dateModified', numeric: false, disablePadding: false, label: 'Date modified', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n];\r\n\r\nfunction Places(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const {classes} = props;\r\n\r\n\r\n    const {filterQuery} = useContext(PlacesFilterContext);\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    const {placesPageConfig, savePlacesTableInfo} = useContext(AppStateStorageContext)\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        if(!isLoading){\r\n            savePlacesTableInfo(1, placesPageConfig.keyword)\r\n            requestAllPlaces(1, placesPageConfig.keyword);\r\n        }else{\r\n            requestAllPlaces()\r\n        }\r\n    }, [filterQuery]);\r\n\r\n\r\n    function getPlaceNameById(id) {\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i].placeId === id)\r\n                return data[i].name\r\n        }\r\n    }\r\n\r\n    function requestAllPlaces(p = placesPageConfig.page, keyword = placesPageConfig.keyword) {\r\n        console.log(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n        getAllPlaces(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n    }\r\n\r\n    function parseData(data) {\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        console.log(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updatePlaceCallback(id) {\r\n        history.push(\"/app/addplace/\" + id)\r\n    }\r\n\r\n    function removePlaceCallback(id) {\r\n        setIsLoading(true);\r\n        addAlertConfig(Strings.DIALOG_PLACE_DELETE_TITLE + \" - \" + getPlaceNameById(id), Strings.DIALOG_PLACE_DELETE_MESSAGE, [{\r\n            name: \"Remove\",\r\n            action: () => {\r\n                API.Places.removePlace(\"?p=\" + id).then(response => {\r\n                    let tmp = [];\r\n                    data.map(row => {\r\n                        if (row.placeId !== id) {\r\n                            tmp.push(row)\r\n                        }\r\n                    });\r\n                    setData(tmp);\r\n                    addConfig(true, Strings.SNACKBAR_PLACE_REMOVE_SUCCESS)\r\n                    setIsLoading(false)\r\n                }).catch(error => {\r\n                    setIsLoading(false);\r\n                    addConfig(false, Strings.SNACKBAR_ERROR)\r\n                })\r\n            }\r\n        }], () => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const changePageCallback = (p = 0, keyword = \"\") => {\r\n        if(!isLoading){\r\n            setIsLoading(true);\r\n            savePlacesTableInfo(keyword, p)\r\n            requestAllPlaces(p, keyword)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                <FilterBlock setOpen={true}/>\r\n\r\n                <TableComponent\r\n                    title={\"Places\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updatePlaceCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    initialKeyword={placesPageConfig.keyword}\r\n                    id={\"placeId\"}\r\n                    isLoading={isLoading}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={() => {\r\n                            history.push(\"/app/addplace\")\r\n                        }}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n            <Button>\r\n                Clear filters\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    function getAllPlaces(urlParams = \"\") {\r\n        API.Places.getAllPlacesAdmin(urlParams).then(response => {\r\n            setIsLoading(false);\r\n            parseData(response)\r\n        }).catch(error => {\r\n            setIsLoading(false);\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nPlaces.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Places);","export const priceRange = [\r\n    {\r\n        value: 0,\r\n        label: \"FREE\",\r\n    },\r\n    {\r\n        value: 25,\r\n        label: \"$\",\r\n    },\r\n    {\r\n        value: 50,\r\n        label: \"$$\",\r\n    },\r\n    {\r\n        value: 75,\r\n        label: \"$$$\",\r\n    },\r\n    {\r\n        value: 100,\r\n        label: \"$$$$\",\r\n    },\r\n    {\r\n        value: 125,\r\n        label: \"$$$$$\",\r\n    }\r\n];\r\n","export const averageTimeSpent = [\r\n    {\r\n        value: 5,\r\n        label: 5,\r\n    },\r\n    {\r\n        value: 10,\r\n        label: 10,\r\n    },\r\n    {\r\n        value: 15,\r\n        label: 15,\r\n    },\r\n    {\r\n        value: 30,\r\n        label: 30,\r\n    },\r\n    {\r\n        value: 45,\r\n        label: 45,\r\n    },\r\n    {\r\n        value: 60,\r\n        label: 60,\r\n    },\r\n    {\r\n        value: 90,\r\n        label: 90,\r\n    },\r\n    {\r\n        value: 120,\r\n        label: 120,\r\n    },\r\n    {\r\n        value: 150,\r\n        label: 150,\r\n    },\r\n    {\r\n        value: 180,\r\n        label: 180,\r\n    },\r\n    {\r\n        value: 210,\r\n        label: 210,\r\n    },\r\n    {\r\n        value: 240,\r\n        label: 240,\r\n    },\r\n    {\r\n        value: 270,\r\n        label: 270,\r\n    },\r\n];","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    }\r\n});\r\n\r\nfunction AddSourceDialog(props){\r\n\r\n    function validateInput(){\r\n        let error = false;\r\n        if(text.length <= 3 || url.length <=3)\r\n            error = true;\r\n        setError(error);\r\n        return error\r\n    }\r\n\r\n    let {classes, open, action, setDialogOpen} = props;\r\n    const [text, setText] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    return(\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Insert source\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                        <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}\r\n                                   label=\"Source name\" variant=\"outlined\" fullWidth />\r\n                        <TextField style={{marginTop:\"16px\"}} error={error} onChange = {(ev) => {setUrl(ev.target.value)}}\r\n                                   label=\"Source url\" variant=\"outlined\" fullWidth />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={()=>setDialogOpen(false)} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text, url);\r\n                        setDialogOpen(false)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\nexport default withStyles(styles)(AddSourceDialog)","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {priceRange} from \"../../helpers/priceRange\";\r\nimport {averageTimeSpent} from \"../../helpers/averageTimeSpent\"\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport API from \"../../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddSourceDialog from \"../AddSourceDialog\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\n\r\nconst styles = theme => ({});\r\nlet previousPrice = \"\";\r\n\r\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo, selectedSources, setSelectedSources}) {\r\n\r\n    const updatePlaceInfo = (event, newValue) => {\r\n        const {name, value, id} = event.target;\r\n        let place = Object.assign({}, placeInfo, {});\r\n        if (id !== \"\") {\r\n            place[id] = valuetext(newValue[0]);\r\n        } else {\r\n            place[name] = value\r\n        }\r\n        setPlaceInfo(place)\r\n    };\r\n\r\n    const getSources = () =>{\r\n        API.Source.getSources().then(response=>{\r\n            setAvailableSources(response)\r\n        }).catch(error=>{\r\n\r\n        })\r\n    };\r\n\r\n    const handleAddSource = (name, url) =>{\r\n        API.Source.addSource({name: name, url: url}).then(response=>{\r\n            setAvailableSources(\r\n                [\r\n                    ...availableSources,\r\n                    response\r\n                ]\r\n            );\r\n            setSelectedSources([\r\n                ...selectedSources,\r\n                response\r\n            ]);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getSources()\r\n    },[]);\r\n\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [availableSources, setAvailableSources] = useState([]);\r\n\r\n    function valuetext(value) {\r\n        let val = \"\";\r\n        priceRange.map(row => {\r\n            if (row.value === value)\r\n                val = row.label\r\n        });\r\n        return val\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\">\r\n            Basic place information\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Place name\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter the place name\"\r\n            fullWidth\r\n            value={placeInfo['name']}\r\n            name=\"name\"\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Place description\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Describe the place thoroughly\"\r\n            fullWidth\r\n            multiline\r\n            name=\"description\"\r\n            value={placeInfo['description']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            rows={15}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Phone number\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter phone number\"\r\n            fullWidth\r\n            name=\"phoneNumber\"\r\n            value={placeInfo['phoneNumber']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n      <FormControlLabel\r\n          style={{width: '100%', marginLeft: 5}}\r\n          control={\r\n            <Checkbox\r\n                name=\"checkedB\"\r\n                color=\"primary\"\r\n                checked={placeInfo['bookInAdvance'] || false}\r\n                onChange={(e) => setPlaceInfo(place => {\r\n                  return {\r\n                    ...place,\r\n                    bookInAdvance: !place.bookInAdvance || false\r\n                  }\r\n                }\r\n                )}\r\n            />\r\n          }\r\n          label={<span style={{fontSize: 16}}>Requires booking in advance</span>}\r\n      />\r\n        <TextField\r\n            label=\"Website\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter website\"\r\n            fullWidth\r\n            name=\"website\"\r\n            value={placeInfo['website']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n       <AutoCompleteChip\r\n                id=\"source\"\r\n                label=\"Select sources\"\r\n                options={availableSources}\r\n                setOptions={setAvailableSources}\r\n                setSelectedOptions={setSelectedSources}\r\n                selectedOptions={selectedSources}\r\n       />\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={() => setDialogOpen(true)}\r\n            startIcon={<AddIcon />}>\r\n            Add missing source\r\n        </Button>\r\n        <AddSourceDialog\r\n            action={handleAddSource}\r\n            open={dialogOpen}\r\n            setDialogOpen={setDialogOpen}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Typography>\r\n                Price\r\n            </Typography>\r\n            <Slider\r\n                id=\"price\"\r\n                onChange={updatePlaceInfo}\r\n                value={priceRange.map(row => {\r\n                    if (row.label === placeInfo['price']) return row.value\r\n                })}\r\n                style={{width: \"60%\", marginLeft: \"48px\"}}\r\n                defaultValue={0}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider-always\"\r\n                step={25}\r\n                max={125}\r\n                marks={priceRange}\r\n            />\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Typography>\r\n                Average time spent\r\n            </Typography>\r\n            <FormControl variant=\"outlined\" style={{width: \"60%\", marginLeft: \"48px\"}}>\r\n                <InputLabel>Minutes</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={parseInt(placeInfo['averageTimeSpent'], 10)}\r\n                    onChange={updatePlaceInfo}\r\n                    label=\"Average Time spent\"\r\n                    inputProps={{\r\n                        name: 'averageTimeSpent'\r\n                    }}\r\n                >\r\n                    <option value=\"-1\">None</option>\r\n                    {\r\n                        averageTimeSpent.map(row=>{\r\n                            return <option value={parseInt(row.value, 10)}> {row.value}</option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport React, {useMemo, useState} from \"react\"\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Delete from \"@material-ui/icons/Delete\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst imgWithClick = {cursor: \"pointer\"};\r\n\r\nconst Photo = ({index, onItemDelete, photo, margin, direction, top, left}) => {\r\n\r\n    const styles = {\r\n        imgContainer: {\r\n            margin: margin,\r\n            display: 'inline',\r\n            position: 'relative',\r\n            width: '300px',\r\n            height: '300px',\r\n        }\r\n    }\r\n    if (direction === \"column\") {\r\n        styles.imgContainer.position = \"absolute\";\r\n        styles.imgContainer.imgStyle.left = left;\r\n        styles.imgContainer.imgStyle.top = top;\r\n    }\r\n\r\n    const handleDelete = event => {\r\n        onItemDelete(photo);\r\n    }\r\n\r\n    return (\r\n\r\n        <Card style={styles.imgContainer}>\r\n            <CardMedia\r\n                style={{height: 0, paddingTop: '80%'}}\r\n                image={photo.src}\r\n            />\r\n            <CardActions disableSpacing>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon/>}\r\n                    onClick={(event) => {\r\n                        handleDelete(event)\r\n                    }}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n\r\n        </Card>\r\n    )\r\n\r\n};\r\n\r\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\r\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\r\nconst SortableGallery = SortableContainer(({items, onItemDelete}) => (\r\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>}/>\r\n));\r\n\r\nfunction ReorderablePhotos(props) {\r\n    let {setPhotos, photos, srcName, keyName} = props\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\r\n    };\r\n\r\n    function handleItemDelete(photo) {\r\n        setPhotos(photos.filter(item => {\r\n            return item[keyName].toString() !== photo.key\r\n        }))\r\n    }\r\n\r\n    let modifiedData = photos.map(item => {\r\n        return (\r\n            {\r\n                key: item[keyName].toString(),\r\n                src: item[srcName],\r\n                width: 1,\r\n                height: 1\r\n            })\r\n\r\n    })\r\n    return (\r\n        <div>\r\n            <SortableGallery pressDelay={200}\r\n                             disableAutoscroll={false} items={modifiedData} onSortEnd={onSortEnd}\r\n                             axis={\"xy\"} onItemDelete={handleItemDelete}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {DropzoneArea} from \"material-ui-dropzone\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../Networking/API\";\r\n\r\nconst styles = theme => ({\r\n    dropzoneArea: {\r\n        overflow: \"hidden\"\r\n    }\r\n});\r\n\r\nconst acceptedFileFormats = ['.jpeg', '.png', '.bmp', '.jpg']\r\n\r\nfunction AddImageDialog(props) {\r\n\r\n    const {onCloseCallback, open, onFinishCallback, classes} = props\r\n    const [loading, setIsLoading] = useState(false)\r\n    const [selectedFiles, setSelectedFiles] = useState([])\r\n\r\n    const submitCallback = () => {\r\n        setIsLoading(true)\r\n\r\n        Promise.all(selectedFiles.map(imagefile => {\r\n            let formData = new FormData()\r\n            formData.append(\"image\", imagefile)\r\n            return API.Photos.uploadPhoto(formData).then(response => response)\r\n        })).then(response => {\r\n            console.log(response)\r\n            onFinishCallback(response)\r\n        }).catch(error => {\r\n            onFinishCallback(null)\r\n        }).finally(() => {\r\n            setSelectedFiles([])\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleDrop = (files )=> {\r\n        setSelectedFiles(existingFiles => [...existingFiles, ...files])\r\n    }\r\n\r\n    const handleDelete = (file) => {\r\n        console.log(file.name)\r\n        setSelectedFiles(files => {return files.filter(existingFile => existingFile !== file)})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Photo upload\r\n                </DialogTitle>\r\n                {loading && <LinearProgress variant=\"query\"/>}\r\n                <DialogContent dividers>\r\n                    <DropzoneArea\r\n                        className={classes.dropzoneArea}\r\n                        acceptedFiles={acceptedFileFormats}\r\n                        maxFileSize={25000000}\r\n                        showAlerts={['error']}\r\n                        dropzoneProps={{disabled: loading}} filesLimit={5} onDrop={handleDrop}\r\n                    onDelete={handleDelete}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={submitCallback} color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddImageDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onFinishCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddImageDialog)\r\n","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ReorderablePhotos from \"../ReorderablePhotos\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddImageDialog from \"../AddImageDialog\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PhotosInfo({classes, setPhotos, photos}) {\r\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    function handleAddPhoto(files) {\r\n        setAddImageDialogOpen(false);\r\n        if(files == null){\r\n            addConfig(false, \"Something went wrong\")\r\n            return;\r\n        }\r\n        addConfig(true, \"Photos were uploaded successfully.\")\r\n\r\n        setPhotos([\r\n            ...photos,\r\n            ...files]\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h6\" >\r\n                Photos\r\n            </Typography>\r\n            <Card variant={\"outlined\"} className={classes.outline}>\r\n\r\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\r\n\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{width: '15%'}}\r\n                    className={classes.button}\r\n                    onClick={() => setAddImageDialogOpen(true)}\r\n                    startIcon={<AddIcon />}>\r\n                    Add photo\r\n                </Button>\r\n\r\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(files) => handleAddPhoto(files)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\r\n\r\n            </Card>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PhotosInfo)\r\n\r\n\r\n","import React from \"react\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nGeocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\r\n\r\n/**\r\n * Get country from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCountry = (addressArray) =>{\r\n    if(addressArray!==undefined){\r\n        let country = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\r\n                country = addressArray[ i ].long_name;\r\n                return country;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get country from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCity = ( addressArray ) => {\r\n    if(addressArray !== undefined){\r\n        let city = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'locality' === addressArray[ i ].types[0] ) {\r\n                city = addressArray[ i ].long_name;\r\n                return city;\r\n            }\r\n        }\r\n        return city;\r\n    }\r\n};\r\n\r\n/**\r\n * Get district from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCounty = ( addressArray ) => {\r\n        if(addressArray !== undefined){\r\n            let county = '';\r\n            for( let i = 0; i < addressArray.length; i++ ) {\r\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n                    county = addressArray[ i ].long_name;\r\n                    return county;\r\n                }\r\n            }\r\n            return county\r\n        }\r\n    };\r\n/**\r\n * Get district from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getMunicipality = ( addressArray ) => {\r\n    if(addressArray !== undefined){\r\n        let municipality = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\r\n                municipality = addressArray[ i ].long_name;\r\n                return municipality;\r\n            }\r\n        }\r\n        return municipality;\r\n    }\r\n};\r\n\r\n/**\r\n * Geocode location from address\r\n * @param address\r\n * @type string\r\n * @return location object\r\n */\r\nexport function geocodeFromAddress(address){\r\n    return Geocode.fromAddress( address ).then(\r\n        response => {\r\n            const { lat, lng } = response.results[0].geometry.location;\r\n            if(lat !== undefined && lng !== undefined){\r\n                return geocodeFromLatLng(lat, lng).then(loc=>{\r\n                    return loc\r\n                })\r\n            }else{\r\n                return null\r\n            }\r\n        },\r\n        err=>{\r\n            return null\r\n        }\r\n    )\r\n}\r\n\r\n/**\r\n * Geocode location from latitude and longitude\r\n * @param newLat\r\n * @param newLng\r\n * @return location object\r\n */\r\n\r\n\r\nexport function geocodeFromLatLng(newLat, newLng){\r\n    return Geocode.fromLatLng( newLat , newLng ).then(\r\n        response => {\r\n            const address = response.results[0].formatted_address\r\n            const addressArray =  response.results[0].address_components\r\n            if(addressArray!==undefined){\r\n                const city = getCity( addressArray ),\r\n                    country = getCountry( addressArray ),\r\n                    county = getCounty(addressArray),\r\n                    municipality = getMunicipality(addressArray);\r\n                let loc = {address: address, city: city, country: country, latitude: newLat, longitude: newLng, county: county, municipality: municipality};\r\n                return loc;\r\n            }\r\n            return null\r\n        },\r\n        error => {\r\n            return null\r\n        }\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\r\nimport PropTypes from \"prop-types\";\r\nimport {geocodeFromAddress, geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    autocomplete:{\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline:\"0\",\r\n        marginBottom: \"4px\"\r\n    },\r\n    root: {\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"8px\",\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction MapToolbar({classes, isLocked, locationCallback}) {\r\n\r\n    const [loading, setIsLoading] = useState(false);\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    /**\r\n     * Handle manual address and coordinates filling with key presses and return location\r\n     * @param event\r\n     * @return {boolean}\r\n     */\r\n\r\n    function errorParsingLocation(){\r\n        addAlertConfig(\"Error parsing location!\", \"Make sure that address you provided is correct!\",[])\r\n    }\r\n\r\n    function handleKeyPress(event){\r\n        const value = event.target.value;\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            setIsLoading(true);\r\n            if (/[a-zA-Z]+/.test(value)){\r\n                geocodeFromAddress(value).then(location=>{\r\n                    location!==null ? locationCallback(location) : errorParsingLocation();\r\n                    setIsLoading(false)\r\n                })\r\n            }else{\r\n                let position = value.split(/[ ,]+/);\r\n                if(position.length === 2){\r\n                    geocodeFromLatLng(parseFloat(position[0]), parseFloat(position[1])).then(location=>{\r\n                        location!==null ? locationCallback(location) : errorParsingLocation();\r\n                        setIsLoading(false)\r\n                    })\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Handle place selection from google maps autocomplete\r\n     * @param place\r\n     * @return {{country: (*|string), address: *, city: (*|string), latitude: *, longitude: *}|null}\r\n     */\r\n    const onPlaceSelected = (place) => {\r\n        setIsLoading(true);\r\n        const addressArray = place.address_components;\r\n        if (addressArray !== undefined) {\r\n            const lat = place.geometry.location.lat(),\r\n                lng = place.geometry.location.lng();\r\n            geocodeFromLatLng(lat, lng).then(location => {\r\n                location !== null ? locationCallback(location) : errorParsingLocation();\r\n                setIsLoading(false)\r\n            });\r\n        }\r\n        return null\r\n    };\r\n\r\n    /**\r\n     * Get current location\r\n     */\r\n    function getCurrentPosition(){\r\n        setIsLoading(true)\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n            let newLat = position.coords.latitude,\r\n                newLng = position.coords.longitude;\r\n            geocodeFromLatLng(newLat, newLng).then(location=>{\r\n                location!==null ? locationCallback(location) : errorParsingLocation();\r\n\r\n                setIsLoading(false)\r\n            });\r\n        }, error=>{\r\n            setIsLoading(false)\r\n            alert(error.message + \"\\n\" + JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    return <div className={classes.root}>\r\n        <div className={classes.content}>\r\n            <Autocomplete\r\n                onKeyPress={(event)=>{if(!isLocked)handleKeyPress(event)}}\r\n                onPlaceSelected={(place)=>{if(!isLocked)onPlaceSelected(place)} }\r\n                className={classes.autocomplete}\r\n                types={['(regions)']}\r\n            />\r\n            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\">\r\n                <MyLocationIcon\r\n                    onClick={()=>{if(!isLocked)getCurrentPosition()}}\r\n                    fontSize=\"large\"\r\n                    color=\"primary\"\r\n                />\r\n            </IconButton>\r\n        </div>\r\n        {loading ? <LinearProgress /> : null}\r\n\r\n    </div>\r\n\r\n\r\n}\r\n\r\nMapToolbar.propTypes = {\r\n    isLocked: PropTypes.bool.isRequired,\r\n    locationCallback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(MapToolbar)","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"8px\",\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction MapLock({classes, isLocked, setIsLocked}) {\r\n    return <div className={classes.root}>\r\n        <FormControlLabel\r\n            control={<Switch />}\r\n            label=\"Lock\"\r\n            checked={isLocked}\r\n            onChange={()=>{\r\n               setIsLocked(old=>!old)\r\n            }}\r\n        />\r\n        {isLocked ?\r\n            <Alert  severity=\"error\">Map is currently locked. If you want to do any changes unlock it.</Alert> : null}\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(MapLock)","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { MAP } from 'react-google-maps/lib/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CustomControlsManager(\r\n    { position = window.google.maps.ControlPosition.TOP_LEFT, children },\r\n    context\r\n) {\r\n    const map = context[MAP];\r\n\r\n    const controlDiv = document.createElement('div');\r\n\r\n    useEffect(() => {\r\n        const controls = map.controls[position];\r\n        const index = controls.length;\r\n        controls.push(controlDiv);\r\n        return () => {\r\n            controls.removeAt(index);\r\n        };\r\n    });\r\n\r\n    return createPortal(\r\n        <div style={{ marginBottom: 8, marginTop: 8 }}>{children}</div>,\r\n        controlDiv\r\n    );\r\n}\r\n\r\nCustomControlsManager.contextTypes = {\r\n    [MAP]: PropTypes.object,\r\n};","import React, {useEffect, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow} from \"react-google-maps\"\r\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport MapToolbar from \"./MapToolbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport MapLock from \"./MapLock\";\r\nimport CustomControlsManager from \"./CustomControlsManager\";\r\nimport ExploreIcon from '@material-ui/icons/Explore';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../../Networking/API\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from \"@material-ui/core/Card\";\r\nvar buildUrl = require('build-url');\r\nconst styles = theme => ({ largeIcon: {\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n    }});\r\n\r\nconst MapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        defaultZoom={15}\r\n        ref={props.refInstance}\r\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\r\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n        {props.children}\r\n\r\n    </GoogleMap>\r\n\r\n);\r\n\r\n\r\n\r\nfunction PlaceMap({classes, placeInfo,locationMarker,setLocationMarker,setParkingLocationMarker}) {\r\n\r\n    const [otherPlacesData, setOtherPlacesData] = useState([]);\r\n    const [infoWindows, setInfoWindows] = useState([]);\r\n\r\n    const [isLocked, setIsLocked] = useState(placeInfo.placeId !== \"\");\r\n    const refMap = useRef(null);\r\n\r\n    function mapToolbarCallback(location) {\r\n        setParkingLocationMarker(location);\r\n        setLocationMarker(location)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getClosestPlaces()\r\n    },[locationMarker]);\r\n\r\n    function getClosestPlaces(){\r\n        API.Places.getAllPlacesAdmin(buildUrl(null, {\r\n            queryParams: {\r\n                p: \"0\",\r\n                s: \"10\",\r\n                range: 3,\r\n                l: [locationMarker.latitude, locationMarker.longitude]\r\n            }\r\n        })).then(response=>{\r\n            setOtherPlacesData(response.list);\r\n        }).catch(error=>{\r\n\r\n        })\r\n    }\r\n\r\n    function onMarkerDragEnd(event) {\r\n        let newLat = event.latLng.lat(),\r\n            newLng = event.latLng.lng();\r\n        geocodeFromLatLng(newLat, newLng).then(location => {\r\n            setLocationMarker(location);\r\n            setParkingLocationMarker(location)\r\n        })\r\n    }\r\n    \r\n    return <React.Fragment>\r\n        <MapToolbar\r\n            isLocked={isLocked}\r\n            locationCallback={mapToolbarCallback}/>\r\n\r\n        <MapComponent\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            refInstance={refMap}\r\n            position={locationMarker}\r\n        >\r\n            {\r\n                otherPlacesData.map((location, i) =>{\r\n                    const latitude = parseFloat(location.latitude);\r\n                    const longitude = parseFloat(location.longitude);\r\n                        return placeInfo.placeId === \"\" ? <Marker\r\n                            key={location.placeId}\r\n                            zIndex={1}\r\n                            position={{lat: latitude, lng: longitude}}\r\n                            icon={{\r\n                                url: require('../../res/selectedTourIcon.svg'),\r\n                                scaledSize: new window.google.maps.Size(48, 48),\r\n                                origin: new window.google.maps.Point(0, 0)\r\n                            }}\r\n                            onClick={() => {\r\n                                if (!isLocked) {\r\n                                    let markers = Object.assign([], infoWindows);\r\n                                    markers[i] = true;\r\n                                    setInfoWindows(markers)\r\n                                }\r\n                            }}\r\n                        >\r\n                            {infoWindows[i] && (\r\n                                <InfoWindow onCloseClick={() => {\r\n                                    let markers = Object.assign([], infoWindows);\r\n                                    markers[i] = false;\r\n                                    setInfoWindows(markers)\r\n                                }\r\n                                }>\r\n\r\n                                    <Card style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                                        {location.photos.length > 0 ? <Avatar alt=\"Remy Sharp\" src={location.photos[0].url}\r\n                                                                          className={classes.largeIcon}/> : null}\r\n                                        <Typography variant=\"h6\">\r\n                                            {location.name}\r\n                                        </Typography>\r\n\r\n                                    </Card>\r\n                                </InfoWindow>\r\n                            )}\r\n                        </Marker> : null\r\n\r\n                })\r\n            }\r\n\r\n            <Marker\r\n                name={'Dolores park'}\r\n                visible={true}\r\n                draggable={!isLocked}\r\n                zIndex={2}\r\n                onDragEnd={e => onMarkerDragEnd(e)}\r\n                position={{lat: locationMarker.latitude, lng: locationMarker.longitude}}>\r\n            </Marker>\r\n\r\n            <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\r\n                <div>\r\n                    <IconButton aria-label=\"delete\" onClick={()=>{\r\n                        if(!isLocked){\r\n                            const mapCenter = refMap.current.getCenter();\r\n                            geocodeFromLatLng(mapCenter.lat(), mapCenter.lng()).then(location=>{\r\n                                setLocationMarker(location)\r\n                                setParkingLocationMarker(location)\r\n                            });\r\n                        }\r\n                    }}>\r\n                        <ExploreIcon fontSize={\"large\"}/>\r\n                    </IconButton>\r\n                </div>\r\n            </CustomControlsManager>\r\n        </MapComponent>\r\n\r\n\r\n\r\n        <MapLock\r\n            isLocked={isLocked}\r\n            setIsLocked={setIsLocked}\r\n        />\r\n    </React.Fragment>\r\n\r\n\r\n}\r\n\r\nPlaceMap.propTypes = {\r\n    locationMarker: PropTypes.object.isRequired,\r\n    setLocationMarker: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PlaceMap)","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PlaceMap from \"../maps/PlaceMap\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PlaceLocation({locationData, setLocationData, setParkingLocation, placeInfo}) {\r\n\r\n    function changeLocationData(event){\r\n        const {name, value} = event.target;\r\n        let data = Object.assign({}, locationData, {});\r\n        data[name] = value;\r\n\r\n        setParkingLocation(data);\r\n        setLocationData(data)\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select place location from map\r\n        </Typography>\r\n        <br/>\r\n        <PlaceMap\r\n            placeInfo={placeInfo}\r\n            locationMarker={locationData}\r\n            setParkingLocationMarker={setParkingLocation}\r\n            setLocationMarker={setLocationData}\r\n        />\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Address\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place address\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['address']}\r\n            name='address'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"City\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place city\"\r\n            fullWidth\r\n            value={locationData['city']}\r\n            name='city'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"County\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place county\"\r\n            fullWidth\r\n            value={locationData['county']}\r\n            name='county'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Municipality\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place municipality\"\r\n            fullWidth\r\n            value={locationData['municipality']}\r\n            name='municipality'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Country\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place country\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['country']}\r\n            name='country'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            rows={4}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceLocation)","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from \"react-google-maps\";\r\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport MapToolbar from \"./MapToolbar\";\r\nimport API from \"../../Networking/API\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CustomControlsManager from \"./CustomControlsManager\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExploreIcon from \"@material-ui/icons/Explore\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\n\r\nconst MapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        ref={props.refInstance}\r\n        defaultZoom={12}\r\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\r\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n        <Marker\r\n            onClick={()=>{if(!props.isLocked)props.setMainInfoWindow(true)}}\r\n            name={'Dolores park'}\r\n            visible={true}\r\n            draggable={!props.isLocked}\r\n            onDragEnd={e => onMarkerDragEnd(e, props.setPosition)}\r\n            position={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n            {props.mainInfoWindow && (\r\n                <InfoWindow onCloseClick={()=>{props.setMainInfoWindow(false)}}>\r\n                    <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                        {props.position.address}\r\n                        <Button\r\n                            onClick={()=>{\r\n                                let c = nearestParkingCount(props.position, props.parkingData);\r\n                                if(c>0){\r\n                                    props.addAlertConfig(\"Parkings nearby already exist!\", c+\" parking(-s) within 150 meter already exist(-s).\" +\r\n                                        \" Are you sure you don't want to use already existings parking locations?\",[{name:\"ADD NEW PARKING!\", action: ()=>{\r\n                                            props.addNewParking(props.position)\r\n                                        }}])\r\n                                }else{\r\n                                    props.addNewParking(props.position)\r\n                                }\r\n                            }}\r\n                            variant=\"text\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            startIcon={<AddIcon />}>\r\n                            Add new parking\r\n                        </Button>\r\n                    </div>\r\n                </InfoWindow>\r\n            )}\r\n        </Marker>\r\n\r\n        <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\r\n            <div>\r\n                <IconButton aria-label=\"delete\" onClick={()=>{\r\n                    if(!props.isLocked){\r\n                        let loc = Object.assign({},props.position, {});\r\n                        const mapCenter = props.refInstance.current.getCenter();\r\n                        loc.latitude = mapCenter.lat();\r\n                        loc.longitude = mapCenter.lng();\r\n                        props.setPosition(loc)\r\n                    }\r\n                }}>\r\n                    <ExploreIcon fontSize={\"large\"}/>\r\n                </IconButton>\r\n            </div>\r\n        </CustomControlsManager>\r\n\r\n        {\r\n            props.parkingData.map((location, i) =>{\r\n                const latitude = parseFloat(location.latitude);\r\n                const longitude = parseFloat(location.longitude);\r\n                console.log(parkingIsAttached(location, props.selectedParkingData));\r\n                return <Marker\r\n                    key={location.parkingId}\r\n                    position={{ lat: latitude, lng: longitude}}\r\n                    icon={{\r\n                        url: parkingIsAttached(location, props.selectedParkingData) ? require('../../res/selectedParking.svg') :\r\n                            require('../../res/availableParking.svg'),\r\n                        scaledSize: new window.google.maps.Size(20, 48),\r\n                        origin: new window.google.maps.Point(0, 0),\r\n                        anchor: new window.google.maps.Point(10, 35)\r\n                    }}\r\n                    onClick={()=>{\r\n                        if(!props.isLocked){\r\n                            let markers = Object.assign({},props.parkingInfoWindows, {});\r\n                            markers[i] = true;\r\n                            props.setParkingInfoWindows(markers)\r\n                        }\r\n                    }}\r\n                >\r\n                    {props.parkingInfoWindows[i] && (\r\n                        <InfoWindow onCloseClick={()=>{\r\n                                let markers = Object.assign({},props.parkingInfoWindows, {});\r\n                                markers[i] = false;\r\n                                props.setParkingInfoWindows(markers)\r\n                            }\r\n                        }>\r\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                                <Typography variant=\"h6\">\r\n                                    {location.address}\r\n                                </Typography>\r\n                                {parkingIsAttached(location, props.selectedParkingData) ? <div>\r\n                                        <Alert severity=\"success\">This parking location is already attached! See below in \"Selected parking locations\" section.</Alert>\r\n                                </div> :\r\n                                <Button\r\n                                    onClick={()=>{props.addExistingParking(location)}}\r\n                                    variant=\"text\"\r\n                                    color=\"secondary\"\r\n                                    size=\"large\"\r\n                                    startIcon={<AddIcon />}>\r\n                                    Add parking\r\n                                </Button>\r\n                                }\r\n                            </div>\r\n                        </InfoWindow>\r\n                    )}\r\n\r\n                </Marker>\r\n\r\n            })\r\n        }\r\n\r\n    </GoogleMap>\r\n);\r\n\r\nfunction parkingIsAttached(parking, selectedParkingData) {\r\n    for(let i = 0; i<selectedParkingData.length; i++){\r\n        if(selectedParkingData[i].address === parking.address)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction calcCrow(lat1, lon1, lat2, lon2)\r\n{\r\n    var R = 6371; // km\r\n    var dLat = toRad(lat2-lat1);\r\n    var dLon = toRad(lon2-lon1);\r\n    var lat1 = toRad(lat1);\r\n    var lat2 = toRad(lat2);\r\n\r\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    var d = R * c;\r\n    return d;\r\n}\r\nfunction toRad(Value) {return Value * Math.PI / 180}\r\n\r\nfunction nearestParkingCount(parking, parkingData){\r\n    let count = 0;\r\n    for(let i = 0; i<parkingData.length; i++){\r\n        let distance = calcCrow(parking.latitude, parking.longitude, parkingData[i].latitude, parkingData[i].longitude);\r\n        if(distance<=0.15){\r\n            count++;\r\n        }\r\n    }\r\n    return count\r\n}\r\n\r\n\r\nfunction onMarkerDragEnd(event, setLocationMarker) {\r\n    let newLat = event.latLng.lat(),\r\n        newLng = event.latLng.lng();\r\n    geocodeFromLatLng(newLat, newLng).then(location => {\r\n        setLocationMarker(location)\r\n    })\r\n}\r\n\r\nfunction ParkingMap({placeInfo,\r\n                        locationMarker,\r\n                        setLocationMarker,\r\n                        addNewParking,\r\n                        addExistingParking,\r\n                        selectedParkingData\r\n                    }) {\r\n\r\n    const [parkingData, setParkingData] = useState([]);\r\n    const [mainInfoWindow, setMainInfoWindow] = useState(false);\r\n    const [parkingInfoWindows, setParkingInfoWindows] = useState(false);\r\n    const [isLocked, setIsLocked] = useState(false);\r\n    const refMap = useRef(null);\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    function getClosestParking(){\r\n        API.Parking.getParkingByLocation(\"?lat=\"+locationMarker.latitude+\"&lng=\"+locationMarker.longitude).then(response=>{\r\n            setParkingData(response);\r\n        }).catch(error=>{\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getClosestParking()\r\n    },[locationMarker]);\r\n\r\n    function mapToolbarCallback(location) {\r\n        setMainInfoWindow(true);\r\n        setLocationMarker(location)\r\n    }\r\n\r\n    return <React.Fragment>\r\n        <MapToolbar\r\n            isLocked={isLocked}\r\n            locationCallback={mapToolbarCallback}/>\r\n\r\n        <MapComponent\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            mainInfoWindow={mainInfoWindow}\r\n            setMainInfoWindow={setMainInfoWindow}\r\n            addNewParking={addNewParking}\r\n            addExistingParking={addExistingParking}\r\n            parkingInfoWindows={parkingInfoWindows}\r\n            setParkingInfoWindows={setParkingInfoWindows}\r\n            parkingData={parkingData}\r\n            position={locationMarker}\r\n            setPosition={setLocationMarker}\r\n            isLocked={isLocked}\r\n            refInstance={refMap}\r\n            selectedParkingData={selectedParkingData}\r\n            addAlertConfig={addAlertConfig}\r\n        />\r\n\r\n    </React.Fragment>\r\n}\r\n\r\n\r\nParkingMap.propTypes = {\r\n    placeInfo: PropTypes.object.isRequired,\r\n    locationMarker: PropTypes.object.isRequired,\r\n    setLocationMarker: PropTypes.func.isRequired,\r\n    addNewParking: PropTypes.func.isRequired,\r\n    addExistingParking: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ParkingMap","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../../Networking/API\";\r\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport ParkingMap from \"../maps/ParkingMap\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction ParkingLocation({classes, locationData, setLocationData, allSelectedParkingData, setAllSelectedParkingData, placeInfo}) {\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\r\n    };\r\n\r\n    function addNewParking(markerData){\r\n        if(!parkingExists(markerData)){\r\n            API.Parking.insertNewParking([markerData]).then(response=>{\r\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\r\n                addConfig(true)\r\n            }).catch(error=>{\r\n                addConfig(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    function addExistingParking(location) {\r\n        if(!parkingExists(location)){\r\n            setAllSelectedParkingData(oldArray=> [...oldArray, location])\r\n        }\r\n    }\r\n\r\n    function parkingExists(markerData){\r\n        for(let i = 0; i<allSelectedParkingData.length; i++){\r\n            if(allSelectedParkingData[i].address === markerData.address){\r\n                addConfig(false, \"This parking is already attached!\");\r\n                return true;\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    const SortableItem = SortableElement(({value}) => (\r\n        <Paper className={classes.paper} elevation={3}>\r\n            <Typography>\r\n                {value.address}\r\n            </Typography>\r\n            <IconButton aria-label=\"delete\" className={classes.margin}\r\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </Paper>\r\n    ));\r\n\r\n\r\n    const SortableList = SortableContainer(({items}) => {\r\n        return (\r\n            <ul>\r\n                {items.map((value, index) => (\r\n                <SortableItem key={index} index={index} value={value} />\r\n                ))}\r\n            </ul>\r\n        );\r\n    });\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Add parking\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select parking\r\n        </Typography>\r\n\r\n        <ParkingMap\r\n            selectedParkingData={allSelectedParkingData}\r\n            placeInfo={placeInfo}\r\n            locationMarker={locationData}\r\n            setLocationMarker={setLocationData}\r\n            addNewParking={addNewParking}\r\n            addExistingParking={addExistingParking}\r\n        />\r\n\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Selected parking locations\r\n        </Typography>\r\n        {allSelectedParkingData.length === 0 ? <Alert severity=\"error\">\r\n            This place has no selected parking! To select parking for this place do the following:\r\n            <br/>\r\n            1. Select your current location or any other location\r\n            <br/>\r\n            2. Select already existing nearby parking locations and click add\r\n            <br/>\r\n            3. If none of the location is valid, click on the orange marker and add new parking\r\n            </Alert> :\r\n            <SortableList pressDelay={200} disableAutoscroll={false} items={allSelectedParkingData} onSortEnd={onSortEnd} />\r\n        }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(ParkingLocation)","import React, { useState, useCallback } from 'react';\r\n\r\nexport const EditDialogContext = React.createContext({\r\n    dialogConfig: null,\r\n    dialogOpen: null,\r\n    setDialogOpen: null,\r\n    addEditDialogConfig: () => {},\r\n    removeEditDialogConfig: () => {}\r\n});\r\n\r\nconst defaultOptions = {\r\n\r\n    /**\r\n     * The dialog's title.\r\n     */\r\n    title: \"Sample title\",\r\n\r\n    /**\r\n     * Object, that defines an error message for each error returned by validateInput function.\r\n     * Should follow this structure: {errorCode: \"message\", differentErrorCode: \"Message\"}\r\n     * Keys of this object are integers (that represent the error code)\r\n     */\r\n    errorMessages: {},\r\n\r\n    /**\r\n     * Explanation text for this dialog.\r\n     */\r\n    explanation: \"Sample explanation\",\r\n\r\n    /**\r\n     * A callback for when user presses cancel.\r\n     */\r\n    onCloseCallback: () => {},\r\n\r\n    /**\r\n     * A callback for when the user input passes error checks and done button is pressed\r\n     * @param input is the input text\r\n     */\r\n    onDoneCallback: (input) => {},\r\n\r\n    /**\r\n     * The label text to be displayed above textfield\r\n     */\r\n    textFieldLabel: \"Type here\",\r\n\r\n    /**\r\n     * Should return 0 if input is valid.\r\n     * If the input is not valid, it should return an error code.\r\n     * Any returned code, that is not 0 is considered to be an error.\r\n     * The error code returned may have a message in errorMessages prop.\r\n     * @param input\r\n     * @returns {number}\r\n     */\r\n    validateInput: (input) => 0,\r\n\r\n    /**\r\n     * The default text to be displayed in TextField\r\n     */\r\n    defaultText: \"\"\r\n}\r\n\r\nexport default function EditDialogProvider({ children }) {\r\n    const [dialogConfig, setDialogConfig] = useState(defaultOptions);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const contextValue = {\r\n        dialogConfig,\r\n        dialogOpen: dialogOpen,\r\n        setDialogOpen: setDialogOpen,\r\n        addEditDialogConfig: (options) => {\r\n            setDialogConfig({\r\n                ...defaultOptions,\r\n                ...options\r\n            })\r\n            setDialogOpen(true)\r\n        },\r\n        removeEditDialogConfig: () => setDialogConfig(null)\r\n    };\r\n\r\n    return (\r\n        <EditDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </EditDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {EditDialogContext} from \"./EditDialogContext\";\r\n\r\nexport default function UseEditDialogContext() {\r\n    const { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen } = useContext(EditDialogContext);\r\n    return { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen};\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport API from \"../../Networking/API\";\r\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\n\r\nconst styles = theme => ({\r\n  outline: {\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n    width: '100%'\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: \"8px\"\r\n  },\r\n  slider:{\r\n    flex: 1,\r\n    marginRight: 10\r\n  },\r\n  sliderContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  sliderInput: {\r\n\r\n  },\r\n});\r\n\r\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories, placeInfo, setPlaceInfo}) {\r\n\r\n  const [availableCategories, setAvailableCategories] = useState([]);\r\n  const [availableTags, setAvailableTags] = useState([]);\r\n\r\n  const grade = placeInfo.grade\r\n  const setGrade = (value) => {\r\n    setPlaceInfo(info => {\r\n      return {...info, grade: value}\r\n    })\r\n  }\r\n\r\n  const {addEditDialogConfig} = UseEditDialogContext();\r\n  const {addConfig} = UseSnackbarContext();\r\n\r\n  const updateTags = () => {\r\n    API.Tags.getAllTags().then(response => {\r\n      setAvailableTags(response);\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  };\r\n  const updateCategories = () => {\r\n    API.Categories.getAllCategories().then(response => {\r\n      setAvailableCategories(response)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateTags();\r\n    updateCategories();\r\n  }, []);\r\n\r\n\r\n  const promptAddTag = () => {\r\n    addEditDialogConfig({\r\n      title: \"Add tag\",\r\n      explanation: \"Type the tag name\",\r\n      onDoneCallback: (tagName) => {\r\n        API.Tags.addTag([{name: tagName}]).then(response => {\r\n          let newTag = {tagId: response[0], name: tagName}\r\n          setAvailableTags(\r\n              [\r\n                ...availableTags,\r\n                newTag\r\n              ]\r\n          );\r\n          setSelectedTags([\r\n            ...selectedTags,\r\n            newTag\r\n          ]);\r\n\r\n        }).catch(() => {\r\n          addConfig(false, \"Failed to add tag.\")\r\n        })\r\n      },\r\n      errorMessages: {\r\n        1: \"The tag name is too short\",\r\n        2: \"A tag with identical name already exists. You should choose the existing tag instead\"\r\n      },\r\n      validateInput: (input) => {\r\n        if (input.length < 0) {\r\n          return 1 //Input too short\r\n        } else if (availableTags.filter(item => item.name === input).length !== 0) {\r\n          return 2 //Identical tag already exists\r\n        }\r\n        return 0\r\n      },\r\n      textFieldLabel: \"Warm, quick, cozy...\"\r\n    })\r\n  }\r\n\r\n  const promptAddCategory = () => {\r\n    addEditDialogConfig({\r\n      title: \"Add category\",\r\n      explanation: \"Type the category name\",\r\n      onDoneCallback: (categoryName) => {\r\n        API.Categories.addCategory([{name: categoryName}]).then(response => {\r\n          let newCat = {categoryId: response[0], name: categoryName};\r\n          setAvailableCategories(\r\n              [\r\n                ...availableCategories,\r\n                newCat\r\n              ]\r\n          );\r\n          setSelectedCategories([\r\n            ...selectedCategories,\r\n            newCat\r\n          ]);\r\n        }).catch(error => {\r\n          addConfig(false, \"Failed to add category.\")\r\n        })\r\n      },\r\n      errorMessages: {\r\n        1: \"The category name is too short\",\r\n        2: \"A category with identical name already exists. You should choose the existing category instead\"\r\n      },\r\n      validateInput: (input) => {\r\n        if (input.length < 0) {\r\n          return 1 //Input too short\r\n        } else if (availableCategories.filter(item => item.name === input).length !== 0) {\r\n          return 2 //Identical category already exists\r\n        }\r\n        return 0\r\n      },\r\n      textFieldLabel: \"Restaurant, hotel, hiking...\"\r\n    })\r\n  }\r\n\r\n  return <div>\r\n    <Typography variant=\"h6\">\r\n      Place discovery settings\r\n    </Typography>\r\n    <br/>\r\n    <Typography variant=\"subtitle1\">\r\n      Select tags\r\n    </Typography>\r\n    <AutocompleteChip label=\"Select tags\"\r\n                      id=\"tagId\"\r\n                      options={availableTags}\r\n                      setOptions={setAvailableTags}\r\n                      selectedOptions={selectedTags}\r\n                      setSelectedOptions={setSelectedTags}/>\r\n\r\n    <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        onClick={promptAddTag}\r\n        startIcon={<AddIcon/>}>\r\n      Add missing tag\r\n    </Button>\r\n\r\n    <br/>\r\n    <br/>\r\n    <Typography variant=\"subtitle1\">\r\n      Select categories\r\n    </Typography>\r\n    <AutocompleteChip label=\"Select categories\"\r\n                      id=\"categoryId\"\r\n                      options={availableCategories}\r\n                      setOptions={setAvailableCategories}\r\n                      selectedOptions={selectedCategories}\r\n                      setSelectedOptions={setSelectedCategories}/>\r\n    <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        onClick={promptAddCategory}\r\n        startIcon={<AddIcon/>}>\r\n      Add missing category\r\n    </Button>\r\n\r\n    <br/>\r\n    <Typography variant=\"subtitle1\">\r\n      Grade this place\r\n    </Typography>\r\n\r\n    <div className={classes.sliderContainer}>\r\n      <Slider\r\n          className={classes.slider}\r\n          value={grade}\r\n          onChange={(event, value) => {\r\n            setGrade(value)\r\n          }\r\n          }\r\n          max={100}\r\n          min={0}\r\n          aria-labelledby=\"input-slider\"\r\n      />\r\n\r\n      <Input\r\n          className={classes.sliderInput}\r\n          value={grade}\r\n          margin=\"dense\"\r\n          onChange={(event) => {\r\n            setGrade(event.target.value === '' ? '' : Number(event.target.value));\r\n          }}\r\n          onBlur={() => {\r\n            if (grade < 0) {\r\n              setGrade(0);\r\n            } else if (grade > 100) {\r\n              setGrade(100);\r\n            }\r\n          }}\r\n          inputProps={{\r\n            step: 1,\r\n            min: 0,\r\n            max: 100,\r\n            type: 'number',\r\n            'aria-labelledby': 'input-slider',\r\n          }}\r\n      />\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceDiscovery)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        width: \"20%\",\r\n        padding: \"2px\",\r\n        marginRight: \"16px\"\r\n    },\r\n\r\n});\r\nexport default function ReviewCard({review}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <div style={{display: \"flex\"}} >\r\n                    <Avatar alt=\"Cindy Baker\" src={!!review.photoUrl ? review.photoUrl : \"/broken-image.jpg\"} />\r\n                    <div style={{display: \"flex\", flexDirection: \"column\", marginLeft:\"8px\"}}>\r\n                        <Typography title=\"subtitle1\">\r\n                            {review.name} {review.surname}\r\n                        </Typography>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <Rating size=\"small\" name=\"read-only\" value={review.rating} readOnly />\r\n                            <Typography title=\"subtitle1\">\r\n                                {\"+\" + review.upvotes}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                    {moment(review.timeAdded).format('LL')}\r\n                </Typography>\r\n                <div style={{marginTop: \"16px\"}}>\r\n                    {review.title}\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                        {review.review}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ReviewCard from \"../ReviewCard\";\r\nimport API from \"../../Networking/API\";\r\nimport debounce from \"lodash/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nconst styles = theme => ({\r\n    reviewsInfo:{\r\n        display: \"flex\",\r\n    },\r\n    reviews:{\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        margin: theme.spacing(2),\r\n        overflowX: \"scroll\"\r\n    },\r\n    sortingButtons: {\r\n        padding: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction Reviews({classes, placeInfo}) {\r\n\r\n    const [reviews, setReviews] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    const [filterBy, setFilterBy] = useState('mostRated');\r\n\r\n    function getReviewsForPlace(urlParams = \"?p=\"+placeInfo.placeId) {\r\n        API.Reviews.getPlaceReviews(urlParams).then(response=>{\r\n            setReviews(old=>[...old, ...response.list]);\r\n            setIsLoading(false)\r\n        }).catch(error=>{\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    //Get ordered by new filter\r\n    useEffect(()=>{\r\n            getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=1&o=\"+filterBy)\r\n    },[filterBy]);\r\n\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollWidth - e.target.scrollLeft - scrollOffset)  <= e.target.clientWidth;\r\n        if (bottom && !isLoading && reviews.length>0 && reviews.length<placeInfo.totalReviews) {\r\n            setIsLoading(true);\r\n            setPage(old=>{\r\n                getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=\"+(old+1)+\"&o=\"+filterBy);\r\n                return old+1\r\n            });\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    function changeSorting(e){\r\n        const {name, value} = e.target;\r\n        setFilterBy(value);\r\n        setReviews([]);\r\n        setPage(1);\r\n        handleClose()\r\n    }\r\n\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Reviews\r\n            <br/>\r\n            {\r\n               reviews.length > 0 ?\r\n                   <React.Fragment>\r\n                       <div style={{display:\"flex\", justifyContent: \"space-between\"}}>\r\n                           <div className={classes.reviewsInfo}>\r\n                               <Rating name=\"read-only\" value={placeInfo.overallStarRating} precision={0.2} readOnly />\r\n                               <Typography style={{marginLeft:\"8px\"}} variant=\"subtitle1\">\r\n                                   {placeInfo.totalReviews} reviews\r\n                               </Typography>\r\n                           </div>\r\n                           <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                               <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                                   <FilterListIcon />\r\n                               </IconButton>\r\n                           </Tooltip>\r\n                           <Popover\r\n                               id={id}\r\n                               open={open}\r\n                               anchorEl={anchorEl}\r\n                               onClose={handleClose}\r\n                               anchorOrigin={{\r\n                                   vertical: 'bottom',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                               transformOrigin={{\r\n                                   vertical: 'top',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                           >\r\n                               <RadioGroup className={classes.sortingButtons} aria-label=\"gender\" value={filterBy} name=\"gender1\"  onChange={changeSorting}>\r\n                                   <FormControlLabel value=\"mostRated\" control={<Radio />} label=\"Most rated\" />\r\n                                   <FormControlLabel value=\"newest\" control={<Radio />} label=\"Newest\" />\r\n                               </RadioGroup>\r\n                           </Popover>\r\n                       </div>\r\n\r\n                       <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                           <Typography>\r\n                               Showing: {reviews.length} out of {placeInfo.totalReviews}\r\n                           </Typography>\r\n                           <Typography>\r\n                               Sorting by: {filterBy}\r\n                           </Typography>\r\n                       </div>\r\n                       <div className={classes.reviews} onScroll={e=>handleScroll(e)}>\r\n                           {reviews.map(row=>{\r\n                               return <ReviewCard review={row}/>\r\n                           })}\r\n                       </div>\r\n                   </React.Fragment> : <Typography> No reviews for this place</Typography>\r\n            }\r\n\r\n        </Typography>\r\n        <br/>\r\n        {isLoading ? <LinearProgress/> : null }\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(Reviews)","import React, { useState } from 'react';\r\n\r\nexport const AppBarTitleContext = React.createContext({\r\n    title: \"\",\r\n    setTitle: () => {},\r\n});\r\n\r\nexport default function AppBarTitleProvider({ children }) {\r\n    const [title, setTitle] = useState(\"Home\");\r\n\r\n    const contextValue = {\r\n        title,\r\n        setTitle: (title) => setTitle(title)\r\n    };\r\n\r\n    return (\r\n        <AppBarTitleContext.Provider value={contextValue}>\r\n            {children}\r\n        </AppBarTitleContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AppBarTitleContext} from \"./AppBarTitleContext\";\r\n\r\nexport default function UseAppBarTitleContext() {\r\n    const { title, setTitle } = useContext(AppBarTitleContext);\r\n    return { title, setTitle };\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport API from \"../../Networking/API\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n\r\n});\r\n\r\nfunction AddRecommendationDialog({classes, open, setOpen, addCallback}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [data, setData] = useState({name: \"\", subtitle: \"\", description: \"\", type: \"1\"});\r\n    const [error, setError] = useState({name: false, subtitle: false, description: false});\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let recData = { ...data }\r\n        recData[name] = value\r\n        setData(recData)\r\n    };\r\n\r\n    function addRecommendation(){\r\n        if(checkErrors()){\r\n            return\r\n        }\r\n        setLoading(true)\r\n        addAlertConfig(\"Add new recommendation\", \"Are you sure you want to add this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Recommendation.createRecommendation(data).then(id=>{\r\n                    let insertedData = { ...data }\r\n                    insertedData.id = id\r\n                    addConfig(true, \"Recommendation added successfully\")\r\n                    addCallback(insertedData)\r\n                    setOpen(false)\r\n                }).catch((error)=>{\r\n                    console.log('recommendation error', error)\r\n                    addConfig(false, \"Something went wrong. Please try again.\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    function checkErrors(){\r\n        let errors = Object.assign({}, error)\r\n        let hasErrors = false;\r\n        for (let key in data) {\r\n            errors[key] = data[key] === \"\" || data[key] === -1;\r\n            if(errors[key] === true){\r\n                hasErrors = true\r\n            }\r\n        }\r\n        setError(errors);\r\n        return hasErrors\r\n    }\r\n\r\n    function recommendationTypeChanged(event) {\r\n        let recData = { ...data }\r\n        recData.type = event.target.value\r\n\r\n        setData(recData)\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add new recommendation</DialogTitle>\r\n            <DialogContent>\r\n                <div className={classes.root}>\r\n                    <TextField id=\"outlined-basic\"\r\n                               error={error.title}\r\n                               required\r\n                               label=\"Title\"\r\n                               name=\"name\"\r\n                               value={data['name']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               error={error.subtitle}\r\n                               label=\"Subtitle\"\r\n                               name=\"subtitle\"\r\n                               value={data['subtitle']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               error={error.description}\r\n                               label=\"Description\"\r\n                               name=\"description\"\r\n                               value={data['description']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <FormControl component=\"fieldset\" style={{marginTop: 32}}>\r\n                        <FormLabel component=\"legend\">Recommendation type</FormLabel>\r\n                        <RadioGroup aria-label=\"rec\" name=\"rec1\" value={data.type} onChange={recommendationTypeChanged}>\r\n                            <FormControlLabel value=\"1\" control={<Radio />} label=\"Places recommendation\" />\r\n                            <FormControlLabel value=\"2\" control={<Radio />} label=\"Tours recommendation\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </div>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        addRecommendation()\r\n                    }}\r\n                >\r\n                    Create recommendation\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(AddRecommendationDialog)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport API from \"../../Networking/API\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport history from \"../../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddRecommendationDialog from \"./AddRecommendationDialog\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport debounce from \"lodash/debounce\";\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start'\r\n    }\r\n});\r\n\r\nfunction RecommendationListDialog({classes, open, setOpen, objectId, type}){\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [recommendations, setRecommendations] = useState([]);\r\n    const [pagingData, setPagingData] = useState({pageNum: 1})\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [showAddNewRecommendation, setShowAddNewRecommendation] = useState(false)\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    function getRecommendations(page, keywordChange = false) {\r\n        API.Recommendation.getAllRecommendations(\"?p=\"+page+\"&keyword=\"+keyword+\"&type=\"+type).then(response=>{\r\n            if(keywordChange){\r\n                setRecommendations(response.list)\r\n            }else{\r\n                setRecommendations(old=>[...old, ...response.list])\r\n            }\r\n            delete response.list\r\n            setPagingData(response)\r\n        }).catch().finally(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        console.log(\"Handle scroll\")\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollHeight - e.target.scrollTop - scrollOffset)  <= e.target.clientHeight;\r\n        if (bottom && !loading && recommendations.length>0 && pagingData.pageNum<pagingData.pages) {\r\n            setLoading(true);\r\n            console.log(\"Requesting new page\")\r\n            getRecommendations(pagingData.pageNum+1);\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Keyword changed\")\r\n        getRecommendations(1, true);\r\n    }, [keyword])\r\n\r\n\r\n    function addPlaceToRecommendation(rec) {\r\n      API.Recommendation.addObjectToRecommendation({id: objectId, recommendationId: rec.id}).then(()=>{\r\n              addConfig(true, \"Added object to recommendation successfully!\")\r\n      }).catch(()=>{\r\n              addConfig(true, \"Failed to add!\")\r\n          }\r\n      ).finally(()=>{\r\n          setOpen(false)\r\n      })\r\n    }\r\n\r\n    function addNewRecommendationCallback(recommendation){\r\n        let recData = [ ...recommendations ]\r\n        recData.unshift(recommendation)\r\n\r\n        setRecommendations(recData)\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"sm\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add to recommendation</DialogTitle>\r\n            <DialogContent>\r\n                <div className={classes.root}>\r\n                    <div className={classes.root} >\r\n                        <TextField id=\"standard-search\" label=\"Search field\" value={keyword} type=\"search\" onChange={e=>{\r\n                            setKeyword(e.target.value)\r\n                        }} />\r\n                        {recommendations.length > 0 ?\r\n                            <React.Fragment>\r\n                                <List component=\"nav\" style={{ overflowY: \"scroll\", width: '100%', maxHeight: 400}} onScroll={handleScroll} aria-label=\"main mailbox folders\">\r\n                                    {recommendations.map(row=>{\r\n                                        return <ListItem key={row.name} style={{width: '100%'}} button onClick={()=>{addPlaceToRecommendation(row)}}>\r\n                                            <ListItemIcon>\r\n                                                <CheckBoxOutlineBlankIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={row.name} />\r\n                                        </ListItem>\r\n                                    })}\r\n\r\n                                </List>\r\n                            </React.Fragment>\r\n                            :\r\n\r\n                            <Alert severity=\"info\">Recommendations list is empty. You can add new recommendation below.</Alert>\r\n                        }\r\n\r\n\r\n                    </div>\r\n                    <Divider style={{width: '100%'}} />\r\n                    <Button\r\n                        onClick={()=>setShowAddNewRecommendation(true)}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        startIcon={<AddIcon/>}>\r\n                        Create new recommendation\r\n                    </Button>\r\n                </div>\r\n            <AddRecommendationDialog\r\n                open={showAddNewRecommendation}\r\n                setOpen={setShowAddNewRecommendation}\r\n                addCallback={addNewRecommendationCallback}\r\n            />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RecommendationListDialog)\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {Fragment, useState} from \"react\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n\r\n    },\r\n    media: {\r\n        height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n})\r\n\r\nfunction CategoriesDisplay({categories}){\r\n    return(\r\n        categories != null &&\r\n        <Box component=\"ul\"  style={{\r\n            display: 'flex',\r\n            justifyContent: 'left',\r\n            flexWrap: 'wrap',\r\n            listStyle: 'none',\r\n            padding: '0px'\r\n        }}>\r\n            {categories.map((data, index) => {\r\n                return (\r\n                    <li key={index}>\r\n                        <Chip\r\n                            variant=\"outlined\"\r\n                            style={{margin: \"5px\"}}\r\n                            label={data.name}\r\n                        />\r\n                    </li>\r\n\r\n                );\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction SubheaderDisplay({city, address, priceRange, rating}){\r\n    return(\r\n        <div>\r\n            {rating != null &&\r\n            <Fragment><Rating\r\n                readOnly={true}\r\n                value={rating}\r\n            /><br/></Fragment>}\r\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ApiPlaceCard({classes, placeData, renderActionArea}){\r\n\r\n    function truncateText(text){\r\n        if(text == null)\r\n            return \"\"\r\n        if(text.length > 500){\r\n            return text.substring(0, 500) + \"...\";\r\n        }else{\r\n            return text\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                action={\r\n                    renderActionArea != null && renderActionArea()\r\n                }\r\n                title={placeData.name}\r\n                subheader={<SubheaderDisplay  city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\r\n\r\n            />\r\n            {placeData.photos != null && placeData.photos.length > 0 &&\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={placeData.photos[0].url}\r\n            />}\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {truncateText(placeData.description)}\r\n                </Typography>\r\n\r\n                <CategoriesDisplay categories={placeData.categories}/>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n                {placeData.website}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nApiPlaceCard.propTypes = {\r\n    placeData: PropTypes.object.isRequired,\r\n    renderActionArea: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(ApiPlaceCard)","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\n\r\nconst styles = theme => ({\r\n    paperContent: {\r\n        marginTop: theme.spacing(4),\r\n        width: \"100%\",\r\n        padding: theme.spacing(2)\r\n    },\r\n});\r\n\r\nexport const RecommendationType = {\r\n    place: 1,\r\n    tour: 2\r\n}\r\n\r\nfunction Recommendation({classes, recommendation, onEditCallback}) {\r\n\r\n    return <Paper elevation = {4} className={classes.paperContent}>\r\n            <Chip\r\n                label={recommendation.type === 1 ? \"Place recommendation\" : \"Tour recommendation\"} />\r\n            <Typography variant=\"h6\">\r\n                {recommendation.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n                {recommendation.subtitle}\r\n            </Typography>\r\n\r\n            <div style={{display: \"flex\", flexDirection: 'row', overflowX: 'auto', width: '100%'}}>\r\n                <div style={{display:\"flex\", flexDirection: \"row\"}}>\r\n                    {recommendation.objects.length > 0 ?\r\n\r\n                        recommendation.objects.map((place, index)=>{\r\n                            delete place.description\r\n\r\n                            return <div style={{width: 300, padding: 16}}>\r\n                                <ApiPlaceCard placeData={place}/>\r\n                            </div>\r\n                        }) :\r\n\r\n                        <Alert severity=\"info\">This recommendation does not have any objects attached. You can attach\r\n                            Places or Tours by browsing in Places and Tours tables\r\n                        </Alert>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n        <Fragment>\r\n            <Button\r\n                style={{marginTop: 16}}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => onEditCallback()}\r\n                className={classes.button}>\r\n                Edit\r\n            </Button>\r\n        </Fragment>\r\n\r\n        </Paper>\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Recommendation)","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {DatePicker, TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport shortid from 'shortid';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n  },\r\n  intervalContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    margin: 0,\r\n    flexWrap: 'wrap',\r\n  },\r\n  pickerStyle: {\r\n    width: 50,\r\n    marginLeft: 3,\r\n    margin: 0,\r\n  }\r\n});\r\n\r\nfunction WorkingDayIntervals({classes, scheduleData, setScheduleData, scheduleOpenIndex, variantId, enableLastAccommodation}) {\r\n\r\n  const currentSchedule = scheduleData[scheduleOpenIndex];\r\n  const currentVariant = currentSchedule.variants.find(x => x.elementId === variantId)\r\n\r\n  const toggleSplitSchedule = () => {\r\n    if (currentVariant.shifts.length > 1)\r\n      setScheduleData(oldData => {\r\n        const newData = [...oldData];\r\n        const shifts = newData[scheduleOpenIndex].variants.find(variant => variantId === variant.elementId).shifts\r\n        while (shifts.length > 1)\r\n          shifts.pop()\r\n        return newData;\r\n      })\r\n    else\r\n      setScheduleData(oldData => {\r\n        const newData = [...oldData];\r\n        const shiftToPush = {\r\n          openTime: \"08:00\",\r\n          closeTime: \"18:00\",\r\n          elementId: shortid.generate()\r\n        }\r\n        if(enableLastAccommodation)\r\n          shiftToPush['lastAccommodation'] = \"18:00\"\r\n        newData[scheduleOpenIndex]\r\n            .variants\r\n            .find(variant => variantId === variant.elementId)\r\n            .shifts\r\n            .push(shiftToPush)\r\n        return newData;\r\n      })\r\n  }\r\n\r\n  const changeOpenTime = (shiftId, time) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      currentSchedule\r\n          .variants\r\n          .find(x => x.elementId === variantId)\r\n          .shifts\r\n          .find(shift => shift.elementId === shiftId)\r\n          .openTime = moment(time).format('HH:mm') ;\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const changeCloseTime = (shiftId, time) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      currentSchedule\r\n          .variants\r\n          .find(x => x.elementId === variantId)\r\n          .shifts\r\n          .find(shift => shift.elementId === shiftId)\r\n          .closeTime = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n  const changeLastAccommodationTime = (shiftId, time) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      currentSchedule\r\n          .variants\r\n          .find(x => x.elementId === variantId)\r\n          .shifts\r\n          .find(shift => shift.elementId === shiftId)\r\n          .lastAccommodation = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const shifts = currentVariant.shifts.map((shift, index) => {\r\n    const lastShift = index !== currentVariant.shifts.length - 1\r\n    const firstShift = index === 0\r\n    return (\r\n        <>\r\n          <div className={classes.intervalContainer}>\r\n\r\n            <Typography variant=\"h7\">\r\n              {firstShift ? 'O' : 'o'}pens at\r\n            </Typography>\r\n            <TimePicker\r\n                margin=\"normal\"\r\n                ampm={false}\r\n                className={classes.pickerStyle}\r\n                format=\"HH:mm\"\r\n                value={moment(shift.openTime, \"HH:mm\")}\r\n                onChange={(date) => changeOpenTime(shift.elementId, date)}\r\n            />\r\n            <Typography variant=\"h7\">\r\n              and closes at\r\n            </Typography>\r\n            <TimePicker\r\n                margin=\"normal\"\r\n                ampm={false}\r\n                className={classes.pickerStyle}\r\n                format=\"HH:mm\"\r\n                value={moment(shift.closeTime, \"HH:mm\")}\r\n                onChange={(date) => changeCloseTime(shift.elementId, date)}\r\n            />\r\n            {enableLastAccommodation &&\r\n            <>\r\n              <Typography variant=\"h7\">\r\n                last accommodation at\r\n              </Typography>\r\n              <TimePicker\r\n                  margin=\"normal\"\r\n                  ampm={false}\r\n                  className={classes.pickerStyle}\r\n                  format=\"HH:mm\"\r\n                  value={moment(shift.lastAccommodation, \"HH:mm\")}\r\n                  onChange={(date) => changeLastAccommodationTime(shift.elementId, date)}\r\n              />\r\n            </>\r\n            }\r\n\r\n          </div>\r\n          {lastShift && <Typography variant=\"h7\" style={{marginRight: 5}}>\r\n            THEN\r\n          </Typography>}\r\n        </>)\r\n  })\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        {shifts}\r\n        <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                  name=\"checkedB\"\r\n                  color=\"primary\"\r\n                  checked={currentVariant.shifts.length > 1}\r\n                  onChange={toggleSplitSchedule}\r\n              />\r\n            }\r\n            label=\"Split schedule\"\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(WorkingDayIntervals)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport WorkingShift from \"./WorkingShift\";\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    border: '1px dashed black',\r\n    padding: 8\r\n  },\r\n  weekdayPickerContainer: {\r\n    display: 'flex',\r\n    width: '100%'\r\n  },\r\n  weekdayButton: {\r\n    flex: 1,\r\n    margin: 5,\r\n    padding: 0,\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n  },\r\n  removeButtonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  }\r\n});\r\n\r\nexport const weekdays = [\r\n  {\r\n    id: 0,\r\n    name: \"Mon\",\r\n    fullName: \"Monday\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Tue\",\r\n    fullName: \"Tuesday\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Wed\",\r\n    fullName: \"Wednesday\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Thu\",\r\n    fullName: \"Thursday\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Fri\",\r\n    fullName: \"Friday\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Sat\",\r\n    fullName: \"Saturday\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Sun\",\r\n    fullName: \"Sunday\",\r\n  }\r\n]\r\n\r\n\r\nfunction WorkingHoursVariant({classes, enableLastAccommodation, scheduleData, setScheduleData, scheduleOpenIndex, variantId}) {\r\n\r\n  const currentSchedule = scheduleData[scheduleOpenIndex];\r\n  const currentVariant = currentSchedule.variants.filter(x => x.elementId === variantId)[0]\r\n\r\n  const toggleWeekday = (weekDayIndex) => {\r\n    setScheduleData(scheduleData => {\r\n      const newScheduleData = [...scheduleData];\r\n      let days = newScheduleData[scheduleOpenIndex].variants.find(item => item.elementId === variantId).days\r\n      if (days.includes(weekDayIndex))\r\n        days.splice(days.indexOf(weekDayIndex), 1);\r\n      else\r\n        days.push(weekDayIndex);\r\n      return newScheduleData\r\n    })\r\n  }\r\n\r\n  const weekdayReserved = (weekDayIndex) => {\r\n    return currentSchedule.variants.some(variant => variant.days.includes(weekDayIndex));\r\n  }\r\n\r\n  const weekdayPicker = (\r\n      <div className={classes.weekdayPickerContainer}>\r\n        {weekdays.map((item) => {\r\n          const dayActive = currentVariant.days.some(day => day === item.id);\r\n          return(\r\n              <Button onClick={() => toggleWeekday(item.id)}\r\n                      className={classes.weekdayButton}\r\n                      variant={\"contained\"}\r\n                      color={dayActive ? \"primary\" : \"secondary\"}\r\n                      disabled={!dayActive && weekdayReserved(item.id)}>\r\n                {item.name}\r\n              </Button>\r\n          )}\r\n        )\r\n        }\r\n      </div>\r\n  )\r\n\r\n  const handleDeleteVariant = () => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData];\r\n      const variants = newData[scheduleOpenIndex].variants;\r\n      variants.splice(variants.findIndex(variant => variant.elementId === variantId), 1)\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        {/*<Divider light/>*/}\r\n\r\n        {weekdayPicker}\r\n        <WorkingShift\r\n            enableLastAccommodation={enableLastAccommodation}\r\n            scheduleData={scheduleData}\r\n            scheduleOpenIndex={scheduleOpenIndex}\r\n            setScheduleData={setScheduleData}\r\n            variantId={variantId}/>\r\n        <div className={classes.removeButtonContainer}>\r\n          <Button\r\n              variant=\"text\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleDeleteVariant}\r\n              startIcon={<DeleteOutlineIcon/>}\r\n              style={{display: 'absolute'}}>Remove this variant</Button>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(WorkingHoursVariant)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport shortid from 'shortid';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    border: '1px dashed black',\r\n    padding: 8\r\n  },\r\n  weekdayPickerContainer: {\r\n    display: 'flex',\r\n    width: '100%',\r\n  },\r\n  weekdayButtonContainer: {\r\n    flex: 1,\r\n    // margin: 5,\r\n    padding: 0,\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    margin: 5,\r\n    padding: 0,\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n    width: '90%'\r\n  },\r\n  intervalContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n    margin: 0,\r\n    flexWrap: 'wrap',\r\n  },\r\n  pickerStyle: {\r\n    width: 35,\r\n    marginLeft: 3,\r\n    margin: 0,\r\n  },\r\n  pickerInput: {\r\n    fontSize: 13,\r\n    padding: 0,\r\n  },\r\n})\r\n\r\nexport const weekdays = [\r\n  {\r\n    id: 0,\r\n    name: \"Mon\",\r\n    fullName: \"Monday\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Tue\",\r\n    fullName: \"Tuesday\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Wed\",\r\n    fullName: \"Wednesday\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Thu\",\r\n    fullName: \"Thursday\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Fri\",\r\n    fullName: \"Friday\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Sat\",\r\n    fullName: \"Saturday\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Sun\",\r\n    fullName: \"Sunday\",\r\n  }\r\n]\r\n\r\nconst generateDefaultPeriod = () => {\r\n  return {\r\n    openTime: \"08:00\",\r\n    closeTime: \"18:00\",\r\n    elementId: shortid.generate()\r\n  }\r\n}\r\n\r\nfunction ScheduleWorkingHours({schedule, setSchedule, scheduleOpenIndex, classes}) {\r\n\r\n  const findPeriods = (dayIndex) => {\r\n    return schedule[scheduleOpenIndex].periods.filter(period => period.openDay === dayIndex)\r\n  }\r\n\r\n  const changeOpenTime = (elementId, time) => {\r\n    setSchedule(oldData => {\r\n      const newData = [...oldData]\r\n      newData[scheduleOpenIndex].periods.find(period => period.elementId === elementId).openTime = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n  const changeCloseTime = (elementId, time) => {\r\n    setSchedule(oldData => {\r\n      const newData = [...oldData]\r\n      newData[scheduleOpenIndex].periods.find(period => period.elementId === elementId).closeTime = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const determineGlobalCloseTime = () => {\r\n    if(schedule[scheduleOpenIndex].periods == null || schedule[scheduleOpenIndex].length === 0)\r\n      return \"08:00\"\r\n    else\r\n      return moment(schedule[scheduleOpenIndex].periods[0].closeTime, \"HH:mm\")\r\n  }\r\n  const determineGlobalOpenTime = () => {\r\n    if(schedule[scheduleOpenIndex].periods == null || schedule[scheduleOpenIndex].length === 0)\r\n      return \"18:00\"\r\n    else\r\n      return moment(schedule[scheduleOpenIndex].periods[0].openTime, \"HH:mm\")\r\n  }\r\n\r\n  const determineGlobalSplitScheduleCloseTime = () => {\r\n    for(let i = 0; i < 7; i++){\r\n      let periodsForThisDay =  schedule[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n      if (periodsForThisDay.length > 1)\r\n        return moment(periodsForThisDay[1].closeTime, \"HH:mm\")\r\n    }\r\n    return moment(\"18:00\", \"HH:mm\")\r\n  }\r\n  const determineGlobalSplitScheduleOpenTime = () => {\r\n    for(let i = 0; i < 7; i++){\r\n      let periodsForThisDay =  schedule[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n      if (periodsForThisDay.length > 1)\r\n        return moment(periodsForThisDay[1].openTime, \"HH:mm\")\r\n    }\r\n    return moment(\"13:00\", \"HH:mm\")\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <div className={classes.root}>\r\n          <div className={classes.weekdayPickerContainer}>\r\n            {weekdays.map((item, index) => {\r\n              const periods = findPeriods(index)\r\n              const splitSchedule = periods.length > 1\r\n\r\n              const toggleWorkday = () => {\r\n                if (periods.length > 0) {\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData]\r\n                    newData[scheduleOpenIndex].periods = newData[scheduleOpenIndex].periods.filter(period => period.openDay !== index)\r\n                    return newData\r\n                  })\r\n                } else {\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData]\r\n                    newData[scheduleOpenIndex].periods.push({...generateDefaultPeriod(), openDay: index})\r\n                    return newData\r\n                  })\r\n                }\r\n              }\r\n\r\n              const toggleSplitSchedule = () => {\r\n                if (splitSchedule)\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData];\r\n                    const periods = newData[scheduleOpenIndex].periods.filter(period => period.openDay === index)\r\n                    const lastperiod = periods.pop()\r\n                    newData[scheduleOpenIndex].periods = newData[scheduleOpenIndex].periods.filter(period => period.elementId != lastperiod.elementId)\r\n                    return newData;\r\n                  })\r\n                else\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData];\r\n                    newData[scheduleOpenIndex].periods.push({...generateDefaultPeriod(), openDay: index})\r\n                    return newData;\r\n                  })\r\n              }\r\n\r\n              return (\r\n                  <>\r\n                    <div className={classes.weekdayButtonContainer}>\r\n                      <Button variant={\"contained\"}\r\n                              color={periods.length !== 0 ? \"primary\" : \"secondary\"}\r\n                              className={classes.button}\r\n                              onClick={toggleWorkday}>\r\n                        {item.name}\r\n                      </Button>\r\n                      {periods.map((period) => {\r\n                        return <>\r\n                          <div className={classes.intervalContainer}>\r\n                            <TimePicker\r\n                                margin=\"normal\"\r\n                                ampm={false}\r\n                                className={classes.pickerStyle}\r\n                                format=\"HH:mm\"\r\n                                minutesStep={5}\r\n                                InputProps={{\r\n                                  classes: {\r\n                                    input: classes.pickerInput,\r\n                                  },\r\n                                }}\r\n                                value={moment(period.openTime, \"HH:mm\")}\r\n                                onChange={(time) => changeOpenTime(period.elementId, time)}\r\n                            />\r\n                            <Typography variant=\"h7\">\r\n                              -\r\n                            </Typography>\r\n                            <TimePicker\r\n                                margin=\"normal\"\r\n                                ampm={false}\r\n                                className={classes.pickerStyle}\r\n                                format=\"HH:mm\"\r\n                                minutesStep={5}\r\n                                InputProps={{\r\n                                  classes: {\r\n                                    input: classes.pickerInput,\r\n                                  },\r\n                                }}\r\n                                value={moment(period.closeTime, \"HH:mm\")}\r\n                                onChange={(time) => changeCloseTime(period.elementId, time)}\r\n                            />\r\n                          </div>\r\n                        </>\r\n                      })}\r\n                      {periods.length !== 0 && <FormControlLabel\r\n                          style={{width: '100%'}}\r\n                          control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                                checked={splitSchedule}\r\n                                onChange={toggleSplitSchedule}\r\n                            />\r\n                          }\r\n                          label={<span style={{fontSize: 13}}>Split</span>}\r\n                      />}\r\n\r\n                    </div>\r\n                    <Divider orientation=\"vertical\" flexItem/>\r\n                  </>\r\n              )\r\n            })}\r\n          </div>\r\n\r\n        </div>\r\n        <Typography variant=\"h7\">\r\n          Global time\r\n        </Typography>\r\n        <TimePicker\r\n            margin=\"normal\"\r\n            ampm={false}\r\n            format=\"HH:mm\"\r\n            className={classes.pickerStyle}\r\n            minutesStep={5}\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.pickerInput,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setSchedule(schedules => {\r\n                const newSchedules = [...schedules]\r\n                let newPeriods = []\r\n                for(let i = 0; i < 7; i++){\r\n                    let periodsForThisDay =  schedules[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n                    if (periodsForThisDay.length > 0){\r\n                      newPeriods.push({...periodsForThisDay[0], openTime: moment(e).format(\"HH:mm\")})\r\n                      if(periodsForThisDay.length > 1)\r\n                        newPeriods.push(periodsForThisDay[1])\r\n                    }\r\n                }\r\n                newSchedules[scheduleOpenIndex].periods = newPeriods\r\n                return newSchedules\r\n              })\r\n            }}\r\n            value={determineGlobalOpenTime()}\r\n        />\r\n        <Typography variant=\"h7\">\r\n          -\r\n        </Typography>\r\n        <TimePicker\r\n            margin=\"normal\"\r\n            ampm={false}\r\n            format=\"HH:mm\"\r\n            className={classes.pickerStyle}\r\n            minutesStep={5}\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.pickerInput,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setSchedule(schedules => {\r\n                const newSchedules = [...schedules]\r\n                let newPeriods = []\r\n                for(let i = 0; i < 7; i++){\r\n                  let periodsForThisDay =  schedules[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n                  if (periodsForThisDay.length > 0){\r\n                    newPeriods.push({...periodsForThisDay[0], closeTime: moment(e).format(\"HH:mm\")})\r\n                    if(periodsForThisDay.length > 1)\r\n                      newPeriods.push(periodsForThisDay[1])\r\n                  }\r\n                }\r\n                newSchedules[scheduleOpenIndex].periods = newPeriods\r\n                return newSchedules\r\n              })\r\n            }}\r\n            value={determineGlobalCloseTime()}\r\n        />\r\n\r\n        <br/>\r\n        <Typography variant=\"h7\">\r\n          Global split schedule time\r\n        </Typography>\r\n        <TimePicker\r\n            margin=\"normal\"\r\n            ampm={false}\r\n            format=\"HH:mm\"\r\n            className={classes.pickerStyle}\r\n            minutesStep={5}\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.pickerInput,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setSchedule(schedules => {\r\n                const newSchedules = [...schedules]\r\n                let newPeriods = []\r\n                for(let i = 0; i < 7; i++){\r\n                  let periodsForThisDay =  schedules[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n                  if (periodsForThisDay.length > 0){\r\n                    newPeriods.push(periodsForThisDay[0])\r\n                    if(periodsForThisDay.length > 1)\r\n                      newPeriods.push({...periodsForThisDay[1], openTime: moment(e).format(\"HH:mm\")})\r\n                  }\r\n                }\r\n                newSchedules[scheduleOpenIndex].periods = newPeriods\r\n                return newSchedules\r\n              })\r\n            }}\r\n            value={determineGlobalSplitScheduleOpenTime()}\r\n        />\r\n        <Typography variant=\"h7\">\r\n          -\r\n        </Typography>\r\n        <TimePicker\r\n            margin=\"normal\"\r\n            ampm={false}\r\n            format=\"HH:mm\"\r\n            className={classes.pickerStyle}\r\n            minutesStep={5}\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.pickerInput,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setSchedule(schedules => {\r\n                const newSchedules = [...schedules]\r\n                let newPeriods = []\r\n                for(let i = 0; i < 7; i++){\r\n                  let periodsForThisDay =  schedules[scheduleOpenIndex].periods.filter(period => period.openDay === i)\r\n                  if (periodsForThisDay.length > 0){\r\n                    newPeriods.push(periodsForThisDay[0])\r\n                    if(periodsForThisDay.length > 1)\r\n                      newPeriods.push({...periodsForThisDay[1], closeTime: moment(e).format(\"HH:mm\")})\r\n                  }\r\n                }\r\n                newSchedules[scheduleOpenIndex].periods = newPeriods\r\n                return newSchedules\r\n              })\r\n            }}\r\n            value={determineGlobalSplitScheduleCloseTime()}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(ScheduleWorkingHours)\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {DatePicker, TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport WorkingHoursVariant, {weekdays} from \"./WorkingHoursVariant\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport shortid from 'shortid';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport ScheduleWorkingHours from \"./ScheduleWorkingHours\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    width: '100%',\r\n  },\r\n  scheduleDateContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    flexWrap: 'wrap',\r\n  },\r\n  pickerStyle: {\r\n    width: 100,\r\n    padding: 5,\r\n  }\r\n});\r\n\r\n\r\nfunction Schedule({classes, scheduleData, setScheduleData, scheduleOpenIndex, setScheduleOpenIndex, seasonalScheduleEnabled}) {\r\n\r\n  const currentSchedule = scheduleData[scheduleOpenIndex]\r\n\r\n  const changeFromDate = (date, value) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData];\r\n      newData[scheduleOpenIndex].from = moment(date).format('MM-DD');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const changeToDate = (date, value) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData];\r\n      newData[scheduleOpenIndex].to = moment(date).format('MM-DD');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const scheduleDateContainer = (\r\n      <div className={classes.scheduleDateContainer}>\r\n        <Typography variant=\"h8\">\r\n          This schedule applies from\r\n        </Typography>\r\n        <DatePicker\r\n            className={classes.pickerStyle}\r\n            views={[\"month\", \"date\"]}\r\n            // maxDate={currentSchedule.to}\r\n            value={moment(currentSchedule.from, \"MM-DD\")}\r\n            onChange={changeFromDate}\r\n        />\r\n        <Typography variant=\"h8\">\r\n          to\r\n        </Typography>\r\n        <DatePicker\r\n            className={classes.pickerStyle}\r\n            views={[\"month\", \"date\"]}\r\n            // minDate={currentSchedule.from}\r\n            value={moment(currentSchedule.to, \"MM-DD\")}\r\n            onChange={changeToDate}\r\n        />\r\n      </div>\r\n  )\r\n\r\n  const handleRemoveSchedule = () => {\r\n    setScheduleOpenIndex(index => {\r\n      setScheduleData(oldData => {\r\n        return  [...oldData].filter((item, i) => index !== i)\r\n      })\r\n      return index - 1;\r\n    })\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        {seasonalScheduleEnabled && scheduleDateContainer}\r\n        {scheduleOpenIndex !== 0 && <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={handleRemoveSchedule}\r\n            startIcon={<DeleteOutlineIcon/>}\r\n            style={{display: 'absolute'}}>Remove this schedule</Button>}\r\n\r\n        <ScheduleWorkingHours schedule={scheduleData} setSchedule={setScheduleData} scheduleOpenIndex={scheduleOpenIndex} />\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(Schedule)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Schedule from \"./Schedule\";\r\nimport moment from \"moment\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport shortid from 'shortid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start'\r\n  },\r\n  tabContainer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  tabsLayout: {\r\n    flex: 9,\r\n  },\r\n  addScheduleButtonContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'space-between'\r\n  }\r\n});\r\n\r\nexport const defaultScheduleData = [\r\n  {\r\n    from: \"01-25\",\r\n    to: \"02-20\",\r\n    periods: [\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 0,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 1,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 2,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 3,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 4,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"17:00\",\r\n        openDay: 5,\r\n        elementId: shortid.generate()\r\n      },\r\n    ],\r\n\r\n  }\r\n]\r\n\r\nfunction SchedulesContainer({classes, scheduleData, setScheduleData, scheduleOpenIndex, setScheduleOpenIndex, seasonalScheduleEnabled, setSeasonalScheduleEnabled, isScheduleEnabled, setIsScheduleEnabled, lastAccommodation, setLastAccommodation}) {\r\n\r\n  const handleAddSchedule = () => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      newData.push({\r\n        from: \"01-01\",\r\n        to: \"05-01\",\r\n        periods: [...defaultScheduleData[0].periods]\r\n      })\r\n      setScheduleOpenIndex(newData.length - 1)\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const tabsLayout = (\r\n      <div className={classes.tabContainer}>\r\n        <Tabs\r\n            value={scheduleOpenIndex}\r\n            onChange={(event, newValue) => setScheduleOpenIndex(newValue)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            className={classes.tabsLayout}\r\n        >\r\n          {\r\n            scheduleData.map((item, index) =>\r\n                <Tab onClick={() => setScheduleOpenIndex(index)}\r\n                     label={`${moment(item.from, \"MM-DD\").format(\"MMMM \")}-${moment(item.to, \"MM-DD\").format(\"MMMM \")}`}/>\r\n            )\r\n          }\r\n        </Tabs>\r\n        <div className={classes.addScheduleButtonContainer}>\r\n          <IconButton\r\n              onClick={handleAddSchedule}\r\n              variant=\"text\"\r\n              color=\"secondary\"\r\n              size=\"large\">\r\n            <AddIcon/>\r\n          </IconButton>\r\n        </div>\r\n\r\n      </div>\r\n  )\r\n\r\n  const handleToggleSeasonalSchedule = () => {\r\n    const enabled = !seasonalScheduleEnabled\r\n    setSeasonalScheduleEnabled(() => {\r\n      setScheduleOpenIndex(0)\r\n      return enabled\r\n    })\r\n    if(enabled){\r\n      setScheduleData(schedule => {\r\n        return [...schedule].map(item => {\r\n          return {\r\n            ...item,\r\n            from: \"01-01\",\r\n            to: \"02-01\"\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleEnableLastAccommodation = () => {\r\n    let accommodationTimeEnabled = lastAccommodation != null;\r\n    setLastAccommodation(accommodationTimeEnabled ? null : 30)\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <div className={classes.header}>\r\n          <Typography variant=\"h6\">\r\n            Working hours\r\n          </Typography>\r\n\r\n          <FormControlLabel\r\n              control={\r\n                <Switch\r\n                    checked={isScheduleEnabled}\r\n                    onChange={() => setIsScheduleEnabled(state => !state)}\r\n                    color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Enable schedule for this place?\"\r\n          />\r\n        </div>\r\n\r\n\r\n        { isScheduleEnabled &&\r\n        <>\r\n        <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                  checked={seasonalScheduleEnabled}\r\n                  onChange={handleToggleSeasonalSchedule}\r\n                  name=\"checkedB\"\r\n                  color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Enable seasonal schedule\"\r\n        />\r\n          <FormControlLabel\r\n          control={\r\n          <Checkbox\r\n              name=\"checkedB\"\r\n              color=\"primary\"\r\n              checked={lastAccommodation != null}\r\n              onChange={handleEnableLastAccommodation}\r\n          />\r\n        }\r\n          label=\"Specify last accommodation times\"\r\n          />\r\n          {lastAccommodation != null &&\r\n          <>\r\n            {/*<Typography variant=\"h8\">*/}\r\n            {/*  Minutes before close time*/}\r\n            {/*</Typography>*/}\r\n            <TextField\r\n                id=\"standard-number\"\r\n                label=\"Minutes to closing time\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                value={lastAccommodation}\r\n                onChange={(e) => setLastAccommodation(e.target.value)}\r\n            />\r\n          </>\r\n          }\r\n\r\n        {seasonalScheduleEnabled && tabsLayout}\r\n\r\n          <Schedule scheduleData={scheduleData}\r\n          seasonalScheduleEnabled={seasonalScheduleEnabled}\r\n          setScheduleData={setScheduleData} scheduleOpenIndex={scheduleOpenIndex} setScheduleOpenIndex={setScheduleOpenIndex}/>\r\n          </>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(SchedulesContainer)\r\n\r\n\r\n","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Paper} from '@material-ui/core';\r\nimport shortid from 'shortid';\r\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\r\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\r\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\r\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\r\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Reviews from \"../components/add_place_components/Reviews\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport RecommendationListDialog from \"../components/recomendation/RecommendationListDialog\";\r\nimport {RecommendationType} from \"../components/recomendation/Recommendation\";\r\nimport SchedulesContainer, {defaultScheduleData} from \"../components/schedule_components/SchedulesContainer\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  paperContent: {\r\n    marginTop: theme.spacing(4),\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      width: \"95%\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"70%\",\r\n      padding: theme.spacing(4),\r\n    },\r\n  },\r\n  root: {\r\n    height: \"100vh\",\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      height: \"100%\",\r\n    },\r\n  },\r\n  loader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100vw\",\r\n    height: \"100vh\"\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    height: `calc(93vh - 64px)`,\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      width: \"100%\",\r\n      padding: theme.spacing(1),\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"auto\",\r\n      padding: theme.spacing(8),\r\n    },\r\n    overflowY: \"auto\"\r\n  },\r\n  bottom: {\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      position: \"fixed\",\r\n      height: \"7vh\",\r\n      bottom: 0,\r\n      right: 0,\r\n    },\r\n    width: \"100%\",\r\n    zIndex: 5,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    padding: theme.spacing(1),\r\n  }\r\n});\r\n\r\n\r\nfunction AddPlace({classes, match}) {\r\n  const [placeInfo, setPlaceInfo] = useState({\r\n    placeId: \"\",\r\n    name: \"\", description: \"\", website: \"\", phoneNumber: \"\",\r\n    isPublic: false, isVerified: true, overallStarRating: 0, totalReviews: 0,\r\n    source: \"\", price: \"\", averageTimeSpent: \"0\", grade: 50\r\n  });\r\n\r\n\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n  const [scheduleData, setScheduleData] = useState(defaultScheduleData);\r\n  const [scheduleOpenIndex, setScheduleOpenIndex] = useState(0);\r\n  const [seasonalScheduleEnabled, setSeasonalScheduleEnabled] = useState(false);\r\n  const [lastAccommodation, setLastAccommodation] = useState(null);\r\n\r\n  const [photos, setPhotos] = useState([]);\r\n\r\n  const [locationData, setLocationData] = useState({\r\n    city: '',\r\n    address: '',\r\n    country: '',\r\n    latitude: 54.687157,\r\n    longitude: 25.279652,\r\n    county: '',\r\n    municipality: ''\r\n  });\r\n  const [parkingMarkerData, setParkingMarkerData] = useState({\r\n    city: '',\r\n    address: '',\r\n    country: '',\r\n    latitude: 54.687157,\r\n    longitude: 25.279652,\r\n    county: '',\r\n    municipality: ''\r\n  });\r\n  const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\r\n\r\n  const [sources, setSources] = useState([]);\r\n\r\n  const [isScheduleEnabled, setIsScheduleEnabled] = useState(false);\r\n\r\n  const [placeId, setPlaceId] = useState(match.params.placeId);\r\n\r\n  const [firstTimeLoading, setFirstTimeLoading] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [error, setError] = useState({name: false});\r\n  const [checkErrors, setCheckErrors] = useState(false);\r\n\r\n  const [showRecommendationDialog, setShowRecommendationDialog] = useState(false)\r\n\r\n  const {addConfig} = UseSnackbarContext();\r\n  const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n  const {title, setTitle} = UseAppBarTitleContext();\r\n\r\n  const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      color: \"white\",\r\n      backgroundColor: green[500],\r\n      '&:hover': {\r\n        backgroundColor: green[700],\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  useEffect(() => {\r\n    if (placeId !== undefined) {\r\n      getPlaceInfo()\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //Loaded place for editing\r\n    if (placeId === undefined) {\r\n      setTitle(\"Add new place\");\r\n      setFirstTimeLoading(false) //Just loaded add place window\r\n    }\r\n    //New Place has been just inserted, thus inserting other place info\r\n    if (placeId !== undefined && firstTimeLoading === false) {\r\n      Promise.all([\r\n        updateTagsData(placeId),\r\n        updateParkingData(placeId),\r\n        updateCategoriesData(placeId),\r\n        updatePhotoData(placeId),\r\n        updateSchedule(placeId),\r\n        updateSources(placeId)\r\n      ]).then(responses => {\r\n        formFeedback(true, Strings.SNACKBAR_PLACE_INSERTED_SUCCESS)\r\n      }).catch(error => {\r\n        formFeedback(false)\r\n      })\r\n    }\r\n\r\n  }, [placeId]);\r\n\r\n  useEffect(() => {\r\n    if (firstTimeLoading === false) {\r\n      updateAll()\r\n    }\r\n  }, [placeInfo['isPublic']]);\r\n\r\n  function addToRecommendation() {\r\n    setShowRecommendationDialog(true)\r\n  }\r\n\r\n  function getPlaceInfo() {\r\n    API.Places.getPlaceById(\"?full=true&p=\" + placeId).then(response => {\r\n      setAllData(response)\r\n      setTitle(\"Editing place/\" + response.name);\r\n    }).catch(error => {\r\n      formFeedback(false)\r\n    })\r\n  }\r\n\r\n  const parseScheduleData = (data) => {\r\n\r\n    data.some(schedule => {\r\n      return schedule.periods.some(period => {\r\n        if (period.lastAccommodation != null) {\r\n          setLastAccommodation(moment(period.lastAccommodation, 'HH:mm').minutes() - moment(period.closeTime, 'HH:mm').minutes())\r\n          return true\r\n        }\r\n        return false\r\n      })\r\n    })\r\n\r\n    if (data.length > 1 || data.some(schedule => schedule.from != null && schedule.to != null))\r\n      setSeasonalScheduleEnabled(true)\r\n\r\n    return (data.map(schedule => {\r\n      const newData = {...schedule}\r\n      newData.periods = newData.periods.map(period => {\r\n        const newPeriod = {...period}\r\n        newPeriod.elementId = shortid.generate()\r\n        return newPeriod\r\n      })\r\n      return newData\r\n    }))\r\n  }\r\n\r\n  const convertSchedule = (data) => {\r\n    return (data.map(schedule => {\r\n      const newSchedule = {...schedule}\r\n      if (!seasonalScheduleEnabled) {\r\n        delete newSchedule.from;\r\n        delete newSchedule.to;\r\n      }\r\n      newSchedule.periods = newSchedule.periods.map(period => {\r\n        const newPeriod = {...period}\r\n        if (lastAccommodation != null)\r\n          newPeriod.lastAccommodation = moment(newPeriod.closeTime, 'HH:mm').subtract(lastAccommodation, 'minutes').format('HH:mm')\r\n        newPeriod.closeDay = newPeriod.openDay\r\n        return newPeriod\r\n      })\r\n\r\n      newSchedule.scheduleDefault = false;\r\n      console.log(newSchedule)\r\n      return newSchedule\r\n    }))\r\n  }\r\n\r\n  function setAllData(place) {\r\n    setPlaceInfo({\r\n      placeId: place.placeId,\r\n      name: place.name,\r\n      description: place.description,\r\n      website: place.website,\r\n      phoneNumber: place.phoneNumber,\r\n      hasSchedule: place.hasSchedule,\r\n      isPublic: place.isPublic,\r\n      isVerified: place.isVerified,\r\n      overallStarRating: place.overallStarRating,\r\n      totalReviews: place.totalReviews,\r\n      price: place.price,\r\n      averageTimeSpent: place.averageTimeSpent,\r\n      bookInAdvance: place.bookInAdvance,\r\n      grade: place.grade\r\n    });\r\n\r\n    setLocationData({\r\n      city: place.city,\r\n      address: place.address,\r\n      country: place.country,\r\n      latitude: place.latitude,\r\n      longitude: place.longitude,\r\n      county: place.county,\r\n      municipality: place.municipality,\r\n    });\r\n\r\n    setParkingMarkerData({\r\n      city: place.city,\r\n      address: place.address,\r\n      country: place.country,\r\n      latitude: place.latitude,\r\n      longitude: place.longitude,\r\n      county: place.county,\r\n      municipality: place.municipality,\r\n    });\r\n\r\n    setScheduleData(place.schedule.length === 0 ? defaultScheduleData : parseScheduleData(place.schedule))\r\n    if (place.schedule.length === 0)\r\n      setIsScheduleEnabled(false)\r\n    else\r\n      setIsScheduleEnabled(true)\r\n\r\n    setSources(place.sources);\r\n    setSelectedTags(place.tags);\r\n    setSelectedCategories(place.categories);\r\n\r\n    setAllSelectedParkingData(place.parking);\r\n    setPhotos(place.photos);\r\n    setFirstTimeLoading(false)\r\n  }\r\n\r\n  function formFeedback(success, message = Strings.SNACKBAR_ERROR) {\r\n    addConfig(success, message);\r\n    setIsLoading(false)\r\n  }\r\n\r\n  function saveChanges() {\r\n    if (placeId === undefined) {\r\n      addAlertConfig(Strings.DIALOG_PLACE_INSERT_TITLE, Strings.DIALOG_PLACE_INSERT, [{\r\n        name: \"Insert\", action: () => {\r\n          setIsLoading(true);\r\n          insertBasicPlaceInfo()\r\n        }\r\n      }])\r\n    } else {\r\n      addAlertConfig(Strings.DIALOG_PLACE_UPDATE_TITLE, Strings.DIALOG_PLACE_UPDATE, [{\r\n        name: \"save and publish\", action: () => {\r\n          let plc = Object.assign({}, placeInfo, {});\r\n          plc.isPublic = 1;\r\n          setPlaceInfo(plc);\r\n          setIsLoading(true);\r\n          updateAll()\r\n        }\r\n      }, {\r\n        name: \"save\", action: () => {\r\n          setIsLoading(true);\r\n          updateAll()\r\n        }\r\n      }])\r\n    }\r\n  }\r\n\r\n  function updateAll() {\r\n    Promise.all([\r\n      updatePlaceInfo(),\r\n      updateTagsData(placeId),\r\n      updatePhotoData(placeId),\r\n      updateCategoriesData(placeId),\r\n      updateParkingData(placeId),\r\n      updateSchedule(placeId),\r\n      updateSources(placeId)\r\n    ]).then(response => {\r\n      formFeedback(true, Strings.SNACKBAR_CHANGES_SAVED);\r\n    }).catch(err => {\r\n      formFeedback(false)\r\n    })\r\n  }\r\n\r\n  function updatePlaceInfo() {\r\n    API.Places.updatePlace(formPlaceInfo()).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n\r\n  }\r\n\r\n  function insertBasicPlaceInfo() {\r\n    API.Places.insertPlace(formPlaceInfo()).then(placeId => {\r\n      setPlaceId(placeId)\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updateParkingData(id) {\r\n    API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updateTagsData(id) {\r\n    API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updateSources(id) {\r\n    API.SourcePlace.updateSourcesForPlace(sources, \"?p=\" + id).then(response => {\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n\r\n  function updateCategoriesData(id) {\r\n    API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updatePhotoData(id) {\r\n    API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n\r\n  function updateSchedule(id) {\r\n    API.Schedule.updateScheduleForPlace(isScheduleEnabled ? convertSchedule(scheduleData) : [], \"?id=\" + id).then(response => {\r\n    }).catch(er => {\r\n    })\r\n\r\n  }\r\n\r\n  function formPlaceInfo() {\r\n    let d = Object.assign(placeInfo, locationData);\r\n    return d\r\n  }\r\n\r\n\r\n  function publishPlace() {\r\n    addAlertConfig(Strings.DIALOG_PLACE_PUBLISH_TITLE, placeInfo['isPublic'] ? Strings.DIALOG_PLACE_UNPUBLISH_MESSAGE : Strings.DIALOG_PLACE_PUBLISH_MESSAGE,\r\n        [{\r\n          name: \"Agree\", action: () => {\r\n            let obj = Object.assign({}, placeInfo, {});\r\n            obj['isPublic'] = !obj['isPublic'];\r\n            setPlaceInfo(obj);\r\n          }\r\n        }])\r\n\r\n  }\r\n\r\n  function verifyPlace() {\r\n    addAlertConfig(Strings.DIALOG_PLACE_VERIFY_TITLE, Strings.DIALOG_PLACE_VERIFY_MESSAGE, [{\r\n      name: \"agree\", action: () => {\r\n        let obj = Object.assign({}, placeInfo, {});\r\n        obj['isPublic'] = 1;\r\n        obj['isVerified'] = 1;\r\n        setPlaceInfo(obj);\r\n      }\r\n    }])\r\n  }\r\n\r\n  const basicPlaceInfo = useMemo(() => {\r\n    return <Paper elevation={4} className={classes.paperContent}>\r\n      <BasicPlaceInfo\r\n          error={error}\r\n          setError={setError}\r\n          checkErrors={checkErrors}\r\n          placeInfo={placeInfo}\r\n          setPlaceInfo={setPlaceInfo}\r\n          selectedSources={sources}\r\n          setSelectedSources={setSources}\r\n      />\r\n    </Paper>\r\n  }, [placeInfo.name,\r\n    placeInfo.description,\r\n    placeInfo.averageTimeSpent,\r\n    placeInfo.phoneNumber,\r\n    placeInfo.price,\r\n    placeInfo.website,\r\n      placeInfo.bookInAdvance,\r\n    sources\r\n  ])\r\n\r\n  const placePhotos = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <PhotosInfo\r\n              photos={photos}\r\n              setPhotos={setPhotos}\r\n          />\r\n        </Paper>\r\n    )\r\n  }, [photos])\r\n\r\n  const placeLocation = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <PlaceLocation\r\n              placeInfo={placeInfo}\r\n              locationData={locationData}\r\n              setParkingLocation={setParkingMarkerData}\r\n              setLocationData={setLocationData}/>\r\n        </Paper>\r\n    )\r\n  }, [locationData])\r\n\r\n  const parkingLocation = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <ParkingLocation\r\n              placeInfo={placeInfo}\r\n              allSelectedParkingData={allSelectedParkingData}\r\n              setAllSelectedParkingData={setAllSelectedParkingData}\r\n              locationData={parkingMarkerData}\r\n              setLocationData={setParkingMarkerData}/>\r\n        </Paper>\r\n    )\r\n  }, [allSelectedParkingData, parkingMarkerData])\r\n\r\n  const placeDiscovery = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <PlaceDiscovery\r\n              placeInfo={placeInfo}\r\n              setPlaceInfo={setPlaceInfo}\r\n              selectedTags={selectedTags}\r\n              setSelectedTags={setSelectedTags}\r\n              selectedCategories={selectedCategories}\r\n              setSelectedCategories={setSelectedCategories}/>\r\n        </Paper>\r\n    )\r\n  }, [selectedCategories, selectedTags, placeInfo])\r\n\r\n\r\n  const scheduleContainer = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          {<SchedulesContainer scheduleData={scheduleData} setScheduleData={setScheduleData}\r\n                               scheduleOpenIndex={scheduleOpenIndex}\r\n                               setScheduleOpenIndex={setScheduleOpenIndex}\r\n                               seasonalScheduleEnabled={seasonalScheduleEnabled}\r\n                               setSeasonalScheduleEnabled={setSeasonalScheduleEnabled}\r\n                               setLastAccommodation={setLastAccommodation}\r\n                               isScheduleEnabled={isScheduleEnabled}\r\n                               setIsScheduleEnabled={setIsScheduleEnabled}\r\n                               lastAccommodation={lastAccommodation}/>}\r\n        </Paper>\r\n    )\r\n  }, [scheduleData, scheduleOpenIndex, lastAccommodation, seasonalScheduleEnabled, isScheduleEnabled])\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n\r\n        {firstTimeLoading ? <div className={classes.loader}><CircularProgress/></div> :\r\n            <div className={classes.content}>\r\n\r\n              {basicPlaceInfo}\r\n\r\n              {placeId !== undefined ?\r\n                  <Paper elevation={4} className={classes.paperContent}>\r\n                    <Reviews\r\n                        placeInfo={placeInfo}\r\n                    />\r\n                  </Paper>\r\n                  : null}\r\n\r\n              {placePhotos}\r\n              {placeLocation}\r\n              {parkingLocation}\r\n              {placeDiscovery}\r\n              {scheduleContainer}\r\n            </div>}\r\n\r\n\r\n        {isLoading ? <LinearProgress/> : null}\r\n\r\n        <Paper elevation={1} className={classes.bottom}>\r\n\r\n          {\r\n            placeInfo['isVerified'] === false && placeId !== undefined ?\r\n                <ColorButton\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      verifyPlace()\r\n                    }}\r\n                    className={classes.button}\r\n                >\r\n                  Verify place\r\n                </ColorButton>\r\n                :\r\n                <FormControlLabel\r\n                    control={<Switch checked={placeInfo['isPublic']} onChange={() => {\r\n                      publishPlace()\r\n                    }\r\n                    } name=\"isPublic\"/>}\r\n                    label=\"Make this place public\"\r\n                />}\r\n          <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => saveChanges()}\r\n              className={classes.button}>\r\n            Save\r\n          </Button>\r\n\r\n          {placeId != null ?\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => addToRecommendation()}\r\n                  className={classes.button}>\r\n                Add to recommendation\r\n              </Button> : null\r\n          }\r\n\r\n\r\n          <RecommendationListDialog\r\n              open={showRecommendationDialog}\r\n              setOpen={setShowRecommendationDialog}\r\n              objectId={placeInfo.placeId}\r\n              type={RecommendationType.place}\r\n          />\r\n\r\n        </Paper>\r\n      </div>)\r\n\r\n}\r\n\r\nAddPlace.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AddPlace)\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport {debounce} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: theme.spacing(2)\r\n        // width: 400,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    divider: {\r\n        // height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function SearchInputComponent({hint, searchCallback}) {\r\n    const classes = useStyles();\r\n\r\n    const debouncedInput = (event) => {\r\n        searchCallback(event.target.value)\r\n    }\r\n\r\n    const debounceInput = debounce(event => debouncedInput(event), 500)\r\n\r\n    const handleInput = (event) => {\r\n        event.persist()\r\n        debounceInput(event)\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder={hint}\r\n                inputProps={{ 'aria-label': hint }}\r\n                onChange={handleInput}\r\n            />\r\n            <IconButton className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n        </Paper>\r\n    );\r\n}","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\"\r\nimport ApiPlaceCard from \"../components/ApiPlaceCard\";\r\nimport API from \"../Networking/API\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Masonry from \"react-masonry-component\";\r\nimport SearchInputComponent from \"../components/SearchInputComponent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        overflow: 'scroll',\r\n        width: \"100%\",\r\n        padding: theme.spacing(1),\r\n        height:`calc(100vh - 64px)`,\r\n        paddingTop: \"9vh\",\r\n    },\r\n    topBar: {\r\n        height: \"8vh\",\r\n        position: \"absolute\",\r\n        width: \"60%\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        left: 0,\r\n        right: 0,\r\n        justifyContent: \"center\",\r\n        zIndex: 1\r\n    },\r\n    searchBox: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    placeApiCard: {\r\n        [theme.breakpoints.down('lg')]: {\r\n            width: \"95%\",\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: \"28vw\",\r\n        },\r\n        // minWidth: \"400px\",\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nfunction ApiPlaces({classes}){\r\n\r\n    const [data, setData] = useState([]);\r\n    const [isLoadingData, setIsLoadingData] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const loadDataFunc = (query) => {\r\n        setData([])\r\n        setIsLoadingData(true)\r\n        API.Places.searchApiPlaces(\"?keyword=\" + encodeURI(query)).then(response => {\r\n            setData([...response])\r\n        }).catch(error => {\r\n            addConfig(false, \"The request did not go through.\")\r\n        }).finally(() => {\r\n            setIsLoadingData(false)\r\n        })\r\n    }\r\n\r\n    const handleSearch = (word) => {\r\n        if(word.length > 3)\r\n            loadDataFunc(word)\r\n    }\r\n\r\n    return(\r\n        <div style={{position: \"relative\"}}>\r\n            <div className = {classes.topBar}>\r\n                <SearchInputComponent searchCallback={handleSearch} hint=\"Search api places\" style={classes.searchBox} />\r\n            </div>\r\n\r\n            <div className={classes.root}>\r\n                <Masonry\r\n                    style={{margin: \"0 auto\"}}\r\n                    elementType={'div'} // default 'div'\r\n                    options={{\r\n                        isFitWidth: true\r\n                    }} // default {}\r\n                    disableImagesLoaded={false} // default false\r\n                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\r\n                >\r\n\r\n                    {data.map(item => {\r\n                        return <ApiPlaceCard classes ={{ root: classes.placeApiCard}} key={item.placeId} placeData = {item} style={{boxSizing: 'border-box'}}/>\r\n                    })}\r\n\r\n                    {\r\n                        data.length === 0 && !isLoadingData &&\r\n                        <Typography variant=\"subtitle1\">No results</Typography>\r\n                    }\r\n                    {\r\n                        isLoadingData &&\r\n                        <CircularProgress  />\r\n                    }\r\n\r\n                </Masonry>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ApiPlaces)","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {'Copyright © '}\r\n            Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: '100vh',\r\n    },\r\n    main: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: 'auto',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n    },\r\n}));\r\n\r\nexport default function NotFoundPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\r\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\r\n                    Page not found\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    {'Try something else'}\r\n                </Typography>\r\n            </Container>\r\n            <footer className={classes.footer}>\r\n                <Container maxWidth=\"sm\">\r\n                    <Copyright />\r\n                </Container>\r\n            </footer>\r\n        </div>\r\n    );\r\n}","import React, { useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MetroIcon from '@material-ui/icons/DirectionsTransit';\r\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\r\nimport CarIcon from '@material-ui/icons/DriveEta';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\nimport FlightIcon from '@material-ui/icons/Flight';\r\nimport TramIcon from '@material-ui/icons/Tram';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\"\r\n    },\r\n    transportSelectWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    transportSelect: {\r\n        marginLeft: theme.spacing(1),\r\n        width: \"100px\"\r\n    }\r\n});\r\n\r\nconst transportTypes = [\r\n    {\r\n        icon: <MetroIcon/>,\r\n        label: \"Metro\"\r\n    },\r\n    {\r\n        icon: <DirectionsBikeIcon/>,\r\n        label: \"Bike\"\r\n    },\r\n    {\r\n        icon: <DirectionsBusIcon/>,\r\n        label: \"Bus\"\r\n    },\r\n    {\r\n        icon: <CarIcon/>,\r\n        label: \"Car\"\r\n    },\r\n    {\r\n        icon: <TrainIcon/>,\r\n        label: \"Train\"\r\n    },\r\n    {\r\n        icon: <FlightIcon/>,\r\n        label: \"Plane\"\r\n    },\r\n    {\r\n        icon: <DirectionsWalkIcon/>,\r\n        label: \"Walk\"\r\n    },\r\n    {\r\n        icon: <TramIcon/>,\r\n        label: \"Tram\"\r\n    }\r\n]\r\n\r\nfunction TransportItem({classes, transportId, transportChangeCallback}) {\r\n\r\n    const [currentTransport, setCurrentTransport] = useState(transportId == null ? 0 : transportId)\r\n\r\n    const handleTransportChange = (e) => {\r\n        setCurrentTransport(e.target.value)\r\n        transportChangeCallback({transport: parseInt(e.target.value)})\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MoreVertIcon/>\r\n            <div className={classes.transportSelectWrapper}>\r\n                {transportTypes[currentTransport].icon}\r\n                <FormControl className={classes.transportSelect} >\r\n                    <NativeSelect\r\n                        value={currentTransport}\r\n                        onChange={handleTransportChange}\r\n                    >\r\n                        {transportTypes.map((item, index) => {\r\n                            return <option key={index} value={index}> {item.label}</option>\r\n                        })}\r\n                    </NativeSelect>\r\n                </FormControl>\r\n                {/*<Typography variant=\"subtitle2\" style={{flex: 1, display: 'flex', alignItems: 'flex-end', justifyContent: 'flex-end'}}>*/}\r\n                {/*    Estimated 15 min | 4km*/}\r\n                {/*</Typography>*/}\r\n            </div>\r\n            <MoreVertIcon/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TransportItem)","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport TransportItem from \"./TransportItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n  cardRoot: {\r\n    [theme.breakpoints.only(\"lg\")]: {\r\n      display: 'flex',\r\n      // alignItems: \"flex-start\"\r\n    },\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 5\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      height: \"200px\",\r\n    },\r\n    [theme.breakpoints.only(\"lg\")]: {\r\n      flex: 1,\r\n      height: \"auto\",\r\n    },\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexFlow: \"column wrap\"\r\n  },\r\n  addParkingWrapper: {\r\n    display: \"inline-block\"\r\n  }\r\n})\r\n\r\n\r\nfunction TourPlaceComponent({classes, elementData, removeCallback, tourInfoReducer, currentDay, elementIndex, lastElement, handleEditPlace}) {\r\n\r\n  function truncateText(text) {\r\n    if (text == null)\r\n      return \"\"\r\n    if (text.length > 500) {\r\n      return text.substring(0, 500) + \"...\";\r\n    } else {\r\n      return text\r\n    }\r\n  }\r\n\r\n  const handleRemoveTransport = () => {\r\n\r\n  }\r\n\r\n  const handleChangeTransport = ({transport}) => {\r\n    tourInfoReducer({\r\n      type: 'UPDATE_ELEMENT',\r\n      day: currentDay,\r\n      index: elementIndex,\r\n      data: {\r\n        ...elementData,\r\n        transport: {\r\n          fk_transportId: transport\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleAddTransport = () => {\r\n    tourInfoReducer({\r\n      type: 'UPDATE_ELEMENT',\r\n      day: currentDay,\r\n      index: elementIndex,\r\n      data: {\r\n        ...elementData,\r\n        transport: {\r\n          fk_transportId: 1\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <Card className={classes.cardRoot} onClick={() => handleEditPlace(elementData.data.details.placeId)}>\r\n\r\n          {elementData.data.details.photos != null && elementData.data.details.photos.length > 0 &&\r\n          <CardMedia\r\n              className={classes.cover}\r\n              image={elementData.data.details.photos[0].url}\r\n\r\n          />\r\n          }\r\n\r\n          <div className={classes.details}>\r\n            <CardContent className={classes.content}>\r\n              <Typography component=\"h5\" variant=\"h5\">\r\n                {elementData.data.details.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                {truncateText(elementData.data.details.description)}\r\n              </Typography>\r\n            </CardContent>\r\n          </div>\r\n          <CardHeader\r\n              onClick={e => {e.stopPropagation(); e.preventDefault()}}\r\n              action={\r\n                <IconButton aria-label=\"remove\" onClick={() => removeCallback(elementData)}>\r\n                  <RemoveIcon/>\r\n                </IconButton>\r\n              }\r\n          />\r\n        </Card>\r\n\r\n        <TextField\r\n            className={classes.descriptionInput}\r\n            multiline\r\n            value={elementData.data.note}\r\n            label=\"Add a note\"\r\n            style={{marginTop: 10, marginBottom: 5}}\r\n            variant=\"outlined\"\r\n            onChange={(e) => {\r\n              tourInfoReducer({\r\n                type: 'UPDATE_ELEMENT',\r\n                day: currentDay,\r\n                index: elementIndex,\r\n                data: {\r\n                  ...elementData,\r\n                  note: e.target.value\r\n                }\r\n              })\r\n            }}\r\n        />\r\n\r\n        {elementData.data.transport != null && !lastElement &&\r\n        <TransportItem transportChangeCallback={handleChangeTransport}\r\n                       transportId={elementData.data.transport.fk_transportId}/>}\r\n\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nTourPlaceComponent.propTypes = {\r\n  elementData: PropTypes.object.isRequired,\r\n  removeCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourPlaceComponent)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport TourPlaceComponent from \"./TourPlaceComponent\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ElementType} from \"./Tour\";\r\nimport { SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport TransportItem from \"./TransportItem\";\r\nimport shortid from 'shortid';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst styles = theme => ({\r\n    tourPlaceComponent: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\",\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst TourPlaceSortable = SortableElement(({handleEditPlace, currentDay, elementData, removePlaceCallback, classes, tourInfoReducer, elementIndex, lastElement}) => (\r\n    <div>\r\n        <TourPlaceComponent removeCallback={removePlaceCallback} classes={{root: classes.tourPlaceComponent}}\r\n                            elementData={elementData}\r\n                            tourInfoReducer={tourInfoReducer}\r\n                            elementIndex={elementIndex}\r\n                            currentDay={currentDay}\r\n                            handleEditPlace={handleEditPlace}\r\n                            lastElement={lastElement}/>\r\n    </div>\r\n));\r\n\r\nconst SortableList = SortableContainer(({handleEditPlace, currentDay, removeElementCallback, tourInfo, classes, tourInfoReducer}) => {\r\n\r\n    return (\r\n\r\n        <ul>\r\n            {tourInfo.days[currentDay].tour.map((item, index) => {\r\n\r\n                switch (item.type) {\r\n                    case ElementType.place:\r\n                        return <TourPlaceSortable key={item.data.details.placeId} elementIndex={index}\r\n                                                  elementData={item}\r\n                                                  lastElement={index === tourInfo.days[currentDay].tour.length - 1}\r\n                                                  index={index}\r\n                                                  classes={classes}\r\n                                                  currentDay={currentDay}\r\n                                                  handleEditPlace={handleEditPlace}\r\n                                                  tourInfoReducer={tourInfoReducer}\r\n                                                  removePlaceCallback={() => removeElementCallback(index)}/>\r\n                }\r\n            })}\r\n        </ul>\r\n    )\r\n});\r\n\r\nfunction TourPlacesWrapper({classes, tourInfo, tourInfoReducer, currentDay, errorInfo, setErrorInfo, handleEditPlace}) {\r\n\r\n    const removeElementCallback = (index) => {\r\n        tourInfoReducer({\r\n            type: 'REMOVE_ELEMENT',\r\n            day: currentDay,\r\n            index: index\r\n        })\r\n    };\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        tourInfoReducer({\r\n            type: 'MOVE_ELEMENT',\r\n            day: currentDay,\r\n            oldIndex: oldIndex,\r\n            newIndex: newIndex\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {tourInfo.days[currentDay].tour.length === 0 &&\r\n            <Alert severity=\"warning\">You have not added any places for the currently selected day.</Alert>}\r\n            <SortableList\r\n                pressDelay={200}\r\n                disableAutoscroll={false}\r\n                tourInfoReducer={tourInfoReducer}\r\n                tourInfo={tourInfo}\r\n                onSortEnd={onSortEnd}\r\n                handleEditPlace={handleEditPlace}\r\n                currentDay={currentDay}\r\n                classes={classes}\r\n                removeElementCallback={removeElementCallback}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nTourPlacesWrapper.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourPlacesWrapper)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport SearchInputComponent from \"../SearchInputComponent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\nimport DnsIcon from \"@material-ui/icons/Dns\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport API from \"../../Networking/API\";\r\n\r\nconst styles = theme => ({\r\n    searchInputComponent: {\r\n\r\n    },\r\n    placeCard: {\r\n        margin: theme.spacing(1, 8, 1, 8),\r\n    },\r\n})\r\n\r\n\r\nfunction PlaceSearch({classes, addPlaceCallback, apiPlacesFound, setApiPlacesFound, localPlacesFound, setLocalPlacesFound}) {\r\n\r\n    // const [apiPlacesLoading, setApiPlacesLoading] = useState(false)\r\n    const [localPlacesLoading, setLocalPlacesLoading] = useState(false)\r\n\r\n    const placeType = {\r\n        local: 0,\r\n        api: 1\r\n    }\r\n\r\n    const generatePlaceCards = () => {\r\n        let genProps = (placeInfo, type) => {\r\n            return {\r\n                classes: {root: classes.placeCard},\r\n                key: placeInfo.placeId,\r\n                renderActionArea: () => {\r\n                    return (\r\n                        <div>\r\n                            <Button color=\"primary\" onClick={() => addPlaceCallback(placeInfo, type)}>\r\n                                <AddIcon/>\r\n                            </Button>\r\n                            <Tooltip title={type === placeType.local ? \"This place is from our database\" : \"This place is from API\"} aria-label=\"add\">\r\n                                {type === placeType.local ? <LocalLibraryIcon/> : <DnsIcon/>}\r\n                            </Tooltip>\r\n                        </div>\r\n                    )\r\n                },\r\n                placeData : placeInfo\r\n            }\r\n        }\r\n\r\n        let mappedPlaces = []\r\n        localPlacesFound.forEach(item => {\r\n            mappedPlaces.push(<ApiPlaceCard {...genProps(item, placeType.local)}/>)\r\n        })\r\n        // apiPlacesFound.forEach(item => {\r\n        //     mappedPlaces.push( <ApiPlaceCard {...genProps(item, placeType.api)}/>)\r\n        // })\r\n        return mappedPlaces\r\n    }\r\n\r\n    const searchCallback = (keyword) => {\r\n        if(keyword.length < 3)\r\n            return;\r\n        setLocalPlacesFound([])\r\n        setApiPlacesFound([])\r\n        // setApiPlacesLoading(true)\r\n        setLocalPlacesLoading(true)\r\n        API.Places.getAllPlacesAdmin(\"?keyword=\" + keyword).then(response=>{\r\n            setLocalPlacesFound(response.list)\r\n            setLocalPlacesLoading(false)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n\r\n        // API.Places.searchApiPlaces(\"?keyword=\" + keyword).then(response => {\r\n        //     setApiPlacesFound(response)\r\n        //     setApiPlacesLoading(false)\r\n        // }).catch(error => {\r\n        //     console.log(error)\r\n        // })\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <SearchInputComponent hint=\"Search for a place\" searchCallback={searchCallback} className={classes.searchInputComponent}/>\r\n            {(localPlacesLoading) ?\r\n                <CircularProgress  /> :\r\n                <React.Fragment>\r\n                    {generatePlaceCards()}\r\n                </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PlaceSearch)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    radioButtonArea: {\r\n    },\r\n    cardArea: {\r\n        flex: 1,\r\n        display: \"flex\"\r\n    },\r\n    content: {\r\n        flex: '1 1 auto',\r\n    },\r\n    descriptionInput: {\r\n        marginTop: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    },\r\n    headerWrap: {}\r\n})\r\n\r\nfunction DayCard({classes, onSelectCallback, index, currentDay, tourInfoReducer, description, handleRemoveDay}) {\r\n\r\n    const updateDescriptionGlobally = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_DAY',\r\n            day: index,\r\n            data: {\r\n                description: e\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.radioButtonArea}>\r\n                <Radio checked={index === currentDay} onChange={(e) => {\r\n                    onSelectCallback(index)\r\n                }}/>\r\n            </div>\r\n            <Card className={classes.cardArea}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        Day {index + 1}\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                        className={classes.descriptionInput}\r\n                        multiline\r\n                        label=\"Description\"\r\n                        value={description == null ? '' : description}\r\n                        variant=\"outlined\"\r\n                        onChange={(e) => {\r\n                            updateDescriptionGlobally(e.target.value)\r\n                        }}\r\n                    />\r\n                </CardContent>\r\n                <CardHeader\r\n                    action={\r\n                        <IconButton  aria-label=\"remove\" onClick={() => handleRemoveDay(index)}>\r\n                            <RemoveIcon/>\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nDayCard.propTypes = {\r\n    onSelectCallback: PropTypes.func.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DayCard)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport DayCard from \"./DayCard\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport shortid from 'shortid';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    addDayButton: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    footerWrapper: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n})\r\n\r\nconst DayCardSortable = SortableElement(({dayInfo, day, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => (\r\n    <DayCard\r\n        description={dayInfo.description}\r\n        currentDay={currentDay}\r\n        index={day}\r\n        handleRemoveDay={removeDayCallback}\r\n        onSelectCallback={onSelectCallback}\r\n        tourInfoReducer={tourInfoReducer}/>\r\n));\r\n\r\nconst SortableList = SortableContainer(({elements, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => {\r\n\r\n    return (\r\n        <ul style={{padding: \"0px\"}}>\r\n            {elements.map((item, index) => {\r\n                return <DayCardSortable\r\n                    currentDay={currentDay}\r\n                    day={index}\r\n                    index={index}\r\n                    removeDayCallback={removeDayCallback}\r\n                    key={item.elementIdentifier}\r\n                    dayInfo={item}\r\n                    onSelectCallback={onSelectCallback}\r\n                    tourInfoReducer={tourInfoReducer}/>\r\n            })}\r\n        </ul>\r\n    );\r\n});\r\n\r\nfunction DaysWrapper({classes, currentDay, setCurrentDay, tourInfo, tourInfoReducer}) {\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    const handleSelect = (index) => {\r\n        setCurrentDay(index)\r\n    }\r\n\r\n    const addDayHandler = () => {\r\n        tourInfoReducer({\r\n            type: 'ADD_DAY',\r\n            data: {\r\n                description: \"\",\r\n                elementIdentifier: shortid.generate(),\r\n                tour: []\r\n            }\r\n        })\r\n    }\r\n\r\n    const removeDay = (day) => {\r\n        tourInfoReducer({\r\n                type: 'REMOVE_DAY',\r\n                day: day,\r\n            }\r\n        )\r\n        if(day === currentDay)\r\n            setCurrentDay(day - 1)\r\n    }\r\n\r\n    const removeDayCallback = (day) => {\r\n        if(tourInfo.days.length === 1){\r\n            addAlertConfig(\"Warning\", \"The tour has to have at least one day\", [])\r\n        }else{\r\n            if(tourInfo.days[day].tour.length > 0){ //This day has at least one place/transport added to it\r\n                addAlertConfig(\"Warning\", \"Are you sure you want to remove this day?\",[{name: \"yes\", action: ()=>{\r\n                    removeDay(day)\r\n                    }}],() => {\r\n                })\r\n            }else removeDay(day)\r\n        }\r\n    }\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        tourInfoReducer({\r\n            type: 'MOVE_DAY',\r\n            oldIndex: oldIndex,\r\n            newIndex: newIndex\r\n        })\r\n        setCurrentDay(newIndex)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <SortableList\r\n                pressDelay={200}\r\n                disableAutoscroll={false}\r\n                elements={tourInfo.days}\r\n                currentDay={currentDay}\r\n                onSortEnd={onSortEnd}\r\n                removeDayCallback={removeDayCallback}\r\n                onSelectCallback={handleSelect}\r\n                tourInfoReducer={tourInfoReducer}/>\r\n            <div className={classes.footerWrapper}>\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    className={classes.addDayButton}\r\n                    onClick={addDayHandler}\r\n                    startIcon={<AddIcon/>}>\r\n                    Add another day\r\n                </Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nDaysWrapper.propTypes = {\r\n    setCurrentDay: PropTypes.func.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    tourInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DaysWrapper)\r\n","import {arrayMove} from \"react-sortable-hoc\";\r\nimport {ElementType} from \"./Tour\";\r\n\r\nexport default function TourDataReducer(state, action) {\r\n\r\n    let days = []\r\n\r\n    switch (action.type) {\r\n        case 'ADD_ELEMENT':\r\n            if(state.days !== null && action.data.type === ElementType.place && state.days.some(day => day.tour !== null && day.tour.some(place => place.type === ElementType.place && place.data.details.placeId === action.data.data.details.placeId))){\r\n                if(action.onError !== null && action.onError !== undefined){\r\n                    action.onError()\r\n                }\r\n                return state\r\n            }\r\n\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    days.push({\r\n                        ...item,\r\n                        tour: [\r\n                            ...item.tour,\r\n                            action.data\r\n                        ]\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'UPDATE_ELEMENT':\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    let tour = item.tour\r\n                    tour[action.index] = {...tour[action.index], data: {...tour[action.index].data, ...action.data}}\r\n                    days.push({\r\n                        ...item,\r\n                        tour: tour\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'ADD_DAY':\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...state.days,\r\n                    action.data\r\n                ]\r\n            }\r\n        case 'MOVE_DAY':\r\n            return {\r\n                ...state,\r\n                days: arrayMove(state.days, action.oldIndex, action.newIndex)\r\n            }\r\n        case 'MOVE_ELEMENT':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day)\r\n                    return {...item, tour: arrayMove(item.tour, action.oldIndex, action.newIndex)}\r\n                else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'UPDATE_DAY':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day) {\r\n                    return {...item, ...action.data}\r\n                } else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'REMOVE_ELEMENT':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day)\r\n                    return {...item, tour: item.tour.filter((value, index) => index !== action.index)}\r\n                else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'REMOVE_DAY':\r\n            days = state.days.filter((item, index) => index !== action.day)\r\n            return {\r\n                ...state,\r\n                days: days\r\n            }\r\n        case 'UPDATE_TOUR':\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case 'SET_ALL':\r\n            return action.data\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PropTypes from \"prop-types\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(4),\r\n    },\r\n    nameField: {\r\n        width: \"100%\"\r\n    },\r\n    descriptionField: {\r\n        marginTop: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    },\r\n    publicityDiv: {\r\n        width: \"100%\",\r\n\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2),\r\n        color: \"#ffffff\"\r\n    },\r\n});\r\n\r\nfunction TourInfoComponent({classes, tourInfo, tourInfoReducer, errorInfo, setErrorInfo, availableCategories, selectedCategories, setSelectedCategories, setAvailableCategories, tourId}) {\r\n\r\n    const handleDescriptionChange = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data: {description: e.target.value}\r\n        })\r\n    }\r\n    const handleTitleChange = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {name: e.target.value}\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(tourInfo.name === \"\")\r\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: true}}})\r\n        else\r\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: false}}})\r\n    }, [tourInfo.name])\r\n\r\n    let shouldDisplayTitleMissingError = errorInfo.showErrors && errorInfo.errors.titleMissing\r\n\r\n    const verifyTour = () => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {isVerified: true}\r\n        })\r\n    }\r\n\r\n    const publishTour = () => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {isPublished: !tourInfo.isPublished}\r\n        })\r\n\r\n    }\r\n\r\n    const ColorButton = withStyles((theme) => ({\r\n        root: {\r\n            color: \"white\",\r\n            backgroundColor: green[500],\r\n            '&:hover': {\r\n                backgroundColor: green[700],\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField label=\"Tour name\"\r\n                       variant=\"outlined\"\r\n                       error={shouldDisplayTitleMissingError}\r\n                       helperText={shouldDisplayTitleMissingError ? \"Please provide a title for your tour\" : \"\"}\r\n                       value={tourInfo.name}\r\n                       onChange={handleTitleChange}\r\n                       className={classes.nameField}/>\r\n            <TextField\r\n                className={classes.descriptionField}\r\n                multiline\r\n                label=\"Description\"\r\n                value={tourInfo.description}\r\n                variant=\"outlined\"\r\n                onChange={handleDescriptionChange}\r\n            />\r\n            <br/><br/>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n                Categories for this tour\r\n            </Typography>\r\n            <AutoCompleteChip\r\n                options={availableCategories}\r\n                id=\"categoryId\"\r\n                label=\"Select category\"\r\n                setOptions={setAvailableCategories}\r\n                setSelectedOptions={setSelectedCategories}\r\n                selectedOptions={selectedCategories}\r\n            />\r\n\r\n            {tourId !== undefined &&\r\n                <div className={classes.publicityDiv}>\r\n                    {tourInfo.isVerified ?\r\n                        <div>\r\n                            <FormControlLabel\r\n                                control={<Switch checked={tourInfo.isPublished} onChange={publishTour} name=\"isPublic\"/>}\r\n                                label=\"Make this tour public?\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                    <ColorButton\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={verifyTour}\r\n                        className={classes.button}\r\n                    >\r\n                        Verify tour\r\n                    </ColorButton>\r\n                    }\r\n\r\n\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTourInfoComponent.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    availableCategories: PropTypes.array.isRequired,\r\n    setAvailableCategories: PropTypes.func.isRequired,\r\n    selectedCategories: PropTypes.array.isRequired,\r\n    setSelectedCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourInfoComponent)","import React, {useContext, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer} from \"react-google-maps\"\r\nimport {ElementType} from \"./Tour\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FilterBlock from \"../add_place_components/FilterBlock\";\r\nimport CustomControlsManager from \"../maps/CustomControlsManager\";\r\nimport API from \"../../Networking/API\";\r\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst google = window.google;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(4),\r\n    }, cover: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            height: \"200px\",\r\n        },\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            flex: 1,\r\n            height: \"auto\",\r\n        },\r\n    },\r\n    largeIcon: {\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n    },\r\n});\r\n\r\n\r\n/**\r\n * Tours map component\r\n * @type {React.ComponentClass<WithGoogleMapProps>}\r\n */\r\nconst MyMapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        ref={props.refMap}\r\n        defaultZoom={8}\r\n        defaultCenter={{lat: 55.2983804, lng: 23.9132164}}>\r\n\r\n        {props.children}\r\n\r\n    </GoogleMap>\r\n);\r\n\r\n\r\nfunction TourMap({classes, tourInfo, currentDay, addPlace, removePlace}) {\r\n\r\n    const [directions, setDirection] = useState();\r\n\r\n    console.log('rerender')\r\n\r\n    const [infoWindows, setInfoWindows] = useState([]);\r\n    const [directionPlaces, setDirectionPlaces] = useState([])\r\n\r\n\r\n    const [places, setPlaces] = useState([]);\r\n    const [placesInfoWindows, setPlacesInfoWindows] = useState([]);\r\n\r\n    const [loadingArea, setLoadingArea] = useState(false);\r\n    const refMap = useRef(null);\r\n\r\n    const {filterQuery} = useContext(PlacesFilterContext);\r\n\r\n    const constructPlaceData = () => {\r\n        let p = tourInfo.days[currentDay].tour.filter(item => item.type === ElementType.place);\r\n        let places = [];\r\n        p.forEach(item => {\r\n            let placeId = item.data.details.placeId;\r\n            let lat = item.data.details.latitude;\r\n            let lng = item.data.details.longitude;\r\n            let name = item.data.details.name;\r\n            let photos = item.data.details.photos;\r\n            places.push({placeId: placeId, latitude: lat, longitude: lng, name: name, photo: photos.length > 0 ? photos[0].url : null});\r\n        });\r\n        setInfoWindows(Array(places.length).fill(false))\r\n        setDirectionPlaces(places);\r\n        return places\r\n    };\r\n\r\n    useEffect(() => {\r\n        const places = constructPlaceData();\r\n        if(places.length>1){\r\n            const waypoints = places.map(p =>({\r\n                location: {lat: p.latitude, lng:p.longitude},\r\n                stopover: true\r\n            }));\r\n\r\n            const origin = waypoints.shift().location;\r\n            let destination = null;\r\n\r\n            if (waypoints.length > 0)\r\n                destination = waypoints.pop().location;\r\n            else\r\n                destination = origin;\r\n\r\n            const directionsService = new google.maps.DirectionsService();\r\n\r\n            directionsService.route(\r\n                {\r\n                    origin: origin,\r\n                    destination: destination,\r\n                    travelMode: google.maps.TravelMode.DRIVING,\r\n                    waypoints: waypoints\r\n                },\r\n                (result, status) => {\r\n                    if (status === google.maps.DirectionsStatus.OK) {\r\n                        setDirection(result)\r\n                    } else {\r\n                        alert(status);\r\n                    }\r\n                }\r\n            );\r\n        } else {\r\n            setDirection(null)\r\n        }\r\n    }, [currentDay, tourInfo.days]);\r\n\r\n\r\n    function fetchPlaces(){\r\n        console.log(\"Getting all places...\", refMap.current.getCenter().lat())\r\n        getAllPlaces(filterQuery + \"&p=\" + 0 + \"&s=\" + 100 + \"&l=\" + refMap.current.getCenter().lat() + \",\" + refMap.current.getCenter().lng() + \"range=\" + 50)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!loadingArea){\r\n            if(refMap.current != null){\r\n                fetchPlaces()\r\n            }\r\n        }\r\n    }, [filterQuery]);\r\n\r\n    function getAllPlaces(query) {\r\n        setLoadingArea(true);\r\n        API.Places.getAllPlacesAdmin(query).then(locations => {\r\n            setPlacesInfoWindows(Array(locations.list.length).fill(false));\r\n            setPlaces(locations.list)\r\n            setLoadingArea(false)\r\n        }).catch(err => {\r\n            console.log(err);\r\n            setLoadingArea(false)\r\n        })\r\n    }\r\n\r\n    function addPlaceToTourDay(place) {\r\n        setPlacesInfoWindows(Array(places.length).fill(false));\r\n        addPlace(place, ElementType.place)\r\n    }\r\n\r\n    function removePlaceFromTourDay(place) {\r\n        tourInfo.days[currentDay].tour.map((row, index)=>{\r\n            if(row.type === ElementType.place){\r\n                if(row.data.details.placeId === place.placeId){\r\n                    removePlace(index)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Renders places markers on the map\r\n     * @return {*[]}\r\n     */\r\n    function PlacesMarkers() {\r\n        return places.map((location, i) => {\r\n            const latitude = parseFloat(location.latitude);\r\n            const longitude = parseFloat(location.longitude);\r\n            return <Marker\r\n                zIndex={1}\r\n                key={location.placeId}\r\n                position={{lat: latitude, lng: longitude}}\r\n                onClick={() => {\r\n                    let markers = Object.assign({}, placesInfoWindows);\r\n                    markers[i] = true;\r\n                    setPlacesInfoWindows(markers)\r\n                }}\r\n            >\r\n                {placesInfoWindows[i] && (\r\n                    <InfoWindow onCloseClick={() => {\r\n                        let markers = Object.assign({}, placesInfoWindows);\r\n                        markers[i] = false;\r\n                        setPlacesInfoWindows(markers)\r\n                    }\r\n                    }>\r\n                        <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                            <Typography variant=\"h6\">\r\n                                {location.name}\r\n                            </Typography>\r\n\r\n                            <Button\r\n                                onClick={()=>{addPlaceToTourDay(location)}}\r\n                                variant=\"text\"\r\n                                color=\"secondary\"\r\n                                size=\"large\"\r\n                                startIcon={<AddIcon/>}>\r\n                                Add this place to tour!\r\n                            </Button>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )}\r\n            </Marker>\r\n        })\r\n    }\r\n\r\n\r\n    const searchAreaComponent = useMemo(() => (\r\n        <CustomControlsManager position={window.google.maps.ControlPosition.TOP_CENTER}>\r\n            <div>\r\n                {loadingArea ?\r\n                    <CircularProgress />\r\n                    :\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                               fetchPlaces()\r\n                            }}\r\n                    >\r\n                        Search area...\r\n                    </Button>\r\n                }\r\n\r\n            </div>\r\n        </CustomControlsManager>\r\n    ), [loadingArea]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FilterBlock/>\r\n            <MyMapComponent\r\n                loadingElement={<div style={{height: `100%`}}/>}\r\n                containerElement={<div style={{height: `400px`}}/>}\r\n                mapElement={<div style={{height: `100%`}}/>}\r\n                refMap={refMap}>\r\n\r\n                {searchAreaComponent}\r\n                <PlacesMarkers/>\r\n\r\n                {/* Rendering direction path*/}\r\n                {directions ?\r\n                    <DirectionsRenderer\r\n                        options={{suppressMarkers: true, draggable: false}}\r\n                        draggable={false}\r\n                        directions={directions}/> : null}\r\n\r\n                {/* Rendering direction places markers*/}\r\n                {directionPlaces.map((marker, index) => {\r\n                    const position = { lat: marker.latitude, lng: marker.longitude };\r\n                    return <Marker\r\n                        zIndex={2}\r\n                        icon={{\r\n                            url: require('../../res/selectedTourIcon.svg'),\r\n                            scaledSize: new window.google.maps.Size(48, 48),\r\n                            origin: new window.google.maps.Point(0, 0),\r\n                            labelOrigin: new window.google.maps.Point(24, 16),\r\n                        }}\r\n                        key={index}\r\n                        position={position}\r\n                        label={{text: `${index+1}`, color: \"white\"}}\r\n                        onClick={\r\n                        ()=>{\r\n                            let info = Object.assign({}, infoWindows);\r\n                            info[index] = true;\r\n                            setInfoWindows(info);\r\n                        }\r\n                    }>\r\n                        {infoWindows[index] && (\r\n                        <InfoWindow onCloseClick={()=>{\r\n                            let info = Object.assign({}, infoWindows);\r\n                            info[index] = false;\r\n                            setInfoWindows(info);\r\n                        }}>\r\n                                <Card style={{display:\"flex\", flexDirection: \"column\",alignItems:\"center\"}}>\r\n                                    {marker.photo ?<Avatar alt=\"Remy Sharp\" src={marker.photo} className={classes.largeIcon}/> : null}\r\n\r\n                                    <Typography>\r\n                                        {marker.name}\r\n                                    </Typography>\r\n                                    <Button\r\n                                        onClick={()=>removePlaceFromTourDay(marker)}\r\n                                        style={{marginTop: 12}}\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        startIcon={<DeleteIcon />}\r\n                                    >\r\n                                        Remove from tour\r\n                                    </Button>\r\n\r\n                                </Card>\r\n                        </InfoWindow>\r\n                        )}\r\n                    </Marker>\r\n                })}\r\n\r\n            </MyMapComponent>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTourMap.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourMap)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useMemo, useState} from \"react\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TourPlacesWrapper from \"./TourPlacesWrapper\";\r\nimport PlaceSearch from \"./PlaceSearch\";\r\nimport DaysWrapper from \"./DaysWrapper\";\r\nimport TourDataReducer from \"./TourReducer\";\r\nimport TourInfoComponent from \"./TourInfoComponent\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TourMap from \"./TourMap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../Networking/API\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport shortid from 'shortid';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport RecommendationListDialog from \"../recomendation/RecommendationListDialog\";\r\nimport {RecommendationType} from \"../recomendation/Recommendation\";\r\nimport history from \"../../helpers/history\";\r\nimport TransportItem from \"./TransportItem\";\r\n\r\nexport const ElementType = {\r\n  place: 0,\r\n  transport: 1\r\n}\r\nexport const PlaceType = {\r\n  api: 1,\r\n  local: 0\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      overflow: \"scroll\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      overflow: \"initial\",\r\n      display: \"flex\",\r\n    },\r\n    height: `calc(100% - 64px)`,\r\n    width: \"100%\",\r\n    '&::-webkit-scrollbar': {\r\n      display: \"none\"\r\n    },\r\n  },\r\n  loader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100vw\",\r\n    height: \"100vh\"\r\n  },\r\n  rightLayout: {\r\n    flex: 2,\r\n    '&::-webkit-scrollbar': {\r\n      display: \"none\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      height: \"100%\",\r\n      overflowY: \"scroll\",\r\n\r\n    },\r\n  },\r\n  leftLayout: {\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      height: \"100%\",\r\n    },\r\n    overflowY: \"scroll\",\r\n\r\n    flex: 1,\r\n    '&::-webkit-scrollbar': {\r\n      display: \"none\"\r\n    },\r\n  },\r\n  actionsArea: {\r\n    padding: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n\r\n})\r\n\r\nconst sampleTourData = {\r\n  name: \"\",\r\n  description: \"\",\r\n  isVerified: true,\r\n  isPublished: false,\r\n  days: [\r\n    {\r\n      description: \"\",\r\n      elementIdentifier: \"jkasfbjkdsbjk\",\r\n      tour: []\r\n    }\r\n  ]\r\n}\r\n\r\nfunction Tour({classes, match}) {\r\n\r\n  const [localPlacesFound, setLocalPlacesFound] = useState([])\r\n  const [apiPlacesFound, setApiPlacesFound] = useState([])\r\n  const [currentDay, setCurrentDay] = useState(0)\r\n  const [tourId, setTourId] = useState(match.params.tourId)\r\n  const [isLoading, setIsLoading] = useState(match.params.tourId !== undefined);\r\n  const [recommendationsDialogOpen, setRecommendationsDialogOpen] = useState(false)\r\n\r\n  const [selectedCategories, setSelectedCategories] = useState([])\r\n  const [availableCategories, setAvailableCategories] = useState([])\r\n\r\n  const [errorInfo, setErrorInfo] = useState({\r\n        errors: {\r\n          titleMissing: false,\r\n          /* Any client-side verification errors may by added here, and handled in individual components */\r\n        },\r\n        showErrors: false\r\n      }\r\n  )\r\n\r\n  const [tourInfo, dispatchTourInfo] = React.useReducer(TourDataReducer, sampleTourData)\r\n  const {addConfig} = UseSnackbarContext();\r\n\r\n  const handleAddPlaceClick = (placeInfo, type) => {\r\n    dispatchTourInfo({\r\n      type: 'ADD_ELEMENT',\r\n      day: currentDay,\r\n      data: {\r\n        type: ElementType.place,\r\n        data: {\r\n          type: type,\r\n          details: {...placeInfo},\r\n          transport: {fk_transportId: 3},\r\n          note: ''\r\n        },\r\n      },\r\n      onError: () => {\r\n        addConfig(false, \"This place already exists in this tour.\")\r\n      }\r\n    })\r\n  }\r\n\r\n  const removeElementCallback = (index) => {\r\n    dispatchTourInfo({\r\n      type: 'REMOVE_ELEMENT',\r\n      day: currentDay,\r\n      index: index\r\n    })\r\n  };\r\n\r\n  const handleEditPlace = (placeId) => {\r\n    window.open(`https://www.traveldirection.ax.lt/app/addplace/${placeId}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (tourId !== undefined) { //If user wants to edit a tour, we download all tour data. loadData also downloads categories\r\n      loadData()\r\n    } else { //Otherwise, we just download categories instead.\r\n      API.Categories.getAllCategories().then(response => {\r\n        setAvailableCategories(response)\r\n      }).catch(() => {\r\n        addConfig(false, \"Categories failed to load\")\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const parseTourInfoResponse = (response) => {\r\n    let aggregatedDays = [];\r\n    response.days.forEach(day => {\r\n      let aggregatedElements = [];\r\n      day.data.forEach(place => {\r\n        let aggregatedPlace = {\r\n          type: ElementType.place,\r\n          data: {\r\n            details: place.place, type: place.place.type, transport: place.transport == null ? {fk_transportId: 3} : {\r\n              fk_transportId: place.transport.fk_transportId - 1\r\n            }, note: place.note == null ? '' : place.note\r\n          }\r\n        }\r\n        delete aggregatedPlace.data.details.type\r\n        aggregatedElements.push(aggregatedPlace)\r\n      })\r\n      let aggregatedDay = {...day, tour: aggregatedElements, elementIdentifier: shortid.generate()}\r\n      delete aggregatedDay.data\r\n      aggregatedDays.push(aggregatedDay)\r\n    })\r\n    let aggregatedTour = {...response, days: aggregatedDays}\r\n    dispatchTourInfo({type: 'SET_ALL', data: aggregatedTour})\r\n  }\r\n\r\n  const loadData = () => {\r\n    Promise.all([\r\n          API.Tour.getTour(\"?id=\" + tourId),\r\n          API.Categories.getAllCategories(),\r\n          API.Tour.getTourCategories(\"?id=\" + tourId),\r\n        ]\r\n    ).catch(() => {\r\n      addConfig(false, \"Tour has failed to load\")\r\n      setTourId(undefined)\r\n    }).then((response) => {\r\n      parseTourInfoResponse(response[0])\r\n      setAvailableCategories(response[1])\r\n      setSelectedCategories(response[2])\r\n    }).finally(() => {\r\n      setIsLoading(false)\r\n    })\r\n  }\r\n\r\n  const handleSave = () => {\r\n    let containsErrors = false;\r\n    Object.keys(errorInfo.errors).map(function (keyName, keyIndex) {\r\n      if (errorInfo.errors[keyName]) {\r\n        setErrorInfo(state => {\r\n          return {...state, showErrors: true}\r\n        })\r\n        containsErrors = true;\r\n      }\r\n    })\r\n    if (containsErrors) return\r\n    setErrorInfo(state => {\r\n      return {...state, showErrors: false}\r\n    })\r\n\r\n    const aggregatedDays = []\r\n    tourInfo.days.forEach(day => {\r\n      let aggregatedDay = {...day, data: []}\r\n      delete aggregatedDay.tour\r\n      delete aggregatedDay.elementIdentifier\r\n      for (let i = 0; i < day.tour.length; i++) {\r\n        let element = day.tour[i]\r\n        if (element.type !== ElementType.place)\r\n          continue;\r\n        let aggregatedPlace = {\r\n          place: {\r\n            type: element.data.type,\r\n            placeId: element.data.details.placeId\r\n          },\r\n          note: element.data.note\r\n        }\r\n        if (i !== day.tour.length - 1)\r\n          aggregatedPlace.transport = {fk_transportId: element.data.transport.fk_transportId + 1}\r\n        else\r\n          aggregatedPlace.transport = {fk_transportId: null}\r\n\r\n        aggregatedDay.data.push(aggregatedPlace)\r\n      }\r\n      aggregatedDays.push(aggregatedDay)\r\n    })\r\n    let aggregatedTour = {...tourInfo, days: aggregatedDays}\r\n\r\n    if (tourId === undefined) {\r\n      API.Tour.insertTour(aggregatedTour).then((response) => {\r\n        setTourId(response)\r\n        return response\r\n      }).then((response) => Promise.all(\r\n          [\r\n            API.Tour.updateTourCategories(selectedCategories, \"?p=\" + response)\r\n          ]\r\n      )).then((() => {\r\n        addConfig(true, \"Tour has been inserted successfully!\")\r\n      })).catch((error) => {\r\n        addConfig(false, \"Something went wrong while saving this tour.\")\r\n      })\r\n    } else {\r\n      Promise.all([\r\n        API.Tour.updateTour(aggregatedTour, \"?id=\" + tourId),\r\n        API.Tour.updateTourCategories(selectedCategories, \"?p=\" + tourId)\r\n      ])\r\n          .then(() => {\r\n            addConfig(true, \"Tour has been updated successfully!\")\r\n          }).catch((error) => {\r\n        addConfig(false, \"Something went wrong while saving this tour.\")\r\n      })\r\n    }\r\n\r\n  };\r\n\r\n  const leftLayout = useMemo(() => (\r\n      <div className={classes.leftLayout}>\r\n        <PlaceSearch addPlaceCallback={handleAddPlaceClick} localPlacesFound={localPlacesFound}\r\n                     setLocalPlacesFound={setLocalPlacesFound} apiPlacesFound={apiPlacesFound}\r\n                     setApiPlacesFound={setApiPlacesFound}/>\r\n      </div>\r\n  ), [localPlacesFound, apiPlacesFound, currentDay])\r\n\r\n\r\n  let dayInfoWithoutDesc = JSON.stringify(tourInfo.days.map(day => {\r\n    let dayCopy = {...day}\r\n    delete dayCopy.description\r\n    return dayCopy.tour.map(day => day.data.details)\r\n  }))\r\n\r\n\r\n  const tourPlacesMemoized = useMemo(() => (<TourPlacesWrapper errorInfo={errorInfo} setErrorInfo={setErrorInfo}\r\n                                                               handleEditPlace={handleEditPlace}\r\n                                                               currentDay={currentDay} tourInfoReducer={dispatchTourInfo} tourInfo={tourInfo}/>), [errorInfo, currentDay, JSON.stringify(tourInfo.days.map(day => day.tour))])\r\n  const mapComponent = useMemo(() => (\r\n      <React.Fragment>\r\n        <TourMap tourInfo={tourInfo}\r\n                 currentDay={currentDay}\r\n                 addPlace={handleAddPlaceClick}\r\n                 removePlace={removeElementCallback}\r\n        />\r\n      </React.Fragment>\r\n  ), [dayInfoWithoutDesc, currentDay])\r\n\r\n  const daysWrapperMemoized = useMemo(() => (<DaysWrapper currentDay={currentDay} setCurrentDay={setCurrentDay}\r\n                                                          tourInfo={tourInfo}\r\n                                                          tourInfoReducer={dispatchTourInfo}/>), [JSON.stringify(tourInfo.days.map(day => {\r\n    return {...day, tour: null}\r\n  }))])\r\n\r\n  const tourDaysComponents = useMemo(() => (\r\n      <div>\r\n        {daysWrapperMemoized}\r\n        <Divider variant=\"middle\"/>\r\n        {mapComponent}\r\n        {tourPlacesMemoized}\r\n      </div>\r\n  ), [tourInfo.days, currentDay, errorInfo]);\r\n\r\n  const tourInfoMemoized = useMemo(() => (\r\n      <TourInfoComponent tourInfo={tourInfo} tourInfoReducer={dispatchTourInfo} errorInfo={errorInfo}\r\n                         setErrorInfo={setErrorInfo}\r\n                         tourId={tourId}\r\n                         setSelectedCategories={setSelectedCategories} selectedCategories={selectedCategories}\r\n                         availableCategories={availableCategories}\r\n                         setAvailableCategories={setAvailableCategories}/>), [availableCategories, selectedCategories, tourId, errorInfo, tourInfo.name, tourInfo.description, tourInfo.isPublished, tourInfo.isVerified])\r\n\r\n  const rightLayout = useMemo(() => (\r\n      <Paper className={classes.rightLayout}>\r\n        {tourInfoMemoized}\r\n        <Divider variant=\"middle\"/>\r\n        {tourDaysComponents}\r\n        <div className={classes.actionsArea}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => setRecommendationsDialogOpen(true)}\r\n                  disabled={tourId == null}>\r\n            Add tour to recommendation\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n            Save this tour\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n  ), [tourInfo, currentDay, errorInfo, availableCategories, selectedCategories]);\r\n\r\n  const theme = useTheme();\r\n  const largeScreen = useMediaQuery(theme.breakpoints.up('lg'));\r\n\r\n  const content = (\r\n      <React.Fragment>\r\n        {largeScreen ?\r\n            <React.Fragment>\r\n              {leftLayout}\r\n              {rightLayout}\r\n            </React.Fragment> :\r\n            <React.Fragment>\r\n              {rightLayout}\r\n              {leftLayout}\r\n            </React.Fragment>\r\n        }\r\n      </React.Fragment>\r\n  );\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <RecommendationListDialog\r\n            setOpen={setRecommendationsDialogOpen}\r\n            open={recommendationsDialogOpen}\r\n            objectId={tourId}\r\n            type={RecommendationType.tour}/>\r\n        {isLoading ? <div className={classes.loader}><CircularProgress/></div> : content}\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Tour)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n\r\n    sortingButtons: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n\r\n    },\r\n    root:{\r\n        height:\"100vh\",\r\n        width:\"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content:{\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Tour name', isId: true},\r\n    { id: 'description', numeric: false, disablePadding: false, label: 'Tour description',isId: false},\r\n    { id: 'lastModified', numeric: false, disablePadding: false, label: 'Date modified',isId: false},\r\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\r\n];\r\n\r\nfunction Tours(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { classes } = props;\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [filterQuery, setFilterQuery] = useState(\"\");\r\n\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    useEffect(()=>{\r\n        if(!isLoading){\r\n            getAllTours(\"?o=\"+filterQuery);\r\n        }\r\n    },[filterQuery]);\r\n\r\n    function parseData(data){\r\n        console.log(\"deita\", data.list)\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updateTourCallback(id){\r\n        history.push(\"/app/addtour/\"+id)\r\n    }\r\n    function removePlaceCallback(id){\r\n        console.log(\"tour id\", id)\r\n\r\n        addAlertConfig(Strings.DIALOG_TOUR_DELETE_TITLE, Strings.DIALOG_TOUR_DELETE_MESSAGE, [{name: \"Delete\", action: () => {\r\n                setIsLoading(true);\r\n                API.Tour.removeTour(\"?id=\"+id).then(response=>{\r\n                    let tmp = [];\r\n                    data.map(row=>{\r\n                        if(row[\"tourId\"] !== id){\r\n                            tmp.push(row)\r\n                        }\r\n                    });\r\n                    setData(tmp);\r\n                    addConfig(true, Strings.SNACKBAR_TOUR_REMOVE_SUCCESS)\r\n                    setIsLoading(false)\r\n                }).catch(error=>{\r\n                    setIsLoading(false);\r\n                    addConfig(false, Strings.SNACKBAR_ERROR)\r\n                })\r\n            }}],  ()=>{setIsLoading(false)})\r\n    }\r\n\r\n    const changePageCallback = (p=0, keyword=\"\") => {\r\n        setIsLoading(true);\r\n        getAllTours(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword+\"&o=\"+filterQuery)\r\n    };\r\n\r\n\r\n    //Sorting stuff\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let filters = [];\r\n        let fq = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n            if(row.filter){\r\n                fq.push(row.filterName)\r\n            }\r\n            filters.push(row)\r\n        });\r\n\r\n        setFilterQuery(fq.join(\",\"));\r\n        setFilterOptions(filters)\r\n    };\r\n\r\n    const customToolbarElements = () =>{\r\n        return <div>\r\n            <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                    <FilterListIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={()=>{setAnchorEl(null)}}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.sortingButtons}>\r\n                    {filterOptions.map(row=>{\r\n                        return <FormControlLabel\r\n                            control={<Checkbox checked={row.filter} onChange={()=>filterOptionsChanged(row.filterName)} name={row.filterName} />}\r\n                            label={row.filterLabel}\r\n                        />\r\n                    })}\r\n                </div>\r\n\r\n            </Popover>\r\n        </div>\r\n    };\r\n    /*------------------------------------------------------------------------------------------------------*/\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content} >\r\n                <TableComponent\r\n                    title={\"Tours\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updateTourCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    id={\"tourId\"}\r\n                    isLoading={isLoading}\r\n                    customToolbarElements={customToolbarElements()}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={()=>{history.push(\"/app/addtour\")}}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon />}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n    function getAllTours(urlParams=\"\") {\r\n        API.Tour.getAllToursAdmin(urlParams).then(response=>{\r\n            console.log(response);\r\n            parseData(response)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nTours.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Tours);","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nfunction AddDialog(props){\r\n\r\n    function validateInput(){\r\n        var error = false;\r\n        if(text.length <= 3)\r\n            error = true\r\n        setError(error)\r\n        return error\r\n    }\r\n\r\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\r\n    const [text, setText] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    return(\r\n        <div>\r\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\r\n                    {header}\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    action: PropTypes.func.isRequired,\r\n    onCloseCallback: PropTypes.func.isRequired\r\n};\r\nexport default withStyles(styles)(AddDialog)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport TableComponent from \"./TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddDialog from \"./AddDialog\";\r\nimport UseEditDialogContext from \"../contexts/UseEditDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\",\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    buttonWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        width: \"100%\",\r\n    }\r\n})\r\n\r\nconst categoriesHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Category name', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n]\r\nconst tagsHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Tag name', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n]\r\n\r\nfunction Resources({classes}) {\r\n\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addEditDialogConfig} = UseEditDialogContext();\r\n\r\n    const [loading, setIsLoading] = useState({\r\n        categories: false,\r\n        tags: false\r\n    })\r\n\r\n    const [categories, setCategories] = useState([])\r\n    const [tags, setTags] = useState([])\r\n\r\n    useEffect(() => {\r\n        setIsLoading({categories: true, tags: true})\r\n        Promise.all([\r\n                API.Categories.getAllCategories(),\r\n                API.Tags.getAllTags()\r\n            ]\r\n        ).then(response => {\r\n            setCategories(response[0])\r\n            setTags(response[1])\r\n        }).catch(() => {\r\n            addConfig(false, \"Could not retrieve data!\")\r\n        }).finally(() => {\r\n            setIsLoading(oldData => {return{ ...oldData, categories: false, tags: false}})\r\n        })\r\n    }, [])\r\n\r\n    const handleAddCategory = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add category\",\r\n            explanation: \"Type the category name\",\r\n            onDoneCallback: (text) => {\r\n               API.Categories.addCategory([{name: text}]).then((response)=>{\r\n                   addConfig(true, \"Category inserted successfully\")\r\n                   setCategories(oldData => [...oldData, {name: text, categoryId: response[0]}])\r\n                }).catch(error=>{\r\n                   addConfig(false, \"Failed to add category.\")\r\n               })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Restaurants, hiking, etc...\"\r\n        })\r\n    }\r\n\r\n    const removeCategoryCallback = (categoryId) => {\r\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\r\n        addAlertConfig(\"Warning\", \"Are you sure you want the category, named '\" + categoryName + \"'?\", [{\r\n            name: \"yes\", action: () => {\r\n                setIsLoading(oldData => {\r\n                    return {...oldData, categories: true}\r\n                })\r\n                API.Categories.removeCategory([{categoryId: categoryId}]).then(() => {\r\n                    addConfig(true, \"Category successfully removed.\")\r\n                    setCategories(oldData => oldData.filter(item => item.categoryId !== categoryId))\r\n                }).catch(() => {\r\n                    addConfig(false, \"An error has occurred while removing category.\")\r\n                }).finally(() => {\r\n                    setIsLoading(oldData => {\r\n                        return {...oldData, categories: false}\r\n                    })\r\n                })\r\n            }\r\n        }], () => {\r\n        })\r\n    }\r\n\r\n    const updateCategoryHandler = (categoryId) => {\r\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\r\n        addEditDialogConfig({\r\n            title: \"Edit category\",\r\n            explanation: \"Type the category name\",\r\n            defaultText: categoryName,\r\n            onDoneCallback: (text) => {\r\n                API.Categories.updateCategory([{name: text, categoryId: categoryId}]).then(()=>{\r\n                    addConfig(true, \"Category updated successfully\")\r\n                    setCategories(oldData => {return oldData.map(item => {\r\n                        if(item.categoryId === categoryId)\r\n                            return {...item, name: text}\r\n                        else return item\r\n                    })})\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to update category.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Restaurants, hiking, etc...\"\r\n        })\r\n    }\r\n\r\n    const updateTagHandler = (id) => {\r\n        let tagName = tags.filter(item => item.tagId === id)[0].name\r\n        addEditDialogConfig({\r\n            title: \"Edit tag\",\r\n            explanation: \"Type the tag name\",\r\n            defaultText: tagName,\r\n            onDoneCallback: (text) => {\r\n                API.Tags.updateTags([{name: text, tagId: id}]).then(()=>{\r\n                    addConfig(true, \"Tag updated successfully\")\r\n                    setTags(oldData => {return oldData.map(item => {\r\n                        if(item.tagId === id)\r\n                            return {...item, name: text}\r\n                        else return item\r\n                    })})\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to update tag.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const removeTagHandler = (id) => {\r\n        let tagName = tags.filter(item => item.tagId === id)[0].name\r\n        addAlertConfig(\"Warning\", \"Are you sure you want the tag, named '\" + tagName + \"'?\", [{\r\n            name: \"yes\", action: () => {\r\n                setIsLoading(oldData => {\r\n                    return {...oldData, tags: true}\r\n                })\r\n                API.Tags.removeTags([{tagId: id}]).then(() => {\r\n                    addConfig(true, \"Tag successfully removed.\")\r\n                    setTags(oldData => oldData.filter(item => item.tagId !== id))\r\n                }).catch(() => {\r\n                    addConfig(false, \"An error has occurred while removing tag.\")\r\n                }).finally(() => {\r\n                    setIsLoading(oldData => {\r\n                        return {...oldData, tags: false}\r\n                    })\r\n                })\r\n            }\r\n        }], () => {\r\n        })\r\n    }\r\n\r\n    const handleAddTag = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add tag\",\r\n            explanation: \"Type the tag name\",\r\n            onDoneCallback: (text) => {\r\n                API.Tags.addTag([{name: text}]).then((response)=>{\r\n                    addConfig(true, \"Tag inserted successfully\")\r\n                    setTags(oldData => [...oldData, {name: text, tagId: response[0]}])\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to add tag.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const searchFunction = (keyword, item) => {\r\n        console.log(\"Keyword is what\", keyword)\r\n        if(keyword == null || keyword.length < 1) return true\r\n        return item.name.includes(keyword)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n\r\n                <TableComponent\r\n                    title={\"Categories\"}\r\n                    headCells={categoriesHeadCells}\r\n                    data={categories}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateCategoryHandler}\r\n                    removeCallback={removeCategoryCallback}\r\n                    id={\"categoryId\"}\r\n                    isLoading={loading.categories}\r\n                />\r\n\r\n                <Box className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleAddCategory}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add a new category\r\n                    </Button>\r\n                </Box>\r\n\r\n                <br/>\r\n\r\n                <TableComponent\r\n                    title={\"Tags\"}\r\n                    headCells={tagsHeadCells}\r\n                    data={tags}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateTagHandler}\r\n                    removeCallback={removeTagHandler}\r\n                    id={\"tagId\"}\r\n                    isLoading={loading.tags}\r\n                />\r\n\r\n                <Box className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleAddTag}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add a new tag\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nResources.propTypes = {\r\n};\r\n\r\nexport default withStyles(styles)(Resources)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutoCompleteChip from \"./AutocompleteChip\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\n\r\nconst UpdateUserDialog = ({open, setOpen, userData, availableRoles, setAvailableRoles}) => {\r\n\r\n    const [selectedRoles, setSelectedRoles] = useState([]);\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    useEffect(()=>{\r\n        setSelectedRoles(userData.roles)\r\n    },[userData.roles]);\r\n\r\n    function setRoles() {\r\n        addAlertConfig(\"Update user\", \"Are you sure you want to update this user's permissions?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                let roles = []\r\n                selectedRoles.map(row=>{\r\n                    roles.push(row.roleId)\r\n                });\r\n                API.User.setRoles({userId: userData.id, roles: roles}).then(response=>{\r\n                    addConfig(true, \"Updated user successfully\");\r\n                    setOpen(false)\r\n                }).catch(error=>{\r\n                    addConfig(false, \"Could not update user\")\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n    const renderRoles = <div>\r\n\r\n    </div>\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={'lg'}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">Update user - {userData.name + \" \" + userData.surname}</DialogTitle>\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Change user permissions\r\n                </Typography>\r\n\r\n                <AutoCompleteChip\r\n                    id=\"roleId\"\r\n                    name=\"role\"\r\n                    label=\"Select sources\"\r\n                    options={availableRoles}\r\n                    setOptions={setAvailableRoles}\r\n                    setSelectedOptions={setSelectedRoles}\r\n                    selectedOptions={selectedRoles}\r\n                />\r\n\r\n                {\r\n                    selectedRoles.map(row=>{\r\n                        return <div>\r\n                            <b>{row.role}</b> - {row.description}\r\n                            <br/>\r\n                        </div>\r\n                    })\r\n                }\r\n\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button onClick={()=>setRoles()}\r\n                        color=\"primary\">\r\n                    Update user\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\n\r\nexport default UpdateUserDialog\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutoCompleteChip from \"./AutocompleteChip\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {averageTimeSpent} from \"../helpers/averageTimeSpent\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {load} from \"dotenv\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n\r\n});\r\n\r\nfunction AddUserDialog({classes, open, setOpen, availableRoles}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [user, setUser] = useState({name: \"\", surname: \"\", password: \"\", email: \"\", role: -1});\r\n    const [error, setError] = useState({name: false, surname: false, password: false, email: false, role: false});\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const userDataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let userData = Object.assign({}, user);\r\n        userData[name] = value\r\n        setUser(userData)\r\n    };\r\n\r\n    function parseRoleFromId(id){\r\n        return availableRoles.map(row=>{\r\n            if(row.roleId===id){\r\n                return  row.role + \" - \" + row.description\r\n            }\r\n        })\r\n    }\r\n\r\n    function checkErrors(){\r\n        let errors = Object.assign({}, error)\r\n        let hasErrors = false;\r\n        for (let key in user) {\r\n            errors[key] = user[key] === \"\" || user[key] === -1;\r\n            if(errors[key] === true){\r\n                hasErrors = true\r\n            }\r\n        }\r\n        setError(errors);\r\n        return hasErrors\r\n    }\r\n\r\n    function addUser(){\r\n        if(checkErrors()){\r\n            return\r\n        }\r\n        addAlertConfig(\"Add new editor\", \"Are you sure you want to add new editor?. This user has role: \" + parseRoleFromId(user.role), [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Auth.register(user).then(userId=>{\r\n                    API.User.setRoles({userId: userId, roles: [user.role]}).then(response=>{\r\n                        addConfig(true, \"User was added successfully!\")\r\n                        setOpen(false);\r\n                        setLoading(false)\r\n                    }).catch(error=>{\r\n                        setOpen(false);\r\n                        addConfig(false, \"Could not map user permissions!\");\r\n                        setLoading(false)\r\n                    })\r\n                }).catch(error=>{\r\n                    addConfig(false, error.message);\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add new editor</DialogTitle>\r\n            <DialogContent>\r\n                    <div className={classes.root}>\r\n                        <TextField id=\"outlined-basic\"\r\n                                   error={error.name}\r\n                                   required\r\n                                   label=\"Name\"\r\n                                   name=\"name\"\r\n                                   value={user['name']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.surname}\r\n                                   label=\"Surname\"\r\n                                   name=\"surname\"\r\n                                   value={user['surname']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.email}\r\n                                   label=\"Email\"\r\n                                   name=\"email\"\r\n                                   value={user['email']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.password}\r\n                                   autoComplete='new-password'\r\n                                   label=\"Password\"\r\n                                   name=\"password\"\r\n                                   value={user['password']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   type=\"password\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <br/>\r\n                        <Alert severity=\"info\">\r\n                            Make sure to use secure password as it will give access to modify data in admin panel.\r\n                            <br/>\r\n                            *Password must contain between 8 and 30 characters\r\n                            <br/>\r\n                            *Password must have atleast one digit\r\n                            <br/>\r\n                            *Password must have atleast one upper character\r\n                        </Alert>\r\n\r\n                        <Divider className={classes.textField} medium />\r\n\r\n                        <FormControl error={error.role} variant=\"outlined\" className={classes.textField}>\r\n                            <InputLabel>User role</InputLabel>\r\n                            <Select\r\n                                onChange={(e, value) =>{\r\n                                    let userTmp = Object.assign({},user);\r\n                                    userTmp.role = value.props.value\r\n                                    setUser(userTmp)\r\n                                }}\r\n                                value={user.role}\r\n                                label=\"Select user role\"\r\n                            >\r\n                                <option value=\"-1\">None</option>\r\n                                {\r\n                                    availableRoles.map(row=>{\r\n                                        return <option value={row.roleId}> {row.role}</option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                            <FormHelperText>Select one of the available user roles</FormHelperText>\r\n                        </FormControl>\r\n\r\n                        {user.role === 1 ? <Alert className={classes.textField}\r\n                            severity=\"warning\">\r\n                            ROLE_ADMIN will have full access to the system. Make sure you know this person!\r\n                            </Alert> :\r\n                        null\r\n                        }\r\n\r\n                        <Typography variant=\"h6\" style={{marginTop: 48}}>\r\n                            Available roles\r\n                        </Typography>\r\n                        <div className={classes.textField}>\r\n                            {\r\n                                availableRoles.map(row=>{\r\n                                    return (\r\n                                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                                            {row.role} - {row.description}\r\n                                        </Typography>\r\n                                    )\r\n\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        addUser()\r\n                    }}\r\n                >\r\n                    Add user\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\nexport default withStyles(styles)(AddUserDialog)\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UpdateUserDialog from \"../components/UpdateUserDialog\";\r\nimport AddUserDialog from \"../components/AddUserDialog\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    autocomplete: {\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline: \"0\",\r\n        marginBottom: \"4px\"\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Name', isId: true},\r\n    {id: 'surname', numeric: false, disablePadding: false, label: 'Surname', isId: false},\r\n    {id: 'email', numeric: false, disablePadding: false, label: 'Contact email', isId: false},\r\n    {id: 'phoneNumber', numeric: false, disablePadding: false, label: 'Phone number', isId: false},\r\n    {id: 'parsedRoles', numeric: false, disablePadding: false, label: 'Roles', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n];\r\n\r\nfunction Places(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState({});\r\n    const [allRoles, setAllRoles] = useState([])\r\n    const [pageData, setPageData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const {classes} = props;\r\n\r\n    const [openUpdateDialog, setOpenUpdateDialog] = useState(false);\r\n    const [openAddDialog, setOpenAddDialog] = useState(false);\r\n\r\n\r\n    // const {filterQuery} = useContext(PlacesFilterContext)\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n\r\n    useEffect(()=>{\r\n        API.User.getAllRoles().then(roles=>{\r\n            console.log(roles);\r\n            setAllRoles(roles);\r\n        }).catch(error=>{\r\n            addConfig(false, error.message)\r\n        })\r\n    },[]);\r\n\r\n\r\n\r\n    function requestUsers(p = 1, keyword = \"\") {\r\n        getAllUsers(\"\" + \"?p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n    }\r\n\r\n    function parseData(data) {\r\n\r\n        setIsLoading(false);\r\n        let usersData = [];\r\n        data.list.map(row => {\r\n            let rolesList = [];\r\n            row.roles.map(role =>{\r\n                rolesList.push(role.role)\r\n            });\r\n            row.parsedRoles = rolesList.join(',');\r\n            usersData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(usersData);\r\n        console.log(usersData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updatePlaceCallback(id) {\r\n        data.map(row=>{\r\n            if(row.id === id ){\r\n                setSelectedUser(row)\r\n            }\r\n        });\r\n        setOpenUpdateDialog(true)\r\n    }\r\n\r\n    const changePageCallback = (p = 0, keyword = \"\") => {\r\n            setIsLoading(true);\r\n            requestUsers(p, keyword)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n\r\n                {openUpdateDialog ? <UpdateUserDialog open={openUpdateDialog}\r\n                                                      setOpen={setOpenUpdateDialog}\r\n                                                      availableRoles={allRoles}\r\n                                                      setAvailableRoles={setAllRoles}\r\n                                                      userData={selectedUser}/>\r\n                                                      :\r\n                    null\r\n                }\r\n\r\n                {openAddDialog ? <AddUserDialog open={openAddDialog}\r\n                                                availableRoles={allRoles}\r\n                                                setOpen={setOpenAddDialog}/> : null}\r\n\r\n                <TableComponent\r\n                    title={\"Users\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updatePlaceCallback}\r\n                    id={\"id\"}\r\n                    isLoading={isLoading}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={() => {\r\n                                setOpenAddDialog(true)\r\n                        }}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add user\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n            <Button>\r\n                Clear filters\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    function getAllUsers(urlParams = \"\") {\r\n        API.User.getAllUsers(urlParams).then(response=>{\r\n            console.log(response)\r\n                setIsLoading(false);\r\n                parseData(response)\r\n        }).catch(error=>{\r\n                setIsLoading(false);\r\n                console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nPlaces.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Places);\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {getRefreshToken} from \"../helpers/tokens\";\r\nimport API from \"../Networking/API\";\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        let refreshToken = getRefreshToken();\r\n        if(refreshToken !== \"\" && refreshToken !== undefined){\r\n            // console.log(\"Refresh token\", refreshToken)\r\n                API.User.getUserProfile().then(user=>{\r\n                    // console.log(\"Fetched user\", user);\r\n                    setCurrentUser(user);\r\n                    setIsLoading(false)\r\n                }).catch(error=>{\r\n                    console.log(error);\r\n                    setIsLoading(false)\r\n                })\r\n        }else{\r\n            console.log(\"Refresh token is empty. No actions taken.\")\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser,\r\n                setCurrentUser,\r\n                isLoading\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};","import React, { useState, useCallback } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nexport const EditRecommendationContext = React.createContext()\r\n\r\n\r\nexport default function EditRecommendationProvider({ children }) {\r\n    const [config, setConfig] = useState({\r\n        open: false,\r\n        currentlyEditing: undefined,\r\n        rootList: [],\r\n        setRootList: ()=>{}\r\n    });\r\n\r\n    function startEditing(recommendation, rootList, setRootList) {\r\n        let conf = { ...config }\r\n\r\n        conf.open = true\r\n        conf.currentlyEditing = recommendation\r\n\r\n        conf.rootList = rootList\r\n        conf.setRootList = setRootList\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    function removeRecommendation(){\r\n        let conf = { ...config }\r\n        conf.open = false\r\n\r\n        let tempRootList = [...conf.rootList]\r\n        for(let i = 0; i<tempRootList.length; i++){\r\n            console.log(tempRootList[i].id)\r\n            if(tempRootList[i].id === conf.currentlyEditing.id){\r\n                tempRootList.splice(i, 1)\r\n            }\r\n        }\r\n        config.setRootList(tempRootList)\r\n        setConfig(conf)\r\n    }\r\n\r\n    function finishEditing(success=false, removedId= undefined) {\r\n        let conf = { ...config }\r\n        conf.open = false\r\n\r\n        if(removedId !== undefined){\r\n            for(let i = 0; i<conf.currentlyEditing.objects.length; i++){\r\n                if(conf.currentlyEditing.objects[i].id === removedId){\r\n                    conf.currentlyEditing.objects.splice(i, 1)\r\n                }\r\n            }\r\n        }\r\n\r\n        if(success){\r\n            let tempRootList = [...config.rootList]\r\n            for(let i = 0; i<tempRootList.length; i++){\r\n                if(tempRootList[i].id === conf.currentlyEditing.id){\r\n                    tempRootList[i] = conf.currentlyEditing\r\n                    break;\r\n                }\r\n            }\r\n            config.setRootList(tempRootList)\r\n        }\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    function setRecommendation(newRec){\r\n        let conf = { ...config }\r\n        conf.currentlyEditing = newRec\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    return (\r\n        <EditRecommendationContext.Provider value={{\r\n            config,\r\n            startEditing,\r\n            finishEditing,\r\n            removeRecommendation,\r\n            setRecommendation\r\n        }}>\r\n            {children}\r\n        </EditRecommendationContext.Provider>\r\n    );\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {EditRecommendationContext} from \"../../contexts/EditRecommendationContext\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport API from \"../../Networking/API\";\r\nimport {func} from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    recommendedPlaceCard: {\r\n        width: 300,\r\n        height: 300,\r\n        padding: 16,\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        alignContent: 'flex-end',\r\n        zIndex: 999999\r\n    }\r\n\r\n});\r\n\r\nconst RecommendationPlaceSortable = SortableElement(({classes, place, removeObjectFromRecommendation}) => (\r\n    <div className={classes.recommendedPlaceCard}>\r\n        <ApiPlaceCard\r\n            placeData={place}\r\n            renderActionArea={() => {\r\n                return (\r\n                    <div>\r\n                        <IconButton aria-label=\"delete\" onClick={()=>removeObjectFromRecommendation(place.id)}>\r\n                            <DeleteIcon color=\"secondary\" fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </div>\r\n                )\r\n            }\r\n            }\r\n        />\r\n    </div>)\r\n)\r\n\r\nconst RecommendationPlaceSortableContainer = SortableContainer(({classes, config, removeObjectFromRecommendation}) => {\r\n    return (\r\n        <div style={{display:\"flex\", flexDirection: \"row\"}}>\r\n            {config.currentlyEditing.objects.length > 0 ?\r\n\r\n                config.currentlyEditing.objects.map((place, index)=>{\r\n                    delete place.description\r\n\r\n                    return <RecommendationPlaceSortable\r\n                        classes={classes}\r\n                        removeObjectFromRecommendation={removeObjectFromRecommendation}\r\n                        key={place.id}\r\n                        index={index}\r\n                        place={place}\r\n                    />\r\n                }) :\r\n\r\n                <Alert severity=\"info\">This recommendation does not have any objects attached. You can attach\r\n                    Places or Tours by browsing in Places and Tours tables\r\n                </Alert>\r\n            }\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\nfunction EditRecommendationDialog({classes}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const { config, setRecommendation, finishEditing, removeRecommendation } = useContext(EditRecommendationContext)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let recData = {...config.currentlyEditing}\r\n        recData[name] = value\r\n\r\n        setRecommendation(recData)\r\n    };\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        console.log(\"OnSortEnd\")\r\n        let data = { ...config.currentlyEditing }\r\n        data.objects = arrayMove(data.objects, oldIndex, newIndex)\r\n\r\n        setRecommendation(data)\r\n    }\r\n\r\n    function removeObjectFromRecommendation(placeId) {\r\n        addAlertConfig(\"Remove object from recommendation\", \"Are you sure you want to remove this object from recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true)\r\n                API.Recommendation.removePlaceFromRecommendation(\r\n                    {id: placeId,\r\n                        recommendationId: config.currentlyEditing.id,\r\n                        type: config.currentlyEditing.type}\r\n                ).then(()=>{\r\n                    addConfig(true, \"Object removed from recommendation\")\r\n                    finishEditing(true, placeId)\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n\r\n    }\r\n\r\n    function deleteRecommendation(){\r\n        addAlertConfig(\"Remove recommendation\", \"Are you sure you want to remove this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Recommendation.removeRecommendation(config.currentlyEditing.id).then(()=>{\r\n                    addConfig(true, \"Removed recommendation successfully\")\r\n                    removeRecommendation()\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong. Please try again!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n    function constructRecommendationForUpdate(){\r\n        let rec = { ...config.currentlyEditing }\r\n        const objects = []\r\n        config.currentlyEditing.objects.map(row=>{\r\n            objects.push({id: row.id, type: rec.type})\r\n        })\r\n\r\n        rec.objects = objects\r\n\r\n        return rec\r\n    }\r\n\r\n\r\n    function editRecommendation(){\r\n        addAlertConfig(\"Edit recommendation\", \"Are you sure you want to edit this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                const rec = constructRecommendationForUpdate()\r\n                API.Recommendation.updateRecommendation(rec).then(()=>{\r\n                    addConfig(true, \"Updated recommendation successfuly\")\r\n                    finishEditing(true)\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong. Please try again!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    return(\r\n        <Dialog\r\n            open={config.open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{\r\n                finishEditing()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Edit recommendation</DialogTitle>\r\n            <DialogContent>\r\n                {config.currentlyEditing !== undefined ? <div className={classes.root}>\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Title\"\r\n                               name=\"name\"\r\n                               value={config.currentlyEditing['name']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Subtitle\"\r\n                               name=\"subtitle\"\r\n                               value={config.currentlyEditing['subtitle']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Description\"\r\n                               name=\"description\"\r\n                               value={config.currentlyEditing['description']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <div style={{display: \"flex\", flexDirection: 'row', overflowX: 'auto', width: '100%'}}>\r\n                        <RecommendationPlaceSortableContainer\r\n                            removeObjectFromRecommendation={removeObjectFromRecommendation}\r\n                            classes={classes}\r\n                            config={config}\r\n                            axis={'xy'}\r\n                            pressDelay={200}\r\n                            disableAutoscroll={false}\r\n                            onSortEnd={onSortEnd}/>\r\n                    </div>\r\n                </div> : null }\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>finishEditing()}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        editRecommendation()\r\n                    }}\r\n                >\r\n                    Save\r\n                </Button>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={()=>{\r\n                        deleteRecommendation()\r\n                    }}\r\n                >\r\n                    Delete recommendation\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(EditRecommendationDialog)","import React, {useContext, useEffect, useState} from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../Networking/API\";\r\nimport Recommendation from \"../components/recomendation/Recommendation\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport EditRecommendationDialog from \"../components/recomendation/EditRecommendationDialog\";\r\nimport {EditRecommendationContext} from \"../contexts/EditRecommendationContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport debounce from \"lodash/debounce\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        flexWrap: 'wrap',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    left: {\r\n        width: '50%',\r\n        height: '100%',\r\n        padding: 16,\r\n    },\r\n    leftTop:{\r\n        alignItems: 'flex-start',\r\n        height: '10%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    leftContent:{\r\n        padding: 16,\r\n        borderStyle: 'dashed',\r\n        height: '80%',\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    right:{\r\n        width: '50%',\r\n        height: '100%',\r\n        padding: 16,\r\n    },\r\n    rightTop: {\r\n        alignItems: 'flex-start',\r\n        height: '10%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n    rightContent: {\r\n        padding: 16,\r\n        borderStyle: 'dashed',\r\n        height: '80%',\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    }\r\n});\r\n\r\nfunction RecommendationsPage({classes}) {\r\n\r\n    const [recommendations, setRecommendations] = useState([]);\r\n    const [homeRecommendations, setHomeRecommendations] = useState([]);\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [pagingData, setPagingData] = useState({pageNum: 1})\r\n\r\n    const { startEditing } = useContext(EditRecommendationContext)\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    function getRecommendations(page, keywordChange = false) {\r\n        API.Recommendation.getAllRecommendations(\"?full=true&p=\"+page+\"&keyword=\"+keyword).then(response=>{\r\n            if(keywordChange){\r\n                setRecommendations(unique(response.list, homeRecommendations))\r\n            }else{\r\n                setRecommendations(old=>[...old, ...unique(response.list, homeRecommendations)])\r\n            }\r\n\r\n            delete response.list\r\n            setPagingData(response)\r\n        }).catch(()=>{\r\n\r\n        }).finally(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        Promise.all([\r\n            API.Explore.getExplorePage(\"?s=100\"),\r\n            API.Recommendation.getAllRecommendations(\"?full=true\")\r\n        ]).then((responses)=>{\r\n            setHomeRecommendations(responses[0].list)\r\n            setRecommendations(unique(responses[1].list, responses[0].list))\r\n        }).catch(()=>{\r\n\r\n        }).finally(()=>{\r\n            setLoading(false)\r\n        })\r\n\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!loading){\r\n            getRecommendations(1, true)\r\n        }\r\n    }, [keyword])\r\n\r\n    function unique(newList, existingRecommendations){\r\n        const uniqueList = []\r\n        let found = false;\r\n        for(let i = 0; i<newList.length; i++){\r\n            for(let j = 0; j<existingRecommendations.length; j++){\r\n                if(newList[i].id === existingRecommendations[j].id){\r\n                    found = true\r\n                    break;\r\n                }\r\n            }\r\n            if(!found){\r\n                uniqueList.push(newList[i])\r\n            }\r\n            found = false\r\n        }\r\n\r\n\r\n        return uniqueList\r\n    }\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        console.log(\"Handle scroll\")\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollHeight - e.target.scrollTop - scrollOffset)  <= e.target.clientHeight;\r\n        if (bottom && !loading && recommendations.length>0 && pagingData.pageNum<pagingData.pages) {\r\n            setLoading(true);\r\n            console.log(\"Requesting new page\")\r\n            getRecommendations(pagingData.pageNum+1);\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n\r\n    function RecommendationSkeleton(){\r\n        return(\r\n            <div>\r\n                <Skeleton animation='wave' variant=\"rect\" width={200} height={40} />\r\n                <Skeleton animation='wave' variant=\"text\" width={180}/>\r\n                <Skeleton animation='wave' variant=\"text\" width={250}/>\r\n                <div style={{display: 'flex', margin: 16, flexDirection: 'row'}}>\r\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\r\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\r\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\r\n                </div>\r\n                <Skeleton animation='wave' variant=\"text\" width={1000}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    function updateExplorePage() {\r\n        const explorable = []\r\n        homeRecommendations.map(row=>{\r\n            explorable.push(row.id)\r\n        })\r\n\r\n        // setLoading(true)\r\n        API.Explore.updateExplorePage(explorable).then(()=>{\r\n            addConfig(true, \"Updated explore page successfully!\")\r\n\r\n        }).catch(()=>{\r\n            addConfig(false, \"Unexpected error!\")\r\n        }).finally(()=>{\r\n            // setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.left}>\r\n                <div className={classes.leftTop}>\r\n                    <Typography variant=\"h4\">\r\n                        Home recommendations\r\n                    </Typography>\r\n\r\n                    <Button\r\n                        onClick={updateExplorePage}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        Save feed\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className={classes.leftContent}>\r\n                    {loading ? <>\r\n                            <RecommendationSkeleton />\r\n                            <RecommendationSkeleton style={{marginTop: 48}}/>\r\n                        </> :\r\n                        homeRecommendations.length > 0 ?\r\n                        <ReactSortable\r\n                            style={{width: '100%', height: '100%'}}\r\n                            list={homeRecommendations}\r\n                            setList={setHomeRecommendations}\r\n                            animation={150}\r\n                            group=\"cards\"\r\n                            onChange={(order, sortable, evt) => {}}\r\n                            onEnd={evt => {}}\r\n                        >\r\n                            {homeRecommendations.map(rec => (\r\n                                <Recommendation\r\n                                    key={rec.id}\r\n                                    recommendation={rec}\r\n                                    onEditCallback={()=> {\r\n                                        startEditing(rec, homeRecommendations, setHomeRecommendations)\r\n                                    }}\r\n                                />\r\n                            ))}\r\n                        </ReactSortable> : <Alert style={{marginTop: 48}} severity=\"info\">No recommendations are put in home tab. Click and Drag existing recommendations from right side.</Alert>\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={classes.right}>\r\n                <div className={classes.rightTop}>\r\n                    <Typography variant=\"h4\">\r\n                        Existing recommendations\r\n                    </Typography>\r\n\r\n                </div>\r\n                <div className={classes.rightContent} onScroll={handleScroll}>\r\n                    <TextField id=\"standard-search\" label=\"Search\" value={keyword} type=\"search\" onChange={e=>{\r\n                        setKeyword(e.target.value)\r\n                    }} />\r\n                    {loading ? <>\r\n                       <RecommendationSkeleton />\r\n                       <RecommendationSkeleton style={{marginTop: 16}}/>\r\n                    </> :\r\n                        recommendations.length > 0 ?\r\n\r\n                           <ReactSortable\r\n                           style={{width: '100%', height: '100%'}}\r\n                           list={recommendations}\r\n                           setList={setRecommendations}\r\n                           animation={150}\r\n                           group=\"cards\"\r\n                           onChange={(order, sortable, evt) => {}}\r\n                           onEnd={evt => {}}\r\n                           >\r\n                           {recommendations.map(rec => (\r\n                               <Recommendation\r\n                                   onEditCallback={()=>{\r\n                                       startEditing(rec, recommendations, setRecommendations)\r\n                                   }}\r\n                                   key={rec.id}\r\n                                   recommendation={rec}/>\r\n                           ))}\r\n                           </ReactSortable> :  <Alert style={{marginTop: 48}} severity=\"info\">Currently there are no available recommendations.</Alert>\r\n                       }\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <EditRecommendationDialog />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(RecommendationsPage);\r\n","import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Home from \"../pages/Home\";\r\nimport Places from \"../pages/Places\";\r\nimport AddPlace from \"../pages/AddPlace\";\r\nimport history from \"../helpers/history\";\r\nimport ApiPlaces from \"../pages/ApiPlaces\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport NotFoundPage from \"../pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nimport Tour from \"./tour_components/Tour\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport Tours from \"../pages/Tours\";\r\nimport Resources from \"./Resources\";\r\nimport {PlacesFilterProvider} from \"../contexts/PlacesFilterContext\";\r\nimport ManageUsers from \"../pages/ManageUsers\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport API from \"../Networking/API\";\r\nimport {AuthContext} from \"../contexts/AuthContext\";\r\nimport RecommendationsPage from \"../pages/RecommendationsPage\";\r\nimport EditRecommendationProvider, {EditRecommendationContext} from \"../contexts/EditRecommendationContext\";\r\nimport AppStateStorageProvider from \"../contexts/AppStateStorageContext\";\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root1: {\r\n        overflow: \"hidden\",\r\n        display: 'flex',\r\n        height: \"100vh\",\r\n        background: \"#F1F1F1\"\r\n    },\r\n    appBar: {\r\n        height: \"64px\",\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        //padding: theme.spacing(3),\r\n        // transition: theme.transitions.create('margin', {\r\n        //     easing: theme.transitions.easing.sharp,\r\n        //     duration: theme.transitions.duration.leavingScreen,\r\n        // }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        // transition: theme.transitions.create('margin', {\r\n        //     easing: theme.transitions.easing.easeOut,\r\n        //     duration: theme.transitions.duration.enteringScreen,\r\n        // }),\r\n        marginLeft: 0\r\n    },\r\n}));\r\n\r\n// const PlacesWithContext = () =>  (\r\n//     <AppStateStorageProvider>\r\n//         <Places/>\r\n//     </AppStateStorageProvider>\r\n// );\r\n\r\nconst TourWithContext = (props) =>  (\r\n    <PlacesFilterProvider>\r\n        <Tour {...props}/>\r\n    </PlacesFilterProvider>\r\n);\r\n\r\nconst RecommendationsWithContext = (props) =>  (\r\n    <EditRecommendationProvider>\r\n        <RecommendationsPage {...props}/>\r\n    </EditRecommendationProvider>\r\n);\r\n\r\n\r\nexport default function Appbar(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const { title, setTitle } = UseAppBarTitleContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    let location = useLocation();\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleListItemClick = (url,title) =>{\r\n        handleDrawerClose();\r\n        setTitle(title);\r\n\r\n        let re = new RegExp(url+'([0-9]*)?');\r\n        if(re.test(location.pathname)){\r\n            history.push(url);\r\n            history.go(0);\r\n        }\r\n    };\r\n\r\n    function handleLogout() {\r\n        addAlertConfig(\"Logout\", \"Are you sure you want to logout\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                localStorage.removeItem(\"access_token\");\r\n                localStorage.removeItem(\"refresh_token\")\r\n                history.push(\"/login\")\r\n            }\r\n        }])\r\n    }\r\n\r\n    const hasPermission = (perm) => {\r\n        return currentUser != null && currentUser.permissions.some(permission => permission.permission === perm)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root1}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <Typography variant=\"h6\" style={{width: \"100%\"}}>\r\n                        {currentUser != null ? currentUser.name : \"Loading user profile\"}\r\n                    </Typography>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button component={Link} to=\"/app/home\" onClick={()=>handleListItemClick(\"/app/home\",\"Home\")}>\r\n                        <ListItemText>Home</ListItemText>\r\n                    </ListItem>\r\n                    <Divider light />\r\n                    <ListItem button component={Link} to=\"/app/places\" onClick={()=>handleListItemClick(\"/app/places\",\"Places\")} >\r\n                        <ListItemText>Places</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/tours\" onClick={()=>handleListItemClick(\"/app/tours\",\"Tours\")} >\r\n                        <ListItemText>Tours</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/recommendations\" onClick={()=>handleListItemClick(\"/app/recommendations\",\"Recommendations\")} >\r\n                        <ListItemText>Recommendations</ListItemText>\r\n                    </ListItem>\r\n                    {/*<ListItem button component={Link} to=\"/app/apiplaces\" onClick={()=>handleListItemClick(\"/app/apiplaces\",\"Api places\")} >*/}\r\n                    {/*    <ListItemText>Explore API places</ListItemText>*/}\r\n                    {/*</ListItem>*/}\r\n                    { hasPermission(\"place:insert\") &&\r\n                        <ListItem button component={Link} to=\"/app/addplace\" onClick={()=>handleListItemClick(\"/app/addplace\",\"Add Place\")} >\r\n                            <ListItemText>Add place</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    { hasPermission(\"tour:modify\") &&\r\n                        <ListItem button component={Link} to=\"/app/addtour\"\r\n                                  onClick={() => handleListItemClick(\"/app/addtour\", \"Add tour\")}>\r\n                            <ListItemText>Add tour</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    <ListItem button component={Link} to=\"/app/resources\" onClick={()=>handleListItemClick(\"/app/resources\",\"Manage resources\")} >\r\n                        <ListItemText>Resources</ListItemText>\r\n                    </ListItem>\r\n                    { hasPermission(\"role:manage\") &&\r\n                        <ListItem button component={Link} to=\"/app/users\" onClick={()=>handleListItemClick(\"/app/users\",\"Manage users\")} >\r\n                            <ListItemText>Manage users</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    <Divider light />\r\n                    <ListItem button onClick={()=>handleLogout()} >\r\n                        <ListItemText>Logout</ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                <Switch>\r\n                    <Route exact path=\"/app/home\" component={Home} />\r\n                    <Route path=\"/app/places\" component={Places} />\r\n                    <Route path=\"/app/tours\" component={Tours} />\r\n                    <Route path=\"/app/addplace/:placeId?\" component={AddPlace} />\r\n                    <Route path=\"/app/recommendations\" component={RecommendationsWithContext} />\r\n                    <Route path=\"/app/addtour/:tourId?\" component={TourWithContext} />\r\n                    <Route path=\"/app/resources\" component={Resources} />\r\n                    <Route path=\"/app/users\" component={ManageUsers} />\r\n                    <Redirect from=\"*\" to=\"/404\"/>\r\n                </Switch>\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport Appbar from './components/Appbar.js';\r\nimport AppBarTitleProvider from \"./contexts/AppBarTitleContext\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <AppBarTitleProvider>\r\n                        <Appbar />\r\n                    </AppBarTitleProvider>\r\n                    </MuiPickersUtilsProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default App;","import React, {useContext, useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport history from \"../helpers/history\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {AuthContext} from \"../contexts/AuthContext\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {isAuthenticated} from \"../helpers/tokens\";\r\nimport API from \"../Networking/API\";\r\nimport {func} from \"prop-types\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n                Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    loaderMain: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        alignItems:\"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"red\"\r\n    }\r\n}));\r\n\r\nexport default function LoginPage() {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setIsLoading] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n    const { currentUser, setCurrentUser } = useContext(AuthContext);\r\n\r\n    const handleLogin = () =>{\r\n        setIsLoading(true);\r\n        console.log(\"handleLogin\", {identifier: email, password: password});\r\n        API.Auth.login({identifier: email, password: password}).then(response=>{\r\n            if(!checkAccess(response.authorities)){\r\n                addConfig(false, \"Only admins and editors can access admin panel!\")\r\n                setIsLoading(false);\r\n                return\r\n            }\r\n            setIsLoading(false);\r\n            localStorage.setItem(\"access_token\", response.access_token);\r\n            localStorage.setItem(\"refresh_token\", response.refresh_token);\r\n            API.User.getUserProfile().then(response=>{\r\n                console.log(\"User profile:\", response);\r\n                setCurrentUser(response);\r\n                history.push(\"/app/home\");\r\n            }).catch(error=>{\r\n                setIsLoading(false);\r\n                addConfig(false, error.message)\r\n            });\r\n        }).catch(error=>{\r\n            setIsLoading(false);\r\n            addConfig(false, error.message)\r\n        });\r\n    };\r\n\r\n    function checkAccess(roles){\r\n        var hasAccess = false\r\n        roles.map(row=>{\r\n            console.log(row)\r\n            if(row.authority === \"ROLE_ADMIN\"){\r\n                hasAccess = true\r\n            }\r\n        });\r\n        return hasAccess\r\n    }\r\n\r\n    if (isAuthenticated()) {\r\n        return <Redirect to=\"/app\" />;\r\n    }\r\n\r\n    const handleKeyPress = (event) =>{\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            handleLogin();\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    return <Container component=\"main\" maxWidth=\"xs\" onKeyPress={(e)=>handleKeyPress(e)}>\r\n\r\n                            {loading && <LinearProgress />}\r\n                            <CssBaseline />\r\n                            <div className={classes.paper}>\r\n                                <Avatar className={classes.avatar}>\r\n                                    <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <Typography component=\"h1\" variant=\"h5\">\r\n                                    Sign in\r\n                                </Typography>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={email}\r\n                                    onChange={(e)=>{setEmail(e.target.value)}}\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    autoFocus\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    value={password}\r\n                                    onChange={(e)=>{setPassword(e.target.value)}}\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                                <Button\r\n                                    onClick={()=>{handleLogin()}}\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    Sign In\r\n                                </Button>\r\n                            </div>\r\n                            <Box mt={8}>\r\n                                <Copyright />\r\n                            </Box>\r\n                        </Container>\r\n\r\n}","import Route from \"react-router-dom/es/Route\";\r\nimport React, {useContext} from \"react\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {isAuthenticated} from \"../helpers/tokens\";\r\n\r\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                isAuthenticated() === true ? (\r\n                    <Component {...routeProps} />\r\n                ) : (\r\n                    <Redirect to={\"/login\"} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\n\r\nexport default function SnackbarFeedback(props){\r\n\r\n    const { config, removeConfig } = UseSnackbarContext();\r\n\r\n    return(\r\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\r\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"error\") : \"\"}>\r\n                {!!config && config.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\"\r\n\r\nconst AlertDialogFeedback = () => {\r\n\r\n    const {alertConfig, removeAlertConfig} = UseAlertDialogContext();\r\n\r\n    function remove() {\r\n        if(alertConfig.onClose !== undefined){\r\n            alertConfig.onClose()\r\n        }\r\n        removeAlertConfig()\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={!!alertConfig}\r\n            onClose={remove}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{!!alertConfig ? alertConfig.title : \"\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {!!alertConfig ? alertConfig.message : \"\"}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={remove}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                {!!alertConfig && alertConfig.actions.map(row=>{\r\n                    return <Button onClick={()=>{\r\n                        remove();\r\n                        row.action();\r\n                    }}\r\n                    color=\"primary\"\r\n                    >\r\n                            {row.name}\r\n                    </Button>\r\n                })}\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\n\r\nexport default AlertDialogFeedback\r\n","import Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\r\n\r\n\r\nexport const TextInputDialog = () => {\r\n\r\n    const {dialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen} = UseEditDialogContext();\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [error, setError] = useState(0)\r\n\r\n    const deInit = () => {\r\n        setError(0)\r\n        setDialogOpen(false)\r\n        setInputText(\"\")\r\n    }\r\n\r\n    const handleClose = () => {\r\n        deInit()\r\n    }\r\n\r\n    const handleDone = () => {\r\n        let errorCode = dialogConfig.validateInput(inputText)\r\n        setError(errorCode)\r\n        if(errorCode !== 0) return\r\n\r\n        if(dialogConfig.onDoneCallback !== undefined)\r\n            dialogConfig.onDoneCallback(inputText)\r\n        deInit()\r\n    }\r\n    const handleInput = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={dialogOpen} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n                <DialogTitle id=\"form-dialog-title\">{dialogConfig.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {dialogConfig.explanation}\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        helperText={error !== 0 && dialogConfig.errorMessages[error] !== null ? dialogConfig.errorMessages[error] : \"\"}\r\n                        error={error !== 0}\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        onInput={handleInput}\r\n                        label={dialogConfig.textFieldLabel}\r\n                        defaultValue={dialogConfig.defaultText}\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleDone} color=\"primary\">\r\n                        Done\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport history from \"./helpers/history\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport {Router, Route, Link, Switch} from \"react-router-dom\";\r\nimport {AuthenticatedRoute} from \"./components/AuthenticatedRoute\";\r\nimport NotFoundPage from \"./pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\r\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\r\nimport AlertDialogProvider from \"./contexts/AlertDialogContext\";\r\nimport AlertDialogFeedback from \"./components/feedback/AlertDialogFeedback\";\r\nimport {AuthProvider} from \"./contexts/AuthContext\";\r\nimport {PlacesFilterProvider} from \"./contexts/PlacesFilterContext\";\r\nimport EditDialogProvider from \"./contexts/EditDialogContext\";\r\nimport {TextInputDialog} from \"./components/feedback/TextInputDialog\";\r\nimport LoadingScreen from \"./components/LoadingScreen\";\r\nimport AppStateStorageProvider from \"./contexts/AppStateStorageContext\";\r\n\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <AppStateStorageProvider>\r\n            <AuthProvider>\r\n                <Router history={history}>\r\n                    <SnackbarProvider>\r\n                        <AlertDialogProvider>\r\n                            <EditDialogProvider>\r\n                                <SnackbarFeedback/>\r\n                                <AlertDialogFeedback/>\r\n                                <TextInputDialog/>\r\n                                <PlacesFilterProvider>\r\n                                    <Switch>\r\n                                        <Redirect exact from=\"/\" to=\"/login\"/>\r\n                                        <Redirect exact from=\"/app\" to=\"/app/home\"/>\r\n                                        <AuthenticatedRoute path=\"/app\" component={App}/>\r\n                                        <Route path=\"/login\" component={LoginPage}/>\r\n                                        <Route path=\"*\" component={NotFoundPage}/>\r\n                                        <Redirect from=\"*\" to=\"/404\"/>\r\n                                    </Switch>\r\n                                </PlacesFilterProvider>\r\n                            </EditDialogProvider>\r\n                        </AlertDialogProvider>\r\n                    </SnackbarProvider>\r\n                </Router>\r\n            </AuthProvider>\r\n        </AppStateStorageProvider>\r\n\r\n    </React.Fragment>\r\n    , document.getElementById('root'));\r\n"],"sourceRoot":""}