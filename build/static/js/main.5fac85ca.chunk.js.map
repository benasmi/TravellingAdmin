{"version":3,"sources":["res/selectedTourIcon.svg","res/selectedParking.svg","res/availableParking.svg","pages/Home.js","components/TableComponent.js","helpers/debounce.js","helpers/history.js","helpers/tokens.js","Networking/NetworkLayerCentral.js","Networking/API.js","contexts/AlertDialogContext.js","contexts/UseAlertDialogContext.js","helpers/stringResources.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","components/AutocompleteChip.js","contexts/PlacesFilterContext.js","components/add_place_components/FilterBlock.js","pages/Places.js","helpers/priceRange.js","helpers/averageTimeSpent.js","components/AddSourceDialog.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/maps/MapGeolocation.js","components/maps/MapToolbar.js","components/maps/MapLock.js","components/maps/CustomControlsManager.js","components/maps/PlaceMap.js","components/add_place_components/PlaceLocation.js","components/maps/ParkingMap.js","components/add_place_components/ParkingLocation.js","contexts/EditDialogContext.js","contexts/UseEditDialogContext.js","components/add_place_components/PlaceDiscovery.js","components/ReviewCard.js","components/add_place_components/Reviews.js","contexts/AppBarTitleContext.js","contexts/UseAppBarTitleContext.js","components/recomendation/AddRecommendationDialog.js","components/recomendation/RecommendationListDialog.js","components/ApiPlaceCard.js","components/recomendation/Recommendation.js","components/schedule_components/WorkingShift.js","components/schedule_components/WorkingHoursVariant.js","components/schedule_components/ScheduleWorkingHours.js","components/schedule_components/Schedule.js","components/schedule_components/SchedulesContainer.js","pages/AddPlace.js","components/SearchInputComponent.js","pages/ApiPlaces.js","pages/NotFoundPage.js","components/tour_components/TourPlaceComponent.js","components/tour_components/TransportItem.js","components/tour_components/TourPlacesWrapper.js","components/tour_components/PlaceSearch.js","components/tour_components/DayCard.js","components/tour_components/DaysWrapper.js","components/tour_components/TourReducer.js","components/tour_components/TourInfoComponent.js","components/tour_components/TourMap.js","components/tour_components/Tour.js","pages/Tours.js","components/AddDialog.js","components/Resources.js","components/UpdateUserDialog.js","components/AddUserDialog.js","pages/ManageUsers.js","contexts/AuthContext.js","contexts/EditRecommendationContext.js","components/recomendation/EditRecommendationDialog.js","pages/RecommendationsPage.js","components/Appbar.js","App.js","pages/LoginPage.js","components/AuthenticatedRoute.js","components/feedback/SnackbarFeedback.js","components/feedback/AlertDialogFeedback.js","components/feedback/TextInputDialog.js","index.js"],"names":["module","exports","withStyles","theme","button","margin","spacing","input","display","props","classes","descendingComparator","a","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","checkable","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","customToolbarElements","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","style","alignItems","TextField","target","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","centerCell","textAlign","rowNotPublished","rowNotVerified","rowBasic","TableComponent","searchFunction","pagingInfo","data","updateCallback","removeCallback","isLoading","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","filter","item","undefined","slice","row","isItemSelected","indexOf","labelId","rowStyle","hover","rowId","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckboxChange","header","isId","scope","e","stopPropagation","preventDefault","fontSize","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","pageNum","onChangePage","newPage","onChangeRowsPerPage","parseInt","console","log","history","getAccessToken","localStorage","getItem","getRefreshToken","isAuthenticated","request","options","contentType","authorize","client","axios","create","baseURL","headers","interceptors","response","use","error","originalRequest","config","url","status","code","Promise","reject","removeItem","push","startsWith","_retry","API","Auth","refreshToken","then","token","access_token","Authorization","setItem","catch","err","onSuccess","onError","debug","message","RequestType","getRequest","path","urlData","method","postRequest","postMultipartRequest","formData","Explore","getExplorePage","updateExplorePage","Recommendation","removeRecommendation","updateRecommendation","removePlaceFromRecommendation","addObjectToRecommendation","getAllRecommendations","urlParams","createRecommendation","User","setRoles","getAllRoles","getAllUsers","getUserProfile","register","login","Tour","insertTour","getTour","updateTour","getAllToursAdmin","removeTour","getTourCategories","updateTourCategories","SourcePlace","updateSourcesForPlace","Source","getSources","addSource","Places","getClosesPlacesAdmin","getAllCities","getAllCounties","getAllCountries","getAllMunicipalities","getAllPlaces","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","removePlace","Tags","getAllTags","addTag","params","removeTags","updateTags","Categories","addCategory","getAllCategories","removeCategory","updateCategory","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","Reviews","getPlaceReviews","AlertDialogContext","createContext","alertConfig","addAlertConfig","removeAlertConfig","AlertDialogProvider","children","setAlertConfig","contextValue","actions","onClose","Provider","UseAlertDialogContext","useContext","Strings","DIALOG_PLACE_PUBLISH_TITLE","DIALOG_PLACE_PUBLISH_MESSAGE","DIALOG_PLACE_UNPUBLISH_MESSAGE","DIALOG_PLACE_INSERT_TITLE","DIALOG_PLACE_INSERT","DIALOG_PLACE_UPDATE_TITLE","DIALOG_PLACE_UPDATE","DIALOG_PLACE_VERIFY_TITLE","DIALOG_PLACE_VERIFY_MESSAGE","DIALOG_PLACE_DELETE_TITLE","DIALOG_PLACE_DELETE_MESSAGE","DIALOG_TOUR_DELETE_TITLE","DIALOG_TOUR_DELETE_MESSAGE","SNACKBAR_PLACE_INSERTED_SUCCESS","SNACKBAR_PLACE_REMOVE_SUCCESS","SNACKBAR_TOUR_INSERTED_SUCCESS","SNACKBAR_TOUR_REMOVE_SUCCESS","SNACKBAR_ERROR","SNACKBAR_CHANGES_SAVED","SnackbarContext","addConfig","removeConfig","SnackbarProvider","setConfig","success","UseSnackbarContext","autoComplete","chip","justifyContent","flexWrap","listStyle","autoCompleteChipContainer","setOptions","selectedOptions","setSelectedOptions","initialData","setInitialData","getCurrentVal","setCurrentVal","firstLoad","setFirstLoad","handleDelete","found","row1","JSON","stringify","Box","option","Chip","onDelete","Autocomplete","disableClearable","getOptionLabel","renderInput","PlacesFilterContext","buildUrl","require","initialDates","insertionStart","moment","Date","format","insertionEnd","add","modificationStart","modificationEnd","PlacesFilterProvider","categories","setCategories","selectedCategories","setSelectedCategories","cities","setCities","selectedCities","setSelectedCities","countries","setCountries","selectedCountries","setSelectedCountries","municipalities","setMunicipalities","selectedMunicipalities","setSelectedMunicipalities","counties","setCounties","selectedCounties","setSelectedCounties","initialLoading","setInitialLoading","resetFilterOptions","setResetFilterOptions","filterLabel","filterName","filterOptions","setFilterOptions","dates","setDates","queryParams","di","dm","parseFilterOptions","parseCategories","filterQuery","setFilterQuery","getCategories","restrictions","res","cats","countryRestrictions","munRestrictions","all","filterOptionsCleared","areFiltersCleared","o","c","filterDiv","flexDirection","sortingButtons","rightLayout","boxShadow","datesLayout","flexGrow","setOpen","filterDateChange","date","cDate","Object","assign","Grid","container","xs","sm","FormControlLabel","control","generalOptions","filterOptionsChanged","AutocompleteChip","justify","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","Button","marginTop","filters","clearFilters","buttonsDiv","content","breakpoints","down","up","autocomplete","borderBottom","outline","setData","pageData","setPageData","setIsLoading","getPlaceNameById","i","placeId","requestAllPlaces","p","parseData","placesData","list","action","tmp","startIcon","priceRange","averageTimeSpent","closeButton","right","grey","open","setDialogOpen","setText","setUrl","setError","Dialog","fullWidth","DialogTitle","DialogContent","dividers","ev","DialogActions","autoFocus","validateInput","placeInfo","setPlaceInfo","selectedSources","setSelectedSources","updatePlaceInfo","newValue","place","valuetext","setAvailableSources","dialogOpen","availableSources","val","required","placeholder","InputLabelProps","shrink","multiline","rows","Slider","marginLeft","defaultValue","getAriaValueText","step","max","marks","FormControl","InputLabel","Select","native","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","pressDelay","disableAutoscroll","onSortEnd","oldIndex","newIndex","arrayMove","axis","acceptedFileFormats","dropzoneArea","onCloseCallback","onFinishCallback","loading","selectedFiles","setSelectedFiles","acceptedFiles","maxFileSize","showAlerts","dropzoneProps","disabled","filesLimit","onDrop","files","existingFiles","file","existingFile","imagefile","FormData","append","finally","addImageDialogOpen","setAddImageDialogOpen","handleAddPhoto","Geocode","setApiKey","geocodeFromLatLng","newLat","newLng","fromLatLng","address","results","formatted_address","addressArray","address_components","city","types","long_name","getCity","country","getCountry","county","getCounty","municipality","getMunicipality","latitude","longitude","isLocked","locationCallback","errorParsingLocation","handleKeyPress","which","keyCode","test","fromAddress","geometry","location","lat","lng","loc","split","parseFloat","onKeyPress","onPlaceSelected","navigator","geolocation","getCurrentPosition","coords","alert","setIsLocked","Switch","old","Alert","severity","CustomControlsManager","context","window","google","maps","ControlPosition","TOP_LEFT","MAP","controlDiv","document","createElement","controls","removeAt","createPortal","contextTypes","PropTypes","object","MapComponent","withGoogleMap","defaultZoom","ref","refInstance","center","defaultCenter","largeIcon","locationMarker","setLocationMarker","setParkingLocationMarker","otherPlacesData","setOtherPlacesData","infoWindows","setInfoWindows","refMap","useRef","s","range","l","Fragment","loadingElement","containerElement","mapElement","zIndex","icon","scaledSize","Size","origin","Point","markers","onCloseClick","Avatar","alt","visible","draggable","onDragEnd","latLng","BOTTOM_CENTER","mapCenter","current","getCenter","locationData","setLocationData","setParkingLocation","changeLocationData","setMainInfoWindow","onMarkerDragEnd","setPosition","mainInfoWindow","parking","parkingData","calcCrow","nearestParkingCount","addNewParking","parkingIsAttached","selectedParkingData","parkingId","anchor","parkingInfoWindows","setParkingInfoWindows","addExistingParking","lat1","lon1","lat2","lon2","dLat","toRad","dLon","sin","cos","atan2","sqrt","Value","PI","ParkingMap","setParkingData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","SortableItem","elevation","SortableList","oldArray","EditDialogContext","dialogConfig","addEditDialogConfig","removeEditDialogConfig","defaultOptions","errorMessages","explanation","onDoneCallback","textFieldLabel","defaultText","EditDialogProvider","setDialogConfig","UseEditDialogContext","selectedTags","setSelectedTags","availableCategories","setAvailableCategories","availableTags","setAvailableTags","tagName","newTag","tagId","1","2","categoryName","newCat","categoryId","marginRight","ReviewCard","review","CardContent","photoUrl","surname","Rating","rating","readOnly","upvotes","timeAdded","reviewsInfo","reviews","overflowX","setReviews","anchorEl","setAnchorEl","Boolean","filterBy","setFilterBy","getReviewsForPlace","debounceScroll","debounce","round","scrollWidth","scrollLeft","clientWidth","totalReviews","handleScrollDebounced","handleClose","overallStarRating","precision","aria-describedby","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","RadioGroup","Radio","onScroll","persist","handleScroll","AppBarTitleContext","setTitle","AppBarTitleProvider","UseAppBarTitleContext","textField","formControl","addCallback","subtitle","description","setLoading","dataChanged","recData","addRecommendation","errors","hasErrors","checkErrors","insertedData","maxWidth","FormLabel","objectId","recommendations","setRecommendations","pagingData","setPagingData","showAddNewRecommendation","setShowAddNewRecommendation","getRecommendations","keywordChange","scrollHeight","scrollTop","clientHeight","pages","List","overflowY","maxHeight","ListItem","rec","recommendationId","ListItemIcon","ListItemText","Divider","recommendation","unshift","CategoriesDisplay","SubheaderDisplay","media","expand","transform","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","renderActionArea","CardHeader","subheader","substring","website","RecommendationType","paperContent","onEditCallback","objects","intervalContainer","pickerStyle","scheduleData","setScheduleData","scheduleOpenIndex","variantId","enableLastAccommodation","currentSchedule","currentVariant","variants","find","x","elementId","shifts","shift","lastShift","firstShift","TimePicker","ampm","openTime","shiftId","time","oldData","newData","closeTime","lastAccommodation","pop","shiftToPush","shortid","generate","weekdays","fullName","weekdayPickerContainer","weekdayButton","minHeight","removeButtonContainer","weekdayPicker","weekDayIndex","dayActive","days","some","day","newScheduleData","includes","splice","WorkingShift","findIndex","generateDefaultPeriod","weekdayButtonContainer","pickerInput","schedule","setSchedule","dayIndex","periods","period","openDay","splitSchedule","minutesStep","InputProps","changeOpenTime","changeCloseTime","lastperiod","orientation","flexItem","schedules","newSchedules","scheduleDateContainer","setScheduleOpenIndex","seasonalScheduleEnabled","DatePicker","views","from","to","defaultScheduleData","tabContainer","tabsLayout","addScheduleButtonContainer","setSeasonalScheduleEnabled","isScheduleEnabled","setIsScheduleEnabled","setLastAccommodation","Tabs","indicatorColor","textColor","Tab","state","enabled","loader","bottom","match","phoneNumber","isPublic","isVerified","source","price","parkingMarkerData","setParkingMarkerData","sources","setSources","setPlaceId","firstTimeLoading","setFirstTimeLoading","showRecommendationDialog","setShowRecommendationDialog","ColorButton","green","formFeedback","saveChanges","formPlaceInfo","plc","updateAll","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","updateSources","newSchedule","newPeriod","subtract","closeDay","scheduleDefault","er","hasSchedule","minutes","tags","setAllData","responses","basicPlaceInfo","useMemo","placePhotos","placeLocation","parkingLocation","placeDiscovery","scheduleContainer","CircularProgress","obj","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debouncedInput","InputBase","topBar","searchBox","placeApiCard","isLoadingData","setIsLoadingData","word","query","encodeURI","elementType","isFitWidth","disableImagesLoaded","updateOnEachImageLoad","boxSizing","Copyright","getFullYear","footer","cardRoot","only","details","cover","flexFlow","addParkingWrapper","elementData","addTransportCallback","displayNoTransportWarning","transportTypes","transportSelectWrapper","transportSelect","transportId","transportChangeCallback","transportRemoveCallback","currentTransport","setCurrentTransport","NativeSelect","transport","TourPlaceSortable","removePlaceCallback","tourPlaceComponent","TransportItemSortable","currentDay","removeElementCallback","tourInfo","shouldDisplayNoTransportWarning","elements","tour","ElementType","elementIdentifier","tourInfoReducer","errorInfo","setErrorInfo","searchInputComponent","placeCard","addPlaceCallback","setApiPlacesFound","apiPlacesFound","localPlacesFound","setLocalPlacesFound","localPlacesLoading","setLocalPlacesLoading","placeType","mappedPlaces","forEach","generatePlaceCards","radioButtonArea","cardArea","descriptionInput","headerWrap","onSelectCallback","handleRemoveDay","updateDescriptionGlobally","DayCardSortable","dayInfo","removeDayCallback","addDayButton","footerWrapper","setCurrentDay","removeDay","TourDataReducer","nameField","descriptionField","publicityDiv","tourId","titleMissing","shouldDisplayTitleMissingError","showErrors","helperText","isPublished","MyMapComponent","addPlace","directions","setDirection","directionPlaces","setDirectionPlaces","places","setPlaces","placesInfoWindows","setPlacesInfoWindows","loadingArea","setLoadingArea","fetchPlaces","locations","Array","fill","PlacesMarkers","constructPlaceData","waypoints","stopover","destination","DirectionsService","route","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","searchAreaComponent","TOP_CENTER","suppressMarkers","marker","labelOrigin","info","sampleTourData","leftLayout","actionsArea","setTourId","recommendationsDialogOpen","setRecommendationsDialogOpen","useReducer","dispatchTourInfo","handleAddPlaceClick","loadData","aggregatedDays","aggregatedElements","aggregatedPlace","fk_transportId","aggregatedDay","aggregatedTour","parseTourInfoResponse","handleSave","containsErrors","keys","keyIndex","element","j","dayInfoWithoutDesc","dayCopy","mapComponent","tourDaysComponents","useTheme","largeScreen","useMediaQuery","getAllTours","handleClick","fq","join","categoriesHeadCells","tagsHeadCells","buttonWrapper","setTags","UpdateUserDialog","userData","availableRoles","setAvailableRoles","selectedRoles","setSelectedRoles","roles","roleId","userId","password","email","user","setUser","userDataChanged","addUser","medium","userTmp","FormHelperText","gutterBottom","selectedUser","setSelectedUser","allRoles","setAllRoles","openUpdateDialog","setOpenUpdateDialog","openAddDialog","setOpenAddDialog","requestUsers","usersData","rolesList","parsedRoles","AuthContext","AuthProvider","currentUser","setCurrentUser","EditRecommendationContext","EditRecommendationProvider","currentlyEditing","rootList","setRootList","startEditing","conf","finishEditing","removedId","tempRootList","setRecommendation","newRec","RecommendationPlaceSortable","removeObjectFromRecommendation","recommendedPlaceCard","RecommendationPlaceSortableContainer","alignContent","editRecommendation","constructRecommendationForUpdate","leftTop","leftContent","borderStyle","rightTop","rightContent","homeRecommendations","setHomeRecommendations","unique","newList","existingRecommendations","uniqueList","RecommendationSkeleton","Skeleton","animation","explorable","setList","group","sortable","evt","onEnd","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","TourWithContext","RecommendationsWithContext","Appbar","useLocation","handleDrawerClose","handleListItemClick","RegExp","pathname","go","hasPermission","perm","permissions","permission","CssBaseline","AppBar","edge","Drawer","Link","exact","Home","Tours","AddPlace","Resources","ManageUsers","Redirect","App","Component","form","submit","loaderMain","AuthenticatedRoute","rest","Route","render","routeProps","SnackbarFeedback","Snackbar","autoHideDuration","AlertDialogFeedback","remove","DialogContentText","TextInputDialog","inputText","setInputText","deInit","onInput","errorCode","ReactDOM","setEmail","setPassword","handleLogin","identifier","hasAccess","authority","checkAccess","authorities","refresh_token","Container","mt","getElementById"],"mappings":"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","file":"static/js/main.5fac85ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/selectedTourIcon.127fd3ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/selectedParking.102bdd14.svg\";","module.exports = __webpack_public_path__ + \"static/media/availableParking.6ac3f9ec.svg\";","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    }\r\n});\r\n\r\n\r\n\r\nconst Home = props => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport useDebounce from \"../helpers/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, checkable} = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n\r\n                {checkable ? <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell> : null}\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right'  : 'left' }\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    headCells: PropTypes.object.isRequired,\r\n    checkable: PropTypes.bool.isRequired\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected, title, changePageCallback, keyword, setKeyword, customToolbarElements} = props;\r\n\r\n\r\n    const debouncedSearch = useDebounce(keyword, 300);\r\n\r\n\r\n    useEffect( () => {\r\n            changePageCallback(1,keyword)\r\n        },\r\n        [debouncedSearch]\r\n    );\r\n\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n            )}\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"delete\">\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : <div style={{display: \"flex\", alignItems: \"center\"}}>\r\n                <TextField id=\"standard-basic\" label=\"Search\" onChange={ event =>{setKeyword(event.target.value)}}/>\r\n                {!!customToolbarElements ? customToolbarElements : null}\r\n            </div>}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    centerCell: {\r\n        textAlign: \"center\",\r\n        width: '100%'\r\n    },\r\n    rowNotPublished:{\r\n        backgroundColor: \"#ffcdd2\"\r\n    },\r\n    rowNotVerified:{\r\n        backgroundColor: \"#fff9c4\"\r\n    },\r\n    rowBasic: {\r\n        backgroundColor: \"#FFFFFF\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function TableComponent({title, searchFunction, headCells, pagingInfo, data, checkable, changePageCallback, updateCallback, removeCallback, id, isLoading, customToolbarElements}) {\r\n\r\n    TableComponent.propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        headCells: PropTypes.object.isRequired,\r\n        pagingInfo: PropTypes.object,\r\n        data: PropTypes.object.isRequired,\r\n        checkable: PropTypes.bool.isRequired,\r\n        changePageCallback: PropTypes.func,\r\n        updateCallback: PropTypes.func,\r\n        removeCallback: PropTypes.func,\r\n        id: PropTypes.string.isRequired,\r\n        isLoading: PropTypes.bool,\r\n        customToolbarElements: PropTypes.object\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = data.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleCheckboxChange = (event, name) =>{\r\n\r\n            const selectedIndex = selected.indexOf(name);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(selected, name);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(selected.slice(1));\r\n            } else if (selectedIndex === selected.length - 1) {\r\n                newSelected = newSelected.concat(selected.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    selected.slice(0, selectedIndex),\r\n                    selected.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelected(newSelected);\r\n\r\n    };\r\n\r\n    const handleClick = (event, rowId) => {\r\n        if(updateCallback !== undefined){\r\n            updateCallback(rowId)\r\n        }\r\n    };\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n        console.log(\"handleChangeRowsPerPage\")\r\n\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                {isLoading ? <LinearProgress/> : null }\r\n                <EnhancedTableToolbar\r\n                    title={title}\r\n                    numSelected={selected.length}\r\n                    changePageCallback={changePageCallback}\r\n                    keyword={keyword}\r\n                    setKeyword={setKeyword}\r\n                    customToolbarElements={customToolbarElements}\r\n                />\r\n                 <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={data.length}\r\n                            headCells={headCells}\r\n                            checkable={checkable}\r\n                        />\r\n\r\n\r\n                        <TableBody>\r\n                            {stableSort(data, getComparator(order, orderBy))\r\n                                .filter(item => searchFunction === undefined ? true : searchFunction(keyword, item))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n\r\n                                    const isItemSelected = isSelected(row.name);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    const rowStyle = row['isVerified'] !== undefined  && row['isVerified'] === false ? classes.rowNotVerified :\r\n                                        row['isPublic'] !== undefined && row['isPublic'] === false ? classes.rowNotPublished :  classes.rowBasic;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            className={rowStyle}\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row[id])}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row[id]}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            {checkable ? <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    onChange={(event)=>handleCheckboxChange(event, row.name)}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell> : null}\r\n\r\n                                            {headCells.map(header=>{\r\n                                                if(header.isId){\r\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\r\n                                                            {row[header.id]}\r\n                                                        </TableCell>\r\n                                                }else if(header.id === 'actions' ){\r\n                                                        return <TableCell >\r\n                                                            <div onClick={e => {e.stopPropagation(); e.preventDefault()}}>\r\n                                                                {updateCallback !== undefined ? <IconButton onClick={(event)=>{\r\n                                                                    updateCallback(row[id])\r\n                                                                    return 0\r\n                                                                }} size=\"small\" aria-label=\"edit\" >\r\n                                                                    <EditIcon fontSize=\"small\" />\r\n                                                                </IconButton> : null}\r\n\r\n                                                                {removeCallback !== undefined ? <IconButton size=\"small\" aria-label=\"delete\" onClick={()=>removeCallback(row[id])}>\r\n                                                                    <DeleteIcon  fontSize=\"small\" />\r\n                                                                </IconButton> : null}\r\n\r\n                                                            </div>\r\n                                                            </TableCell>\r\n                                                }else{\r\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\r\n                                                }\r\n\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows}}>\r\n\r\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\r\n                                        <TableCell colSpan={6} className={classes.centerCell}>\r\n                                            <Typography variant=\"h6\" noWrap>\r\n                                                No results\r\n                                            </Typography>\r\n                                        </TableCell>}\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10]}\r\n                    component=\"div\"\r\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\r\nexport default function useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(\r\n        () => {\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n\r\n        [value]\r\n    );\r\n\r\n    return debouncedValue;\r\n}","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","export const getAccessToken = () => localStorage.getItem('access_token');\r\nexport const getRefreshToken = () => localStorage.getItem('refresh_token');\r\nexport const isAuthenticated = () => !!getAccessToken();","import React from \"react\";\r\nimport axios from \"axios\"\r\nimport history from \"../helpers/history\";\r\nimport {getAccessToken, getRefreshToken} from \"../helpers/tokens\";\r\nimport API from \"./API\";\r\n\r\nconst request = async function (options, contentType, authorize= true) {\r\n\r\n    const header = {\r\n        'Content-Type': (contentType == null) ? 'application/json' : contentType,\r\n        'Accept': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Authorization': \"Bearer \" + getAccessToken(),\r\n        'device': 'web'\r\n    };\r\n\r\n    if(!authorize){\r\n        delete header['Authorization']\r\n    }\r\n\r\n    const client = axios.create({\r\n        baseURL: false ? \"http://localhost:8080/\" : \"https://www.traveldirection.ax.lt:8080/\",\r\n        headers: header\r\n    });\r\n\r\n\r\n\r\n    // Add a response interceptor\r\n    client.interceptors.response.use(function (response) {\r\n        return response;\r\n    },  function (error) {\r\n\r\n        // console.log(\"Interceptor error\", error);\r\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n        // Do something with response error\r\n        const originalRequest = error.config;\r\n        const url = originalRequest.url;\r\n        const status = error.response.status;\r\n\r\n\r\n        if (error.response.status === 408 || error.code === 'ECONNABORTED' || error.code === \"ERR_INTERNET_DISCONNECTED\") {\r\n            console.log(`A timeout happend on url ${error.config.url}`)\r\n            return Promise.reject(error)\r\n        }\r\n\r\n        // Logout user if token refresh didn't work or user is disabled\r\n        if (url === 'api/v1/auth/refresh') {\r\n            console.log(\"Asking for refresh token\");\r\n            console.log(\"Unable to issue new JWT token. Redirecting to login page!\");\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"refresh_token\");\r\n            history.push(\"/login\");\r\n            return Promise.reject(error);\r\n        }else if(url.startsWith(\"api/v1/auth\")){\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        //Do not request for new JWT if response code is not Authorized\r\n        if (status !== 403) {\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        if (status === 403 && originalRequest._retry === undefined) {\r\n            console.log(\"Users token has expired!\");\r\n\r\n            originalRequest._retry = true;\r\n\r\n            return API.Auth.refreshToken(getRefreshToken()).then(response=>{\r\n                    console.log(\"Retrieving new token and making the same request!\");\r\n                    let token = response.access_token;\r\n                    originalRequest.headers.Authorization = \"Bearer \" + token;\r\n                    localStorage.setItem(\"access_token\", token);\r\n                    return axios(originalRequest)\r\n            }).catch(err=>{\r\n                return Promise.reject(error)\r\n            })\r\n        }\r\n\r\n        return Promise.reject(error)\r\n    });\r\n\r\n    const onSuccess = function (response) {\r\n        // console.log('Request Successful!', response);\r\n        return response.data;\r\n    };\r\n\r\n    const onError = function (error) {\r\n        if (error.response) {\r\n            console.debug('Status:', error.response.status);\r\n            if (error.response.status === 403) {\r\n                history.push(\"/login\")\r\n            }\r\n            console.debug('Data:', error.response.data);\r\n            console.debug('Headers:', error.response.headers);\r\n        } else {\r\n            console.debug('Error Message:', error.message);\r\n        }\r\n\r\n        return Promise.reject(error.response.data);\r\n    };\r\n\r\n    return client(options)\r\n        .then(onSuccess)\r\n        .catch(onError);\r\n};\r\n\r\nconst getRequest = function (path, urlData = \"\") {\r\n    return request({\r\n        url: path + urlData,\r\n        method: 'GET'\r\n    });\r\n};\r\n\r\nconst postRequest = function (path, data, urlData = \"\", authorize=true) {\r\n    console.log(\"Authorize\",authorize);\r\n    return request({\r\n        url: path + urlData,\r\n        method: 'POST',\r\n        data: data\r\n    }, null, authorize);\r\n};\r\n\r\nconst postMultipartRequest = function (path, formData) {\r\n    return request({\r\n        url: path,\r\n        method: 'POST',\r\n        data: formData\r\n    }, 'multipart/form-data');\r\n};\r\n\r\nconst RequestType = {\r\n    getRequest, postRequest, postMultipartRequest\r\n};\r\n\r\nexport default RequestType\r\n\r\n\r\n","import RequestType from '../Networking/NetworkLayerCentral'\r\n\r\n//Places\r\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\r\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\r\nconst getClosesPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin/closest\", urlParams);\r\n\r\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\r\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\r\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\r\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\r\nconst removePlace = (urlParams) => RequestType.getRequest(\"api/v1/place/delete\", urlParams);\r\n\r\nconst getAllCities = (urlParams) =>RequestType.getRequest(\"api/v1/place/city/all\",urlParams);\r\nconst getAllCounties = (urlParams) =>RequestType.getRequest(\"api/v1/place/county/all\",urlParams);\r\nconst getAllCountries = (urlParams) =>RequestType.getRequest(\"api/v1/place/country/all\",urlParams);\r\nconst getAllMunicipalities = (urlParams) =>RequestType.getRequest(\"api/v1/place/municipality/all\",urlParams);\r\n\r\nconst Places = {getClosesPlacesAdmin,getAllCities,getAllCounties, getAllCountries, getAllMunicipalities, getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces, removePlace};\r\n\r\n//Tags\r\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\r\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\r\nconst removeTags = (params) => RequestType.postRequest(\"api/v1/tags/delete\", params);\r\nconst updateTags = (params) => RequestType.postRequest(\"api/v1/tags/update\", params);\r\nconst Tags = {getAllTags, addTag, removeTags, updateTags};\r\n\r\n//Category\r\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\r\nconst removeCategory = (params) => RequestType.postRequest(\"api/v1/categories/delete\", params);\r\nconst updateCategory = (params) => RequestType.postRequest(\"api/v1/categories/update\", params);\r\nconst getAllCategories = (params) => RequestType.getRequest(\"api/v1/categories/all\", params);\r\nconst Categories = {addCategory, getAllCategories, removeCategory, updateCategory};\r\n\r\n//Photo\r\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\r\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\r\nconst Photos = {addPhoto, uploadPhoto};\r\n\r\n\r\n//Parking\r\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\r\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\r\nconst Parking = {getParkingByLocation, insertNewParking};\r\n\r\n\r\n//TagsPlace\r\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\r\nconst TagsPlace = {updateTagsForPlace};\r\n\r\n//CategoriesPlace\r\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\r\nconst CategoriesPlace = {updateCategoriesForPlace};\r\n\r\n//PhotoPlace\r\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\r\nconst ParkingPlace = {updateParkingForPlace};\r\n\r\n//PhotoPlace\r\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\r\nconst PhotoPlace = {updatePhotoForPlace};\r\n\r\n//Schedule\r\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\r\nconst Schedule = {updateScheduleForPlace};\r\n\r\n//ReviewsPlace\r\nconst getPlaceReviews = (urlParams) => RequestType.getRequest(\"api/v1/reviews/all\", urlParams);\r\nconst Reviews = {getPlaceReviews};\r\n\r\n//Sources\r\nconst getSources = () => RequestType.getRequest(\"api/v1/source/all\");\r\nconst addSource = (data) => RequestType.postRequest(\"api/v1/source/insert\",data);\r\nconst Source = {getSources, addSource};\r\n\r\n//SourcePlace\r\nconst updateSourcesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/sourceplace/update\", data, urlParams);\r\nconst SourcePlace = {updateSourcesForPlace};\r\n\r\n//Tours\r\nconst insertTour = (data) => RequestType.postRequest(\"api/v1/tour/insert\",data)\r\nconst updateTour = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/update\",data, urlParams)\r\nconst updateTourCategories = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/categories/update\",data, urlParams)\r\nconst getTour = (urlParams) => RequestType.getRequest(\"api/v1/tour\",urlParams)\r\nconst getTourCategories = (urlParams) => RequestType.getRequest(\"api/v1/tour/categories\",urlParams)\r\nconst removeTour = (urlParams) => RequestType.getRequest(\"api/v1/tour/delete\", urlParams);\r\nconst getAllToursAdmin = (urlParams) => RequestType.getRequest(\"api/v1/tour/searchadmin\", urlParams);\r\nconst Tour = {insertTour, getTour, updateTour, getAllToursAdmin, removeTour, getTourCategories, updateTourCategories}\r\n\r\n//Auth\r\nconst login = (data) => RequestType.postRequest(\"api/v1/auth/login\", data, \"\", false);\r\nconst register = (data) => RequestType.postRequest(\"api/v1/auth/registration\",data, \"\", false);\r\nconst refreshToken = (data) => RequestType.postRequest(\"api/v1/auth/refresh\", data, \"\", false);\r\n\r\nconst Auth = {register, login, refreshToken};\r\n\r\n//User\r\nconst getUserProfile = () => RequestType.getRequest(\"api/v1/user/info\");\r\nconst getAllUsers = (urlParams) => RequestType.getRequest(\"api/v1/user/search\", urlParams);\r\nconst getAllRoles = () => RequestType.getRequest(\"api/v1/user/roles/all\");\r\nconst setRoles = (data) => RequestType.postRequest(\"api/v1/user/setRoles\", data);\r\n\r\nconst User = {setRoles, getAllRoles, getAllUsers, getUserProfile};\r\n\r\n//Recommendation\r\nconst createRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/create\", data);\r\nconst getAllRecommendations = (urlParams) => RequestType.getRequest(\"api/v1/recommendation/search\", urlParams);\r\nconst addPlaceToRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/addObject\", data);\r\nconst removePlaceFromRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/removeObject\", data);\r\nconst updateRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/update\", data)\r\nconst removeRecommendation = (data) => RequestType.postRequest(\"api/v1/recommendation/remove\", data)\r\n\r\nconst Recommendation = { removeRecommendation, updateRecommendation, removePlaceFromRecommendation, addObjectToRecommendation: addPlaceToRecommendation, getAllRecommendations, createRecommendation }\r\n\r\n//Explore\r\n\r\nconst updateExplorePage = (data) => RequestType.postRequest(\"api/v1/explore/update\", data)\r\nconst getExplorePage = () => RequestType.getRequest(\"api/v1/explore/\")\r\n\r\nconst Explore = { getExplorePage, updateExplorePage }\r\n\r\nconst API = {Explore, Recommendation, User, Auth, Tour, SourcePlace, Source,Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule, Reviews};\r\n\r\nexport default API\r\n\r\n","// src/common/providers/APIErrorProvider/index.js\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nexport const AlertDialogContext = React.createContext({\r\n    alertConfig: null,\r\n    addAlertConfig: () => {},\r\n    removeAlertConfig: () => {}\r\n});\r\n\r\nexport default function AlertDialogProvider({ children }) {\r\n    const [alertConfig, setAlertConfig] = useState(null);\r\n    const contextValue = {\r\n        alertConfig,\r\n        addAlertConfig: (title, message, actions, onClose = undefined) => setAlertConfig({ title, message, actions, onClose}),\r\n        removeAlertConfig: () => setAlertConfig(null)\r\n    };\r\n\r\n    return (\r\n        <AlertDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </AlertDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AlertDialogContext} from \"./AlertDialogContext\";\r\n\r\nexport default function UseAlertDialogContext() {\r\n    const { alertConfig, addAlertConfig, removeAlertConfig } = useContext(AlertDialogContext);\r\n    return { alertConfig, addAlertConfig, removeAlertConfig };\r\n}\r\n","const Strings = {\r\n    DIALOG_PLACE_PUBLISH_TITLE : 'Place publicity',\r\n    DIALOG_PLACE_PUBLISH_MESSAGE: \"This place will be visible for all users. Are you sure?\",\r\n    DIALOG_PLACE_UNPUBLISH_MESSAGE :\"This place will not be visible anymore. Are you sure?\",\r\n\r\n    DIALOG_PLACE_INSERT_TITLE: \"Insert place\",\r\n    DIALOG_PLACE_INSERT: \"Are you sure you want to insert this place?\",\r\n\r\n    DIALOG_PLACE_UPDATE_TITLE: \"Update place\",\r\n    DIALOG_PLACE_UPDATE: \"Are you sure you want to make changes to this place?\",\r\n\r\n    DIALOG_PLACE_VERIFY_TITLE: \"Place verification\",\r\n    DIALOG_PLACE_VERIFY_MESSAGE: \"This is a user's suggested place. Are you sure you want to verify this place and make it visible to others?\",\r\n\r\n    DIALOG_PLACE_DELETE_TITLE: \"Delete place\",\r\n    DIALOG_PLACE_DELETE_MESSAGE: \"This action will remove this place permanently. Are you sure you want to proceed?\",\r\n\r\n    DIALOG_TOUR_DELETE_TITLE: \"Delete tour\",\r\n    DIALOG_TOUR_DELETE_MESSAGE: \"This action will remove this tour permanently. Are you sure you want to proceed?\",\r\n\r\n    SNACKBAR_PLACE_INSERTED_SUCCESS: \"Place inserted successfully\",\r\n    SNACKBAR_PLACE_REMOVE_SUCCESS: \"Place was removed successfully\",\r\n\r\n    SNACKBAR_TOUR_INSERTED_SUCCESS: \"Tour inserted successfully\",\r\n    SNACKBAR_TOUR_REMOVE_SUCCESS: \"Tour was removed successfully\",\r\n\r\n    SNACKBAR_ERROR: \"Something went wrong!\",\r\n    SNACKBAR_CHANGES_SAVED: \"All changes saved!\"\r\n};\r\n\r\nexport default Strings;","import React, { useState, useCallback } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nexport const SnackbarContext = React.createContext({\r\n    config: null,\r\n    addConfig: () => {},\r\n    removeConfig: () => {}\r\n});\r\n\r\n\r\nexport default function SnackbarProvider({ children }) {\r\n    const [config, setConfig] = useState(null);\r\n\r\n    const removeConfig = () => setConfig(null);\r\n    const addConfig = (success, message) => setConfig({ success, message });\r\n\r\n    const contextValue = {\r\n        config,\r\n        addConfig: (success, message) => addConfig(success, message),\r\n        removeConfig: () => removeConfig()\r\n    };\r\n\r\n    return (\r\n        <SnackbarContext.Provider value={contextValue}>\r\n            {children}\r\n        </SnackbarContext.Provider>\r\n    );\r\n}","import { useContext } from 'react';\r\nimport {SnackbarContext} from \"./SnackbarContext\";\r\n\r\nexport default function UseSnackbarContext() {\r\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\r\n    return { config, addConfig, removeConfig };\r\n}\r\n","\r\nimport React, {useEffect, useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    autoComplete: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(1),\r\n        margin: 0,\r\n    },\r\n    autoCompleteChipContainer: {\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction AutoCompleteChip(props){\r\n\r\n    const {options, setOptions, selectedOptions, setSelectedOptions, classes, label, id, name} = props;\r\n    const [initialData, setInitialData] = useState([]);\r\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\r\n    const [firstLoad, setFirstLoad] = useState(true);\r\n\r\n    function handleDelete(data) {\r\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\r\n        setOptions(\r\n            [\r\n                ...options,\r\n                data\r\n            ]\r\n        )\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(selectedOptions.length===0){\r\n\r\n            setOptions(\r\n                initialData\r\n            )\r\n        }\r\n    },[selectedOptions]);\r\n\r\n    useEffect(()=>{\r\n        if(firstLoad && options.length>0){\r\n            let data = [];\r\n            options.map(row=>{\r\n                let found = false;\r\n                selectedOptions.map(row1=>{\r\n                    if(JSON.stringify(row) === JSON.stringify(row1)){\r\n                        found = true\r\n                    }\r\n                });\r\n                if(!found){\r\n                   data.push(row)\r\n                }\r\n            });\r\n            setOptions(data);\r\n            setInitialData(data);\r\n            setFirstLoad(false)\r\n        }\r\n    },[options]);\r\n\r\n    function handleInput(event, value){\r\n        setCurrentVal({\"name\": \"\"});\r\n        setSelectedOptions(\r\n            [\r\n                ...selectedOptions,\r\n                value\r\n            ]\r\n        );\r\n        setOptions(options.filter(item => item !== value))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Box  className={classes.autoCompleteChipContainer}>\r\n                {selectedOptions.length !== 0 &&\r\n                <Box component=\"ul\" className={classes.root}>\r\n                    {\r\n                        selectedOptions.map(option => {\r\n                            return id !== undefined ?\r\n                                <li key={option[id]}>\r\n                                    <Chip\r\n                                        variant=\"outlined\"\r\n                                        label={name!== undefined ? option[name] : option.name}\r\n                                        onDelete={() => handleDelete(option)}\r\n                                        className={classes.chip}\r\n                                    />\r\n                                </li>\r\n                                :\r\n                                <li key={option}>\r\n                                        <Chip\r\n                                            variant=\"outlined\"\r\n                                            label={option}\r\n                                            onDelete={() => handleDelete(option)}\r\n                                            className={classes.chip}\r\n                                        />\r\n                                </li>\r\n                                }\r\n\r\n                            )\r\n                    }\r\n                </Box>\r\n                }\r\n\r\n                <Autocomplete\r\n                    className={classes.autoComplete}\r\n                    value={getCurrentVal}\r\n                    options={options}\r\n                    onChange={handleInput}\r\n                    disableClearable\r\n                    getOptionLabel={(option) =>  id!==undefined ? name!== undefined ? option[name] : option.name : option}\r\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\r\n                />\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nAutoCompleteChip.propTypes = {\r\n    setSelectedOptions: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    setOptions: PropTypes.func.isRequired,\r\n    selectedOptions: PropTypes.array.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    label: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AutoCompleteChip)","import React, {useEffect, useState} from \"react\";\r\nimport API from \"../Networking/API\";\r\nimport * as moment from \"moment\";\r\nimport {func} from \"prop-types\";\r\nexport const PlacesFilterContext = React.createContext();\r\nvar buildUrl = require('build-url');\r\n\r\n\r\nconst initialDates = {\r\n    insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n    insertionEnd: moment(new Date()).add(1,'day').format(),\r\n    modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n    modificationEnd: moment(new Date()).add(1,'day').format()\r\n};\r\n\r\nexport const PlacesFilterProvider = ({children}) => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    const [cities, setCities] = useState([]);\r\n    const [selectedCities, setSelectedCities] = useState([]);\r\n\r\n    const [countries, setCountries] = useState([]);\r\n    const [selectedCountries, setSelectedCountries] = useState([]);\r\n\r\n    const [municipalities, setMunicipalities] = useState([]);\r\n    const [selectedMunicipalities, setSelectedMunicipalities] = useState([]);\r\n\r\n    const [counties, setCounties] = useState([]);\r\n    const [selectedCounties, setSelectedCounties] = useState([]);\r\n\r\n    const [initialLoading, setInitialLoading] = useState(true);\r\n    const [resetFilterOptions, setResetFilterOptions] = useState(false);\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [dates, setDates] = useState(initialDates);\r\n\r\n    const [filterQuery, setFilterQuery] = useState( buildUrl(null, {\r\n        queryParams: {\r\n            di: [dates.insertionStart, dates.insertionEnd],\r\n            dm: [dates.modificationStart, dates.modificationEnd],\r\n            filterOptions: parseFilterOptions(),\r\n            categories: parseCategories(),\r\n            countries: selectedCountries,\r\n            cities: selectedCities,\r\n            municipalities: selectedMunicipalities\r\n        }\r\n    }));\r\n\r\n    const getCategories = (params=\"\") => {\r\n        API.Categories.getAllCategories().then(response=>{\r\n            setCategories(response);\r\n            // console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        });\r\n    };\r\n\r\n    const getAllCities = (restrictions=\"\") =>{\r\n        API.Places.getAllCities(restrictions).then(res=>{\r\n            setCities(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllCounties = () =>{\r\n        API.Places.getAllCounties().then(res=>{\r\n            setCounties(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllCountries = () =>{\r\n        API.Places.getAllCountries().then(res=>{\r\n            setCountries(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n    const getAllMunicipalities = (restrictions=\"\") =>{\r\n        API.Places.getAllMunicipalities(restrictions).then(res=>{\r\n            setMunicipalities(res)\r\n        }).catch(err=>{\r\n        })\r\n    };\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            // console.log(\"Selected countries changed\")\r\n            getAllMunicipalities(buildUrl(null, {\r\n                queryParams: {\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }));\r\n            getAllCities(buildUrl(null, {\r\n                queryParams: {\r\n                    munRestrictions: selectedMunicipalities,\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }))\r\n        }\r\n    },[selectedCountries]);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            // console.log(\"Selected munis changed\")\r\n            getAllCities(buildUrl(null, {\r\n                queryParams: {\r\n                    munRestrictions: selectedMunicipalities,\r\n                    countryRestrictions: selectedCountries\r\n                }\r\n            }))\r\n        }\r\n    }, [selectedMunicipalities]);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Fetching...\");\r\n        Promise.all([\r\n            getCategories(),\r\n            getAllCities(),\r\n            getAllCountries(),\r\n            getAllCounties(),\r\n            getAllMunicipalities()\r\n        ]).then(response => {\r\n            setInitialLoading(false);\r\n            // console.log(\"All data received!\")\r\n        }).catch(err => {\r\n        })\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(!initialLoading){\r\n            if(!resetFilterOptions){\r\n                setFilterQuery(buildUrl(null, {\r\n                    queryParams: {\r\n                        di: [dates.insertionStart, dates.insertionEnd],\r\n                        dm: [dates.modificationStart, dates.modificationEnd],\r\n                        o: parseFilterOptions(),\r\n                        c: parseCategories(),\r\n                        countries: selectedCountries,\r\n                        cities: selectedCities,\r\n                        municipalities: selectedMunicipalities\r\n                    }\r\n                }))\r\n            }else{\r\n                if(areFiltersCleared()){\r\n                    setResetFilterOptions(false)\r\n                }\r\n            }\r\n        }\r\n    },[selectedCategories, selectedCities,selectedCountries,selectedMunicipalities,dates,filterOptions,resetFilterOptions]);\r\n\r\n    function areFiltersCleared() {\r\n        let filterOptionsCleared = true;\r\n        filterOptions.map(row=>{\r\n            if(row.filter){\r\n                filterOptionsCleared = false\r\n            }\r\n        });\r\n        return filterOptionsCleared &&\r\n            selectedCategories.length === 0 &&\r\n            selectedCities.length === 0 &&\r\n            selectedCountries.length ===0 &&\r\n            dates.insertionStart === initialDates.insertionStart &&\r\n            dates.modificationStart === initialDates.modificationStart\r\n    }\r\n\r\n    function parseCategories(){\r\n        let cats = [];\r\n        selectedCategories.map(row=>{\r\n            cats.push(row.name)\r\n        });\r\n        return cats\r\n    }\r\n\r\n    function parseFilterOptions(){\r\n        let options = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filter === true)\r\n                options.push(row.filterName)\r\n        });\r\n        return options\r\n    }\r\n\r\n    const contextValue = {\r\n        filterQuery,\r\n        setResetFilterOptions,\r\n\r\n        dates,\r\n        setDates,\r\n\r\n        filterOptions,\r\n        setFilterOptions,\r\n\r\n        categories,\r\n        setCategories,\r\n        selectedCategories,\r\n        setSelectedCategories,\r\n\r\n        counties,\r\n        setCounties,\r\n        selectedCounties,\r\n        setSelectedCounties,\r\n\r\n        cities,\r\n        setCities,\r\n        selectedCities,\r\n        setSelectedCities,\r\n\r\n        countries,\r\n        setCountries,\r\n        selectedCountries,\r\n        setSelectedCountries,\r\n\r\n        municipalities,\r\n        setMunicipalities,\r\n        selectedMunicipalities,\r\n        setSelectedMunicipalities\r\n    };\r\n\r\n    return (\r\n        <PlacesFilterContext.Provider value={contextValue}>\r\n            {children}\r\n        </PlacesFilterContext.Provider>\r\n    );\r\n};","import React, {useContext, useEffect, useState} from \"react\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport moment from \"moment\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport MuiPickersUtilsProvider from \"@material-ui/pickers/MuiPickersUtilsProvider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst style = theme =>({\r\n    filterDiv: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    sortingButtons: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(1),\r\n        height: \"100%\"\r\n\r\n    },\r\n    rightLayout: {\r\n        boxShadow: \"0 0 1px 0 #666\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(1)\r\n    },\r\n    datesLayout:{\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n        marginBottom: \"8px\",\r\n        boxShadow: \"0 0 1px 0 #666\",\r\n        padding: theme.spacing(1)\r\n    },\r\n    paper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center'\r\n\r\n    }\r\n});\r\n\r\n\r\n\r\nfunction FilterBlock({classes, setOpen}) {\r\n    const {\r\n        categories, setCategories, selectedCategories, setSelectedCategories,\r\n        cities, setCities, selectedCities, setSelectedCities,\r\n        countries, setCountries, selectedCountries, setSelectedCountries,\r\n        municipalities, setMunicipalities, selectedMunicipalities, setSelectedMunicipalities,\r\n        filterOptions, setFilterOptions, setResetFilterOptions,\r\n        dates, setDates} = useContext(PlacesFilterContext);\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let generalOptions = Object.assign([], filterOptions);\r\n        generalOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n        });\r\n        setFilterOptions(generalOptions)\r\n    };\r\n\r\n    function filterDateChange(date, id) {\r\n        let cDate = Object.assign( {}, dates);\r\n        cDate[id] = moment(date).format('YYYY-MM-DD');\r\n        setDates(cDate)\r\n    }\r\n\r\n    function clearFilters() {\r\n        setResetFilterOptions(true);\r\n\r\n        setSelectedCities([]);\r\n        setSelectedCountries([]);\r\n        setSelectedCategories([]);\r\n        setSelectedMunicipalities([]);\r\n\r\n        let filters = Object.assign(filterOptions, []);\r\n        filters.map(row=>{\r\n            row.filter = false\r\n        });\r\n        setFilterOptions(filters);\r\n\r\n        setDates({\r\n            insertionStart: moment(new Date('2020-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n            insertionEnd: moment(new Date()).add(1,'day').format(),\r\n            modificationStart: moment(new Date('2014-05-01T21:11:54')).format(\"YYYY-MM-DD\"),\r\n            modificationEnd: moment(new Date()).add(1,'day').format()\r\n        })\r\n    }\r\n\r\n    return <Paper className={classes.root}>\r\n        <Grid container direction=\"row\" spacing={3}>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\">\r\n                        General options\r\n                    </Typography>\r\n                    <div className={classes.sortingButtons}>\r\n                        {filterOptions.map(row=>{\r\n                            return <FormControlLabel\r\n                                control={<Checkbox\r\n                                    checked={row.filter}\r\n                                    onChange={()=>filterOptionsChanged(row.filterName)}\r\n                                    name={row.filterName} />}\r\n                                label={row.filterLabel}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                    <Typography variant=\"h6\">\r\n                        Filter by categories\r\n                    </Typography>\r\n                    <AutocompleteChip label=\"Select categories\"\r\n                                      id=\"categoryId\"\r\n                                      options={categories}\r\n                                      setOptions={setCategories}\r\n                                      selectedOptions={selectedCategories}\r\n                                      setSelectedOptions={setSelectedCategories}/>\r\n\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by dates\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Insertion dates\r\n                            </Typography>\r\n                    <Grid container justify=\"space-around\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"insertionStart\"\r\n                            onChange={(date)=>filterDateChange(date,\"insertionStart\")}\r\n                            value={dates.insertionStart}\r\n                            label=\"Date start\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.insertionEnd}\r\n                            onChange={(date)=>filterDateChange(date,\"insertionEnd\")}\r\n                            id=\"insertionEnd\"\r\n                            label=\"Date end\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        </MuiPickersUtilsProvider>\r\n                    </Grid>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Modification dates\r\n                    </Typography>\r\n                    <Grid container justify=\"space-around\">\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.modificationStart}\r\n                            onChange={(date)=>filterDateChange(date,\"modificationStart\")}\r\n                            id=\"modificationStart\"\r\n                            label=\"Date start\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM-dd-yyyy\"\r\n                            margin=\"normal\"\r\n                            value={dates.modificationEnd}\r\n                            onChange={(date)=>filterDateChange(date,\"modificationEnd\")}\r\n                            id=\"modificationEnd\"\r\n                            label=\"Date end\"\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\">\r\n                        Filter by countries\r\n                    </Typography>\r\n                    <AutocompleteChip label=\"Select countries\"\r\n                                      options={countries}\r\n                                      setOptions={setCountries}\r\n                                      selectedOptions={selectedCountries}\r\n                                      setSelectedOptions={setSelectedCountries}/>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by municipalities\r\n                            </Typography>\r\n                            <AutocompleteChip label=\"Select municipalities\"\r\n                                              options={municipalities}\r\n                                              setOptions={setMunicipalities}\r\n                                              selectedOptions={selectedMunicipalities}\r\n                                              setSelectedOptions={setSelectedMunicipalities}/>\r\n                            <Typography variant=\"h6\">\r\n                                Filter by cities\r\n                            </Typography>\r\n                            <AutocompleteChip label=\"Select cities\"\r\n                                              options={cities}\r\n                                              setOptions={setCities}\r\n                                              selectedOptions={selectedCities}\r\n                                              setSelectedOptions={setSelectedCities}/>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n        <Button\r\n            style={{marginTop: 8}}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => clearFilters()}>\r\n            Clear filters\r\n        </Button>\r\n    </Paper>\r\n}\r\n\r\nexport default withStyles(style)(FilterBlock)","import React, {useContext, useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport FilterBlock from \"../components/add_place_components/FilterBlock\";\r\nimport {PlacesFilterContext} from \"../contexts/PlacesFilterContext\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    autocomplete: {\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline: \"0\",\r\n        marginBottom: \"4px\"\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\r\n    {id: 'address', numeric: false, disablePadding: false, label: 'Address', isId: false},\r\n    {id: 'city', numeric: false, disablePadding: false, label: 'City', isId: false},\r\n    {id: 'country', numeric: false, disablePadding: false, label: 'Country', isId: false},\r\n    {id: 'dateModified', numeric: false, disablePadding: false, label: 'Date modified', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n];\r\n\r\nfunction Places(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const {classes} = props;\r\n\r\n\r\n    const {filterQuery} = useContext(PlacesFilterContext);\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    useEffect(() => {\r\n        console.log(\"Filter query has changed!\")\r\n        setIsLoading(true);\r\n        requestAllPlaces();\r\n    }, [filterQuery]);\r\n\r\n\r\n    function getPlaceNameById(id) {\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i].placeId === id)\r\n                return data[i].name\r\n        }\r\n    }\r\n\r\n    function requestAllPlaces(p = 1, keyword = \"\") {\r\n        console.log(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n        getAllPlaces(filterQuery + \"&p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n    }\r\n\r\n    function parseData(data) {\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        console.log(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updatePlaceCallback(id) {\r\n        history.push(\"/app/addplace/\" + id)\r\n    }\r\n\r\n    function removePlaceCallback(id) {\r\n        console.log(\"Name\", getPlaceNameById(id));\r\n        setIsLoading(true);\r\n        addAlertConfig(Strings.DIALOG_PLACE_DELETE_TITLE + \" - \" + getPlaceNameById(id), Strings.DIALOG_PLACE_DELETE_MESSAGE, [{\r\n            name: \"Remove\",\r\n            action: () => {\r\n                API.Places.removePlace(\"?p=\" + id).then(response => {\r\n                    let tmp = [];\r\n                    data.map(row => {\r\n                        if (row.placeId !== id) {\r\n                            tmp.push(row)\r\n                        }\r\n                    });\r\n                    setData(tmp);\r\n                    addConfig(true, Strings.SNACKBAR_PLACE_REMOVE_SUCCESS)\r\n                    setIsLoading(false)\r\n                }).catch(error => {\r\n                    setIsLoading(false);\r\n                    addConfig(false, Strings.SNACKBAR_ERROR)\r\n                })\r\n            }\r\n        }], () => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const changePageCallback = (p = 0, keyword = \"\") => {\r\n        if(!isLoading){\r\n            setIsLoading(true);\r\n            requestAllPlaces(p, keyword)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                <FilterBlock setOpen={true}/>\r\n\r\n                <TableComponent\r\n                    title={\"Places\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updatePlaceCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    id={\"placeId\"}\r\n                    isLoading={isLoading}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={() => {\r\n                            history.push(\"/app/addplace\")\r\n                        }}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n            <Button>\r\n                Clear filters\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    function getAllPlaces(urlParams = \"\") {\r\n        API.Places.getAllPlacesAdmin(urlParams).then(response => {\r\n            setIsLoading(false);\r\n            parseData(response)\r\n        }).catch(error => {\r\n            setIsLoading(false);\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nPlaces.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Places);","export const priceRange = [\r\n    {\r\n        value: 0,\r\n        label: \"FREE\",\r\n    },\r\n    {\r\n        value: 25,\r\n        label: \"$\",\r\n    },\r\n    {\r\n        value: 50,\r\n        label: \"$$\",\r\n    },\r\n    {\r\n        value: 75,\r\n        label: \"$$$\",\r\n    },\r\n    {\r\n        value: 100,\r\n        label: \"$$$$\",\r\n    },\r\n    {\r\n        value: 125,\r\n        label: \"$$$$$\",\r\n    }\r\n];\r\n","export const averageTimeSpent = [\r\n    {\r\n        value: 5,\r\n        label: 5,\r\n    },\r\n    {\r\n        value: 10,\r\n        label: 10,\r\n    },\r\n    {\r\n        value: 15,\r\n        label: 15,\r\n    },\r\n    {\r\n        value: 30,\r\n        label: 30,\r\n    },\r\n    {\r\n        value: 45,\r\n        label: 45,\r\n    },\r\n    {\r\n        value: 60,\r\n        label: 60,\r\n    },\r\n    {\r\n        value: 90,\r\n        label: 90,\r\n    },\r\n    {\r\n        value: 120,\r\n        label: 120,\r\n    },\r\n    {\r\n        value: 150,\r\n        label: 150,\r\n    },\r\n    {\r\n        value: 180,\r\n        label: 180,\r\n    },\r\n    {\r\n        value: 210,\r\n        label: 210,\r\n    },\r\n    {\r\n        value: 240,\r\n        label: 240,\r\n    },\r\n    {\r\n        value: 270,\r\n        label: 270,\r\n    },\r\n];","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    }\r\n});\r\n\r\nfunction AddSourceDialog(props){\r\n\r\n    function validateInput(){\r\n        let error = false;\r\n        if(text.length <= 3 || url.length <=3)\r\n            error = true;\r\n        setError(error);\r\n        return error\r\n    }\r\n\r\n    let {classes, open, action, setDialogOpen} = props;\r\n    const [text, setText] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    return(\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Insert source\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                        <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}\r\n                                   label=\"Source name\" variant=\"outlined\" fullWidth />\r\n                        <TextField style={{marginTop:\"16px\"}} error={error} onChange = {(ev) => {setUrl(ev.target.value)}}\r\n                                   label=\"Source url\" variant=\"outlined\" fullWidth />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={()=>setDialogOpen(false)} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text, url);\r\n                        setDialogOpen(false)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\nexport default withStyles(styles)(AddSourceDialog)","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {priceRange} from \"../../helpers/priceRange\";\r\nimport {averageTimeSpent} from \"../../helpers/averageTimeSpent\"\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport API from \"../../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddSourceDialog from \"../AddSourceDialog\";\r\n\r\n\r\nconst styles = theme => ({});\r\nlet previousPrice = \"\";\r\n\r\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo, selectedSources, setSelectedSources}) {\r\n\r\n    const updatePlaceInfo = (event, newValue) => {\r\n        const {name, value, id} = event.target;\r\n        let place = Object.assign({}, placeInfo, {});\r\n        if (id !== \"\") {\r\n            place[id] = valuetext(newValue[0]);\r\n        } else {\r\n            place[name] = value\r\n        }\r\n        console.log(\"Updated place\", place);\r\n        setPlaceInfo(place)\r\n    };\r\n\r\n    const getSources = () =>{\r\n        API.Source.getSources().then(response=>{\r\n            setAvailableSources(response)\r\n        }).catch(error=>{\r\n\r\n        })\r\n    };\r\n\r\n    const handleAddSource = (name, url) =>{\r\n        API.Source.addSource({name: name, url: url}).then(response=>{\r\n            setAvailableSources(\r\n                [\r\n                    ...availableSources,\r\n                    response\r\n                ]\r\n            );\r\n            setSelectedSources([\r\n                ...selectedSources,\r\n                response\r\n            ]);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getSources()\r\n    },[]);\r\n\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [availableSources, setAvailableSources] = useState([]);\r\n\r\n    function valuetext(value) {\r\n        let val = \"\";\r\n        priceRange.map(row => {\r\n            if (row.value === value)\r\n                val = row.label\r\n        });\r\n        return val\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\">\r\n            Basic place information\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Place name\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter the place name\"\r\n            fullWidth\r\n            value={placeInfo['name']}\r\n            name=\"name\"\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Place description\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Describe the place thoroughly\"\r\n            fullWidth\r\n            multiline\r\n            name=\"description\"\r\n            value={placeInfo['description']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            rows={15}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Phone number\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter phone number\"\r\n            fullWidth\r\n            name=\"phoneNumber\"\r\n            value={placeInfo['phoneNumber']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            label=\"Website\"\r\n            style={{margin: 8}}\r\n            placeholder=\"Enter website\"\r\n            fullWidth\r\n            name=\"website\"\r\n            value={placeInfo['website']}\r\n            onChange={e => updatePlaceInfo(e)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n       <AutoCompleteChip\r\n                id=\"source\"\r\n                label=\"Select sources\"\r\n                options={availableSources}\r\n                setOptions={setAvailableSources}\r\n                setSelectedOptions={setSelectedSources}\r\n                selectedOptions={selectedSources}\r\n       />\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={() => setDialogOpen(true)}\r\n            startIcon={<AddIcon />}>\r\n            Add missing source\r\n        </Button>\r\n        <AddSourceDialog\r\n            action={handleAddSource}\r\n            open={dialogOpen}\r\n            setDialogOpen={setDialogOpen}\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Typography>\r\n                Price\r\n            </Typography>\r\n            <Slider\r\n                id=\"price\"\r\n                onChange={updatePlaceInfo}\r\n                value={priceRange.map(row => {\r\n                    if (row.label === placeInfo['price']) return row.value\r\n                })}\r\n                style={{width: \"60%\", marginLeft: \"48px\"}}\r\n                defaultValue={0}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider-always\"\r\n                step={25}\r\n                max={125}\r\n                marks={priceRange}\r\n            />\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Typography>\r\n                Average time spent\r\n            </Typography>\r\n            <FormControl variant=\"outlined\" style={{width: \"60%\", marginLeft: \"48px\"}}>\r\n                <InputLabel>Minutes</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={parseInt(placeInfo['averageTimeSpent'], 10)}\r\n                    onChange={updatePlaceInfo}\r\n                    label=\"Average Time spent\"\r\n                    inputProps={{\r\n                        name: 'averageTimeSpent'\r\n                    }}\r\n                >\r\n                    <option value=\"-1\">None</option>\r\n                    {\r\n                        averageTimeSpent.map(row=>{\r\n                            return <option value={parseInt(row.value, 10)}> {row.value}</option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport React, {useMemo, useState} from \"react\"\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Delete from \"@material-ui/icons/Delete\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst imgWithClick = {cursor: \"pointer\"};\r\n\r\nconst Photo = ({index, onItemDelete, photo, margin, direction, top, left}) => {\r\n\r\n    const styles = {\r\n        imgContainer: {\r\n            margin: margin,\r\n            display: 'inline',\r\n            position: 'relative',\r\n            width: '300px',\r\n            height: '300px',\r\n        }\r\n    }\r\n    if (direction === \"column\") {\r\n        styles.imgContainer.position = \"absolute\";\r\n        styles.imgContainer.imgStyle.left = left;\r\n        styles.imgContainer.imgStyle.top = top;\r\n    }\r\n\r\n    const handleDelete = event => {\r\n        onItemDelete(photo);\r\n    }\r\n\r\n    return (\r\n\r\n        <Card style={styles.imgContainer}>\r\n            <CardMedia\r\n                style={{height: 0, paddingTop: '80%'}}\r\n                image={photo.src}\r\n            />\r\n            <CardActions disableSpacing>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon/>}\r\n                    onClick={(event) => {\r\n                        handleDelete(event)\r\n                    }}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n\r\n        </Card>\r\n    )\r\n\r\n};\r\n\r\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\r\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\r\nconst SortableGallery = SortableContainer(({items, onItemDelete}) => (\r\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>}/>\r\n));\r\n\r\nfunction ReorderablePhotos(props) {\r\n    let {setPhotos, photos, srcName, keyName} = props\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\r\n    };\r\n\r\n    function handleItemDelete(photo) {\r\n        setPhotos(photos.filter(item => {\r\n            return item[keyName].toString() !== photo.key\r\n        }))\r\n    }\r\n\r\n    let modifiedData = photos.map(item => {\r\n        return (\r\n            {\r\n                key: item[keyName].toString(),\r\n                src: item[srcName],\r\n                width: 1,\r\n                height: 1\r\n            })\r\n\r\n    })\r\n    return (\r\n        <div>\r\n            <SortableGallery pressDelay={200}\r\n                             disableAutoscroll={false} items={modifiedData} onSortEnd={onSortEnd}\r\n                             axis={\"xy\"} onItemDelete={handleItemDelete}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {DropzoneArea} from \"material-ui-dropzone\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../Networking/API\";\r\n\r\nconst styles = theme => ({\r\n    dropzoneArea: {\r\n        overflow: \"hidden\"\r\n    }\r\n});\r\n\r\nconst acceptedFileFormats = ['image/jpeg', 'image/png', 'image/bmp', 'image/jpg']\r\n\r\nfunction AddImageDialog(props) {\r\n\r\n    const {onCloseCallback, open, onFinishCallback, classes} = props\r\n    const [loading, setIsLoading] = useState(false)\r\n    const [selectedFiles, setSelectedFiles] = useState([])\r\n\r\n    const submitCallback = () => {\r\n        setIsLoading(true)\r\n\r\n        Promise.all(selectedFiles.map(imagefile => {\r\n            let formData = new FormData()\r\n            formData.append(\"image\", imagefile)\r\n            console.log('image', imagefile)\r\n            return API.Photos.uploadPhoto(formData)\r\n        })).then(response => {\r\n            console.log(response)\r\n            onFinishCallback(response)\r\n        }).catch(error => {\r\n            onFinishCallback()\r\n        }).finally(() => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleDrop = (files )=> {\r\n        setSelectedFiles(existingFiles => [...existingFiles, ...files])\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(selectedFiles)\r\n\r\n    }, [selectedFiles])\r\n\r\n    const handleDelete = (file) => {\r\n        console.log(file.name)\r\n        setSelectedFiles(files => {return files.filter(existingFile => existingFile !== file)})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Photo upload\r\n                </DialogTitle>\r\n                {loading && <LinearProgress variant=\"query\"/>}\r\n                <DialogContent dividers>\r\n                    <DropzoneArea\r\n                        className={classes.dropzoneArea}\r\n                        acceptedFiles={acceptedFileFormats}\r\n                        maxFileSize={25000000}\r\n                        showAlerts={false}\r\n                        dropzoneProps={{disabled: loading}} filesLimit={5} onDrop={handleDrop}\r\n                    onDelete={handleDelete}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={submitCallback} color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddImageDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onFinishCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddImageDialog)\r\n","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ReorderablePhotos from \"../ReorderablePhotos\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddImageDialog from \"../AddImageDialog\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PhotosInfo({classes, setPhotos, photos}) {\r\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\r\n\r\n    function handleAddPhoto(files) {\r\n        setAddImageDialogOpen(false);\r\n        if(files == null)\r\n            return;\r\n\r\n        setPhotos([\r\n            ...photos,\r\n            ...files]\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h6\" >\r\n                Photos\r\n            </Typography>\r\n            <Card variant={\"outlined\"} className={classes.outline}>\r\n\r\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\r\n\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{width: '15%'}}\r\n                    className={classes.button}\r\n                    onClick={() => setAddImageDialogOpen(true)}\r\n                    startIcon={<AddIcon />}>\r\n                    Add photo\r\n                </Button>\r\n\r\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(files) => handleAddPhoto(files)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\r\n\r\n\r\n            </Card>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PhotosInfo)\r\n\r\n\r\n","import React from \"react\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nGeocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\r\n\r\n/**\r\n * Get country from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCountry = (addressArray) =>{\r\n    if(addressArray!==undefined){\r\n        let country = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\r\n                country = addressArray[ i ].long_name;\r\n                return country;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get country from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCity = ( addressArray ) => {\r\n    if(addressArray !== undefined){\r\n        let city = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'locality' === addressArray[ i ].types[0] ) {\r\n                city = addressArray[ i ].long_name;\r\n                return city;\r\n            }\r\n        }\r\n        return city;\r\n    }\r\n};\r\n\r\n/**\r\n * Get district from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getCounty = ( addressArray ) => {\r\n        if(addressArray !== undefined){\r\n            let county = '';\r\n            for( let i = 0; i < addressArray.length; i++ ) {\r\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n                    county = addressArray[ i ].long_name;\r\n                    return county;\r\n                }\r\n            }\r\n            return county\r\n        }\r\n    };\r\n/**\r\n * Get district from google maps address array\r\n * @param addressArray\r\n * @returns {*|string}\r\n */\r\nexport const getMunicipality = ( addressArray ) => {\r\n    if(addressArray !== undefined){\r\n        let municipality = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\r\n                municipality = addressArray[ i ].long_name;\r\n                return municipality;\r\n            }\r\n        }\r\n        return municipality;\r\n    }\r\n};\r\n\r\n/**\r\n * Geocode location from address\r\n * @param address\r\n * @type string\r\n * @return location object\r\n */\r\nexport function geocodeFromAddress(address){\r\n    return Geocode.fromAddress( address ).then(\r\n        response => {\r\n            const { lat, lng } = response.results[0].geometry.location;\r\n            if(lat !== undefined && lng !== undefined){\r\n                return geocodeFromLatLng(lat, lng).then(loc=>{\r\n                    return loc\r\n                })\r\n            }else{\r\n                return null\r\n            }\r\n        },\r\n        err=>{\r\n            return null\r\n        }\r\n    )\r\n}\r\n\r\n/**\r\n * Geocode location from latitude and longitude\r\n * @param newLat\r\n * @param newLng\r\n * @return location object\r\n */\r\n\r\n\r\nexport function geocodeFromLatLng(newLat, newLng){\r\n    return Geocode.fromLatLng( newLat , newLng ).then(\r\n        response => {\r\n            const address = response.results[0].formatted_address\r\n            const addressArray =  response.results[0].address_components\r\n            if(addressArray!==undefined){\r\n                const city = getCity( addressArray ),\r\n                    country = getCountry( addressArray ),\r\n                    county = getCounty(addressArray),\r\n                    municipality = getMunicipality(addressArray);\r\n                let loc = {address: address, city: city, country: country, latitude: newLat, longitude: newLng, county: county, municipality: municipality};\r\n                return loc;\r\n            }\r\n            return null\r\n        },\r\n        error => {\r\n            return null\r\n        }\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\r\nimport PropTypes from \"prop-types\";\r\nimport {geocodeFromAddress, geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    autocomplete:{\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline:\"0\",\r\n        marginBottom: \"4px\"\r\n    },\r\n    root: {\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"8px\",\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction MapToolbar({classes, isLocked, locationCallback}) {\r\n\r\n    const [loading, setIsLoading] = useState(false);\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    /**\r\n     * Handle manual address and coordinates filling with key presses and return location\r\n     * @param event\r\n     * @return {boolean}\r\n     */\r\n\r\n    function errorParsingLocation(){\r\n        addAlertConfig(\"Error parsing location!\", \"Make sure that address you provided is correct!\",[])\r\n    }\r\n\r\n    function handleKeyPress(event){\r\n        const value = event.target.value;\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            setIsLoading(true);\r\n            if (/[a-zA-Z]+/.test(value)){\r\n                geocodeFromAddress(value).then(location=>{\r\n                    location!==null ? locationCallback(location) : errorParsingLocation();\r\n                    setIsLoading(false)\r\n                })\r\n            }else{\r\n                let position = value.split(/[ ,]+/);\r\n                if(position.length === 2){\r\n                    geocodeFromLatLng(parseFloat(position[0]), parseFloat(position[1])).then(location=>{\r\n                        location!==null ? locationCallback(location) : errorParsingLocation();\r\n                        setIsLoading(false)\r\n                    })\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Handle place selection from google maps autocomplete\r\n     * @param place\r\n     * @return {{country: (*|string), address: *, city: (*|string), latitude: *, longitude: *}|null}\r\n     */\r\n    const onPlaceSelected = (place) => {\r\n        setIsLoading(true);\r\n        const addressArray = place.address_components;\r\n        if (addressArray !== undefined) {\r\n            const lat = place.geometry.location.lat(),\r\n                lng = place.geometry.location.lng();\r\n            geocodeFromLatLng(lat, lng).then(location => {\r\n                location !== null ? locationCallback(location) : errorParsingLocation();\r\n                setIsLoading(false)\r\n            });\r\n        }\r\n        return null\r\n    };\r\n\r\n    /**\r\n     * Get current location\r\n     */\r\n    function getCurrentPosition(){\r\n        setIsLoading(true)\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n            let newLat = position.coords.latitude,\r\n                newLng = position.coords.longitude;\r\n            geocodeFromLatLng(newLat, newLng).then(location=>{\r\n                location!==null ? locationCallback(location) : errorParsingLocation();\r\n\r\n                setIsLoading(false)\r\n            });\r\n        }, error=>{\r\n            setIsLoading(false)\r\n            alert(error.message + \"\\n\" + JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    return <div className={classes.root}>\r\n        <div className={classes.content}>\r\n            <Autocomplete\r\n                onKeyPress={(event)=>{if(!isLocked)handleKeyPress(event)}}\r\n                onPlaceSelected={(place)=>{if(!isLocked)onPlaceSelected(place)} }\r\n                className={classes.autocomplete}\r\n                types={['(regions)']}\r\n            />\r\n            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\">\r\n                <MyLocationIcon\r\n                    onClick={()=>{if(!isLocked)getCurrentPosition()}}\r\n                    fontSize=\"large\"\r\n                    color=\"primary\"\r\n                />\r\n            </IconButton>\r\n        </div>\r\n        {loading ? <LinearProgress /> : null}\r\n\r\n    </div>\r\n\r\n\r\n}\r\n\r\nMapToolbar.propTypes = {\r\n    isLocked: PropTypes.bool.isRequired,\r\n    locationCallback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(MapToolbar)","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"8px\",\r\n        padding: theme.spacing(1)\r\n    }\r\n});\r\n\r\nfunction MapLock({classes, isLocked, setIsLocked}) {\r\n    return <div className={classes.root}>\r\n        <FormControlLabel\r\n            control={<Switch />}\r\n            label=\"Lock\"\r\n            checked={isLocked}\r\n            onChange={()=>{\r\n               setIsLocked(old=>!old)\r\n            }}\r\n        />\r\n        {isLocked ?\r\n            <Alert  severity=\"error\">Map is currently locked. If you want to do any changes unlock it.</Alert> : null}\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(MapLock)","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { MAP } from 'react-google-maps/lib/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CustomControlsManager(\r\n    { position = window.google.maps.ControlPosition.TOP_LEFT, children },\r\n    context\r\n) {\r\n    const map = context[MAP];\r\n\r\n    const controlDiv = document.createElement('div');\r\n\r\n    useEffect(() => {\r\n        const controls = map.controls[position];\r\n        const index = controls.length;\r\n        controls.push(controlDiv);\r\n        return () => {\r\n            controls.removeAt(index);\r\n        };\r\n    });\r\n\r\n    return createPortal(\r\n        <div style={{ marginBottom: 8, marginTop: 8 }}>{children}</div>,\r\n        controlDiv\r\n    );\r\n}\r\n\r\nCustomControlsManager.contextTypes = {\r\n    [MAP]: PropTypes.object,\r\n};","import React, {useEffect, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow} from \"react-google-maps\"\r\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport MapToolbar from \"./MapToolbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport MapLock from \"./MapLock\";\r\nimport CustomControlsManager from \"./CustomControlsManager\";\r\nimport ExploreIcon from '@material-ui/icons/Explore';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../../Networking/API\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from \"@material-ui/core/Card\";\r\nvar buildUrl = require('build-url');\r\nconst styles = theme => ({ largeIcon: {\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n    }});\r\n\r\nconst MapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        defaultZoom={15}\r\n        ref={props.refInstance}\r\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\r\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n        {props.children}\r\n\r\n    </GoogleMap>\r\n\r\n);\r\n\r\n\r\n\r\nfunction PlaceMap({classes, placeInfo,locationMarker,setLocationMarker,setParkingLocationMarker}) {\r\n\r\n    const [otherPlacesData, setOtherPlacesData] = useState([]);\r\n    const [infoWindows, setInfoWindows] = useState([]);\r\n\r\n    const [isLocked, setIsLocked] = useState(placeInfo.placeId !== \"\");\r\n    const refMap = useRef(null);\r\n\r\n    function mapToolbarCallback(location) {\r\n        setParkingLocationMarker(location);\r\n        setLocationMarker(location)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getClosestPlaces()\r\n    },[locationMarker]);\r\n\r\n    function getClosestPlaces(){\r\n        API.Places.getAllPlacesAdmin(buildUrl(null, {\r\n            queryParams: {\r\n                p: \"0\",\r\n                s: \"10\",\r\n                range: 3,\r\n                l: [locationMarker.latitude, locationMarker.longitude]\r\n            }\r\n        })).then(response=>{\r\n            setOtherPlacesData(response.list);\r\n        }).catch(error=>{\r\n\r\n        })\r\n    }\r\n\r\n    function onMarkerDragEnd(event) {\r\n        let newLat = event.latLng.lat(),\r\n            newLng = event.latLng.lng();\r\n        geocodeFromLatLng(newLat, newLng).then(location => {\r\n            setLocationMarker(location);\r\n            setParkingLocationMarker(location)\r\n        })\r\n    }\r\n    \r\n    return <React.Fragment>\r\n        <MapToolbar\r\n            isLocked={isLocked}\r\n            locationCallback={mapToolbarCallback}/>\r\n\r\n        <MapComponent\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            refInstance={refMap}\r\n            position={locationMarker}\r\n        >\r\n            {\r\n                otherPlacesData.map((location, i) =>{\r\n                    const latitude = parseFloat(location.latitude);\r\n                    const longitude = parseFloat(location.longitude);\r\n                        return placeInfo.placeId === \"\" ? <Marker\r\n                            key={location.placeId}\r\n                            zIndex={1}\r\n                            position={{lat: latitude, lng: longitude}}\r\n                            icon={{\r\n                                url: require('../../res/selectedTourIcon.svg'),\r\n                                scaledSize: new window.google.maps.Size(48, 48),\r\n                                origin: new window.google.maps.Point(0, 0)\r\n                            }}\r\n                            onClick={() => {\r\n                                if (!isLocked) {\r\n                                    let markers = Object.assign([], infoWindows);\r\n                                    markers[i] = true;\r\n                                    setInfoWindows(markers)\r\n                                }\r\n                            }}\r\n                        >\r\n                            {infoWindows[i] && (\r\n                                <InfoWindow onCloseClick={() => {\r\n                                    let markers = Object.assign([], infoWindows);\r\n                                    markers[i] = false;\r\n                                    setInfoWindows(markers)\r\n                                }\r\n                                }>\r\n\r\n                                    <Card style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                                        {location.photos.length > 0 ? <Avatar alt=\"Remy Sharp\" src={location.photos[0].url}\r\n                                                                          className={classes.largeIcon}/> : null}\r\n                                        <Typography variant=\"h6\">\r\n                                            {location.name}\r\n                                        </Typography>\r\n\r\n                                    </Card>\r\n                                </InfoWindow>\r\n                            )}\r\n                        </Marker> : null\r\n\r\n                })\r\n            }\r\n\r\n            <Marker\r\n                name={'Dolores park'}\r\n                visible={true}\r\n                draggable={!isLocked}\r\n                zIndex={2}\r\n                onDragEnd={e => onMarkerDragEnd(e)}\r\n                position={{lat: locationMarker.latitude, lng: locationMarker.longitude}}>\r\n            </Marker>\r\n\r\n            <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\r\n                <div>\r\n                    <IconButton aria-label=\"delete\" onClick={()=>{\r\n                        if(!isLocked){\r\n                            const mapCenter = refMap.current.getCenter();\r\n                            geocodeFromLatLng(mapCenter.lat(), mapCenter.lng()).then(location=>{\r\n                                setLocationMarker(location)\r\n                                setParkingLocationMarker(location)\r\n                            });\r\n                        }\r\n                    }}>\r\n                        <ExploreIcon fontSize={\"large\"}/>\r\n                    </IconButton>\r\n                </div>\r\n            </CustomControlsManager>\r\n        </MapComponent>\r\n\r\n\r\n\r\n        <MapLock\r\n            isLocked={isLocked}\r\n            setIsLocked={setIsLocked}\r\n        />\r\n    </React.Fragment>\r\n\r\n\r\n}\r\n\r\nPlaceMap.propTypes = {\r\n    locationMarker: PropTypes.object.isRequired,\r\n    setLocationMarker: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PlaceMap)","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PlaceMap from \"../maps/PlaceMap\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction PlaceLocation({locationData, setLocationData, setParkingLocation, placeInfo}) {\r\n\r\n    function changeLocationData(event){\r\n        const {name, value} = event.target;\r\n        let data = Object.assign({}, locationData, {});\r\n        data[name] = value;\r\n\r\n        setParkingLocation(data);\r\n        setLocationData(data)\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select place location from map\r\n        </Typography>\r\n        <br/>\r\n        <PlaceMap\r\n            placeInfo={placeInfo}\r\n            locationMarker={locationData}\r\n            setParkingLocationMarker={setParkingLocation}\r\n            setLocationMarker={setLocationData}\r\n        />\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Place location\r\n        </Typography>\r\n        <br/>\r\n        <TextField\r\n            required\r\n            label=\"Address\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place address\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['address']}\r\n            name='address'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"City\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place city\"\r\n            fullWidth\r\n            value={locationData['city']}\r\n            name='city'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"County\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place county\"\r\n            fullWidth\r\n            value={locationData['county']}\r\n            name='county'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Municipality\"\r\n            disabled\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place municipality\"\r\n            fullWidth\r\n            value={locationData['municipality']}\r\n            name='municipality'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            required\r\n            label=\"Country\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Enter place country\"\r\n            fullWidth\r\n            disabled\r\n            value={locationData['country']}\r\n            name='country'\r\n            onChange={e=>{changeLocationData(e)}}\r\n            variant=\"outlined\"\r\n            rows={4}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceLocation)","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from \"react-google-maps\";\r\nimport {geocodeFromLatLng} from \"./MapGeolocation\";\r\nimport MapToolbar from \"./MapToolbar\";\r\nimport API from \"../../Networking/API\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CustomControlsManager from \"./CustomControlsManager\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExploreIcon from \"@material-ui/icons/Explore\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\n\r\nconst MapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        ref={props.refInstance}\r\n        defaultZoom={12}\r\n        center={{lat: props.position.latitude, lng: props.position.longitude }}\r\n        defaultCenter={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n        <Marker\r\n            onClick={()=>{if(!props.isLocked)props.setMainInfoWindow(true)}}\r\n            name={'Dolores park'}\r\n            visible={true}\r\n            draggable={!props.isLocked}\r\n            onDragEnd={e => onMarkerDragEnd(e, props.setPosition)}\r\n            position={{lat: props.position.latitude, lng: props.position.longitude}}>\r\n\r\n            {props.mainInfoWindow && (\r\n                <InfoWindow onCloseClick={()=>{props.setMainInfoWindow(false)}}>\r\n                    <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                        {props.position.address}\r\n                        <Button\r\n                            onClick={()=>{\r\n                                let c = nearestParkingCount(props.position, props.parkingData);\r\n                                if(c>0){\r\n                                    props.addAlertConfig(\"Parkings nearby already exist!\", c+\" parking(-s) within 150 meter already exist(-s).\" +\r\n                                        \" Are you sure you don't want to use already existings parking locations?\",[{name:\"ADD NEW PARKING!\", action: ()=>{\r\n                                            props.addNewParking(props.position)\r\n                                        }}])\r\n                                }else{\r\n                                    props.addNewParking(props.position)\r\n                                }\r\n                            }}\r\n                            variant=\"text\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            startIcon={<AddIcon />}>\r\n                            Add new parking\r\n                        </Button>\r\n                    </div>\r\n                </InfoWindow>\r\n            )}\r\n        </Marker>\r\n\r\n        <CustomControlsManager position={window.google.maps.ControlPosition.BOTTOM_CENTER}>\r\n            <div>\r\n                <IconButton aria-label=\"delete\" onClick={()=>{\r\n                    if(!props.isLocked){\r\n                        let loc = Object.assign({},props.position, {});\r\n                        const mapCenter = props.refInstance.current.getCenter();\r\n                        loc.latitude = mapCenter.lat();\r\n                        loc.longitude = mapCenter.lng();\r\n                        props.setPosition(loc)\r\n                    }\r\n                }}>\r\n                    <ExploreIcon fontSize={\"large\"}/>\r\n                </IconButton>\r\n            </div>\r\n        </CustomControlsManager>\r\n\r\n        {\r\n            props.parkingData.map((location, i) =>{\r\n                const latitude = parseFloat(location.latitude);\r\n                const longitude = parseFloat(location.longitude);\r\n                console.log(parkingIsAttached(location, props.selectedParkingData));\r\n                return <Marker\r\n                    key={location.parkingId}\r\n                    position={{ lat: latitude, lng: longitude}}\r\n                    icon={{\r\n                        url: parkingIsAttached(location, props.selectedParkingData) ? require('../../res/selectedParking.svg') :\r\n                            require('../../res/availableParking.svg'),\r\n                        scaledSize: new window.google.maps.Size(20, 48),\r\n                        origin: new window.google.maps.Point(0, 0),\r\n                        anchor: new window.google.maps.Point(10, 35)\r\n                    }}\r\n                    onClick={()=>{\r\n                        if(!props.isLocked){\r\n                            let markers = Object.assign({},props.parkingInfoWindows, {});\r\n                            markers[i] = true;\r\n                            props.setParkingInfoWindows(markers)\r\n                        }\r\n                    }}\r\n                >\r\n                    {props.parkingInfoWindows[i] && (\r\n                        <InfoWindow onCloseClick={()=>{\r\n                                let markers = Object.assign({},props.parkingInfoWindows, {});\r\n                                markers[i] = false;\r\n                                props.setParkingInfoWindows(markers)\r\n                            }\r\n                        }>\r\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                                <Typography variant=\"h6\">\r\n                                    {location.address}\r\n                                </Typography>\r\n                                {parkingIsAttached(location, props.selectedParkingData) ? <div>\r\n                                        <Alert severity=\"success\">This parking location is already attached! See below in \"Selected parking locations\" section.</Alert>\r\n                                </div> :\r\n                                <Button\r\n                                    onClick={()=>{props.addExistingParking(location)}}\r\n                                    variant=\"text\"\r\n                                    color=\"secondary\"\r\n                                    size=\"large\"\r\n                                    startIcon={<AddIcon />}>\r\n                                    Add parking\r\n                                </Button>\r\n                                }\r\n                            </div>\r\n                        </InfoWindow>\r\n                    )}\r\n\r\n                </Marker>\r\n\r\n            })\r\n        }\r\n\r\n    </GoogleMap>\r\n);\r\n\r\nfunction parkingIsAttached(parking, selectedParkingData) {\r\n    for(let i = 0; i<selectedParkingData.length; i++){\r\n        if(selectedParkingData[i].address === parking.address)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction calcCrow(lat1, lon1, lat2, lon2)\r\n{\r\n    var R = 6371; // km\r\n    var dLat = toRad(lat2-lat1);\r\n    var dLon = toRad(lon2-lon1);\r\n    var lat1 = toRad(lat1);\r\n    var lat2 = toRad(lat2);\r\n\r\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    var d = R * c;\r\n    return d;\r\n}\r\nfunction toRad(Value) {return Value * Math.PI / 180}\r\n\r\nfunction nearestParkingCount(parking, parkingData){\r\n    let count = 0;\r\n    for(let i = 0; i<parkingData.length; i++){\r\n        let distance = calcCrow(parking.latitude, parking.longitude, parkingData[i].latitude, parkingData[i].longitude);\r\n        if(distance<=0.15){\r\n            count++;\r\n        }\r\n    }\r\n    return count\r\n}\r\n\r\n\r\nfunction onMarkerDragEnd(event, setLocationMarker) {\r\n    let newLat = event.latLng.lat(),\r\n        newLng = event.latLng.lng();\r\n    geocodeFromLatLng(newLat, newLng).then(location => {\r\n        setLocationMarker(location)\r\n    })\r\n}\r\n\r\nfunction ParkingMap({placeInfo,\r\n                        locationMarker,\r\n                        setLocationMarker,\r\n                        addNewParking,\r\n                        addExistingParking,\r\n                        selectedParkingData\r\n                    }) {\r\n\r\n    const [parkingData, setParkingData] = useState([]);\r\n    const [mainInfoWindow, setMainInfoWindow] = useState(false);\r\n    const [parkingInfoWindows, setParkingInfoWindows] = useState(false);\r\n    const [isLocked, setIsLocked] = useState(false);\r\n    const refMap = useRef(null);\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    function getClosestParking(){\r\n        API.Parking.getParkingByLocation(\"?lat=\"+locationMarker.latitude+\"&lng=\"+locationMarker.longitude).then(response=>{\r\n            setParkingData(response);\r\n        }).catch(error=>{\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getClosestParking()\r\n    },[locationMarker]);\r\n\r\n    function mapToolbarCallback(location) {\r\n        setMainInfoWindow(true);\r\n        setLocationMarker(location)\r\n    }\r\n\r\n    return <React.Fragment>\r\n        <MapToolbar\r\n            isLocked={isLocked}\r\n            locationCallback={mapToolbarCallback}/>\r\n\r\n        <MapComponent\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            mainInfoWindow={mainInfoWindow}\r\n            setMainInfoWindow={setMainInfoWindow}\r\n            addNewParking={addNewParking}\r\n            addExistingParking={addExistingParking}\r\n            parkingInfoWindows={parkingInfoWindows}\r\n            setParkingInfoWindows={setParkingInfoWindows}\r\n            parkingData={parkingData}\r\n            position={locationMarker}\r\n            setPosition={setLocationMarker}\r\n            isLocked={isLocked}\r\n            refInstance={refMap}\r\n            selectedParkingData={selectedParkingData}\r\n            addAlertConfig={addAlertConfig}\r\n        />\r\n\r\n    </React.Fragment>\r\n}\r\n\r\n\r\nParkingMap.propTypes = {\r\n    placeInfo: PropTypes.object.isRequired,\r\n    locationMarker: PropTypes.object.isRequired,\r\n    setLocationMarker: PropTypes.func.isRequired,\r\n    addNewParking: PropTypes.func.isRequired,\r\n    addExistingParking: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ParkingMap","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../../Networking/API\";\r\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport ParkingMap from \"../maps/ParkingMap\";\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction ParkingLocation({classes, locationData, setLocationData, allSelectedParkingData, setAllSelectedParkingData, placeInfo}) {\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\r\n    };\r\n\r\n    function addNewParking(markerData){\r\n        if(!parkingExists(markerData)){\r\n            API.Parking.insertNewParking([markerData]).then(response=>{\r\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\r\n                addConfig(true)\r\n            }).catch(error=>{\r\n                addConfig(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    function addExistingParking(location) {\r\n        if(!parkingExists(location)){\r\n            setAllSelectedParkingData(oldArray=> [...oldArray, location])\r\n        }\r\n    }\r\n\r\n    function parkingExists(markerData){\r\n        for(let i = 0; i<allSelectedParkingData.length; i++){\r\n            if(allSelectedParkingData[i].address === markerData.address){\r\n                addConfig(false, \"This parking is already attached!\");\r\n                return true;\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    const SortableItem = SortableElement(({value}) => (\r\n        <Paper className={classes.paper} elevation={3}>\r\n            <Typography>\r\n                {value.address}\r\n            </Typography>\r\n            <IconButton aria-label=\"delete\" className={classes.margin}\r\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </Paper>\r\n    ));\r\n\r\n\r\n    const SortableList = SortableContainer(({items}) => {\r\n        return (\r\n            <ul>\r\n                {items.map((value, index) => (\r\n                <SortableItem key={index} index={index} value={value} />\r\n                ))}\r\n            </ul>\r\n        );\r\n    });\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Add parking\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select parking\r\n        </Typography>\r\n\r\n        <ParkingMap\r\n            selectedParkingData={allSelectedParkingData}\r\n            placeInfo={placeInfo}\r\n            locationMarker={locationData}\r\n            setLocationMarker={setLocationData}\r\n            addNewParking={addNewParking}\r\n            addExistingParking={addExistingParking}\r\n        />\r\n\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Selected parking locations\r\n        </Typography>\r\n        {allSelectedParkingData.length === 0 ? <Alert severity=\"error\">\r\n            This place has no selected parking! To select parking for this place do the following:\r\n            <br/>\r\n            1. Select your current location or any other location\r\n            <br/>\r\n            2. Select already existing nearby parking locations and click add\r\n            <br/>\r\n            3. If none of the location is valid, click on the orange marker and add new parking\r\n            </Alert> :\r\n            <SortableList pressDelay={200} disableAutoscroll={false} items={allSelectedParkingData} onSortEnd={onSortEnd} />\r\n        }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(ParkingLocation)","import React, { useState, useCallback } from 'react';\r\n\r\nexport const EditDialogContext = React.createContext({\r\n    dialogConfig: null,\r\n    dialogOpen: null,\r\n    setDialogOpen: null,\r\n    addEditDialogConfig: () => {},\r\n    removeEditDialogConfig: () => {}\r\n});\r\n\r\nconst defaultOptions = {\r\n\r\n    /**\r\n     * The dialog's title.\r\n     */\r\n    title: \"Sample title\",\r\n\r\n    /**\r\n     * Object, that defines an error message for each error returned by validateInput function.\r\n     * Should follow this structure: {errorCode: \"message\", differentErrorCode: \"Message\"}\r\n     * Keys of this object are integers (that represent the error code)\r\n     */\r\n    errorMessages: {},\r\n\r\n    /**\r\n     * Explanation text for this dialog.\r\n     */\r\n    explanation: \"Sample explanation\",\r\n\r\n    /**\r\n     * A callback for when user presses cancel.\r\n     */\r\n    onCloseCallback: () => {},\r\n\r\n    /**\r\n     * A callback for when the user input passes error checks and done button is pressed\r\n     * @param input is the input text\r\n     */\r\n    onDoneCallback: (input) => {},\r\n\r\n    /**\r\n     * The label text to be displayed above textfield\r\n     */\r\n    textFieldLabel: \"Type here\",\r\n\r\n    /**\r\n     * Should return 0 if input is valid.\r\n     * If the input is not valid, it should return an error code.\r\n     * Any returned code, that is not 0 is considered to be an error.\r\n     * The error code returned may have a message in errorMessages prop.\r\n     * @param input\r\n     * @returns {number}\r\n     */\r\n    validateInput: (input) => 0,\r\n\r\n    /**\r\n     * The default text to be displayed in TextField\r\n     */\r\n    defaultText: \"\"\r\n}\r\n\r\nexport default function EditDialogProvider({ children }) {\r\n    const [dialogConfig, setDialogConfig] = useState(defaultOptions);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const contextValue = {\r\n        dialogConfig,\r\n        dialogOpen: dialogOpen,\r\n        setDialogOpen: setDialogOpen,\r\n        addEditDialogConfig: (options) => {\r\n            setDialogConfig({\r\n                ...defaultOptions,\r\n                ...options\r\n            })\r\n            setDialogOpen(true)\r\n        },\r\n        removeEditDialogConfig: () => setDialogConfig(null)\r\n    };\r\n\r\n    return (\r\n        <EditDialogContext.Provider value={contextValue}>\r\n            {children}\r\n        </EditDialogContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {EditDialogContext} from \"./EditDialogContext\";\r\n\r\nexport default function UseEditDialogContext() {\r\n    const { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen } = useContext(EditDialogContext);\r\n    return { dialogConfig, addEditDialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen};\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutocompleteChip from \"../AutocompleteChip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport API from \"../../Networking/API\";\r\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\n\r\nconst styles = theme => ({\r\n    outline: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"8px\"\r\n    },\r\n});\r\n\r\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories}) {\r\n\r\n    const [availableCategories, setAvailableCategories] = useState([]);\r\n    const [availableTags, setAvailableTags] = useState([]);\r\n\r\n    const {addEditDialogConfig} = UseEditDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    const updateTags = () => {\r\n        API.Tags.getAllTags().then(response=>{\r\n            setAvailableTags(response);\r\n            console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    };\r\n    const updateCategories = () => {\r\n        API.Categories.getAllCategories().then(response=>{\r\n            setAvailableCategories(response)\r\n            console.log(response);\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        });\r\n    };\r\n\r\n    useEffect(()=>{\r\n        updateTags();\r\n        updateCategories();\r\n    },[]);\r\n\r\n\r\n    const promptAddTag = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add tag\",\r\n            explanation: \"Type the tag name\",\r\n            onDoneCallback: (tagName) => {\r\n                API.Tags.addTag([{name: tagName}]).then(response=>{\r\n                    let newTag = {tagId: response[0], name: tagName}\r\n                    setAvailableTags(\r\n                        [\r\n                            ...availableTags,\r\n                            newTag\r\n                        ]\r\n                    );\r\n                    setSelectedTags([\r\n                        ...selectedTags,\r\n                        newTag\r\n                    ]);\r\n\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to add tag.\")\r\n                })\r\n            },\r\n            errorMessages: {\r\n                1: \"The tag name is too short\",\r\n                2: \"A tag with identical name already exists. You should choose the existing tag instead\"\r\n            },\r\n            validateInput: (input) => {\r\n                if(input.length < 0){\r\n                    return 1 //Input too short\r\n                }else if(availableTags.filter(item => item.name === input).length !== 0){\r\n                    return 2 //Identical tag already exists\r\n                }\r\n                return 0\r\n            },\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const promptAddCategory = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add category\",\r\n            explanation: \"Type the category name\",\r\n            onDoneCallback: (categoryName) => {\r\n                API.Categories.addCategory([{name: categoryName}]).then(response=>{\r\n                    let newCat = {categoryId: response[0], name: categoryName};\r\n                    setAvailableCategories(\r\n                        [\r\n                            ...availableCategories,\r\n                            newCat\r\n                        ]\r\n                    );\r\n                    setSelectedCategories([\r\n                        ...selectedCategories,\r\n                        newCat\r\n                    ]);\r\n                }).catch(error=>{\r\n                    addConfig(false, \"Failed to add category.\")\r\n                })\r\n            },\r\n            errorMessages: {\r\n                1: \"The category name is too short\",\r\n                2: \"A category with identical name already exists. You should choose the existing category instead\"\r\n            },\r\n            validateInput: (input) => {\r\n                if(input.length < 0){\r\n                    return 1 //Input too short\r\n                }else if(availableCategories.filter(item => item.name === input).length !== 0){\r\n                    return 2 //Identical category already exists\r\n                }\r\n                return 0\r\n            },\r\n            textFieldLabel: \"Restaurant, hotel, hiking...\"\r\n        })\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Place discovery settings\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select tags\r\n        </Typography>\r\n        <AutocompleteChip label=\"Select tags\"\r\n                          id=\"tagId\"\r\n                          options={availableTags}\r\n                          setOptions={setAvailableTags}\r\n                          selectedOptions={selectedTags}\r\n                          setSelectedOptions ={setSelectedTags}/>\r\n\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={promptAddTag}\r\n            startIcon={<AddIcon />}>\r\n            Add missing tag\r\n        </Button>\r\n\r\n        <br/>\r\n        <br/>\r\n        <Typography variant=\"subtitle1\" >\r\n            Select categories\r\n        </Typography>\r\n        <AutocompleteChip label=\"Select categories\"\r\n                          id=\"categoryId\"\r\n                          options={availableCategories}\r\n                          setOptions={setAvailableCategories}\r\n                          selectedOptions={selectedCategories} \r\n                          setSelectedOptions={setSelectedCategories}/>\r\n        <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={promptAddCategory}\r\n            startIcon={<AddIcon />}>\r\n            Add missing category\r\n        </Button>\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(PlaceDiscovery)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        width: \"20%\",\r\n        padding: \"2px\",\r\n        marginRight: \"16px\"\r\n    },\r\n\r\n});\r\nexport default function ReviewCard({review}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <div style={{display: \"flex\"}} >\r\n                    <Avatar alt=\"Cindy Baker\" src={!!review.photoUrl ? review.photoUrl : \"/broken-image.jpg\"} />\r\n                    <div style={{display: \"flex\", flexDirection: \"column\", marginLeft:\"8px\"}}>\r\n                        <Typography title=\"subtitle1\">\r\n                            {review.name} {review.surname}\r\n                        </Typography>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <Rating size=\"small\" name=\"read-only\" value={review.rating} readOnly />\r\n                            <Typography title=\"subtitle1\">\r\n                                {\"+\" + review.upvotes}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                    {moment(review.timeAdded).format('LL')}\r\n                </Typography>\r\n                <div style={{marginTop: \"16px\"}}>\r\n                    {review.title}\r\n                </div>\r\n                <Typography title=\"subtitle1\">\r\n                        {review.review}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ReviewCard from \"../ReviewCard\";\r\nimport API from \"../../Networking/API\";\r\nimport debounce from \"lodash/debounce\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nconst styles = theme => ({\r\n    reviewsInfo:{\r\n        display: \"flex\",\r\n    },\r\n    reviews:{\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        margin: theme.spacing(2),\r\n        overflowX: \"scroll\"\r\n    },\r\n    sortingButtons: {\r\n        padding: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction Reviews({classes, placeInfo}) {\r\n\r\n    const [reviews, setReviews] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    const [filterBy, setFilterBy] = useState('mostRated');\r\n\r\n    function getReviewsForPlace(urlParams = \"?p=\"+placeInfo.placeId) {\r\n        API.Reviews.getPlaceReviews(urlParams).then(response=>{\r\n            setReviews(old=>[...old, ...response.list]);\r\n            setIsLoading(false)\r\n        }).catch(error=>{\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    //Get ordered by new filter\r\n    useEffect(()=>{\r\n            getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=1&o=\"+filterBy)\r\n    },[filterBy]);\r\n\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollWidth - e.target.scrollLeft - scrollOffset)  <= e.target.clientWidth;\r\n        if (bottom && !isLoading && reviews.length>0 && reviews.length<placeInfo.totalReviews) {\r\n            setIsLoading(true);\r\n            setPage(old=>{\r\n                getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=\"+(old+1)+\"&o=\"+filterBy);\r\n                return old+1\r\n            });\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    function changeSorting(e){\r\n        const {name, value} = e.target;\r\n        setFilterBy(value);\r\n        setReviews([]);\r\n        setPage(1);\r\n        handleClose()\r\n    }\r\n\r\n\r\n    return <div>\r\n        <Typography variant=\"h6\" >\r\n            Reviews\r\n            <br/>\r\n            {\r\n               reviews.length > 0 ?\r\n                   <React.Fragment>\r\n                       <div style={{display:\"flex\", justifyContent: \"space-between\"}}>\r\n                           <div className={classes.reviewsInfo}>\r\n                               <Rating name=\"read-only\" value={placeInfo.overallStarRating} precision={0.2} readOnly />\r\n                               <Typography style={{marginLeft:\"8px\"}} variant=\"subtitle1\">\r\n                                   {placeInfo.totalReviews} reviews\r\n                               </Typography>\r\n                           </div>\r\n                           <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                               <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                                   <FilterListIcon />\r\n                               </IconButton>\r\n                           </Tooltip>\r\n                           <Popover\r\n                               id={id}\r\n                               open={open}\r\n                               anchorEl={anchorEl}\r\n                               onClose={handleClose}\r\n                               anchorOrigin={{\r\n                                   vertical: 'bottom',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                               transformOrigin={{\r\n                                   vertical: 'top',\r\n                                   horizontal: 'center',\r\n                               }}\r\n                           >\r\n                               <RadioGroup className={classes.sortingButtons} aria-label=\"gender\" value={filterBy} name=\"gender1\"  onChange={changeSorting}>\r\n                                   <FormControlLabel value=\"mostRated\" control={<Radio />} label=\"Most rated\" />\r\n                                   <FormControlLabel value=\"newest\" control={<Radio />} label=\"Newest\" />\r\n                               </RadioGroup>\r\n                           </Popover>\r\n                       </div>\r\n\r\n                       <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                           <Typography>\r\n                               Showing: {reviews.length} out of {placeInfo.totalReviews}\r\n                           </Typography>\r\n                           <Typography>\r\n                               Sorting by: {filterBy}\r\n                           </Typography>\r\n                       </div>\r\n                       <div className={classes.reviews} onScroll={e=>handleScroll(e)}>\r\n                           {reviews.map(row=>{\r\n                               return <ReviewCard review={row}/>\r\n                           })}\r\n                       </div>\r\n                   </React.Fragment> : <Typography> No reviews for this place</Typography>\r\n            }\r\n\r\n        </Typography>\r\n        <br/>\r\n        {isLoading ? <LinearProgress/> : null }\r\n    </div>\r\n}\r\n\r\nexport default withStyles(styles)(Reviews)","import React, { useState } from 'react';\r\n\r\nexport const AppBarTitleContext = React.createContext({\r\n    title: \"\",\r\n    setTitle: () => {},\r\n});\r\n\r\nexport default function AppBarTitleProvider({ children }) {\r\n    const [title, setTitle] = useState(\"Home\");\r\n\r\n    const contextValue = {\r\n        title,\r\n        setTitle: (title) => setTitle(title)\r\n    };\r\n\r\n    return (\r\n        <AppBarTitleContext.Provider value={contextValue}>\r\n            {children}\r\n        </AppBarTitleContext.Provider>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\nimport {AppBarTitleContext} from \"./AppBarTitleContext\";\r\n\r\nexport default function UseAppBarTitleContext() {\r\n    const { title, setTitle } = useContext(AppBarTitleContext);\r\n    return { title, setTitle };\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport API from \"../../Networking/API\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n\r\n});\r\n\r\nfunction AddRecommendationDialog({classes, open, setOpen, addCallback}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [data, setData] = useState({name: \"\", subtitle: \"\", description: \"\", type: \"1\"});\r\n    const [error, setError] = useState({name: false, subtitle: false, description: false});\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let recData = { ...data }\r\n        recData[name] = value\r\n        setData(recData)\r\n    };\r\n\r\n    function addRecommendation(){\r\n        if(checkErrors()){\r\n            return\r\n        }\r\n        setLoading(true)\r\n        addAlertConfig(\"Add new recommendation\", \"Are you sure you want to add this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Recommendation.createRecommendation(data).then(id=>{\r\n                    let insertedData = { ...data }\r\n                    insertedData.id = id\r\n                    addConfig(true, \"Recommendation added successfully\")\r\n                    addCallback(insertedData)\r\n                    setOpen(false)\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong. Please try again.\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    function checkErrors(){\r\n        let errors = Object.assign({}, error)\r\n        let hasErrors = false;\r\n        for (let key in data) {\r\n            errors[key] = data[key] === \"\" || data[key] === -1;\r\n            if(errors[key] === true){\r\n                hasErrors = true\r\n            }\r\n        }\r\n        setError(errors);\r\n        return hasErrors\r\n    }\r\n\r\n    function recommendationTypeChanged(event) {\r\n        let recData = { ...data }\r\n        recData.type = event.target.value\r\n\r\n        setData(recData)\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add new recommendation</DialogTitle>\r\n            <DialogContent>\r\n                <div className={classes.root}>\r\n                    <TextField id=\"outlined-basic\"\r\n                               error={error.title}\r\n                               required\r\n                               label=\"Title\"\r\n                               name=\"name\"\r\n                               value={data['name']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               error={error.subtitle}\r\n                               label=\"Subtitle\"\r\n                               name=\"subtitle\"\r\n                               value={data['subtitle']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               error={error.description}\r\n                               label=\"Description\"\r\n                               name=\"description\"\r\n                               value={data['description']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <FormControl component=\"fieldset\" style={{marginTop: 32}}>\r\n                        <FormLabel component=\"legend\">Recommendation type</FormLabel>\r\n                        <RadioGroup aria-label=\"rec\" name=\"rec1\" value={data.type} onChange={recommendationTypeChanged}>\r\n                            <FormControlLabel value=\"1\" control={<Radio />} label=\"Places recommendation\" />\r\n                            <FormControlLabel value=\"2\" control={<Radio />} label=\"Tours recommendation\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </div>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        addRecommendation()\r\n                    }}\r\n                >\r\n                    Create recommendation\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(AddRecommendationDialog)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport API from \"../../Networking/API\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport history from \"../../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddRecommendationDialog from \"./AddRecommendationDialog\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport debounce from \"lodash/debounce\";\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start'\r\n    }\r\n});\r\n\r\nfunction RecommendationListDialog({classes, open, setOpen, objectId, type}){\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [recommendations, setRecommendations] = useState([]);\r\n    const [pagingData, setPagingData] = useState({pageNum: 1})\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [showAddNewRecommendation, setShowAddNewRecommendation] = useState(false)\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    function getRecommendations(page, keywordChange = false) {\r\n        API.Recommendation.getAllRecommendations(\"?p=\"+page+\"&keyword=\"+keyword+\"&type=\"+type).then(response=>{\r\n            if(keywordChange){\r\n                setRecommendations(response.list)\r\n            }else{\r\n                setRecommendations(old=>[...old, ...response.list])\r\n            }\r\n            delete response.list\r\n            setPagingData(response)\r\n        }).catch().finally(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        console.log(\"Handle scroll\")\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollHeight - e.target.scrollTop - scrollOffset)  <= e.target.clientHeight;\r\n        if (bottom && !loading && recommendations.length>0 && pagingData.pageNum<pagingData.pages) {\r\n            setLoading(true);\r\n            console.log(\"Requesting new page\")\r\n            getRecommendations(pagingData.pageNum+1);\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Keyword changed\")\r\n        getRecommendations(1, true);\r\n    }, [keyword])\r\n\r\n\r\n    function addPlaceToRecommendation(rec) {\r\n      API.Recommendation.addObjectToRecommendation({id: objectId, recommendationId: rec.id}).then(()=>{\r\n              addConfig(true, \"Added object to recommendation successfully!\")\r\n      }).catch(()=>{\r\n              addConfig(true, \"Failed to add!\")\r\n          }\r\n      ).finally(()=>{\r\n          setOpen(false)\r\n      })\r\n    }\r\n\r\n    function addNewRecommendationCallback(recommendation){\r\n        let recData = { ...recommendations }\r\n        recData.unshift(recommendation)\r\n\r\n        setRecommendations(recData)\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"sm\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add to recommendation</DialogTitle>\r\n            <DialogContent>\r\n                <div className={classes.root}>\r\n                    <div className={classes.root} >\r\n                        <TextField id=\"standard-search\" label=\"Search field\" value={keyword} type=\"search\" onChange={e=>{\r\n                            setKeyword(e.target.value)\r\n                        }} />\r\n                        {recommendations.length > 0 ?\r\n                            <React.Fragment>\r\n                                <List component=\"nav\" style={{ overflowY: \"scroll\", width: '100%', maxHeight: 400}} onScroll={handleScroll} aria-label=\"main mailbox folders\">\r\n                                    {recommendations.map(row=>{\r\n                                        return <ListItem style={{width: '100%'}} button onClick={()=>{addPlaceToRecommendation(row)}}>\r\n                                            <ListItemIcon>\r\n                                                <CheckBoxOutlineBlankIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={row.name} />\r\n                                        </ListItem>\r\n                                    })}\r\n\r\n                                </List>\r\n                            </React.Fragment>\r\n                            :\r\n\r\n                            <Alert severity=\"info\">Recommendations list is empty. You can add new recommendation below.</Alert>\r\n                        }\r\n\r\n\r\n                    </div>\r\n                    <Divider style={{width: '100%'}} />\r\n                    <Button\r\n                        onClick={()=>setShowAddNewRecommendation(true)}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        startIcon={<AddIcon/>}>\r\n                        Create new recommendation\r\n                    </Button>\r\n                </div>\r\n            <AddRecommendationDialog\r\n                open={showAddNewRecommendation}\r\n                setOpen={setShowAddNewRecommendation}\r\n                addCallback={addNewRecommendationCallback}\r\n            />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RecommendationListDialog)\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {Fragment, useState} from \"react\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n\r\n    },\r\n    media: {\r\n        height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n})\r\n\r\nfunction CategoriesDisplay({categories}){\r\n    return(\r\n        categories != null &&\r\n        <Box component=\"ul\"  style={{\r\n            display: 'flex',\r\n            justifyContent: 'left',\r\n            flexWrap: 'wrap',\r\n            listStyle: 'none',\r\n            padding: '0px'\r\n        }}>\r\n            {categories.map((data, index) => {\r\n                return (\r\n                    <li key={index}>\r\n                        <Chip\r\n                            variant=\"outlined\"\r\n                            style={{margin: \"5px\"}}\r\n                            label={data.name}\r\n                        />\r\n                    </li>\r\n\r\n                );\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction SubheaderDisplay({city, address, priceRange, rating}){\r\n    return(\r\n        <div>\r\n            {rating != null &&\r\n            <Fragment><Rating\r\n                readOnly={true}\r\n                value={rating}\r\n            /><br/></Fragment>}\r\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ApiPlaceCard({classes, placeData, renderActionArea}){\r\n\r\n    function truncateText(text){\r\n        if(text == null)\r\n            return \"\"\r\n        if(text.length > 500){\r\n            return text.substring(0, 500) + \"...\";\r\n        }else{\r\n            return text\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                action={\r\n                    renderActionArea != null && renderActionArea()\r\n                }\r\n                title={placeData.name}\r\n                subheader={<SubheaderDisplay  city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\r\n\r\n            />\r\n            {placeData.photos != null && placeData.photos.length > 0 &&\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={placeData.photos[0].url}\r\n            />}\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {truncateText(placeData.description)}\r\n                </Typography>\r\n\r\n                <CategoriesDisplay categories={placeData.categories}/>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n                {placeData.website}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nApiPlaceCard.propTypes = {\r\n    placeData: PropTypes.object.isRequired,\r\n    renderActionArea: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(ApiPlaceCard)","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\n\r\nconst styles = theme => ({\r\n    paperContent: {\r\n        marginTop: theme.spacing(4),\r\n        width: \"100%\",\r\n        padding: theme.spacing(2)\r\n    },\r\n});\r\n\r\nexport const RecommendationType = {\r\n    place: 1,\r\n    tour: 2\r\n}\r\n\r\nfunction Recommendation({classes, recommendation, onEditCallback}) {\r\n\r\n    return <Paper elevation = {4} className={classes.paperContent}>\r\n            <Chip\r\n                label={recommendation.type === 1 ? \"Place recommendation\" : \"Tour recommendation\"} />\r\n            <Typography variant=\"h6\">\r\n                {recommendation.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n                {recommendation.subtitle}\r\n            </Typography>\r\n\r\n            <div style={{display: \"flex\", flexDirection: 'row', overflowX: 'auto', width: '100%'}}>\r\n                <div style={{display:\"flex\", flexDirection: \"row\"}}>\r\n                    {recommendation.objects.length > 0 ?\r\n\r\n                        recommendation.objects.map((place, index)=>{\r\n                            delete place.description\r\n\r\n                            return <div style={{width: 300, padding: 16}}>\r\n                                <ApiPlaceCard placeData={place}/>\r\n                            </div>\r\n                        }) :\r\n\r\n                        <Alert severity=\"info\">This recommendation does not have any objects attached. You can attach\r\n                            Places or Tours by browsing in Places and Tours tables\r\n                        </Alert>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n        <Fragment>\r\n            <Button\r\n                style={{marginTop: 16}}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => onEditCallback()}\r\n                className={classes.button}>\r\n                Edit\r\n            </Button>\r\n        </Fragment>\r\n\r\n        </Paper>\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Recommendation)","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {DatePicker, TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport shortid from 'shortid';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n  },\r\n  intervalContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    margin: 0,\r\n    flexWrap: 'wrap',\r\n  },\r\n  pickerStyle: {\r\n    width: 50,\r\n    marginLeft: 3,\r\n    margin: 0,\r\n  }\r\n});\r\n\r\nfunction WorkingDayIntervals({classes, scheduleData, setScheduleData, scheduleOpenIndex, variantId, enableLastAccommodation}) {\r\n\r\n  const currentSchedule = scheduleData[scheduleOpenIndex];\r\n  const currentVariant = currentSchedule.variants.find(x => x.elementId === variantId)\r\n\r\n  const toggleSplitSchedule = () => {\r\n    if (currentVariant.shifts.length > 1)\r\n      setScheduleData(oldData => {\r\n        const newData = [...oldData];\r\n        const shifts = newData[scheduleOpenIndex].variants.find(variant => variantId === variant.elementId).shifts\r\n        while (shifts.length > 1)\r\n          shifts.pop()\r\n        return newData;\r\n      })\r\n    else\r\n      setScheduleData(oldData => {\r\n        const newData = [...oldData];\r\n        const shiftToPush = {\r\n          openTime: \"08:00\",\r\n          closeTime: \"18:00\",\r\n          elementId: shortid.generate()\r\n        }\r\n        if(enableLastAccommodation)\r\n          shiftToPush['lastAccommodation'] = \"18:00\"\r\n        newData[scheduleOpenIndex]\r\n            .variants\r\n            .find(variant => variantId === variant.elementId)\r\n            .shifts\r\n            .push(shiftToPush)\r\n        return newData;\r\n      })\r\n  }\r\n\r\n  const changeOpenTime = (shiftId, time) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      currentSchedule\r\n          .variants\r\n          .find(x => x.elementId === variantId)\r\n          .shifts\r\n          .find(shift => shift.elementId === shiftId)\r\n          .openTime = moment(time).format('HH:mm') ;\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const changeCloseTime = (shiftId, time) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      currentSchedule\r\n          .variants\r\n          .find(x => x.elementId === variantId)\r\n          .shifts\r\n          .find(shift => shift.elementId === shiftId)\r\n          .closeTime = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n  const changeLastAccommodationTime = (shiftId, time) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      currentSchedule\r\n          .variants\r\n          .find(x => x.elementId === variantId)\r\n          .shifts\r\n          .find(shift => shift.elementId === shiftId)\r\n          .lastAccommodation = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const shifts = currentVariant.shifts.map((shift, index) => {\r\n    const lastShift = index !== currentVariant.shifts.length - 1\r\n    const firstShift = index === 0\r\n    return (\r\n        <>\r\n          <div className={classes.intervalContainer}>\r\n\r\n            <Typography variant=\"h7\">\r\n              {firstShift ? 'O' : 'o'}pens at\r\n            </Typography>\r\n            <TimePicker\r\n                margin=\"normal\"\r\n                ampm={false}\r\n                className={classes.pickerStyle}\r\n                format=\"HH:mm\"\r\n                value={moment(shift.openTime, \"HH:mm\")}\r\n                onChange={(date) => changeOpenTime(shift.elementId, date)}\r\n            />\r\n            <Typography variant=\"h7\">\r\n              and closes at\r\n            </Typography>\r\n            <TimePicker\r\n                margin=\"normal\"\r\n                ampm={false}\r\n                className={classes.pickerStyle}\r\n                format=\"HH:mm\"\r\n                value={moment(shift.closeTime, \"HH:mm\")}\r\n                onChange={(date) => changeCloseTime(shift.elementId, date)}\r\n            />\r\n            {enableLastAccommodation &&\r\n            <>\r\n              <Typography variant=\"h7\">\r\n                last accommodation at\r\n              </Typography>\r\n              <TimePicker\r\n                  margin=\"normal\"\r\n                  ampm={false}\r\n                  className={classes.pickerStyle}\r\n                  format=\"HH:mm\"\r\n                  value={moment(shift.lastAccommodation, \"HH:mm\")}\r\n                  onChange={(date) => changeLastAccommodationTime(shift.elementId, date)}\r\n              />\r\n            </>\r\n            }\r\n\r\n          </div>\r\n          {lastShift && <Typography variant=\"h7\" style={{marginRight: 5}}>\r\n            THEN\r\n          </Typography>}\r\n        </>)\r\n  })\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        {shifts}\r\n        <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                  name=\"checkedB\"\r\n                  color=\"primary\"\r\n                  checked={currentVariant.shifts.length > 1}\r\n                  onChange={toggleSplitSchedule}\r\n              />\r\n            }\r\n            label=\"Split schedule\"\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(WorkingDayIntervals)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport WorkingShift from \"./WorkingShift\";\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    border: '1px dashed black',\r\n    padding: 8\r\n  },\r\n  weekdayPickerContainer: {\r\n    display: 'flex',\r\n    width: '100%'\r\n  },\r\n  weekdayButton: {\r\n    flex: 1,\r\n    margin: 5,\r\n    padding: 0,\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n  },\r\n  removeButtonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  }\r\n});\r\n\r\nexport const weekdays = [\r\n  {\r\n    id: 0,\r\n    name: \"Mon\",\r\n    fullName: \"Monday\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Tue\",\r\n    fullName: \"Tuesday\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Wed\",\r\n    fullName: \"Wednesday\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Thu\",\r\n    fullName: \"Thursday\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Fri\",\r\n    fullName: \"Friday\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Sat\",\r\n    fullName: \"Saturday\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Sun\",\r\n    fullName: \"Sunday\",\r\n  }\r\n]\r\n\r\n\r\nfunction WorkingHoursVariant({classes, enableLastAccommodation, scheduleData, setScheduleData, scheduleOpenIndex, variantId}) {\r\n\r\n  const currentSchedule = scheduleData[scheduleOpenIndex];\r\n  const currentVariant = currentSchedule.variants.filter(x => x.elementId === variantId)[0]\r\n\r\n  const toggleWeekday = (weekDayIndex) => {\r\n    setScheduleData(scheduleData => {\r\n      const newScheduleData = [...scheduleData];\r\n      let days = newScheduleData[scheduleOpenIndex].variants.find(item => item.elementId === variantId).days\r\n      if (days.includes(weekDayIndex))\r\n        days.splice(days.indexOf(weekDayIndex), 1);\r\n      else\r\n        days.push(weekDayIndex);\r\n      return newScheduleData\r\n    })\r\n  }\r\n\r\n  const weekdayReserved = (weekDayIndex) => {\r\n    return currentSchedule.variants.some(variant => variant.days.includes(weekDayIndex));\r\n  }\r\n\r\n  const weekdayPicker = (\r\n      <div className={classes.weekdayPickerContainer}>\r\n        {weekdays.map((item) => {\r\n          const dayActive = currentVariant.days.some(day => day === item.id);\r\n          return(\r\n              <Button onClick={() => toggleWeekday(item.id)}\r\n                      className={classes.weekdayButton}\r\n                      variant={\"contained\"}\r\n                      color={dayActive ? \"primary\" : \"secondary\"}\r\n                      disabled={!dayActive && weekdayReserved(item.id)}>\r\n                {item.name}\r\n              </Button>\r\n          )}\r\n        )\r\n        }\r\n      </div>\r\n  )\r\n\r\n  const handleDeleteVariant = () => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData];\r\n      const variants = newData[scheduleOpenIndex].variants;\r\n      variants.splice(variants.findIndex(variant => variant.elementId === variantId), 1)\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        {/*<Divider light/>*/}\r\n\r\n        {weekdayPicker}\r\n        <WorkingShift\r\n            enableLastAccommodation={enableLastAccommodation}\r\n            scheduleData={scheduleData}\r\n            scheduleOpenIndex={scheduleOpenIndex}\r\n            setScheduleData={setScheduleData}\r\n            variantId={variantId}/>\r\n        <div className={classes.removeButtonContainer}>\r\n          <Button\r\n              variant=\"text\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleDeleteVariant}\r\n              startIcon={<DeleteOutlineIcon/>}\r\n              style={{display: 'absolute'}}>Remove this variant</Button>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(WorkingHoursVariant)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport shortid from 'shortid';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    border: '1px dashed black',\r\n    padding: 8\r\n  },\r\n  weekdayPickerContainer: {\r\n    display: 'flex',\r\n    width: '100%',\r\n  },\r\n  weekdayButtonContainer: {\r\n    flex: 1,\r\n    // margin: 5,\r\n    padding: 0,\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    margin: 5,\r\n    padding: 0,\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n    width: '90%'\r\n  },\r\n  intervalContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n    margin: 0,\r\n    flexWrap: 'wrap',\r\n  },\r\n  pickerStyle: {\r\n    width: 35,\r\n    marginLeft: 3,\r\n    margin: 0,\r\n  },\r\n  pickerInput: {\r\n    fontSize: 13,\r\n    padding: 0,\r\n  },\r\n})\r\n\r\nexport const weekdays = [\r\n  {\r\n    id: 0,\r\n    name: \"Mon\",\r\n    fullName: \"Monday\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Tue\",\r\n    fullName: \"Tuesday\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Wed\",\r\n    fullName: \"Wednesday\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Thu\",\r\n    fullName: \"Thursday\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Fri\",\r\n    fullName: \"Friday\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Sat\",\r\n    fullName: \"Saturday\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Sun\",\r\n    fullName: \"Sunday\",\r\n  }\r\n]\r\n\r\nconst generateDefaultPeriod = () => {\r\n  return {\r\n    openTime: \"08:00\",\r\n    closeTime: \"18:00\",\r\n    elementId: shortid.generate()\r\n  }\r\n}\r\n\r\nfunction ScheduleWorkingHours({schedule, setSchedule, scheduleOpenIndex, classes}) {\r\n\r\n  const findPeriods = (dayIndex) => {\r\n    return schedule[scheduleOpenIndex].periods.filter(period => period.openDay === dayIndex)\r\n  }\r\n\r\n  const changeOpenTime = (elementId, time) => {\r\n    setSchedule(oldData => {\r\n      const newData = [...oldData]\r\n      newData[scheduleOpenIndex].periods.find(period => period.elementId === elementId).openTime = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n  const changeCloseTime = (elementId, time) => {\r\n    setSchedule(oldData => {\r\n      const newData = [...oldData]\r\n      newData[scheduleOpenIndex].periods.find(period => period.elementId === elementId).closeTime = moment(time).format('HH:mm');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const determineGlobalCloseTime = () => {\r\n    if(schedule[scheduleOpenIndex].periods == null || schedule[scheduleOpenIndex].length === 0)\r\n      return \"08:00\"\r\n    else\r\n      return moment(schedule[scheduleOpenIndex].periods[0].closeTime, \"HH:mm\")\r\n  }\r\n  const determineGlobalOpenTime = () => {\r\n    if(schedule[scheduleOpenIndex].periods == null || schedule[scheduleOpenIndex].length === 0)\r\n      return \"18:00\"\r\n    else\r\n      return moment(schedule[scheduleOpenIndex].periods[0].openTime, \"HH:mm\")\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <div className={classes.root}>\r\n          <div className={classes.weekdayPickerContainer}>\r\n            {weekdays.map((item, index) => {\r\n              const periods = findPeriods(index)\r\n              const splitSchedule = periods.length > 1\r\n\r\n              const toggleWorkday = () => {\r\n                if (periods.length > 0) {\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData]\r\n                    newData[scheduleOpenIndex].periods = newData[scheduleOpenIndex].periods.filter(period => period.openDay !== index)\r\n                    return newData\r\n                  })\r\n                } else {\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData]\r\n                    newData[scheduleOpenIndex].periods.push({...generateDefaultPeriod(), openDay: index})\r\n                    return newData\r\n                  })\r\n                }\r\n              }\r\n\r\n              const toggleSplitSchedule = () => {\r\n                if (splitSchedule)\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData];\r\n                    const periods = newData[scheduleOpenIndex].periods.filter(period => period.openDay === index)\r\n                    const lastperiod = periods.pop()\r\n                    newData[scheduleOpenIndex].periods = newData[scheduleOpenIndex].periods.filter(period => period.elementId != lastperiod.elementId)\r\n                    return newData;\r\n                  })\r\n                else\r\n                  setSchedule(oldData => {\r\n                    const newData = [...oldData];\r\n                    newData[scheduleOpenIndex].periods.push({...generateDefaultPeriod(), openDay: index})\r\n                    return newData;\r\n                  })\r\n              }\r\n\r\n              return (\r\n                  <>\r\n                    <div className={classes.weekdayButtonContainer}>\r\n                      <Button variant={\"contained\"}\r\n                              color={periods.length !== 0 ? \"primary\" : \"secondary\"}\r\n                              className={classes.button}\r\n                              onClick={toggleWorkday}>\r\n                        {item.name}\r\n                      </Button>\r\n                      {periods.map((period) => {\r\n                        return <>\r\n                          <div className={classes.intervalContainer}>\r\n                            <TimePicker\r\n                                margin=\"normal\"\r\n                                ampm={false}\r\n                                className={classes.pickerStyle}\r\n                                format=\"HH:mm\"\r\n                                minutesStep={30}\r\n                                InputProps={{\r\n                                  classes: {\r\n                                    input: classes.pickerInput,\r\n                                  },\r\n                                }}\r\n                                value={moment(period.openTime, \"HH:mm\")}\r\n                                onChange={(time) => changeOpenTime(period.elementId, time)}\r\n                            />\r\n                            <Typography variant=\"h7\">\r\n                              -\r\n                            </Typography>\r\n                            <TimePicker\r\n                                margin=\"normal\"\r\n                                ampm={false}\r\n                                className={classes.pickerStyle}\r\n                                format=\"HH:mm\"\r\n                                minutesStep={30}\r\n                                InputProps={{\r\n                                  classes: {\r\n                                    input: classes.pickerInput,\r\n                                  },\r\n                                }}\r\n                                value={moment(period.closeTime, \"HH:mm\")}\r\n                                onChange={(time) => changeCloseTime(period.elementId, time)}\r\n                            />\r\n                          </div>\r\n                        </>\r\n                      })}\r\n                      {periods.length !== 0 && <FormControlLabel\r\n                          style={{width: '100%'}}\r\n                          control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                                checked={splitSchedule}\r\n                                onChange={toggleSplitSchedule}\r\n                            />\r\n                          }\r\n                          label={<span style={{fontSize: 13}}>Split</span>}\r\n                      />}\r\n\r\n                    </div>\r\n                    <Divider orientation=\"vertical\" flexItem/>\r\n                  </>\r\n              )\r\n            })}\r\n          </div>\r\n\r\n        </div>\r\n        <Typography variant=\"h7\">\r\n          Global time\r\n        </Typography>\r\n        <TimePicker\r\n            margin=\"normal\"\r\n            ampm={false}\r\n            format=\"HH:mm\"\r\n            className={classes.pickerStyle}\r\n            minutesStep={30}\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.pickerInput,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setSchedule(schedules => {\r\n                const newSchedules = [...schedules]\r\n                newSchedules[scheduleOpenIndex].periods = newSchedules[scheduleOpenIndex].periods.map(period => {\r\n                  return {\r\n                    ...period,\r\n                    openTime: moment(e).format(\"HH:mm\")\r\n                  }\r\n                })\r\n                return newSchedules\r\n              })\r\n            }}\r\n            value={determineGlobalOpenTime()}\r\n        />\r\n        <Typography variant=\"h7\">\r\n          -\r\n        </Typography>\r\n        <TimePicker\r\n            margin=\"normal\"\r\n            ampm={false}\r\n            format=\"HH:mm\"\r\n            className={classes.pickerStyle}\r\n            minutesStep={30}\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.pickerInput,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              setSchedule(schedules => {\r\n                const newSchedules = [...schedules]\r\n                newSchedules[scheduleOpenIndex].periods = newSchedules[scheduleOpenIndex].periods.map(period => {\r\n                  return {\r\n                    ...period,\r\n                    closeTime: moment(e).format(\"HH:mm\")\r\n                }\r\n                })\r\n                return newSchedules\r\n              })\r\n            }}\r\n            value={determineGlobalCloseTime()}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(ScheduleWorkingHours)\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {DatePicker, TimePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport WorkingHoursVariant, {weekdays} from \"./WorkingHoursVariant\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport shortid from 'shortid';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport ScheduleWorkingHours from \"./ScheduleWorkingHours\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    width: '100%',\r\n  },\r\n  scheduleDateContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    flexWrap: 'wrap',\r\n  },\r\n  pickerStyle: {\r\n    width: 100,\r\n    padding: 5,\r\n  }\r\n});\r\n\r\n\r\nfunction Schedule({classes, scheduleData, setScheduleData, scheduleOpenIndex, setScheduleOpenIndex, seasonalScheduleEnabled}) {\r\n\r\n  const currentSchedule = scheduleData[scheduleOpenIndex]\r\n\r\n  const changeFromDate = (date, value) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData];\r\n      newData[scheduleOpenIndex].from = moment(date).format('MM-DD');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const changeToDate = (date, value) => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData];\r\n      newData[scheduleOpenIndex].to = moment(date).format('MM-DD');\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const scheduleDateContainer = (\r\n      <div className={classes.scheduleDateContainer}>\r\n        <Typography variant=\"h8\">\r\n          This schedule applies from\r\n        </Typography>\r\n        <DatePicker\r\n            className={classes.pickerStyle}\r\n            views={[\"month\", \"date\"]}\r\n            // maxDate={currentSchedule.to}\r\n            value={moment(currentSchedule.from, \"MM-DD\")}\r\n            onChange={changeFromDate}\r\n        />\r\n        <Typography variant=\"h8\">\r\n          to\r\n        </Typography>\r\n        <DatePicker\r\n            className={classes.pickerStyle}\r\n            views={[\"month\", \"date\"]}\r\n            // minDate={currentSchedule.from}\r\n            value={moment(currentSchedule.to, \"MM-DD\")}\r\n            onChange={changeToDate}\r\n        />\r\n      </div>\r\n  )\r\n\r\n  const handleRemoveSchedule = () => {\r\n    setScheduleOpenIndex(index => {\r\n      setScheduleData(oldData => {\r\n        return  [...oldData].filter((item, i) => index !== i)\r\n      })\r\n      return index - 1;\r\n    })\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        {seasonalScheduleEnabled && scheduleDateContainer}\r\n        {scheduleOpenIndex !== 0 && <Button\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={handleRemoveSchedule}\r\n            startIcon={<DeleteOutlineIcon/>}\r\n            style={{display: 'absolute'}}>Remove this schedule</Button>}\r\n\r\n        <ScheduleWorkingHours schedule={scheduleData} setSchedule={setScheduleData} scheduleOpenIndex={scheduleOpenIndex} />\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(Schedule)\r\n\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Schedule from \"./Schedule\";\r\nimport moment from \"moment\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport shortid from 'shortid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start'\r\n  },\r\n  tabContainer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  tabsLayout: {\r\n    flex: 9,\r\n  },\r\n  addScheduleButtonContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'space-between'\r\n  }\r\n});\r\n\r\nexport const defaultScheduleData = [\r\n  {\r\n    from: \"01-25\",\r\n    to: \"02-20\",\r\n    periods: [\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 0,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 1,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 2,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 3,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"18:00\",\r\n        openDay: 4,\r\n        elementId: shortid.generate()\r\n      },\r\n      {\r\n        openTime: \"08:00\",\r\n        closeTime: \"17:00\",\r\n        openDay: 5,\r\n        elementId: shortid.generate()\r\n      },\r\n    ],\r\n\r\n  }\r\n]\r\n\r\nfunction SchedulesContainer({classes, scheduleData, setScheduleData, scheduleOpenIndex, setScheduleOpenIndex, seasonalScheduleEnabled, setSeasonalScheduleEnabled, isScheduleEnabled, setIsScheduleEnabled, lastAccommodation, setLastAccommodation}) {\r\n\r\n  const handleAddSchedule = () => {\r\n    setScheduleData(oldData => {\r\n      const newData = [...oldData]\r\n      newData.push({\r\n        from: \"01-01\",\r\n        to: \"05-01\",\r\n        periods: [...defaultScheduleData[0].periods]\r\n      })\r\n      setScheduleOpenIndex(newData.length - 1)\r\n      return newData;\r\n    })\r\n  }\r\n\r\n  const tabsLayout = (\r\n      <div className={classes.tabContainer}>\r\n        <Tabs\r\n            value={scheduleOpenIndex}\r\n            onChange={(event, newValue) => setScheduleOpenIndex(newValue)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            className={classes.tabsLayout}\r\n        >\r\n          {\r\n            scheduleData.map((item, index) =>\r\n                <Tab onClick={() => setScheduleOpenIndex(index)}\r\n                     label={`${moment(item.from, \"MM-DD\").format(\"MMMM \")}-${moment(item.to, \"MM-DD\").format(\"MMMM \")}`}/>\r\n            )\r\n          }\r\n        </Tabs>\r\n        <div className={classes.addScheduleButtonContainer}>\r\n          <IconButton\r\n              onClick={handleAddSchedule}\r\n              variant=\"text\"\r\n              color=\"secondary\"\r\n              size=\"large\">\r\n            <AddIcon/>\r\n          </IconButton>\r\n        </div>\r\n\r\n      </div>\r\n  )\r\n\r\n  const handleToggleSeasonalSchedule = () => {\r\n    const enabled = !seasonalScheduleEnabled\r\n    setSeasonalScheduleEnabled(() => {\r\n      setScheduleOpenIndex(0)\r\n      return enabled\r\n    })\r\n    if(enabled){\r\n      setScheduleData(schedule => {\r\n        return [...schedule].map(item => {\r\n          return {\r\n            ...item,\r\n            from: \"01-01\",\r\n            to: \"02-01\"\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleEnableLastAccommodation = () => {\r\n    let accommodationTimeEnabled = lastAccommodation != null;\r\n    setLastAccommodation(accommodationTimeEnabled ? null : 30)\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <div className={classes.header}>\r\n          <Typography variant=\"h6\">\r\n            Working hours\r\n          </Typography>\r\n\r\n          <FormControlLabel\r\n              control={\r\n                <Switch\r\n                    checked={isScheduleEnabled}\r\n                    onChange={() => setIsScheduleEnabled(state => !state)}\r\n                    color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Enable schedule for this place?\"\r\n          />\r\n        </div>\r\n\r\n\r\n        { isScheduleEnabled &&\r\n        <>\r\n        <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                  checked={seasonalScheduleEnabled}\r\n                  onChange={handleToggleSeasonalSchedule}\r\n                  name=\"checkedB\"\r\n                  color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Enable seasonal schedule\"\r\n        />\r\n          <FormControlLabel\r\n          control={\r\n          <Checkbox\r\n              name=\"checkedB\"\r\n              color=\"primary\"\r\n              checked={lastAccommodation != null}\r\n              onChange={handleEnableLastAccommodation}\r\n          />\r\n        }\r\n          label=\"Specify last accommodation times\"\r\n          />\r\n          {lastAccommodation != null &&\r\n          <>\r\n            {/*<Typography variant=\"h8\">*/}\r\n            {/*  Minutes before close time*/}\r\n            {/*</Typography>*/}\r\n            <TextField\r\n                id=\"standard-number\"\r\n                label=\"Minutes to closing time\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                value={lastAccommodation}\r\n                onChange={(e) => setLastAccommodation(e.target.value)}\r\n            />\r\n          </>\r\n          }\r\n\r\n        {seasonalScheduleEnabled && tabsLayout}\r\n\r\n          <Schedule scheduleData={scheduleData}\r\n          seasonalScheduleEnabled={seasonalScheduleEnabled}\r\n          setScheduleData={setScheduleData} scheduleOpenIndex={scheduleOpenIndex} setScheduleOpenIndex={setScheduleOpenIndex}/>\r\n          </>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(SchedulesContainer)\r\n\r\n\r\n","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Paper} from '@material-ui/core';\r\nimport shortid from 'shortid';\r\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\r\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\r\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\r\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\r\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Reviews from \"../components/add_place_components/Reviews\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport RecommendationListDialog from \"../components/recomendation/RecommendationListDialog\";\r\nimport {RecommendationType} from \"../components/recomendation/Recommendation\";\r\nimport SchedulesContainer, {defaultScheduleData} from \"../components/schedule_components/SchedulesContainer\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  paperContent: {\r\n    marginTop: theme.spacing(4),\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      width: \"95%\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"70%\",\r\n      padding: theme.spacing(4),\r\n    },\r\n  },\r\n  root: {\r\n    height: \"100vh\",\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      height: \"100%\",\r\n    },\r\n  },\r\n  loader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100vw\",\r\n    height: \"100vh\"\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    height: `calc(93vh - 64px)`,\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      width: \"100%\",\r\n      padding: theme.spacing(1),\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"auto\",\r\n      padding: theme.spacing(8),\r\n    },\r\n    overflowY: \"auto\"\r\n  },\r\n  bottom: {\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      position: \"fixed\",\r\n      height: \"7vh\",\r\n      bottom: 0,\r\n      right: 0,\r\n    },\r\n    width: \"100%\",\r\n    zIndex: 5,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    padding: theme.spacing(1),\r\n  }\r\n});\r\n\r\n\r\nfunction AddPlace({classes, match}) {\r\n  const [placeInfo, setPlaceInfo] = useState({\r\n    placeId: \"\",\r\n    name: \"\", description: \"\", website: \"\", phoneNumber: \"\",\r\n    isPublic: false, isVerified: true, overallStarRating: 0, totalReviews: 0,\r\n    source: \"\", price: \"\", averageTimeSpent: \"0\"\r\n  });\r\n\r\n\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n  const [scheduleData, setScheduleData] = useState(defaultScheduleData);\r\n  const [scheduleOpenIndex, setScheduleOpenIndex] = useState(0);\r\n  const [seasonalScheduleEnabled, setSeasonalScheduleEnabled] = useState(false);\r\n  const [lastAccommodation, setLastAccommodation] = useState(null);\r\n\r\n  const [photos, setPhotos] = useState([]);\r\n\r\n  const [locationData, setLocationData] = useState({\r\n    city: '',\r\n    address: '',\r\n    country: '',\r\n    latitude: 54.687157,\r\n    longitude: 25.279652,\r\n    county: '',\r\n    municipality: ''\r\n  });\r\n  const [parkingMarkerData, setParkingMarkerData] = useState({\r\n    city: '',\r\n    address: '',\r\n    country: '',\r\n    latitude: 54.687157,\r\n    longitude: 25.279652,\r\n    county: '',\r\n    municipality: ''\r\n  });\r\n  const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\r\n\r\n  const [sources, setSources] = useState([]);\r\n\r\n  const [isScheduleEnabled, setIsScheduleEnabled] = useState(true);\r\n\r\n  const [placeId, setPlaceId] = useState(match.params.placeId);\r\n\r\n  const [firstTimeLoading, setFirstTimeLoading] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [error, setError] = useState({name: false});\r\n  const [checkErrors, setCheckErrors] = useState(false);\r\n\r\n  const [showRecommendationDialog, setShowRecommendationDialog] = useState(false)\r\n\r\n  const {addConfig} = UseSnackbarContext();\r\n  const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n  const {title, setTitle} = UseAppBarTitleContext();\r\n\r\n  const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      color: \"white\",\r\n      backgroundColor: green[500],\r\n      '&:hover': {\r\n        backgroundColor: green[700],\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  useEffect(() => {\r\n    if (placeId !== undefined) {\r\n      getPlaceInfo()\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //Loaded place for editing\r\n    if (placeId === undefined) {\r\n      setTitle(\"Add new place\");\r\n      setFirstTimeLoading(false) //Just loaded add place window\r\n    }\r\n    //New Place has been just inserted, thus inserting other place info\r\n    if (placeId !== undefined && firstTimeLoading === false) {\r\n      Promise.all([\r\n        updateTagsData(placeId),\r\n        updateParkingData(placeId),\r\n        updateCategoriesData(placeId),\r\n        updatePhotoData(placeId),\r\n        updateSchedule(placeId),\r\n        updateSources(placeId)\r\n      ]).then(responses => {\r\n        formFeedback(true, Strings.SNACKBAR_PLACE_INSERTED_SUCCESS)\r\n      }).catch(error => {\r\n        formFeedback(false)\r\n      })\r\n    }\r\n\r\n  }, [placeId]);\r\n\r\n  useEffect(() => {\r\n    if (firstTimeLoading === false) {\r\n      updateAll()\r\n    }\r\n  }, [placeInfo['isPublic']]);\r\n\r\n  function addToRecommendation() {\r\n    setShowRecommendationDialog(true)\r\n  }\r\n\r\n  function getPlaceInfo() {\r\n    API.Places.getPlaceById(\"?full=true&p=\" + placeId).then(response => {\r\n      setAllData(response)\r\n      setTitle(\"Editing place/\" + response.name);\r\n    }).catch(error => {\r\n      formFeedback(false)\r\n    })\r\n  }\r\n\r\n  const parseScheduleData = (data) => {\r\n\r\n    data.some(schedule => {\r\n      return schedule.periods.some(period => {\r\n        if (period.lastAccommodation != null) {\r\n          setLastAccommodation(moment(period.lastAccommodation, 'HH:mm').minutes() - moment(period.closeTime, 'HH:mm').minutes())\r\n          return true\r\n        }\r\n        return false\r\n      })\r\n    })\r\n\r\n    if (data.length > 1 || data.some(schedule => schedule.from != null && schedule.to != null))\r\n      setSeasonalScheduleEnabled(true)\r\n\r\n    return (data.map(schedule => {\r\n      const newData = {...schedule}\r\n      newData.periods = newData.periods.map(period => {\r\n        const newPeriod = {...period}\r\n        newPeriod.elementId = shortid.generate()\r\n        return newPeriod\r\n      })\r\n      return newData\r\n    }))\r\n  }\r\n\r\n  const convertSchedule = (data) => {\r\n    return (data.map(schedule => {\r\n      const newSchedule = {...schedule}\r\n      if (!seasonalScheduleEnabled) {\r\n        delete newSchedule.from;\r\n        delete newSchedule.to;\r\n      }\r\n      newSchedule.periods = newSchedule.periods.map(period => {\r\n        const newPeriod = {...period}\r\n        if (lastAccommodation != null)\r\n          newPeriod.lastAccommodation = moment(newPeriod.closeTime, 'HH:mm').subtract(lastAccommodation, 'minutes').format('HH:mm')\r\n        newPeriod.closeDay = newPeriod.openDay\r\n        return newPeriod\r\n      })\r\n\r\n      newSchedule.scheduleDefault = false;\r\n      console.log(newSchedule)\r\n      return newSchedule\r\n    }))\r\n  }\r\n\r\n  function setAllData(place) {\r\n    setPlaceInfo({\r\n      placeId: place.placeId,\r\n      name: place.name,\r\n      description: place.description,\r\n      website: place.website,\r\n      phoneNumber: place.phoneNumber,\r\n      hasSchedule: place.hasSchedule,\r\n      isPublic: place.isPublic,\r\n      isVerified: place.isVerified,\r\n      overallStarRating: place.overallStarRating,\r\n      totalReviews: place.totalReviews,\r\n      price: place.price,\r\n      averageTimeSpent: place.averageTimeSpent,\r\n    });\r\n\r\n    setLocationData({\r\n      city: place.city,\r\n      address: place.address,\r\n      country: place.country,\r\n      latitude: place.latitude,\r\n      longitude: place.longitude,\r\n      county: place.county,\r\n      municipality: place.municipality,\r\n    });\r\n\r\n    setParkingMarkerData({\r\n      city: place.city,\r\n      address: place.address,\r\n      country: place.country,\r\n      latitude: place.latitude,\r\n      longitude: place.longitude,\r\n      county: place.county,\r\n      municipality: place.municipality,\r\n    });\r\n\r\n    setScheduleData(place.schedule.length === 0 ? defaultScheduleData : parseScheduleData(place.schedule))\r\n    if (place.schedule.length === 0)\r\n      setIsScheduleEnabled(false)\r\n\r\n    setSources(place.sources);\r\n    setSelectedTags(place.tags);\r\n    setSelectedCategories(place.categories);\r\n\r\n    setAllSelectedParkingData(place.parking);\r\n    setPhotos(place.photos);\r\n    setFirstTimeLoading(false)\r\n  }\r\n\r\n  function formFeedback(success, message = Strings.SNACKBAR_ERROR) {\r\n    addConfig(success, message);\r\n    setIsLoading(false)\r\n  }\r\n\r\n  function saveChanges() {\r\n    if (placeId === undefined) {\r\n      addAlertConfig(Strings.DIALOG_PLACE_INSERT_TITLE, Strings.DIALOG_PLACE_INSERT, [{\r\n        name: \"Insert\", action: () => {\r\n          setIsLoading(true);\r\n          insertBasicPlaceInfo()\r\n        }\r\n      }])\r\n    } else {\r\n      addAlertConfig(Strings.DIALOG_PLACE_UPDATE_TITLE, Strings.DIALOG_PLACE_UPDATE, [{\r\n        name: \"save and publish\", action: () => {\r\n          let plc = Object.assign({}, placeInfo, {});\r\n          plc.isPublic = 1;\r\n          setPlaceInfo(plc);\r\n          setIsLoading(true);\r\n          updateAll()\r\n        }\r\n      }, {\r\n        name: \"save\", action: () => {\r\n          setIsLoading(true);\r\n          updateAll()\r\n        }\r\n      }])\r\n    }\r\n  }\r\n\r\n  function updateAll() {\r\n    Promise.all([\r\n      updatePlaceInfo(),\r\n      updateTagsData(placeId),\r\n      updatePhotoData(placeId),\r\n      updateCategoriesData(placeId),\r\n      updateParkingData(placeId),\r\n      updateSchedule(placeId),\r\n      updateSources(placeId)\r\n    ]).then(response => {\r\n      formFeedback(true, Strings.SNACKBAR_CHANGES_SAVED);\r\n    }).catch(err => {\r\n      formFeedback(false)\r\n    })\r\n  }\r\n\r\n  function updatePlaceInfo() {\r\n    API.Places.updatePlace(formPlaceInfo()).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n\r\n  }\r\n\r\n  function insertBasicPlaceInfo() {\r\n    API.Places.insertPlace(formPlaceInfo()).then(placeId => {\r\n      setPlaceId(placeId)\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updateParkingData(id) {\r\n    API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updateTagsData(id) {\r\n    API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updateSources(id) {\r\n    API.SourcePlace.updateSourcesForPlace(sources, \"?p=\" + id).then(response => {\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n\r\n  function updateCategoriesData(id) {\r\n    API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n  function updatePhotoData(id) {\r\n    API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\" + id).then(response => {\r\n\r\n    }).catch(error => {\r\n\r\n    })\r\n  }\r\n\r\n\r\n  function updateSchedule(id) {\r\n    API.Schedule.updateScheduleForPlace(isScheduleEnabled ? convertSchedule(scheduleData) : [], \"?id=\" + id).then(response => {\r\n    }).catch(er => {\r\n    })\r\n\r\n  }\r\n\r\n  function formPlaceInfo() {\r\n    let d = Object.assign(placeInfo, locationData);\r\n    return d\r\n  }\r\n\r\n\r\n  function publishPlace() {\r\n    addAlertConfig(Strings.DIALOG_PLACE_PUBLISH_TITLE, placeInfo['isPublic'] ? Strings.DIALOG_PLACE_UNPUBLISH_MESSAGE : Strings.DIALOG_PLACE_PUBLISH_MESSAGE,\r\n        [{\r\n          name: \"Agree\", action: () => {\r\n            let obj = Object.assign({}, placeInfo, {});\r\n            obj['isPublic'] = !obj['isPublic'];\r\n            setPlaceInfo(obj);\r\n          }\r\n        }])\r\n\r\n  }\r\n\r\n  function verifyPlace() {\r\n    addAlertConfig(Strings.DIALOG_PLACE_VERIFY_TITLE, Strings.DIALOG_PLACE_VERIFY_MESSAGE, [{\r\n      name: \"agree\", action: () => {\r\n        let obj = Object.assign({}, placeInfo, {});\r\n        obj['isPublic'] = 1;\r\n        obj['isVerified'] = 1;\r\n        setPlaceInfo(obj);\r\n      }\r\n    }])\r\n  }\r\n\r\n  const basicPlaceInfo = useMemo(() => {\r\n    return <Paper elevation={4} className={classes.paperContent}>\r\n      <BasicPlaceInfo\r\n          error={error}\r\n          setError={setError}\r\n          checkErrors={checkErrors}\r\n          placeInfo={placeInfo}\r\n          setPlaceInfo={setPlaceInfo}\r\n          selectedSources={sources}\r\n          setSelectedSources={setSources}\r\n      />\r\n    </Paper>\r\n  }, [placeInfo.name,\r\n    placeInfo.description,\r\n    placeInfo.averageTimeSpent,\r\n    placeInfo.phoneNumber,\r\n    placeInfo.price,\r\n    placeInfo.website,\r\n    sources\r\n  ])\r\n\r\n  const placePhotos = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <PhotosInfo\r\n              photos={photos}\r\n              setPhotos={setPhotos}\r\n          />\r\n        </Paper>\r\n    )\r\n  }, [photos])\r\n\r\n  const placeLocation = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <PlaceLocation\r\n              placeInfo={placeInfo}\r\n              locationData={locationData}\r\n              setParkingLocation={setParkingMarkerData}\r\n              setLocationData={setLocationData}/>\r\n        </Paper>\r\n    )\r\n  }, [locationData])\r\n\r\n  const parkingLocation = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <ParkingLocation\r\n              placeInfo={placeInfo}\r\n              allSelectedParkingData={allSelectedParkingData}\r\n              setAllSelectedParkingData={setAllSelectedParkingData}\r\n              locationData={parkingMarkerData}\r\n              setLocationData={setParkingMarkerData}/>\r\n        </Paper>\r\n    )\r\n  }, [allSelectedParkingData, parkingMarkerData])\r\n\r\n  const placeDiscovery = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          <PlaceDiscovery\r\n              selectedTags={selectedTags}\r\n              setSelectedTags={setSelectedTags}\r\n              selectedCategories={selectedCategories}\r\n              setSelectedCategories={setSelectedCategories}/>\r\n        </Paper>\r\n    )\r\n  }, [selectedCategories, selectedTags])\r\n\r\n\r\n  const scheduleContainer = useMemo(() => {\r\n    return (\r\n        <Paper elevation={4} className={classes.paperContent}>\r\n          {<SchedulesContainer scheduleData={scheduleData} setScheduleData={setScheduleData}\r\n                               scheduleOpenIndex={scheduleOpenIndex}\r\n                               setScheduleOpenIndex={setScheduleOpenIndex}\r\n                               seasonalScheduleEnabled={seasonalScheduleEnabled}\r\n                               setSeasonalScheduleEnabled={setSeasonalScheduleEnabled}\r\n                               setLastAccommodation={setLastAccommodation}\r\n                               isScheduleEnabled={isScheduleEnabled}\r\n                               setIsScheduleEnabled={setIsScheduleEnabled}\r\n                               lastAccommodation={lastAccommodation}/>}\r\n        </Paper>\r\n    )\r\n  }, [scheduleData, scheduleOpenIndex, lastAccommodation, seasonalScheduleEnabled, isScheduleEnabled])\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n\r\n        {firstTimeLoading ? <div className={classes.loader}><CircularProgress/></div> :\r\n            <div className={classes.content}>\r\n\r\n              {basicPlaceInfo}\r\n\r\n              {placeId !== undefined ?\r\n                  <Paper elevation={4} className={classes.paperContent}>\r\n                    <Reviews\r\n                        placeInfo={placeInfo}\r\n                    />\r\n                  </Paper>\r\n                  : null}\r\n\r\n              {placePhotos}\r\n              {placeLocation}\r\n              {parkingLocation}\r\n              {placeDiscovery}\r\n              {scheduleContainer}\r\n            </div>}\r\n\r\n\r\n        {isLoading ? <LinearProgress/> : null}\r\n\r\n        <Paper elevation={1} className={classes.bottom}>\r\n\r\n          {\r\n            placeInfo['isVerified'] === false && placeId !== undefined ?\r\n                <ColorButton\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      verifyPlace()\r\n                    }}\r\n                    className={classes.button}\r\n                >\r\n                  Verify place\r\n                </ColorButton>\r\n                :\r\n                <FormControlLabel\r\n                    control={<Switch checked={placeInfo['isPublic']} onChange={() => {\r\n                      publishPlace()\r\n                    }\r\n                    } name=\"isPublic\"/>}\r\n                    label=\"Make this place public\"\r\n                />}\r\n          <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => saveChanges()}\r\n              className={classes.button}>\r\n            Save\r\n          </Button>\r\n\r\n          {placeId != null ?\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => addToRecommendation()}\r\n                  className={classes.button}>\r\n                Add to recommendation\r\n              </Button> : null\r\n          }\r\n\r\n\r\n          <RecommendationListDialog\r\n              open={showRecommendationDialog}\r\n              setOpen={setShowRecommendationDialog}\r\n              objectId={placeInfo.placeId}\r\n              type={RecommendationType.place}\r\n          />\r\n\r\n        </Paper>\r\n      </div>)\r\n\r\n}\r\n\r\nAddPlace.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AddPlace)\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport {debounce} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: theme.spacing(2)\r\n        // width: 400,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    divider: {\r\n        // height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function SearchInputComponent({hint, searchCallback}) {\r\n    const classes = useStyles();\r\n\r\n    const debouncedInput = (event) => {\r\n        searchCallback(event.target.value)\r\n    }\r\n\r\n    const debounceInput = debounce(event => debouncedInput(event), 500)\r\n\r\n    const handleInput = (event) => {\r\n        event.persist()\r\n        debounceInput(event)\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder={hint}\r\n                inputProps={{ 'aria-label': hint }}\r\n                onChange={handleInput}\r\n            />\r\n            <IconButton className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n        </Paper>\r\n    );\r\n}","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {useState} from \"react\"\r\nimport ApiPlaceCard from \"../components/ApiPlaceCard\";\r\nimport API from \"../Networking/API\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Masonry from \"react-masonry-component\";\r\nimport SearchInputComponent from \"../components/SearchInputComponent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        overflow: 'scroll',\r\n        width: \"100%\",\r\n        padding: theme.spacing(1),\r\n        height:`calc(100vh - 64px)`,\r\n        paddingTop: \"9vh\",\r\n    },\r\n    topBar: {\r\n        height: \"8vh\",\r\n        position: \"absolute\",\r\n        width: \"60%\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        left: 0,\r\n        right: 0,\r\n        justifyContent: \"center\",\r\n        zIndex: 1\r\n    },\r\n    searchBox: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    placeApiCard: {\r\n        [theme.breakpoints.down('lg')]: {\r\n            width: \"95%\",\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: \"28vw\",\r\n        },\r\n        // minWidth: \"400px\",\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nfunction ApiPlaces({classes}){\r\n\r\n    const [data, setData] = useState([]);\r\n    const [isLoadingData, setIsLoadingData] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    const loadDataFunc = (query) => {\r\n        setData([])\r\n        setIsLoadingData(true)\r\n        API.Places.searchApiPlaces(\"?keyword=\" + encodeURI(query)).then(response => {\r\n            setData([...response])\r\n        }).catch(error => {\r\n            addConfig(false, \"The request did not go through.\")\r\n        }).finally(() => {\r\n            setIsLoadingData(false)\r\n        })\r\n    }\r\n\r\n    const handleSearch = (word) => {\r\n        if(word.length > 3)\r\n            loadDataFunc(word)\r\n    }\r\n\r\n    return(\r\n        <div style={{position: \"relative\"}}>\r\n            <div className = {classes.topBar}>\r\n                <SearchInputComponent searchCallback={handleSearch} hint=\"Search api places\" style={classes.searchBox} />\r\n            </div>\r\n\r\n            <div className={classes.root}>\r\n                <Masonry\r\n                    style={{margin: \"0 auto\"}}\r\n                    elementType={'div'} // default 'div'\r\n                    options={{\r\n                        isFitWidth: true\r\n                    }} // default {}\r\n                    disableImagesLoaded={false} // default false\r\n                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\r\n                >\r\n\r\n                    {data.map(item => {\r\n                        return <ApiPlaceCard classes ={{ root: classes.placeApiCard}} key={item.placeId} placeData = {item} style={{boxSizing: 'border-box'}}/>\r\n                    })}\r\n\r\n                    {\r\n                        data.length === 0 && !isLoadingData &&\r\n                        <Typography variant=\"subtitle1\">No results</Typography>\r\n                    }\r\n                    {\r\n                        isLoadingData &&\r\n                        <CircularProgress  />\r\n                    }\r\n\r\n                </Masonry>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ApiPlaces)","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {'Copyright © '}\r\n            Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: '100vh',\r\n    },\r\n    main: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: 'auto',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n    },\r\n}));\r\n\r\nexport default function NotFoundPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\r\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\r\n                    Page not found\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    {'Try something else'}\r\n                </Typography>\r\n            </Container>\r\n            <footer className={classes.footer}>\r\n                <Container maxWidth=\"sm\">\r\n                    <Copyright />\r\n                </Container>\r\n            </footer>\r\n        </div>\r\n    );\r\n}","import {withStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst styles = theme => ({\r\n    cardRoot: {\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            display: 'flex',\r\n            // alignItems: \"flex-start\"\r\n        },\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 5\r\n    },\r\n    content: {\r\n        flex: '1 0 auto',\r\n    },\r\n    cover: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            height: \"200px\",\r\n        },\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            flex: 1,\r\n            height: \"auto\",\r\n        },\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\"\r\n    },\r\n    addParkingWrapper: {\r\n        display: \"inline-block\"\r\n    }\r\n})\r\n\r\n\r\nfunction TourPlaceComponent({classes, elementData, removeCallback, addTransportCallback, displayNoTransportWarning}) {\r\n\r\n    function truncateText(text) {\r\n        if (text == null)\r\n            return \"\"\r\n        if (text.length > 500) {\r\n            return text.substring(0, 500) + \"...\";\r\n        } else {\r\n            return text\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card className={classes.cardRoot}>\r\n\r\n                {elementData.data.details.photos != null && elementData.data.details.photos.length > 0 &&\r\n                <CardMedia\r\n                    className={classes.cover}\r\n                    image={elementData.data.details.photos[0].url}\r\n\r\n                />\r\n                }\r\n\r\n                <div className={classes.details}>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                            {elementData.data.details.name}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                            {truncateText(elementData.data.details.description)}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </div>\r\n                <CardHeader\r\n                    action={\r\n                        <IconButton aria-label=\"remove\" onClick={() => removeCallback(elementData)}>\r\n                            <RemoveIcon/>\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </Card>\r\n\r\n            {displayNoTransportWarning &&\r\n            <Alert severity=\"error\">No transport from this place specified</Alert>}\r\n\r\n            <div className={classes.addParkingWrapper}>\r\n                <Button style={{display: \"inline\"}} color=\"secondary\" onClick={() => addTransportCallback(elementData)}>\r\n                    <AddIcon/>\r\n                </Button>\r\n                <Typography style={{display: \"inline\"}} variant=\"subtitle1\">\r\n                    Add transport from this place\r\n                </Typography>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nTourPlaceComponent.propTypes = {\r\n    elementData: PropTypes.object.isRequired,\r\n    removeCallback: PropTypes.func.isRequired,\r\n    addTransportCallback: PropTypes.func.isRequired,\r\n    displayNoTransportWarning: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles)(TourPlaceComponent)\r\n","import React, { useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MetroIcon from '@material-ui/icons/DirectionsTransit';\r\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\r\nimport CarIcon from '@material-ui/icons/DriveEta';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\nimport FlightIcon from '@material-ui/icons/Flight';\r\nimport TramIcon from '@material-ui/icons/Tram';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\"\r\n    },\r\n    transportSelectWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    transportSelect: {\r\n        marginLeft: theme.spacing(1),\r\n        width: \"100px\"\r\n    }\r\n});\r\n\r\nconst transportTypes = [\r\n    {\r\n        icon: <MetroIcon/>,\r\n        label: \"Metro\"\r\n    },\r\n    {\r\n        icon: <DirectionsBikeIcon/>,\r\n        label: \"Bike\"\r\n    },\r\n    {\r\n        icon: <DirectionsBusIcon/>,\r\n        label: \"Bus\"\r\n    },\r\n    {\r\n        icon: <CarIcon/>,\r\n        label: \"Car\"\r\n    },\r\n    {\r\n        icon: <TrainIcon/>,\r\n        label: \"Train\"\r\n    },\r\n    {\r\n        icon: <FlightIcon/>,\r\n        label: \"Plane\"\r\n    },\r\n    {\r\n        icon: <DirectionsWalkIcon/>,\r\n        label: \"Walk\"\r\n    },\r\n    {\r\n        icon: <TramIcon/>,\r\n        label: \"Tram\"\r\n    }\r\n]\r\n\r\nfunction TransportItem({classes, transportId, transportChangeCallback, transportRemoveCallback}) {\r\n\r\n    const [currentTransport, setCurrentTransport] = useState(transportId == null ? 0 : transportId)\r\n\r\n    const handleTransportChange = (e) => {\r\n        setCurrentTransport(e.target.value)\r\n        transportChangeCallback({transport: parseInt(e.target.value)})\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MoreVertIcon/>\r\n            <div className={classes.transportSelectWrapper}>\r\n                {transportTypes[currentTransport].icon}\r\n                <FormControl className={classes.transportSelect} >\r\n                    <NativeSelect\r\n                        value={currentTransport}\r\n                        onChange={handleTransportChange}\r\n                    >\r\n                        {transportTypes.map((item, index) => {\r\n                            return <option key={index} value={index}> {item.label}</option>\r\n                        })}\r\n                    </NativeSelect>\r\n                </FormControl>\r\n                <IconButton aria-label=\"remove\" onClick={() => transportRemoveCallback()}>\r\n                    <RemoveIcon />\r\n                </IconButton>\r\n            </div>\r\n            <MoreVertIcon/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TransportItem)","import {withStyles} from \"@material-ui/core/styles\";\r\nimport TourPlaceComponent from \"./TourPlaceComponent\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ElementType} from \"./Tour\";\r\nimport { SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport TransportItem from \"./TransportItem\";\r\nimport shortid from 'shortid';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst styles = theme => ({\r\n    tourPlaceComponent: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexFlow: \"column wrap\",\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst TourPlaceSortable = SortableElement(({displayNoTransportWarning, elementData, removePlaceCallback, classes, addTransportCallback}) => (\r\n    <div>\r\n        <TourPlaceComponent removeCallback={removePlaceCallback} classes={{root: classes.tourPlaceComponent}}\r\n                            addTransportCallback={addTransportCallback} elementData={elementData}\r\n                            displayNoTransportWarning={displayNoTransportWarning}/>\r\n    </div>\r\n));\r\nconst TransportItemSortable = SortableElement(({transportId, transportChangeCallback, transportRemoveCallback}) => (\r\n    <div>\r\n        <TransportItem transportId={transportId} transportRemoveCallback={transportRemoveCallback} transportChangeCallback={transportChangeCallback}/>\r\n    </div>\r\n));\r\n\r\nconst SortableList = SortableContainer(({currentDay, removeElementCallback, tourInfo, classes, addTransportCallback, transportChangeCallback}) => {\r\n\r\n    const shouldDisplayNoTransportWarning = (index) => {\r\n        let elements = tourInfo.days[currentDay].tour\r\n        return ((elements.length -1 ) > index) && elements[index + 1].type !== ElementType.transport\r\n    }\r\n\r\n    return (\r\n\r\n        <ul>\r\n            {tourInfo.days[currentDay].tour.map((item, index) => {\r\n\r\n                switch (item.type) {\r\n                    case ElementType.place:\r\n                        return <TourPlaceSortable key={item.data.details.placeId} index={index}\r\n                                                  addTransportCallback={addTransportCallback} elementData={item}\r\n                                                  classes={classes}\r\n                                                  displayNoTransportWarning={shouldDisplayNoTransportWarning(index)}\r\n                                                  removePlaceCallback={() => removeElementCallback(index)}/>\r\n                    case ElementType.transport:\r\n                        return <TransportItemSortable key={item.data.elementIdentifier} index={index}\r\n                                                      transportId={item.data.transport}\r\n                                                      transportRemoveCallback = {() => removeElementCallback(index)}\r\n                                                      transportChangeCallback={(transport) => transportChangeCallback(index, transport)}/>\r\n                }\r\n            })}\r\n        </ul>\r\n    )\r\n});\r\n\r\nfunction TourPlacesWrapper({classes, tourInfo, tourInfoReducer, currentDay, errorInfo, setErrorInfo}) {\r\n\r\n    const removeElementCallback = (index) => {\r\n        tourInfoReducer({\r\n            type: 'REMOVE_ELEMENT',\r\n            day: currentDay,\r\n            index: index\r\n        })\r\n    };\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        tourInfoReducer({\r\n            type: 'MOVE_ELEMENT',\r\n            day: currentDay,\r\n            oldIndex: oldIndex,\r\n            newIndex: newIndex\r\n        })\r\n    }\r\n\r\n    const handleTransportChange = (index, data) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_ELEMENT',\r\n            day: currentDay,\r\n            index: index,\r\n            data: data\r\n        })\r\n    }\r\n\r\n    const addTransportCallback = (details) => {\r\n        tourInfoReducer({\r\n            type: 'INSERT_TRANSPORT_FOR_PLACE',\r\n            placeId: details.data.details.placeId,\r\n            day: currentDay,\r\n            data: {type: ElementType.transport, data: {transport: 0, elementIdentifier: shortid.generate()}}\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {tourInfo.days[currentDay].tour.length === 0 &&\r\n            <Alert severity=\"warning\">You have not added any places for the currently selected day.</Alert>}\r\n            <SortableList\r\n                pressDelay={200}\r\n                disableAutoscroll={false}\r\n                currentDay={currentDay}\r\n                tourInfo={tourInfo}\r\n                transportChangeCallback={handleTransportChange}\r\n                onSortEnd={onSortEnd}\r\n                classes={classes}\r\n                addTransportCallback={addTransportCallback}\r\n                removeElementCallback={removeElementCallback}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nTourPlacesWrapper.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourPlacesWrapper)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport SearchInputComponent from \"../SearchInputComponent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\nimport DnsIcon from \"@material-ui/icons/Dns\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport API from \"../../Networking/API\";\r\n\r\nconst styles = theme => ({\r\n    searchInputComponent: {\r\n\r\n    },\r\n    placeCard: {\r\n        margin: theme.spacing(1, 8, 1, 8),\r\n    },\r\n})\r\n\r\n\r\nfunction PlaceSearch({classes, addPlaceCallback, apiPlacesFound, setApiPlacesFound, localPlacesFound, setLocalPlacesFound}) {\r\n\r\n    // const [apiPlacesLoading, setApiPlacesLoading] = useState(false)\r\n    const [localPlacesLoading, setLocalPlacesLoading] = useState(false)\r\n\r\n    const placeType = {\r\n        local: 0,\r\n        api: 1\r\n    }\r\n\r\n    const generatePlaceCards = () => {\r\n        let genProps = (placeInfo, type) => {\r\n            return {\r\n                classes: {root: classes.placeCard},\r\n                key: placeInfo.placeId,\r\n                renderActionArea: () => {\r\n                    return (\r\n                        <div>\r\n                            <Button color=\"primary\" onClick={() => addPlaceCallback(placeInfo, type)}>\r\n                                <AddIcon/>\r\n                            </Button>\r\n                            <Tooltip title={type === placeType.local ? \"This place is from our database\" : \"This place is from API\"} aria-label=\"add\">\r\n                                {type === placeType.local ? <LocalLibraryIcon/> : <DnsIcon/>}\r\n                            </Tooltip>\r\n                        </div>\r\n                    )\r\n                },\r\n                placeData : placeInfo\r\n            }\r\n        }\r\n\r\n        let mappedPlaces = []\r\n        localPlacesFound.forEach(item => {\r\n            mappedPlaces.push(<ApiPlaceCard {...genProps(item, placeType.local)}/>)\r\n        })\r\n        // apiPlacesFound.forEach(item => {\r\n        //     mappedPlaces.push( <ApiPlaceCard {...genProps(item, placeType.api)}/>)\r\n        // })\r\n        return mappedPlaces\r\n    }\r\n\r\n    const searchCallback = (keyword) => {\r\n        if(keyword.length < 3)\r\n            return;\r\n        setLocalPlacesFound([])\r\n        setApiPlacesFound([])\r\n        // setApiPlacesLoading(true)\r\n        setLocalPlacesLoading(true)\r\n        API.Places.getAllPlacesAdmin(\"?keyword=\" + keyword).then(response=>{\r\n            setLocalPlacesFound(response.list)\r\n            setLocalPlacesLoading(false)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n\r\n        // API.Places.searchApiPlaces(\"?keyword=\" + keyword).then(response => {\r\n        //     setApiPlacesFound(response)\r\n        //     setApiPlacesLoading(false)\r\n        // }).catch(error => {\r\n        //     console.log(error)\r\n        // })\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <SearchInputComponent hint=\"Search for a place\" searchCallback={searchCallback} className={classes.searchInputComponent}/>\r\n            {(localPlacesLoading) ?\r\n                <CircularProgress  /> :\r\n                <React.Fragment>\r\n                    {generatePlaceCards()}\r\n                </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PlaceSearch)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    radioButtonArea: {\r\n    },\r\n    cardArea: {\r\n        flex: 1,\r\n        display: \"flex\"\r\n    },\r\n    content: {\r\n        flex: '1 1 auto',\r\n    },\r\n    descriptionInput: {\r\n        marginTop: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    },\r\n    headerWrap: {}\r\n})\r\n\r\nfunction DayCard({classes, onSelectCallback, index, currentDay, tourInfoReducer, description, handleRemoveDay}) {\r\n\r\n    const updateDescriptionGlobally = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_DAY',\r\n            day: index,\r\n            data: {\r\n                description: e\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.radioButtonArea}>\r\n                <Radio checked={index === currentDay} onChange={(e) => {\r\n                    onSelectCallback(index)\r\n                }}/>\r\n            </div>\r\n            <Card className={classes.cardArea}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        Day {index + 1}\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                        className={classes.descriptionInput}\r\n                        multiline\r\n                        label=\"Description\"\r\n                        value={description}\r\n                        variant=\"outlined\"\r\n                        onChange={(e) => {\r\n                            updateDescriptionGlobally(e.target.value)\r\n                        }}\r\n                    />\r\n                </CardContent>\r\n                <CardHeader\r\n                    action={\r\n                        <Button startIcon={<RemoveIcon/>} aria-label=\"remove\" onClick={() => handleRemoveDay(index)}/>\r\n                    }\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nDayCard.propTypes = {\r\n    onSelectCallback: PropTypes.func.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DayCard)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport DayCard from \"./DayCard\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport shortid from 'shortid';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    addDayButton: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    footerWrapper: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n})\r\n\r\nconst DayCardSortable = SortableElement(({dayInfo, day, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => (\r\n    <DayCard\r\n        description={dayInfo.description}\r\n        currentDay={currentDay}\r\n        index={day}\r\n        handleRemoveDay={removeDayCallback}\r\n        onSelectCallback={onSelectCallback}\r\n        tourInfoReducer={tourInfoReducer}/>\r\n));\r\n\r\nconst SortableList = SortableContainer(({elements, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => {\r\n\r\n    return (\r\n        <ul style={{padding: \"0px\"}}>\r\n            {elements.map((item, index) => {\r\n                return <DayCardSortable\r\n                    currentDay={currentDay}\r\n                    day={index}\r\n                    index={index}\r\n                    removeDayCallback={removeDayCallback}\r\n                    key={item.elementIdentifier}\r\n                    dayInfo={item}\r\n                    onSelectCallback={onSelectCallback}\r\n                    tourInfoReducer={tourInfoReducer}/>\r\n            })}\r\n        </ul>\r\n    );\r\n});\r\n\r\nfunction DaysWrapper({classes, currentDay, setCurrentDay, tourInfo, tourInfoReducer}) {\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n\r\n    const handleSelect = (index) => {\r\n        setCurrentDay(index)\r\n    }\r\n\r\n    const addDayHandler = () => {\r\n        tourInfoReducer({\r\n            type: 'ADD_DAY',\r\n            data: {\r\n                description: \"\",\r\n                elementIdentifier: shortid.generate(),\r\n                tour: []\r\n            }\r\n        })\r\n    }\r\n\r\n    const removeDay = (day) => {\r\n        tourInfoReducer({\r\n                type: 'REMOVE_DAY',\r\n                day: day,\r\n            }\r\n        )\r\n        if(day === currentDay)\r\n            setCurrentDay(day - 1)\r\n    }\r\n\r\n    const removeDayCallback = (day) => {\r\n        if(tourInfo.days.length === 1){\r\n            addAlertConfig(\"Warning\", \"The tour has to have at least one day\", [])\r\n        }else{\r\n            if(tourInfo.days[day].tour.length > 0){ //This day has at least one place/transport added to it\r\n                addAlertConfig(\"Warning\", \"Are you sure you want to remove this day?\",[{name: \"yes\", action: ()=>{\r\n                    removeDay(day)\r\n                    }}],() => {\r\n                })\r\n            }else removeDay(day)\r\n        }\r\n    }\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        tourInfoReducer({\r\n            type: 'MOVE_DAY',\r\n            oldIndex: oldIndex,\r\n            newIndex: newIndex\r\n        })\r\n        setCurrentDay(newIndex)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <SortableList\r\n                pressDelay={200}\r\n                disableAutoscroll={false}\r\n                elements={tourInfo.days}\r\n                currentDay={currentDay}\r\n                onSortEnd={onSortEnd}\r\n                removeDayCallback={removeDayCallback}\r\n                onSelectCallback={handleSelect}\r\n                tourInfoReducer={tourInfoReducer}/>\r\n            <div className={classes.footerWrapper}>\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    className={classes.addDayButton}\r\n                    onClick={addDayHandler}\r\n                    startIcon={<AddIcon/>}>\r\n                    Add another day\r\n                </Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nDaysWrapper.propTypes = {\r\n    setCurrentDay: PropTypes.func.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    tourInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DaysWrapper)\r\n","import {arrayMove} from \"react-sortable-hoc\";\r\nimport {ElementType} from \"./Tour\";\r\n\r\nexport default function TourDataReducer(state, action) {\r\n\r\n    let days = []\r\n\r\n    switch (action.type) {\r\n        case 'ADD_ELEMENT':\r\n            if(state.days !== null && action.data.type === ElementType.place && state.days.some(day => day.tour !== null && day.tour.some(place => place.type === ElementType.place && place.data.details.placeId === action.data.data.details.placeId))){\r\n                if(action.onError !== null && action.onError !== undefined){\r\n                    action.onError()\r\n                }\r\n                return state\r\n            }\r\n\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    days.push({\r\n                        ...item,\r\n                        tour: [\r\n                            ...item.tour,\r\n                            action.data\r\n                        ]\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'UPDATE_ELEMENT':\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    let tour = item.tour\r\n                    tour[action.index] = {...tour[action.index], data: {...tour[action.index].data, ...action.data}}\r\n                    days.push({\r\n                        ...item,\r\n                        tour: tour\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'INSERT_TRANSPORT_FOR_PLACE':\r\n            state.days.forEach((item, index) => {\r\n                if (index === action.day) {\r\n                    let tour = item.tour\r\n                    let index = tour.findIndex((item) => item.type === ElementType.place && item.data.details.placeId === action.placeId)\r\n                    tour.splice(index + 1, 0, action.data)\r\n                    days.push({\r\n                        ...item,\r\n                        tour: tour\r\n                    })\r\n                } else days.push(item)\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'ADD_DAY':\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...state.days,\r\n                    action.data\r\n                ]\r\n            }\r\n        case 'MOVE_DAY':\r\n            return {\r\n                ...state,\r\n                days: arrayMove(state.days, action.oldIndex, action.newIndex)\r\n            }\r\n        case 'MOVE_ELEMENT':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day)\r\n                    return {...item, tour: arrayMove(item.tour, action.oldIndex, action.newIndex)}\r\n                else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'UPDATE_DAY':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day) {\r\n                    return {...item, ...action.data}\r\n                } else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'REMOVE_ELEMENT':\r\n            days = state.days.map((item, index) => {\r\n                if (index === action.day)\r\n                    return {...item, tour: item.tour.filter((value, index) => index !== action.index)}\r\n                else return item\r\n            })\r\n            return {\r\n                ...state,\r\n                days: [\r\n                    ...days\r\n                ]\r\n            }\r\n        case 'REMOVE_DAY':\r\n            days = state.days.filter((item, index) => index !== action.day)\r\n            return {\r\n                ...state,\r\n                days: days\r\n            }\r\n        case 'UPDATE_TOUR':\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case 'SET_ALL':\r\n            return action.data\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PropTypes from \"prop-types\";\r\nimport AutoCompleteChip from \"../AutocompleteChip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(4),\r\n    },\r\n    nameField: {\r\n        width: \"100%\"\r\n    },\r\n    descriptionField: {\r\n        marginTop: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    },\r\n    publicityDiv: {\r\n        width: \"100%\",\r\n\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2),\r\n        color: \"#ffffff\"\r\n    },\r\n});\r\n\r\nfunction TourInfoComponent({classes, tourInfo, tourInfoReducer, errorInfo, setErrorInfo, availableCategories, selectedCategories, setSelectedCategories, setAvailableCategories, tourId}) {\r\n\r\n    const handleDescriptionChange = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data: {description: e.target.value}\r\n        })\r\n    }\r\n    const handleTitleChange = (e) => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {name: e.target.value}\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(tourInfo.name === \"\")\r\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: true}}})\r\n        else\r\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: false}}})\r\n    }, [tourInfo.name])\r\n\r\n    let shouldDisplayTitleMissingError = errorInfo.showErrors && errorInfo.errors.titleMissing\r\n\r\n    const verifyTour = () => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {isVerified: true}\r\n        })\r\n    }\r\n\r\n    const publishTour = () => {\r\n        tourInfoReducer({\r\n            type: 'UPDATE_TOUR',\r\n            data:  {isPublished: !tourInfo.isPublished}\r\n        })\r\n\r\n    }\r\n\r\n    const ColorButton = withStyles((theme) => ({\r\n        root: {\r\n            color: \"white\",\r\n            backgroundColor: green[500],\r\n            '&:hover': {\r\n                backgroundColor: green[700],\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField label=\"Tour name\"\r\n                       variant=\"outlined\"\r\n                       error={shouldDisplayTitleMissingError}\r\n                       helperText={shouldDisplayTitleMissingError ? \"Please provide a title for your tour\" : \"\"}\r\n                       value={tourInfo.name}\r\n                       onChange={handleTitleChange}\r\n                       defaultValue=\"My tour name\" className={classes.nameField}/>\r\n            <TextField\r\n                className={classes.descriptionField}\r\n                multiline\r\n                label=\"Description\"\r\n                value={tourInfo.description}\r\n                variant=\"outlined\"\r\n                onChange={handleDescriptionChange}\r\n            />\r\n            <br/><br/>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n                Categories for this tour\r\n            </Typography>\r\n            <AutoCompleteChip\r\n                options={availableCategories}\r\n                id=\"categoryId\"\r\n                setOptions={setAvailableCategories}\r\n                setSelectedOptions={setSelectedCategories}\r\n                selectedOptions={selectedCategories}\r\n            />\r\n\r\n            {tourId !== undefined &&\r\n                <div className={classes.publicityDiv}>\r\n                    {tourInfo.isVerified ?\r\n                        <div>\r\n                            <FormControlLabel\r\n                                control={<Switch checked={tourInfo.isPublished} onChange={publishTour} name=\"isPublic\"/>}\r\n                                label=\"Make this tour public?\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                    <ColorButton\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={verifyTour}\r\n                        className={classes.button}\r\n                    >\r\n                        Verify tour\r\n                    </ColorButton>\r\n                    }\r\n\r\n\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTourInfoComponent.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    tourInfoReducer: PropTypes.func.isRequired,\r\n    availableTags: PropTypes.array.isRequired,\r\n    setAvailableTags: PropTypes.func.isRequired,\r\n    selectedTags: PropTypes.array.isRequired,\r\n    setSelectedTags: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourInfoComponent)","import React, {useContext, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer} from \"react-google-maps\"\r\nimport {ElementType} from \"./Tour\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FilterBlock from \"../add_place_components/FilterBlock\";\r\nimport CustomControlsManager from \"../maps/CustomControlsManager\";\r\nimport API from \"../../Networking/API\";\r\nimport {PlacesFilterContext} from \"../../contexts/PlacesFilterContext\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst google = window.google;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(4),\r\n    }, cover: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            height: \"200px\",\r\n        },\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            flex: 1,\r\n            height: \"auto\",\r\n        },\r\n    },\r\n    largeIcon: {\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n    },\r\n});\r\n\r\n\r\n/**\r\n * Tours map component\r\n * @type {React.ComponentClass<WithGoogleMapProps>}\r\n */\r\nconst MyMapComponent = withGoogleMap(props =>\r\n    <GoogleMap\r\n        ref={props.refMap}\r\n        defaultZoom={8}\r\n        defaultCenter={{lat: 55.2983804, lng: 23.9132164}}>\r\n\r\n        {props.children}\r\n\r\n    </GoogleMap>\r\n);\r\n\r\n\r\nfunction TourMap({classes, tourInfo, currentDay, addPlace, removePlace}) {\r\n\r\n    const [directions, setDirection] = useState();\r\n\r\n    const [infoWindows, setInfoWindows] = useState([]);\r\n    const [directionPlaces, setDirectionPlaces] = useState([])\r\n\r\n\r\n    const [places, setPlaces] = useState([]);\r\n    const [placesInfoWindows, setPlacesInfoWindows] = useState([]);\r\n\r\n    const [loadingArea, setLoadingArea] = useState(false);\r\n    const refMap = useRef(null);\r\n\r\n    const {filterQuery} = useContext(PlacesFilterContext);\r\n\r\n    const constructPlaceData = () => {\r\n        let p = tourInfo.days[currentDay].tour.filter(item => item.type === ElementType.place);\r\n        let places = [];\r\n        p.forEach(item => {\r\n            let placeId = item.data.details.placeId;\r\n            let lat = item.data.details.latitude;\r\n            let lng = item.data.details.longitude;\r\n            let name = item.data.details.name;\r\n            let photos = item.data.details.photos;\r\n            places.push({placeId: placeId, latitude: lat, longitude: lng, name: name, photo: photos.length > 0 ? photos[0].url : null});\r\n        });\r\n        setInfoWindows(Array(places.length).fill(false))\r\n        setDirectionPlaces(places);\r\n        return places\r\n    };\r\n\r\n    useEffect(() => {\r\n        const places = constructPlaceData();\r\n        if(places.length>1){\r\n            const waypoints = places.map(p =>({\r\n                location: {lat: p.latitude, lng:p.longitude},\r\n                stopover: true\r\n            }));\r\n\r\n            const origin = waypoints.shift().location;\r\n            let destination = null;\r\n\r\n            if (waypoints.length > 0)\r\n                destination = waypoints.pop().location;\r\n            else\r\n                destination = origin;\r\n\r\n            const directionsService = new google.maps.DirectionsService();\r\n\r\n            directionsService.route(\r\n                {\r\n                    origin: origin,\r\n                    destination: destination,\r\n                    travelMode: google.maps.TravelMode.DRIVING,\r\n                    waypoints: waypoints\r\n                },\r\n                (result, status) => {\r\n                    if (status === google.maps.DirectionsStatus.OK) {\r\n                        setDirection(result)\r\n                    } else {\r\n                        alert(status);\r\n                    }\r\n                }\r\n            );\r\n        } else {\r\n            setDirection(null)\r\n        }\r\n    }, [currentDay, tourInfo.days]);\r\n\r\n\r\n    function fetchPlaces(){\r\n        console.log(\"Getting all places...\", refMap.current.getCenter().lat())\r\n        getAllPlaces(filterQuery + \"&p=\" + 0 + \"&s=\" + 100 + \"&l=\" + refMap.current.getCenter().lat() + \",\" + refMap.current.getCenter().lng() + \"range=\" + 50)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!loadingArea){\r\n            if(refMap.current != null){\r\n                fetchPlaces()\r\n            }\r\n        }\r\n    }, [filterQuery]);\r\n\r\n    function getAllPlaces(query) {\r\n        setLoadingArea(true);\r\n        API.Places.getAllPlacesAdmin(query).then(locations => {\r\n            setPlacesInfoWindows(Array(locations.list.length).fill(false));\r\n            setPlaces(locations.list)\r\n            setLoadingArea(false)\r\n        }).catch(err => {\r\n            console.log(err);\r\n            setLoadingArea(false)\r\n        })\r\n    }\r\n\r\n    function addPlaceToTourDay(place) {\r\n        setPlacesInfoWindows(Array(places.length).fill(false));\r\n        addPlace(place, ElementType.place)\r\n    }\r\n\r\n    function removePlaceFromTourDay(place) {\r\n        tourInfo.days[currentDay].tour.map((row, index)=>{\r\n            if(row.type === ElementType.place){\r\n                if(row.data.details.placeId === place.placeId){\r\n                    removePlace(index)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Renders places markers on the map\r\n     * @return {*[]}\r\n     */\r\n    function PlacesMarkers() {\r\n        return places.map((location, i) => {\r\n            const latitude = parseFloat(location.latitude);\r\n            const longitude = parseFloat(location.longitude);\r\n            return <Marker\r\n                zIndex={1}\r\n                key={location.placeId}\r\n                position={{lat: latitude, lng: longitude}}\r\n                onClick={() => {\r\n                    let markers = Object.assign({}, placesInfoWindows);\r\n                    markers[i] = true;\r\n                    setPlacesInfoWindows(markers)\r\n                }}\r\n            >\r\n                {placesInfoWindows[i] && (\r\n                    <InfoWindow onCloseClick={() => {\r\n                        let markers = Object.assign({}, placesInfoWindows);\r\n                        markers[i] = false;\r\n                        setPlacesInfoWindows(markers)\r\n                    }\r\n                    }>\r\n                        <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                            <Typography variant=\"h6\">\r\n                                {location.name}\r\n                            </Typography>\r\n\r\n                            <Button\r\n                                onClick={()=>{addPlaceToTourDay(location)}}\r\n                                variant=\"text\"\r\n                                color=\"secondary\"\r\n                                size=\"large\"\r\n                                startIcon={<AddIcon/>}>\r\n                                Add this place to tour!\r\n                            </Button>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )}\r\n            </Marker>\r\n        })\r\n    }\r\n\r\n\r\n    const searchAreaComponent = useMemo(() => (\r\n        <CustomControlsManager position={window.google.maps.ControlPosition.TOP_CENTER}>\r\n            <div>\r\n                {loadingArea ?\r\n                    <CircularProgress />\r\n                    :\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                               fetchPlaces()\r\n                            }}\r\n                    >\r\n                        Search area...\r\n                    </Button>\r\n                }\r\n\r\n            </div>\r\n        </CustomControlsManager>\r\n    ), [loadingArea]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FilterBlock/>\r\n            <MyMapComponent\r\n                loadingElement={<div style={{height: `100%`}}/>}\r\n                containerElement={<div style={{height: `400px`}}/>}\r\n                mapElement={<div style={{height: `100%`}}/>}\r\n                refMap={refMap}>\r\n\r\n                {searchAreaComponent}\r\n                <PlacesMarkers/>\r\n\r\n                {/* Rendering direction path*/}\r\n                {directions ?\r\n                    <DirectionsRenderer\r\n                        options={{suppressMarkers: true, draggable: false}}\r\n                        draggable={false}\r\n                        directions={directions}/> : null}\r\n\r\n                {/* Rendering direction places markers*/}\r\n                {directionPlaces.map((marker, index) => {\r\n                    const position = { lat: marker.latitude, lng: marker.longitude };\r\n                    return <Marker\r\n                        zIndex={2}\r\n                        icon={{\r\n                            url: require('../../res/selectedTourIcon.svg'),\r\n                            scaledSize: new window.google.maps.Size(48, 48),\r\n                            origin: new window.google.maps.Point(0, 0),\r\n                            labelOrigin: new window.google.maps.Point(24, 16),\r\n                        }}\r\n                        key={index}\r\n                        position={position}\r\n                        label={{text: `${index+1}`, color: \"white\"}}\r\n                        onClick={\r\n                        ()=>{\r\n                            let info = Object.assign({}, infoWindows);\r\n                            info[index] = true;\r\n                            setInfoWindows(info);\r\n                        }\r\n                    }>\r\n                        {infoWindows[index] && (\r\n                        <InfoWindow onCloseClick={()=>{\r\n                            let info = Object.assign({}, infoWindows);\r\n                            info[index] = false;\r\n                            setInfoWindows(info);\r\n                        }}>\r\n                                <Card style={{display:\"flex\", flexDirection: \"column\",alignItems:\"center\"}}>\r\n                                    {marker.photo ?<Avatar alt=\"Remy Sharp\" src={marker.photo} className={classes.largeIcon}/> : null}\r\n\r\n                                    <Typography>\r\n                                        {marker.name}\r\n                                    </Typography>\r\n                                    <Button\r\n                                        onClick={()=>removePlaceFromTourDay(marker)}\r\n                                        style={{marginTop: 12}}\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        startIcon={<DeleteIcon />}\r\n                                    >\r\n                                        Remove from tour\r\n                                    </Button>\r\n\r\n                                </Card>\r\n                        </InfoWindow>\r\n                        )}\r\n                    </Marker>\r\n                })}\r\n\r\n            </MyMapComponent>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTourMap.propTypes = {\r\n    tourInfo: PropTypes.object.isRequired,\r\n    currentDay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TourMap)\r\n","import {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useMemo, useState} from \"react\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TourPlacesWrapper from \"./TourPlacesWrapper\";\r\nimport PlaceSearch from \"./PlaceSearch\";\r\nimport DaysWrapper from \"./DaysWrapper\";\r\nimport TourDataReducer from \"./TourReducer\";\r\nimport TourInfoComponent from \"./TourInfoComponent\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TourMap from \"./TourMap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../Networking/API\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport shortid from 'shortid';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport RecommendationListDialog from \"../recomendation/RecommendationListDialog\";\r\nimport {RecommendationType} from \"../recomendation/Recommendation\";\r\n\r\nexport const ElementType = {\r\n    place: 0,\r\n    transport: 1\r\n}\r\nexport const PlaceType = {\r\n    api: 1,\r\n    local: 0\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            overflow: \"scroll\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            overflow: \"initial\",\r\n            display: \"flex\",\r\n        },\r\n        height: `calc(100% - 64px)`,\r\n        width: \"100%\",\r\n        '&::-webkit-scrollbar': {\r\n            display: \"none\"\r\n        },\r\n    },\r\n    loader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"100vw\",\r\n        height: \"100vh\"\r\n    },\r\n    rightLayout: {\r\n        flex: 2,\r\n        '&::-webkit-scrollbar': {\r\n            display: \"none\"\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            height: \"100%\",\r\n            overflowY: \"scroll\",\r\n\r\n        },\r\n    },\r\n    leftLayout: {\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            height: \"100%\",\r\n        },\r\n        overflowY: \"scroll\",\r\n\r\n        flex: 1,\r\n        '&::-webkit-scrollbar': {\r\n            display: \"none\"\r\n        },\r\n    },\r\n    actionsArea: {\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n\r\n})\r\n\r\nconst sampleTourData = {\r\n    name: \"\",\r\n    description: \"\",\r\n    isVerified: true,\r\n    isPublished: false,\r\n    days: [\r\n        {\r\n            description: \"\",\r\n            elementIdentifier: \"jkasfbjkdsbjk\",\r\n            tour: []\r\n        }\r\n    ]\r\n}\r\n\r\nfunction Tour({classes, match}) {\r\n\r\n    const [localPlacesFound, setLocalPlacesFound] = useState([])\r\n    const [apiPlacesFound, setApiPlacesFound] = useState([])\r\n    const [currentDay, setCurrentDay] = useState(0)\r\n    const [tourId, setTourId] = useState(match.params.tourId)\r\n    const [isLoading, setIsLoading] = useState(match.params.tourId !== undefined);\r\n    const [recommendationsDialogOpen, setRecommendationsDialogOpen] = useState(false)\r\n\r\n    const [selectedCategories, setSelectedCategories] = useState([])\r\n    const [availableCategories, setAvailableCategories] = useState([])\r\n\r\n    const [errorInfo, setErrorInfo] = useState({\r\n            errors: {\r\n                titleMissing: false,\r\n                /* Any client-side verification errors may by added here, and handled in individual components */\r\n            },\r\n            showErrors: false\r\n        }\r\n    )\r\n\r\n    const [tourInfo, dispatchTourInfo] = React.useReducer(TourDataReducer, sampleTourData)\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    const handleAddPlaceClick = (placeInfo, type) => {\r\n        dispatchTourInfo({\r\n            type: 'ADD_ELEMENT',\r\n            day: currentDay,\r\n            data: {\r\n                type: ElementType.place,\r\n                data: {\r\n                    type: type,\r\n                    details: {...placeInfo}\r\n                },\r\n            },\r\n            onError: () => {\r\n                addConfig(false, \"This place already exists in this tour.\")\r\n            }\r\n        })\r\n    }\r\n\r\n    const removeElementCallback = (index) => {\r\n        dispatchTourInfo({\r\n            type: 'REMOVE_ELEMENT',\r\n            day: currentDay,\r\n            index: index\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (tourId !== undefined) { //If user wants to edit a tour, we download all tour data. loadData also downloads categories\r\n            loadData()\r\n        }else{ //Otherwise, we just download categories instead.\r\n            API.Categories.getAllCategories().then(response => {\r\n                setAvailableCategories(response)\r\n            }).catch(() => {\r\n                addConfig(false, \"Categories failed to load\")\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const parseTourInfoResponse = (response) => {\r\n        let aggregatedDays = [];\r\n        response.days.forEach(day => {\r\n            let aggregatedElements = [];\r\n            day.data.forEach(place => {\r\n                let aggregatedPlace = {\r\n                    type: ElementType.place,\r\n                    data: {details: place.place, type: place.place.type}\r\n                }\r\n                delete aggregatedPlace.data.details.type\r\n                aggregatedElements.push(aggregatedPlace)\r\n                place.transport.forEach(transport => {\r\n                    aggregatedElements.push({\r\n                        type: ElementType.transport,\r\n                        data: {transport: transport.fk_transportId - 1, elementIdentifier: shortid.generate()}\r\n                    })\r\n                })\r\n            })\r\n            let aggregatedDay = {...day, tour: aggregatedElements, elementIdentifier: shortid.generate()}\r\n            delete aggregatedDay.data\r\n            aggregatedDays.push(aggregatedDay)\r\n        })\r\n        let aggregatedTour = {...response, days: aggregatedDays}\r\n        dispatchTourInfo({type: 'SET_ALL', data: aggregatedTour})\r\n    }\r\n\r\n    const loadData = () => {\r\n        Promise.all([\r\n            API.Tour.getTour(\"?id=\" + tourId),\r\n            API.Categories.getAllCategories(),\r\n            API.Tour.getTourCategories(\"?id=\" + tourId),\r\n            ]\r\n        ).catch(() => {\r\n            addConfig(false, \"Tour has failed to load\")\r\n            setTourId(undefined)\r\n        }).then((response) => {\r\n            parseTourInfoResponse(response[0])\r\n            setAvailableCategories(response[1])\r\n            setSelectedCategories(response[2])\r\n        }).finally(() => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleSave = () => {\r\n        let containsErrors = false;\r\n        Object.keys(errorInfo.errors).map(function (keyName, keyIndex) {\r\n            if (errorInfo.errors[keyName]) {\r\n                setErrorInfo(state => {\r\n                    return {...state, showErrors: true}\r\n                })\r\n                containsErrors = true;\r\n            }\r\n        })\r\n        if (containsErrors) return\r\n        setErrorInfo(state => {\r\n            return {...state, showErrors: false}\r\n        })\r\n\r\n        const aggregatedDays = []\r\n        tourInfo.days.forEach(day => {\r\n            let aggregatedDay = {...day, data: []}\r\n            delete aggregatedDay.tour\r\n            delete aggregatedDay.elementIdentifier\r\n            for (let i = 0; i < day.tour.length; i++) {\r\n                let element = day.tour[i]\r\n                if (element.type !== ElementType.place)\r\n                    continue;\r\n                let transport = []\r\n                for (let j = i + 1; j < day.tour.length && day.tour[j].type === ElementType.transport; j++) {\r\n                    transport.push({fk_transportId: day.tour[j].data.transport + 1})\r\n                }\r\n                let aggregatedPlace = {\r\n                    place: {\r\n                        type: element.data.type,\r\n                        placeId: element.data.details.placeId\r\n                    },\r\n                    transport: transport\r\n                }\r\n                aggregatedDay.data.push(aggregatedPlace)\r\n            }\r\n            aggregatedDays.push(aggregatedDay)\r\n        })\r\n        let aggregatedTour = {...tourInfo, days: aggregatedDays}\r\n\r\n        if (tourId === undefined) {\r\n            API.Tour.insertTour(aggregatedTour).then((response) => {\r\n                setTourId(response)\r\n                return response\r\n            }).then((response) => Promise.all(\r\n                [\r\n                    API.Tour.updateTourCategories(selectedCategories, \"?p=\" + response)\r\n                ]\r\n            )).then((() => {\r\n                addConfig(true, \"Tour has been inserted successfully!\")\r\n            })).catch((error) => {\r\n                addConfig(false, \"Something went wrong while saving this tour.\")\r\n            })\r\n        } else {\r\n            Promise.all([\r\n                API.Tour.updateTour(aggregatedTour, \"?id=\" + tourId),\r\n                API.Tour.updateTourCategories(selectedCategories, \"?p=\" + tourId)\r\n            ])\r\n            .then(() => {\r\n                addConfig(true, \"Tour has been updated successfully!\")\r\n            }).catch((error) => {\r\n                addConfig(false, \"Something went wrong while saving this tour.\")\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n    const leftLayout = useMemo(() => (\r\n        <div className={classes.leftLayout}>\r\n            <PlaceSearch addPlaceCallback={handleAddPlaceClick} localPlacesFound={localPlacesFound}\r\n                         setLocalPlacesFound={setLocalPlacesFound} apiPlacesFound={apiPlacesFound}\r\n                         setApiPlacesFound={setApiPlacesFound}/>\r\n        </div>\r\n    ), [localPlacesFound, apiPlacesFound, currentDay])\r\n\r\n\r\n    let dayInfoWithoutDesc = JSON.stringify(tourInfo.days.map(day => {\r\n        let dayCopy = {...day}\r\n        delete dayCopy.description\r\n        return dayCopy\r\n    }))\r\n\r\n    const mapComponent = useMemo(() => (\r\n        <React.Fragment>\r\n            <TourMap tourInfo={tourInfo}\r\n                     currentDay={currentDay}\r\n                     addPlace={handleAddPlaceClick}\r\n                     removePlace={removeElementCallback}\r\n            />\r\n            <TourPlacesWrapper errorInfo={errorInfo} setErrorInfo={setErrorInfo}\r\n                               currentDay={currentDay} tourInfoReducer={dispatchTourInfo} tourInfo={tourInfo}/>\r\n        </React.Fragment>\r\n    ), [dayInfoWithoutDesc, currentDay])\r\n\r\n    const tourDaysComponents = useMemo(() => (\r\n        <div>\r\n            <DaysWrapper currentDay={currentDay} setCurrentDay={setCurrentDay} tourInfo={tourInfo}\r\n                         tourInfoReducer={dispatchTourInfo}/>\r\n            <Divider variant=\"middle\"/>\r\n            {mapComponent}\r\n\r\n        </div>\r\n    ), [tourInfo.days, currentDay, errorInfo]);\r\n\r\n    const rightLayout = useMemo(() => (\r\n        <Paper className={classes.rightLayout}>\r\n            <TourInfoComponent tourInfo={tourInfo} tourInfoReducer={dispatchTourInfo} errorInfo={errorInfo}\r\n                               setErrorInfo={setErrorInfo}\r\n                               tourId={tourId}\r\n                               setSelectedCategories={setSelectedCategories} selectedCategories={selectedCategories} availableCategories={availableCategories} setAvailableCategories={setAvailableCategories}/>\r\n            <Divider variant=\"middle\"/>\r\n            {tourDaysComponents}\r\n            <div className={classes.actionsArea}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => setRecommendationsDialogOpen(true)} disabled={tourId === null}>\r\n                    Add tour to recommendation\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n                    Save this tour\r\n                </Button>\r\n            </div>\r\n        </Paper>\r\n    ), [tourInfo, currentDay, errorInfo, availableCategories, selectedCategories]);\r\n\r\n    const theme = useTheme();\r\n    const largeScreen = useMediaQuery(theme.breakpoints.up('lg'));\r\n\r\n    const content = (\r\n        <React.Fragment>\r\n            {largeScreen ?\r\n                <React.Fragment>\r\n                    {leftLayout}\r\n                    {rightLayout}\r\n                </React.Fragment> :\r\n                <React.Fragment>\r\n                    {rightLayout}\r\n                    {leftLayout}\r\n                </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <RecommendationListDialog\r\n                setOpen={setRecommendationsDialogOpen}\r\n                open={recommendationsDialogOpen}\r\n                objectId={tourId}\r\n                type={RecommendationType.tour}/>\r\n            {isLoading ? <div className={classes.loader}><CircularProgress/></div> : content}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Tour)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport history from \"../helpers/history\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n\r\n    sortingButtons: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n\r\n    },\r\n    root:{\r\n        height:\"100vh\",\r\n        width:\"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content:{\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Tour name', isId: true},\r\n    { id: 'description', numeric: false, disablePadding: false, label: 'Tour description',isId: false},\r\n    { id: 'lastModified', numeric: false, disablePadding: false, label: 'Date modified',isId: false},\r\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\r\n];\r\n\r\nfunction Tours(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [pageData, setPageData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { classes } = props;\r\n\r\n    const [filterOptions, setFilterOptions] = useState([\r\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\r\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\r\n\r\n    const [filterQuery, setFilterQuery] = useState(\"\");\r\n\r\n\r\n    const { addAlertConfig } = UseAlertDialogContext();\r\n    const { addConfig } = UseSnackbarContext();\r\n\r\n    useEffect(()=>{\r\n        if(!isLoading){\r\n            getAllTours(\"?o=\"+filterQuery);\r\n        }\r\n    },[filterQuery]);\r\n\r\n    function parseData(data){\r\n        console.log(\"deita\", data.list)\r\n        setIsLoading(false);\r\n        let placesData = [];\r\n        data.list.map(row => {\r\n            placesData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(placesData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updateTourCallback(id){\r\n        history.push(\"/app/addtour/\"+id)\r\n    }\r\n    function removePlaceCallback(id){\r\n        console.log(\"tour id\", id)\r\n\r\n        addAlertConfig(Strings.DIALOG_TOUR_DELETE_TITLE, Strings.DIALOG_TOUR_DELETE_MESSAGE, [{name: \"Delete\", action: () => {\r\n                setIsLoading(true);\r\n                API.Tour.removeTour(\"?id=\"+id).then(response=>{\r\n                    let tmp = [];\r\n                    data.map(row=>{\r\n                        if(row[\"tourId\"] !== id){\r\n                            tmp.push(row)\r\n                        }\r\n                    });\r\n                    setData(tmp);\r\n                    addConfig(true, Strings.SNACKBAR_TOUR_REMOVE_SUCCESS)\r\n                    setIsLoading(false)\r\n                }).catch(error=>{\r\n                    setIsLoading(false);\r\n                    addConfig(false, Strings.SNACKBAR_ERROR)\r\n                })\r\n            }}],  ()=>{setIsLoading(false)})\r\n    }\r\n\r\n    const changePageCallback = (p=0, keyword=\"\") => {\r\n        setIsLoading(true);\r\n        getAllTours(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword+\"&o=\"+filterQuery)\r\n    };\r\n\r\n\r\n    //Sorting stuff\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const filterOptionsChanged = (name) =>{\r\n        let filters = [];\r\n        let fq = [];\r\n        filterOptions.map(row=>{\r\n            if(row.filterName === name){\r\n                row.filter = !row.filter\r\n            }\r\n            if(row.filter){\r\n                fq.push(row.filterName)\r\n            }\r\n            filters.push(row)\r\n        });\r\n\r\n        setFilterQuery(fq.join(\",\"));\r\n        setFilterOptions(filters)\r\n    };\r\n\r\n    const customToolbarElements = () =>{\r\n        return <div>\r\n            <Tooltip aria-describedby={id} title=\"Filter list\">\r\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\r\n                    <FilterListIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={()=>{setAnchorEl(null)}}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className={classes.sortingButtons}>\r\n                    {filterOptions.map(row=>{\r\n                        return <FormControlLabel\r\n                            control={<Checkbox checked={row.filter} onChange={()=>filterOptionsChanged(row.filterName)} name={row.filterName} />}\r\n                            label={row.filterLabel}\r\n                        />\r\n                    })}\r\n                </div>\r\n\r\n            </Popover>\r\n        </div>\r\n    };\r\n    /*------------------------------------------------------------------------------------------------------*/\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content} >\r\n                <TableComponent\r\n                    title={\"Tours\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updateTourCallback}\r\n                    removeCallback={removePlaceCallback}\r\n                    id={\"tourId\"}\r\n                    isLoading={isLoading}\r\n                    customToolbarElements={customToolbarElements()}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={()=>{history.push(\"/app/addtour\")}}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon />}>\r\n                        Add\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n    function getAllTours(urlParams=\"\") {\r\n        API.Tour.getAllToursAdmin(urlParams).then(response=>{\r\n            console.log(response);\r\n            parseData(response)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nTours.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Tours);","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nfunction AddDialog(props){\r\n\r\n    function validateInput(){\r\n        var error = false;\r\n        if(text.length <= 3)\r\n            error = true\r\n        setError(error)\r\n        return error\r\n    }\r\n\r\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\r\n    const [text, setText] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    return(\r\n        <div>\r\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\r\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\r\n                    {header}\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCallback} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus color=\"primary\" onClick={() => {\r\n                        !validateInput() && action(text)\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    action: PropTypes.func.isRequired,\r\n    onCloseCallback: PropTypes.func.isRequired\r\n};\r\nexport default withStyles(styles)(AddDialog)\r\n","import PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport TableComponent from \"./TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport history from \"../helpers/history\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddDialog from \"./AddDialog\";\r\nimport UseEditDialogContext from \"../contexts/UseEditDialogContext\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\",\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    buttonWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        width: \"100%\",\r\n    }\r\n})\r\n\r\nconst categoriesHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Category name', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n]\r\nconst tagsHeadCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Tag name', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n]\r\n\r\nfunction Resources({classes}) {\r\n\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addEditDialogConfig} = UseEditDialogContext();\r\n\r\n    const [loading, setIsLoading] = useState({\r\n        categories: false,\r\n        tags: false\r\n    })\r\n\r\n    const [categories, setCategories] = useState([])\r\n    const [tags, setTags] = useState([])\r\n\r\n    useEffect(() => {\r\n        setIsLoading({categories: true, tags: true})\r\n        Promise.all([\r\n                API.Categories.getAllCategories(),\r\n                API.Tags.getAllTags()\r\n            ]\r\n        ).then(response => {\r\n            setCategories(response[0])\r\n            setTags(response[1])\r\n        }).catch(() => {\r\n            addConfig(false, \"Could not retrieve data!\")\r\n        }).finally(() => {\r\n            setIsLoading(oldData => {return{ ...oldData, categories: false, tags: false}})\r\n        })\r\n    }, [])\r\n\r\n    const handleAddCategory = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add category\",\r\n            explanation: \"Type the category name\",\r\n            onDoneCallback: (text) => {\r\n               API.Categories.addCategory([{name: text}]).then((response)=>{\r\n                   addConfig(true, \"Category inserted successfully\")\r\n                   setCategories(oldData => [...oldData, {name: text, categoryId: response[0]}])\r\n                }).catch(error=>{\r\n                   addConfig(false, \"Failed to add category.\")\r\n               })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Restaurants, hiking, etc...\"\r\n        })\r\n    }\r\n\r\n    const removeCategoryCallback = (categoryId) => {\r\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\r\n        addAlertConfig(\"Warning\", \"Are you sure you want the category, named '\" + categoryName + \"'?\", [{\r\n            name: \"yes\", action: () => {\r\n                setIsLoading(oldData => {\r\n                    return {...oldData, categories: true}\r\n                })\r\n                API.Categories.removeCategory([{categoryId: categoryId}]).then(() => {\r\n                    addConfig(true, \"Category successfully removed.\")\r\n                    setCategories(oldData => oldData.filter(item => item.categoryId !== categoryId))\r\n                }).catch(() => {\r\n                    addConfig(false, \"An error has occurred while removing category.\")\r\n                }).finally(() => {\r\n                    setIsLoading(oldData => {\r\n                        return {...oldData, categories: false}\r\n                    })\r\n                })\r\n            }\r\n        }], () => {\r\n        })\r\n    }\r\n\r\n    const updateCategoryHandler = (categoryId) => {\r\n        let categoryName = categories.filter(item => item.categoryId === categoryId)[0].name\r\n        addEditDialogConfig({\r\n            title: \"Edit category\",\r\n            explanation: \"Type the category name\",\r\n            defaultText: categoryName,\r\n            onDoneCallback: (text) => {\r\n                API.Categories.updateCategory([{name: text, categoryId: categoryId}]).then(()=>{\r\n                    addConfig(true, \"Category updated successfully\")\r\n                    setCategories(oldData => {return oldData.map(item => {\r\n                        if(item.categoryId === categoryId)\r\n                            return {...item, name: text}\r\n                        else return item\r\n                    })})\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to update category.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Restaurants, hiking, etc...\"\r\n        })\r\n    }\r\n\r\n    const updateTagHandler = (id) => {\r\n        let tagName = tags.filter(item => item.tagId === id)[0].name\r\n        addEditDialogConfig({\r\n            title: \"Edit tag\",\r\n            explanation: \"Type the tag name\",\r\n            defaultText: tagName,\r\n            onDoneCallback: (text) => {\r\n                API.Tags.updateTags([{name: text, tagId: id}]).then(()=>{\r\n                    addConfig(true, \"Tag updated successfully\")\r\n                    setTags(oldData => {return oldData.map(item => {\r\n                        if(item.tagId === id)\r\n                            return {...item, name: text}\r\n                        else return item\r\n                    })})\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to update tag.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const removeTagHandler = (id) => {\r\n        let tagName = tags.filter(item => item.tagId === id)[0].name\r\n        addAlertConfig(\"Warning\", \"Are you sure you want the tag, named '\" + tagName + \"'?\", [{\r\n            name: \"yes\", action: () => {\r\n                setIsLoading(oldData => {\r\n                    return {...oldData, tags: true}\r\n                })\r\n                API.Tags.removeTags([{tagId: id}]).then(() => {\r\n                    addConfig(true, \"Tag successfully removed.\")\r\n                    setTags(oldData => oldData.filter(item => item.tagId !== id))\r\n                }).catch(() => {\r\n                    addConfig(false, \"An error has occurred while removing tag.\")\r\n                }).finally(() => {\r\n                    setIsLoading(oldData => {\r\n                        return {...oldData, tags: false}\r\n                    })\r\n                })\r\n            }\r\n        }], () => {\r\n        })\r\n    }\r\n\r\n    const handleAddTag = () => {\r\n        addEditDialogConfig({\r\n            title: \"Add tag\",\r\n            explanation: \"Type the tag name\",\r\n            onDoneCallback: (text) => {\r\n                API.Tags.addTag([{name: text}]).then((response)=>{\r\n                    addConfig(true, \"Tag inserted successfully\")\r\n                    setTags(oldData => [...oldData, {name: text, tagId: response[0]}])\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Failed to add tag.\")\r\n                })\r\n            },\r\n            validateInput: (input) => {return input.length > 0 ? 0 : 1},\r\n            textFieldLabel: \"Warm, quick, cozy...\"\r\n        })\r\n    }\r\n\r\n    const searchFunction = (keyword, item) => {\r\n        if(keyword.length < 1) return true\r\n        return item.name.includes(keyword)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n\r\n                <TableComponent\r\n                    title={\"Categories\"}\r\n                    headCells={categoriesHeadCells}\r\n                    data={categories}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateCategoryHandler}\r\n                    removeCallback={removeCategoryCallback}\r\n                    id={\"categoryId\"}\r\n                    isLoading={loading.categories}\r\n                />\r\n\r\n                <Box className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleAddCategory}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add a new category\r\n                    </Button>\r\n                </Box>\r\n\r\n                <br/>\r\n\r\n                <TableComponent\r\n                    title={\"Tags\"}\r\n                    headCells={tagsHeadCells}\r\n                    data={tags}\r\n                    pagingInfo={null}\r\n                    checkable={false}\r\n                    searchFunction={searchFunction}\r\n                    changePageCallback={() => {}}\r\n                    updateCallback={updateTagHandler}\r\n                    removeCallback={removeTagHandler}\r\n                    id={\"tagId\"}\r\n                    isLoading={loading.tags}\r\n                />\r\n\r\n                <Box className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={handleAddTag}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add a new tag\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nResources.propTypes = {\r\n};\r\n\r\nexport default withStyles(styles)(Resources)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutoCompleteChip from \"./AutocompleteChip\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\n\r\nconst UpdateUserDialog = ({open, setOpen, userData, availableRoles, setAvailableRoles}) => {\r\n\r\n    const [selectedRoles, setSelectedRoles] = useState([]);\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    useEffect(()=>{\r\n        setSelectedRoles(userData.roles)\r\n    },[userData.roles]);\r\n\r\n    function setRoles() {\r\n        addAlertConfig(\"Update user\", \"Are you sure you want to update this user's permissions?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                let roles = []\r\n                selectedRoles.map(row=>{\r\n                    roles.push(row.roleId)\r\n                });\r\n                API.User.setRoles({userId: userData.id, roles: roles}).then(response=>{\r\n                    addConfig(true, \"Updated user successfully\");\r\n                    setOpen(false)\r\n                }).catch(error=>{\r\n                    addConfig(false, \"Could not update user\")\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n    const renderRoles = <div>\r\n\r\n    </div>\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={'lg'}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">Update user - {userData.name + \" \" + userData.surname}</DialogTitle>\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Change user permissions\r\n                </Typography>\r\n\r\n                <AutoCompleteChip\r\n                    id=\"roleId\"\r\n                    name=\"role\"\r\n                    label=\"Select sources\"\r\n                    options={availableRoles}\r\n                    setOptions={setAvailableRoles}\r\n                    setSelectedOptions={setSelectedRoles}\r\n                    selectedOptions={selectedRoles}\r\n                />\r\n\r\n                {\r\n                    selectedRoles.map(row=>{\r\n                        return <div>\r\n                            <b>{row.role}</b> - {row.description}\r\n                            <br/>\r\n                        </div>\r\n                    })\r\n                }\r\n\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button onClick={()=>setRoles()}\r\n                        color=\"primary\">\r\n                    Update user\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\n\r\nexport default UpdateUserDialog\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AutoCompleteChip from \"./AutocompleteChip\";\r\nimport API from \"../Networking/API\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {averageTimeSpent} from \"../helpers/averageTimeSpent\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {load} from \"dotenv\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n\r\n});\r\n\r\nfunction AddUserDialog({classes, open, setOpen, availableRoles}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const [user, setUser] = useState({name: \"\", surname: \"\", password: \"\", email: \"\", role: -1});\r\n    const [error, setError] = useState({name: false, surname: false, password: false, email: false, role: false});\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const userDataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let userData = Object.assign({}, user);\r\n        userData[name] = value\r\n        setUser(userData)\r\n    };\r\n\r\n    function parseRoleFromId(id){\r\n        return availableRoles.map(row=>{\r\n            if(row.roleId===id){\r\n                return  row.role + \" - \" + row.description\r\n            }\r\n        })\r\n    }\r\n\r\n    function checkErrors(){\r\n        let errors = Object.assign({}, error)\r\n        let hasErrors = false;\r\n        for (let key in user) {\r\n            errors[key] = user[key] === \"\" || user[key] === -1;\r\n            if(errors[key] === true){\r\n                hasErrors = true\r\n            }\r\n        }\r\n        setError(errors);\r\n        return hasErrors\r\n    }\r\n\r\n    function addUser(){\r\n        if(checkErrors()){\r\n            return\r\n        }\r\n        addAlertConfig(\"Add new editor\", \"Are you sure you want to add new editor?. This user has role: \" + parseRoleFromId(user.role), [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Auth.register(user).then(userId=>{\r\n                    API.User.setRoles({userId: userId, roles: [user.role]}).then(response=>{\r\n                        addConfig(true, \"User was added successfully!\")\r\n                        setOpen(false);\r\n                        setLoading(false)\r\n                    }).catch(error=>{\r\n                        setOpen(false);\r\n                        addConfig(false, \"Could not map user permissions!\");\r\n                        setLoading(false)\r\n                    })\r\n                }).catch(error=>{\r\n                    addConfig(false, error.message);\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Add new editor</DialogTitle>\r\n            <DialogContent>\r\n                    <div className={classes.root}>\r\n                        <TextField id=\"outlined-basic\"\r\n                                   error={error.name}\r\n                                   required\r\n                                   label=\"Name\"\r\n                                   name=\"name\"\r\n                                   value={user['name']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.surname}\r\n                                   label=\"Surname\"\r\n                                   name=\"surname\"\r\n                                   value={user['surname']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.email}\r\n                                   label=\"Email\"\r\n                                   name=\"email\"\r\n                                   value={user['email']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <TextField id=\"outlined-basic\"\r\n                                   required\r\n                                   error={error.password}\r\n                                   autoComplete='new-password'\r\n                                   label=\"Password\"\r\n                                   name=\"password\"\r\n                                   value={user['password']}\r\n                                   onChange={userDataChanged}\r\n                                   variant=\"outlined\"\r\n                                   type=\"password\"\r\n                                   className={classes.textField}\r\n                        />\r\n                        <br/>\r\n                        <Alert severity=\"info\">\r\n                            Make sure to use secure password as it will give access to modify data in admin panel.\r\n                            <br/>\r\n                            *Password must contain between 8 and 30 characters\r\n                            <br/>\r\n                            *Password must have atleast one digit\r\n                            <br/>\r\n                            *Password must have atleast one upper character\r\n                        </Alert>\r\n\r\n                        <Divider className={classes.textField} medium />\r\n\r\n                        <FormControl error={error.role} variant=\"outlined\" className={classes.textField}>\r\n                            <InputLabel>User role</InputLabel>\r\n                            <Select\r\n                                onChange={(e, value) =>{\r\n                                    let userTmp = Object.assign({},user);\r\n                                    userTmp.role = value.props.value\r\n                                    setUser(userTmp)\r\n                                }}\r\n                                value={user.role}\r\n                                label=\"Select user role\"\r\n                            >\r\n                                <option value=\"-1\">None</option>\r\n                                {\r\n                                    availableRoles.map(row=>{\r\n                                        return <option value={row.roleId}> {row.role}</option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                            <FormHelperText>Select one of the available user roles</FormHelperText>\r\n                        </FormControl>\r\n\r\n                        {user.role === 1 ? <Alert className={classes.textField}\r\n                            severity=\"warning\">\r\n                            ROLE_ADMIN will have full access to the system. Make sure you know this person!\r\n                            </Alert> :\r\n                        null\r\n                        }\r\n\r\n                        <Typography variant=\"h6\" style={{marginTop: 48}}>\r\n                            Available roles\r\n                        </Typography>\r\n                        <div className={classes.textField}>\r\n                            {\r\n                                availableRoles.map(row=>{\r\n                                    return (\r\n                                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                                            {row.role} - {row.description}\r\n                                        </Typography>\r\n                                    )\r\n\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>setOpen(false)}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        addUser()\r\n                    }}\r\n                >\r\n                    Add user\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\nexport default withStyles(styles)(AddUserDialog)\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport API from \"../Networking/API\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UpdateUserDialog from \"../components/UpdateUserDialog\";\r\nimport AddUserDialog from \"../components/AddUserDialog\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\"\r\n    },\r\n    buttonsDiv: {\r\n        backgroundColor: \"red\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(8),\r\n        },\r\n    },\r\n    autocomplete: {\r\n        width: '200px',\r\n        height: '40px',\r\n        fontSize: \"14px\",\r\n        border: \"0\",\r\n        borderBottom: \"2px solid grey\",\r\n        outline: \"0\",\r\n        marginBottom: \"4px\"\r\n    }\r\n});\r\n\r\n\r\nconst headCells = [\r\n    {id: 'name', numeric: false, disablePadding: false, label: 'Name', isId: true},\r\n    {id: 'surname', numeric: false, disablePadding: false, label: 'Surname', isId: false},\r\n    {id: 'email', numeric: false, disablePadding: false, label: 'Contact email', isId: false},\r\n    {id: 'phoneNumber', numeric: false, disablePadding: false, label: 'Phone number', isId: false},\r\n    {id: 'parsedRoles', numeric: false, disablePadding: false, label: 'Roles', isId: false},\r\n    {id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false}\r\n];\r\n\r\nfunction Places(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState({});\r\n    const [allRoles, setAllRoles] = useState([])\r\n    const [pageData, setPageData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const {classes} = props;\r\n\r\n    const [openUpdateDialog, setOpenUpdateDialog] = useState(false);\r\n    const [openAddDialog, setOpenAddDialog] = useState(false);\r\n\r\n\r\n    // const {filterQuery} = useContext(PlacesFilterContext)\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n\r\n    useEffect(()=>{\r\n        API.User.getAllRoles().then(roles=>{\r\n            console.log(roles);\r\n            setAllRoles(roles);\r\n        }).catch(error=>{\r\n            addConfig(false, error.message)\r\n        })\r\n    },[]);\r\n\r\n\r\n\r\n    function requestUsers(p = 1, keyword = \"\") {\r\n        getAllUsers(\"\" + \"?p=\" + p + \"&s=\" + 10 + \"&keyword=\" + keyword);\r\n    }\r\n\r\n    function parseData(data) {\r\n\r\n        setIsLoading(false);\r\n        let usersData = [];\r\n        data.list.map(row => {\r\n            let rolesList = [];\r\n            row.roles.map(role =>{\r\n                rolesList.push(role.role)\r\n            });\r\n            row.parsedRoles = rolesList.join(',');\r\n            usersData.push(row)\r\n        });\r\n\r\n        delete data.list;\r\n        setData(usersData);\r\n        console.log(usersData);\r\n        setPageData(data);\r\n    }\r\n\r\n    function updatePlaceCallback(id) {\r\n        data.map(row=>{\r\n            if(row.id === id ){\r\n                setSelectedUser(row)\r\n            }\r\n        });\r\n        setOpenUpdateDialog(true)\r\n    }\r\n\r\n    const changePageCallback = (p = 0, keyword = \"\") => {\r\n            setIsLoading(true);\r\n            requestUsers(p, keyword)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n\r\n                {openUpdateDialog ? <UpdateUserDialog open={openUpdateDialog}\r\n                                                      setOpen={setOpenUpdateDialog}\r\n                                                      availableRoles={allRoles}\r\n                                                      setAvailableRoles={setAllRoles}\r\n                                                      userData={selectedUser}/>\r\n                                                      :\r\n                    null\r\n                }\r\n\r\n                {openAddDialog ? <AddUserDialog open={openAddDialog}\r\n                                                availableRoles={allRoles}\r\n                                                setOpen={setOpenAddDialog}/> : null}\r\n\r\n                <TableComponent\r\n                    title={\"Users\"}\r\n                    headCells={headCells}\r\n                    data={data}\r\n                    pagingInfo={pageData}\r\n                    checkable={false}\r\n                    changePageCallback={changePageCallback}\r\n                    updateCallback={updatePlaceCallback}\r\n                    id={\"id\"}\r\n                    isLoading={isLoading}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        onClick={() => {\r\n                                setOpenAddDialog(true)\r\n                        }}\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon/>}>\r\n                        Add user\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n            <Button>\r\n                Clear filters\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    function getAllUsers(urlParams = \"\") {\r\n        API.User.getAllUsers(urlParams).then(response=>{\r\n            console.log(response)\r\n                setIsLoading(false);\r\n                parseData(response)\r\n        }).catch(error=>{\r\n                setIsLoading(false);\r\n                console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nPlaces.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Places);\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {getRefreshToken} from \"../helpers/tokens\";\r\nimport API from \"../Networking/API\";\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        let refreshToken = getRefreshToken();\r\n        if(refreshToken !== \"\" && refreshToken !== undefined){\r\n            // console.log(\"Refresh token\", refreshToken)\r\n                API.User.getUserProfile().then(user=>{\r\n                    // console.log(\"Fetched user\", user);\r\n                    setCurrentUser(user);\r\n                    setIsLoading(false)\r\n                }).catch(error=>{\r\n                    console.log(error);\r\n                    setIsLoading(false)\r\n                })\r\n        }else{\r\n            console.log(\"Refresh token is empty. No actions taken.\")\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser,\r\n                setCurrentUser,\r\n                isLoading\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};","import React, { useState, useCallback } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nexport const EditRecommendationContext = React.createContext()\r\n\r\n\r\nexport default function EditRecommendationProvider({ children }) {\r\n    const [config, setConfig] = useState({\r\n        open: false,\r\n        currentlyEditing: undefined,\r\n        rootList: [],\r\n        setRootList: ()=>{}\r\n    });\r\n\r\n    function startEditing(recommendation, rootList, setRootList) {\r\n        let conf = { ...config }\r\n\r\n        conf.open = true\r\n        conf.currentlyEditing = recommendation\r\n\r\n        conf.rootList = rootList\r\n        conf.setRootList = setRootList\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    function removeRecommendation(){\r\n        let conf = { ...config }\r\n        conf.open = false\r\n\r\n        let tempRootList = [...conf.rootList]\r\n        for(let i = 0; i<tempRootList.length; i++){\r\n            console.log(tempRootList[i].id)\r\n            if(tempRootList[i].id === conf.currentlyEditing.id){\r\n                tempRootList.splice(i, 1)\r\n            }\r\n        }\r\n        config.setRootList(tempRootList)\r\n        setConfig(conf)\r\n    }\r\n\r\n    function finishEditing(success=false, removedId= undefined) {\r\n        let conf = { ...config }\r\n        conf.open = false\r\n\r\n        if(removedId !== undefined){\r\n            for(let i = 0; i<conf.currentlyEditing.objects.length; i++){\r\n                if(conf.currentlyEditing.objects[i].id === removedId){\r\n                    conf.currentlyEditing.objects.splice(i, 1)\r\n                }\r\n            }\r\n        }\r\n\r\n        if(success){\r\n            let tempRootList = [...config.rootList]\r\n            for(let i = 0; i<tempRootList.length; i++){\r\n                if(tempRootList[i].id === conf.currentlyEditing.id){\r\n                    tempRootList[i] = conf.currentlyEditing\r\n                    break;\r\n                }\r\n            }\r\n            config.setRootList(tempRootList)\r\n        }\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    function setRecommendation(newRec){\r\n        let conf = { ...config }\r\n        conf.currentlyEditing = newRec\r\n\r\n        setConfig(conf)\r\n    }\r\n\r\n    return (\r\n        <EditRecommendationContext.Provider value={{\r\n            config,\r\n            startEditing,\r\n            finishEditing,\r\n            removeRecommendation,\r\n            setRecommendation\r\n        }}>\r\n            {children}\r\n        </EditRecommendationContext.Provider>\r\n    );\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport ApiPlaceCard from \"../ApiPlaceCard\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {EditRecommendationContext} from \"../../contexts/EditRecommendationContext\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport API from \"../../Networking/API\";\r\nimport {func} from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    textField:{\r\n        marginTop: 16\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    recommendedPlaceCard: {\r\n        width: 300,\r\n        height: 300,\r\n        padding: 16,\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        alignContent: 'flex-end',\r\n        zIndex: 999999\r\n    }\r\n\r\n});\r\n\r\nconst RecommendationPlaceSortable = SortableElement(({classes, place, removeObjectFromRecommendation}) => (\r\n    <div className={classes.recommendedPlaceCard}>\r\n        <ApiPlaceCard\r\n            placeData={place}\r\n            renderActionArea={() => {\r\n                return (\r\n                    <div>\r\n                        <IconButton aria-label=\"delete\" onClick={()=>removeObjectFromRecommendation(place.id)}>\r\n                            <DeleteIcon color=\"secondary\" fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </div>\r\n                )\r\n            }\r\n            }\r\n        />\r\n    </div>)\r\n)\r\n\r\nconst RecommendationPlaceSortableContainer = SortableContainer(({classes, config, removeObjectFromRecommendation}) => {\r\n    return (\r\n        <div style={{display:\"flex\", flexDirection: \"row\"}}>\r\n            {config.currentlyEditing.objects.length > 0 ?\r\n\r\n                config.currentlyEditing.objects.map((place, index)=>{\r\n                    delete place.description\r\n\r\n                    return <RecommendationPlaceSortable\r\n                        classes={classes}\r\n                        removeObjectFromRecommendation={removeObjectFromRecommendation}\r\n                        key={place.id}\r\n                        index={index}\r\n                        place={place}\r\n                    />\r\n                }) :\r\n\r\n                <Alert severity=\"info\">This recommendation does not have any objects attached. You can attach\r\n                    Places or Tours by browsing in Places and Tours tables\r\n                </Alert>\r\n            }\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\nfunction EditRecommendationDialog({classes}){\r\n\r\n\r\n    const {addConfig} = UseSnackbarContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n\r\n    const { config, setRecommendation, finishEditing, removeRecommendation } = useContext(EditRecommendationContext)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dataChanged = (event) => {\r\n        const {name, value} = event.target;\r\n        let recData = {...config.currentlyEditing}\r\n        recData[name] = value\r\n\r\n        setRecommendation(recData)\r\n    };\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        console.log(\"OnSortEnd\")\r\n        let data = { ...config.currentlyEditing }\r\n        data.objects = arrayMove(data.objects, oldIndex, newIndex)\r\n\r\n        setRecommendation(data)\r\n    }\r\n\r\n    function removeObjectFromRecommendation(placeId) {\r\n        addAlertConfig(\"Remove object from recommendation\", \"Are you sure you want to remove this object from recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true)\r\n                API.Recommendation.removePlaceFromRecommendation(\r\n                    {id: placeId,\r\n                        recommendationId: config.currentlyEditing.id,\r\n                        type: config.currentlyEditing.type}\r\n                ).then(()=>{\r\n                    addConfig(true, \"Object removed from recommendation\")\r\n                    finishEditing(true, placeId)\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n\r\n    }\r\n\r\n    function deleteRecommendation(){\r\n        addAlertConfig(\"Remove recommendation\", \"Are you sure you want to remove this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                API.Recommendation.removeRecommendation(config.currentlyEditing.id).then(()=>{\r\n                    addConfig(true, \"Removed recommendation successfully\")\r\n                    removeRecommendation()\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong. Please try again!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n    function constructRecommendationForUpdate(){\r\n        let rec = { ...config.currentlyEditing }\r\n        const objects = []\r\n        config.currentlyEditing.objects.map(row=>{\r\n            objects.push({id: row.id, type: rec.type})\r\n        })\r\n\r\n        rec.objects = objects\r\n\r\n        return rec\r\n    }\r\n\r\n\r\n    function editRecommendation(){\r\n        addAlertConfig(\"Edit recommendation\", \"Are you sure you want to edit this recommendation?\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                setLoading(true);\r\n                const rec = constructRecommendationForUpdate()\r\n                API.Recommendation.updateRecommendation(rec).then(()=>{\r\n                    addConfig(true, \"Updated recommendation successfuly\")\r\n                    finishEditing(true)\r\n                }).catch(()=>{\r\n                    addConfig(false, \"Something went wrong. Please try again!\")\r\n                }).finally(()=>{\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        }])\r\n    }\r\n\r\n\r\n    return(\r\n        <Dialog\r\n            open={config.open}\r\n            fullWidth={true}\r\n            maxWidth={\"md\"}\r\n            onClose={()=>{\r\n                finishEditing()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            {loading ? <LinearProgress /> : null}\r\n            <DialogTitle id=\"alert-dialog-title\">Edit recommendation</DialogTitle>\r\n            <DialogContent>\r\n                {config.currentlyEditing !== undefined ? <div className={classes.root}>\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Title\"\r\n                               name=\"name\"\r\n                               value={config.currentlyEditing['name']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Subtitle\"\r\n                               name=\"subtitle\"\r\n                               value={config.currentlyEditing['subtitle']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n                    <TextField id=\"outlined-basic\"\r\n                               required\r\n                               label=\"Description\"\r\n                               name=\"description\"\r\n                               value={config.currentlyEditing['description']}\r\n                               onChange={dataChanged}\r\n                               variant=\"outlined\"\r\n                               className={classes.textField}\r\n                    />\r\n\r\n                    <div style={{display: \"flex\", flexDirection: 'row', overflowX: 'auto', width: '100%'}}>\r\n                        <RecommendationPlaceSortableContainer\r\n                            removeObjectFromRecommendation={removeObjectFromRecommendation}\r\n                            classes={classes}\r\n                            config={config}\r\n                            axis={'xy'}\r\n                            pressDelay={200}\r\n                            disableAutoscroll={false}\r\n                            onSortEnd={onSortEnd}/>\r\n                    </div>\r\n                </div> : null }\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>finishEditing()}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={()=>{\r\n                        editRecommendation()\r\n                    }}\r\n                >\r\n                    Save\r\n                </Button>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={()=>{\r\n                        deleteRecommendation()\r\n                    }}\r\n                >\r\n                    Delete recommendation\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(EditRecommendationDialog)","import React, {useContext, useEffect, useState} from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API from \"../Networking/API\";\r\nimport Recommendation from \"../components/recomendation/Recommendation\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport EditRecommendationDialog from \"../components/recomendation/EditRecommendationDialog\";\r\nimport {EditRecommendationContext} from \"../contexts/EditRecommendationContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport debounce from \"lodash/debounce\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        flexWrap: 'wrap',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    left: {\r\n        width: '50%',\r\n        height: '100%',\r\n        padding: 16,\r\n    },\r\n    leftTop:{\r\n        alignItems: 'flex-start',\r\n        height: '10%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    leftContent:{\r\n        padding: 16,\r\n        borderStyle: 'dashed',\r\n        height: '80%',\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    right:{\r\n        width: '50%',\r\n        height: '100%',\r\n        padding: 16,\r\n    },\r\n    rightTop: {\r\n        alignItems: 'flex-start',\r\n        height: '10%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n    rightContent: {\r\n        padding: 16,\r\n        borderStyle: 'dashed',\r\n        height: '80%',\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    }\r\n});\r\n\r\nfunction RecommendationsPage({classes}) {\r\n\r\n    const [recommendations, setRecommendations] = useState([]);\r\n    const [homeRecommendations, setHomeRecommendations] = useState([]);\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [pagingData, setPagingData] = useState({pageNum: 1})\r\n\r\n    const { startEditing } = useContext(EditRecommendationContext)\r\n    const {addConfig} = UseSnackbarContext();\r\n\r\n    function getRecommendations(page, keywordChange = false) {\r\n        API.Recommendation.getAllRecommendations(\"?full=true&p=\"+page+\"&keyword=\"+keyword).then(response=>{\r\n            if(keywordChange){\r\n                setRecommendations(unique(response.list, homeRecommendations))\r\n            }else{\r\n                setRecommendations(old=>[...old, ...unique(response.list, homeRecommendations)])\r\n            }\r\n\r\n            delete response.list\r\n            setPagingData(response)\r\n        }).catch(()=>{\r\n\r\n        }).finally(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        Promise.all([\r\n            API.Explore.getExplorePage(\"?s=100\"),\r\n            API.Recommendation.getAllRecommendations(\"?full=true\")\r\n        ]).then((responses)=>{\r\n            setHomeRecommendations(responses[0].list)\r\n            setRecommendations(unique(responses[1].list, responses[0].list))\r\n        }).catch(()=>{\r\n\r\n        }).finally(()=>{\r\n            setLoading(false)\r\n        })\r\n\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!loading){\r\n            getRecommendations(1, true)\r\n        }\r\n    }, [keyword])\r\n\r\n    function unique(newList, existingRecommendations){\r\n        const uniqueList = []\r\n        let found = false;\r\n        for(let i = 0; i<newList.length; i++){\r\n            for(let j = 0; j<existingRecommendations.length; j++){\r\n                if(newList[i].id === existingRecommendations[j].id){\r\n                    found = true\r\n                    break;\r\n                }\r\n            }\r\n            if(!found){\r\n                uniqueList.push(newList[i])\r\n            }\r\n            found = false\r\n        }\r\n\r\n\r\n        return uniqueList\r\n    }\r\n\r\n    const handleScrollDebounced = (e) => {\r\n        console.log(\"Handle scroll\")\r\n        const scrollOffset = 0;\r\n        const bottom = Math.round(e.target.scrollHeight - e.target.scrollTop - scrollOffset)  <= e.target.clientHeight;\r\n        if (bottom && !loading && recommendations.length>0 && pagingData.pageNum<pagingData.pages) {\r\n            setLoading(true);\r\n            console.log(\"Requesting new page\")\r\n            getRecommendations(pagingData.pageNum+1);\r\n        }\r\n    };\r\n\r\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\r\n    const handleScroll = (e) => {\r\n        e.persist();\r\n        debounceScroll(e)\r\n    };\r\n\r\n\r\n    function RecommendationSkeleton(){\r\n        return(\r\n            <div>\r\n                <Skeleton animation='wave' variant=\"rect\" width={200} height={40} />\r\n                <Skeleton animation='wave' variant=\"text\" width={180}/>\r\n                <Skeleton animation='wave' variant=\"text\" width={250}/>\r\n                <div style={{display: 'flex', margin: 16, flexDirection: 'row'}}>\r\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\r\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\r\n                    <Skeleton animation='wave' variant=\"rect\" style={{marginRight: 16}} width={300} height={300} />\r\n                </div>\r\n                <Skeleton animation='wave' variant=\"text\" width={1000}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    function updateExplorePage() {\r\n        const explorable = []\r\n        homeRecommendations.map(row=>{\r\n            explorable.push(row.id)\r\n        })\r\n\r\n        setLoading(true)\r\n        API.Explore.updateExplorePage(explorable).then(()=>{\r\n            addConfig(true, \"Updated explore page successfully!\")\r\n\r\n        }).catch(()=>{\r\n            addConfig(false, \"Unexpected error!\")\r\n        }).finally(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.left}>\r\n                <div className={classes.leftTop}>\r\n                    <Typography variant=\"h4\">\r\n                        Home recommendations\r\n                    </Typography>\r\n\r\n                    <Button\r\n                        onClick={updateExplorePage}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        Save feed\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className={classes.leftContent}>\r\n                    {loading ? <>\r\n                            <RecommendationSkeleton />\r\n                            <RecommendationSkeleton style={{marginTop: 48}}/>\r\n                        </> :\r\n                        homeRecommendations.length > 0 ?\r\n                        <ReactSortable\r\n                            style={{width: '100%', height: '100%'}}\r\n                            list={homeRecommendations}\r\n                            setList={setHomeRecommendations}\r\n                            animation={150}\r\n                            group=\"cards\"\r\n                            onChange={(order, sortable, evt) => {}}\r\n                            onEnd={evt => {}}\r\n                        >\r\n                            {homeRecommendations.map(rec => (\r\n                                <Recommendation\r\n                                    key={rec.id}\r\n                                    recommendation={rec}\r\n                                    onEditCallback={()=> {\r\n                                        startEditing(rec, homeRecommendations, setHomeRecommendations)\r\n                                    }}\r\n                                />\r\n                            ))}\r\n                        </ReactSortable> : <Alert style={{marginTop: 48}} severity=\"info\">No recommendations are put in home tab. Click and Drag existing recommendations from right side.</Alert>\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={classes.right}>\r\n                <div className={classes.rightTop}>\r\n                    <Typography variant=\"h4\">\r\n                        Existing recommendations\r\n                    </Typography>\r\n\r\n                </div>\r\n                <div className={classes.rightContent} onScroll={handleScroll}>\r\n                    <TextField id=\"standard-search\" label=\"Search\" value={keyword} type=\"search\" onChange={e=>{\r\n                        setKeyword(e.target.value)\r\n                    }} />\r\n                    {loading ? <>\r\n                       <RecommendationSkeleton />\r\n                       <RecommendationSkeleton style={{marginTop: 16}}/>\r\n                    </> :\r\n                        recommendations.length > 0 ?\r\n\r\n                           <ReactSortable\r\n                           style={{width: '100%', height: '100%'}}\r\n                           list={recommendations}\r\n                           setList={setRecommendations}\r\n                           animation={150}\r\n                           group=\"cards\"\r\n                           onChange={(order, sortable, evt) => {}}\r\n                           onEnd={evt => {}}\r\n                           >\r\n                           {recommendations.map(rec => (\r\n                               <Recommendation\r\n                                   onEditCallback={()=>{\r\n                                       startEditing(rec, recommendations, setRecommendations)\r\n                                   }}\r\n                                   key={rec.id}\r\n                                   recommendation={rec}/>\r\n                           ))}\r\n                           </ReactSortable> :  <Alert style={{marginTop: 48}} severity=\"info\">Currently there are no available recommendations.</Alert>\r\n                       }\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <EditRecommendationDialog />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(RecommendationsPage);\r\n","import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Home from \"../pages/Home\";\r\nimport Places from \"../pages/Places\";\r\nimport AddPlace from \"../pages/AddPlace\";\r\nimport history from \"../helpers/history\";\r\nimport ApiPlaces from \"../pages/ApiPlaces\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\r\nimport NotFoundPage from \"../pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nimport Tour from \"./tour_components/Tour\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport Tours from \"../pages/Tours\";\r\nimport Resources from \"./Resources\";\r\nimport {PlacesFilterProvider} from \"../contexts/PlacesFilterContext\";\r\nimport ManageUsers from \"../pages/ManageUsers\";\r\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\r\nimport Strings from \"../helpers/stringResources\";\r\nimport API from \"../Networking/API\";\r\nimport {AuthContext} from \"../contexts/AuthContext\";\r\nimport RecommendationsPage from \"../pages/RecommendationsPage\";\r\nimport EditRecommendationProvider, {EditRecommendationContext} from \"../contexts/EditRecommendationContext\";\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root1: {\r\n        overflow: \"hidden\",\r\n        display: 'flex',\r\n        height: \"100vh\",\r\n        background: \"#F1F1F1\"\r\n    },\r\n    appBar: {\r\n        height: \"64px\",\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        //padding: theme.spacing(3),\r\n        // transition: theme.transitions.create('margin', {\r\n        //     easing: theme.transitions.easing.sharp,\r\n        //     duration: theme.transitions.duration.leavingScreen,\r\n        // }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        width: \"100vw\",\r\n        height: \"100%\",\r\n        // transition: theme.transitions.create('margin', {\r\n        //     easing: theme.transitions.easing.easeOut,\r\n        //     duration: theme.transitions.duration.enteringScreen,\r\n        // }),\r\n        marginLeft: 0\r\n    },\r\n}));\r\n\r\n// const PlacesWithContext = () =>  (\r\n//     <PlacesFilterProvider>\r\n//         <Places/>\r\n//     </PlacesFilterProvider>\r\n// );\r\nconst TourWithContext = (props) =>  (\r\n    <PlacesFilterProvider>\r\n        <Tour {...props}/>\r\n    </PlacesFilterProvider>\r\n);\r\n\r\nconst RecommendationsWithContext = (props) =>  (\r\n    <EditRecommendationProvider>\r\n        <RecommendationsPage {...props}/>\r\n    </EditRecommendationProvider>\r\n);\r\n\r\n\r\nexport default function Appbar(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const { title, setTitle } = UseAppBarTitleContext();\r\n    const {addAlertConfig} = UseAlertDialogContext();\r\n    let location = useLocation();\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleListItemClick = (url,title) =>{\r\n        handleDrawerClose();\r\n        setTitle(title);\r\n\r\n        let re = new RegExp(url+'([0-9]*)?');\r\n        if(re.test(location.pathname)){\r\n            history.push(url);\r\n            history.go(0);\r\n        }\r\n    };\r\n\r\n    function handleLogout() {\r\n        addAlertConfig(\"Logout\", \"Are you sure you want to logout\", [{\r\n            name: \"Yes\",\r\n            action: () => {\r\n                localStorage.removeItem(\"access_token\");\r\n                localStorage.removeItem(\"refresh_token\")\r\n                history.push(\"/login\")\r\n            }\r\n        }])\r\n    }\r\n\r\n    const hasPermission = (perm) => {\r\n        return currentUser != null && currentUser.permissions.some(permission => permission.permission === perm)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root1}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <Typography variant=\"h6\" style={{width: \"100%\"}}>\r\n                        {currentUser != null ? currentUser.name : \"Loading user profile\"}\r\n                    </Typography>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button component={Link} to=\"/app/home\" onClick={()=>handleListItemClick(\"/app/home\",\"Home\")}>\r\n                        <ListItemText>Home</ListItemText>\r\n                    </ListItem>\r\n                    <Divider light />\r\n                    <ListItem button component={Link} to=\"/app/places\" onClick={()=>handleListItemClick(\"/app/places\",\"Places\")} >\r\n                        <ListItemText>Places</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/tours\" onClick={()=>handleListItemClick(\"/app/tours\",\"Tours\")} >\r\n                        <ListItemText>Tours</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button component={Link} to=\"/app/recommendations\" onClick={()=>handleListItemClick(\"/app/recommendations\",\"Recommendations\")} >\r\n                        <ListItemText>Recommendations</ListItemText>\r\n                    </ListItem>\r\n                    {/*<ListItem button component={Link} to=\"/app/apiplaces\" onClick={()=>handleListItemClick(\"/app/apiplaces\",\"Api places\")} >*/}\r\n                    {/*    <ListItemText>Explore API places</ListItemText>*/}\r\n                    {/*</ListItem>*/}\r\n                    { hasPermission(\"place:insert\") &&\r\n                        <ListItem button component={Link} to=\"/app/addplace\" onClick={()=>handleListItemClick(\"/app/addplace\",\"Add Place\")} >\r\n                            <ListItemText>Add place</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    { hasPermission(\"tour:modify\") &&\r\n                        <ListItem button component={Link} to=\"/app/addtour\"\r\n                                  onClick={() => handleListItemClick(\"/app/addtour\", \"Add tour\")}>\r\n                            <ListItemText>Add tour</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    <ListItem button component={Link} to=\"/app/resources\" onClick={()=>handleListItemClick(\"/app/resources\",\"Manage resources\")} >\r\n                        <ListItemText>Resources</ListItemText>\r\n                    </ListItem>\r\n                    { hasPermission(\"role:manage\") &&\r\n                        <ListItem button component={Link} to=\"/app/users\" onClick={()=>handleListItemClick(\"/app/users\",\"Manage users\")} >\r\n                            <ListItemText>Manage users</ListItemText>\r\n                        </ListItem>\r\n                    }\r\n                    <Divider light />\r\n                    <ListItem button onClick={()=>handleLogout()} >\r\n                        <ListItemText>Logout</ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                <Switch>\r\n                    <Route exact path=\"/app/home\" component={Home} />\r\n                    <Route path=\"/app/places\" component={Places} />\r\n                    <Route path=\"/app/tours\" component={Tours} />\r\n                    <Route path=\"/app/addplace/:placeId?\" component={AddPlace} />\r\n                    <Route path=\"/app/recommendations\" component={RecommendationsWithContext} />\r\n                    <Route path=\"/app/addtour/:tourId?\" component={TourWithContext} />\r\n                    <Route path=\"/app/resources\" component={Resources} />\r\n                    <Route path=\"/app/users\" component={ManageUsers} />\r\n                    <Redirect from=\"*\" to=\"/404\"/>\r\n                </Switch>\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport Appbar from './components/Appbar.js';\r\nimport AppBarTitleProvider from \"./contexts/AppBarTitleContext\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <AppBarTitleProvider>\r\n                        <Appbar />\r\n                    </AppBarTitleProvider>\r\n                    </MuiPickersUtilsProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default App;","import React, {useContext, useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport history from \"../helpers/history\";\r\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {AuthContext} from \"../contexts/AuthContext\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {isAuthenticated} from \"../helpers/tokens\";\r\nimport API from \"../Networking/API\";\r\nimport {func} from \"prop-types\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n                Traveldirection {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    loaderMain: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        alignItems:\"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"red\"\r\n    }\r\n}));\r\n\r\nexport default function LoginPage() {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setIsLoading] = useState(false);\r\n    const { addConfig } = UseSnackbarContext();\r\n    const { currentUser, setCurrentUser } = useContext(AuthContext);\r\n\r\n    const handleLogin = () =>{\r\n        setIsLoading(true);\r\n        console.log(\"handleLogin\", {identifier: email, password: password});\r\n        API.Auth.login({identifier: email, password: password}).then(response=>{\r\n            if(!checkAccess(response.authorities)){\r\n                addConfig(false, \"Only admins and editors can access admin panel!\")\r\n                setIsLoading(false);\r\n                return\r\n            }\r\n            setIsLoading(false);\r\n            localStorage.setItem(\"access_token\", response.access_token);\r\n            localStorage.setItem(\"refresh_token\", response.refresh_token);\r\n            API.User.getUserProfile().then(response=>{\r\n                console.log(\"User profile:\", response);\r\n                setCurrentUser(response);\r\n                history.push(\"/app/home\");\r\n            }).catch(error=>{\r\n                setIsLoading(false);\r\n                addConfig(false, error.message)\r\n            });\r\n        }).catch(error=>{\r\n            setIsLoading(false);\r\n            addConfig(false, error.message)\r\n        });\r\n    };\r\n\r\n    function checkAccess(roles){\r\n        var hasAccess = false\r\n        roles.map(row=>{\r\n            console.log(row)\r\n            if(row.authority === \"ROLE_ADMIN\"){\r\n                hasAccess = true\r\n            }\r\n        });\r\n        return hasAccess\r\n    }\r\n\r\n    if (isAuthenticated()) {\r\n        return <Redirect to=\"/app\" />;\r\n    }\r\n\r\n    const handleKeyPress = (event) =>{\r\n        if (event.which === 13 || event.keyCode === 13) {\r\n            handleLogin();\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    return <Container component=\"main\" maxWidth=\"xs\" onKeyPress={(e)=>handleKeyPress(e)}>\r\n\r\n                            {loading && <LinearProgress />}\r\n                            <CssBaseline />\r\n                            <div className={classes.paper}>\r\n                                <Avatar className={classes.avatar}>\r\n                                    <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <Typography component=\"h1\" variant=\"h5\">\r\n                                    Sign in\r\n                                </Typography>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={email}\r\n                                    onChange={(e)=>{setEmail(e.target.value)}}\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    autoFocus\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    value={password}\r\n                                    onChange={(e)=>{setPassword(e.target.value)}}\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                                <Button\r\n                                    onClick={()=>{handleLogin()}}\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    Sign In\r\n                                </Button>\r\n                            </div>\r\n                            <Box mt={8}>\r\n                                <Copyright />\r\n                            </Box>\r\n                        </Container>\r\n\r\n}","import Route from \"react-router-dom/es/Route\";\r\nimport React, {useContext} from \"react\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {isAuthenticated} from \"../helpers/tokens\";\r\n\r\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                isAuthenticated() === true ? (\r\n                    <Component {...routeProps} />\r\n                ) : (\r\n                    <Redirect to={\"/login\"} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\r\n\r\n\r\nexport default function SnackbarFeedback(props){\r\n\r\n    const { config, removeConfig } = UseSnackbarContext();\r\n\r\n    return(\r\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\r\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"error\") : \"\"}>\r\n                {!!config && config.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\"\r\n\r\nconst AlertDialogFeedback = () => {\r\n\r\n    const {alertConfig, removeAlertConfig} = UseAlertDialogContext();\r\n\r\n    function remove() {\r\n        if(alertConfig.onClose !== undefined){\r\n            alertConfig.onClose()\r\n        }\r\n        removeAlertConfig()\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={!!alertConfig}\r\n            onClose={remove}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{!!alertConfig ? alertConfig.title : \"\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {!!alertConfig ? alertConfig.message : \"\"}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={remove}\r\n                        color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                {!!alertConfig && alertConfig.actions.map(row=>{\r\n                    return <Button onClick={()=>{\r\n                        remove();\r\n                        row.action();\r\n                    }}\r\n                    color=\"primary\"\r\n                    >\r\n                            {row.name}\r\n                    </Button>\r\n                })}\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\n\r\nexport default AlertDialogFeedback\r\n","import Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport UseEditDialogContext from \"../../contexts/UseEditDialogContext\";\r\n\r\n\r\nexport const TextInputDialog = () => {\r\n\r\n    const {dialogConfig, removeEditDialogConfig, dialogOpen, setDialogOpen} = UseEditDialogContext();\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [error, setError] = useState(0)\r\n\r\n    const deInit = () => {\r\n        setError(0)\r\n        setDialogOpen(false)\r\n        setInputText(\"\")\r\n    }\r\n\r\n    const handleClose = () => {\r\n        deInit()\r\n    }\r\n\r\n    const handleDone = () => {\r\n        let errorCode = dialogConfig.validateInput(inputText)\r\n        setError(errorCode)\r\n        if(errorCode !== 0) return\r\n\r\n        if(dialogConfig.onDoneCallback !== undefined)\r\n            dialogConfig.onDoneCallback(inputText)\r\n        deInit()\r\n    }\r\n    const handleInput = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={dialogOpen} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n                <DialogTitle id=\"form-dialog-title\">{dialogConfig.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {dialogConfig.explanation}\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        helperText={error !== 0 && dialogConfig.errorMessages[error] !== null ? dialogConfig.errorMessages[error] : \"\"}\r\n                        error={error !== 0}\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        onInput={handleInput}\r\n                        label={dialogConfig.textFieldLabel}\r\n                        defaultValue={dialogConfig.defaultText}\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleDone} color=\"primary\">\r\n                        Done\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport history from \"./helpers/history\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport {Router, Route, Link, Switch} from \"react-router-dom\";\r\nimport {AuthenticatedRoute} from \"./components/AuthenticatedRoute\";\r\nimport NotFoundPage from \"./pages/NotFoundPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\r\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\r\nimport AlertDialogProvider from \"./contexts/AlertDialogContext\";\r\nimport AlertDialogFeedback from \"./components/feedback/AlertDialogFeedback\";\r\nimport {AuthProvider} from \"./contexts/AuthContext\";\r\nimport {PlacesFilterProvider} from \"./contexts/PlacesFilterContext\";\r\nimport EditDialogProvider from \"./contexts/EditDialogContext\";\r\nimport {TextInputDialog} from \"./components/feedback/TextInputDialog\";\r\nimport LoadingScreen from \"./components/LoadingScreen\";\r\n\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <AuthProvider>\r\n            {/*<LoadingScreen />*/}\r\n            <Router history={history}>\r\n                <SnackbarProvider>\r\n                    <AlertDialogProvider>\r\n                        <EditDialogProvider>\r\n                            <SnackbarFeedback/>\r\n                            <AlertDialogFeedback/>\r\n                            <TextInputDialog/>\r\n                            <PlacesFilterProvider>\r\n                            <Switch>\r\n                                <Redirect exact from=\"/\" to=\"/login\"/>\r\n                                <Redirect exact from=\"/app\" to=\"/app/home\"/>\r\n                                <AuthenticatedRoute path=\"/app\" component={App}/>\r\n                                <Route path=\"/login\" component={LoginPage}/>\r\n                                <Route path=\"*\" component={NotFoundPage}/>\r\n                                <Redirect from=\"*\" to=\"/404\"/>\r\n                            </Switch>\r\n                            </PlacesFilterProvider>\r\n\r\n                        </EditDialogProvider>\r\n\r\n                    </AlertDialogProvider>\r\n                </SnackbarProvider>\r\n            </Router>\r\n        </AuthProvider>\r\n    </React.Fragment>\r\n    , document.getElementById('root'));\r\n"],"sourceRoot":""}