{"version":3,"sources":["helpers/firebaseInit.js","pages/Home.js","components/TableComponent.js","helpers/debounce.js","helpers/history.js","helpers/tokens.js","Networking/NetworkLayerCentral.js","Networking/API.js","contexts/AlertDialogContext.js","contexts/UseAlertDialogContext.js","helpers/stringResources.js","contexts/SnackbarContext.js","contexts/UseSnackbarContext.js","pages/Places.js","helpers/priceRange.js","helpers/averageTimeSpent.js","components/AutocompleteChip.js","components/AddSourceDialog.js","components/add_place_components/BasicPlaceInfo.js","components/ReorderablePhotos.js","components/AddImageDialog.js","components/add_place_components/PhotosInfo.js","components/CustomMap.js","components/add_place_components/PlaceLocation.js","components/add_place_components/ParkingLocation.js","components/AddDialog.js","components/add_place_components/PlaceDiscovery.js","components/add_place_components/initialScheduleData.js","components/ReviewCard.js","components/add_place_components/Reviews.js","contexts/AppBarTitleContext.js","contexts/UseAppBarTitleContext.js","components/ScheduleInterval.js","components/DayComponent.js","components/Schedule.js","components/add_place_components/SchedulesWrapper.js","pages/AddPlace.js","components/ApiPlaceCard.js","components/SearchInputComponent.js","pages/ApiPlaces.js","pages/NotFoundPage.js","components/tour_components/TourPlaceComponent.js","components/tour_components/TransportItem.js","components/tour_components/TourPlacesWrapper.js","components/tour_components/PlaceSearch.js","components/tour_components/DayCard.js","components/tour_components/DaysWrapper.js","components/tour_components/TourReducer.js","components/tour_components/TourInfoComponent.js","components/tour_components/TourMap.js","components/tour_components/Tour.js","pages/Tours.js","components/Appbar.js","App.js","contexts/AuthContext.js","pages/LoginPage.js","components/AuthenticatedRoute.js","components/feedback/SnackbarFeedback.js","components/feedback/AlertDialogFeedback.js","index.js"],"names":["app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","withStyles","theme","button","margin","spacing","input","display","props","classes","descendingComparator","a","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","checkable","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","changePageCallback","keyword","setKeyword","customToolbarElements","debouncedSearch","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","style","alignItems","TextField","target","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","centerCell","textAlign","rowNotPublished","rowNotVerified","rowBasic","TableComponent","pagingInfo","data","updateCallback","removeCallback","isLoading","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","LinearProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","rowStyle","undefined","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckboxChange","header","isId","scope","fontSize","colSpan","noWrap","TablePagination","rowsPerPageOptions","count","total","pageNum","onChangePage","newPage","onChangeRowsPerPage","parseInt","console","log","history","getAccessToken","Cookies","get","isAuthenticated","request","options","contentType","client","axios","create","baseURL","headers","interceptors","response","use","error","originalRequest","config","status","auth","currentUser","_retry","Promise","reject","getIdToken","then","token","Authorization","set","onSuccess","onError","debug","push","message","catch","RequestType","getRequest","path","urlData","url","method","postRequest","postMultipartRequest","formData","API","Tour","insertTour","getTour","urlParams","updateTour","getAllToursAdmin","removeTour","SourcePlace","updateSourcesForPlace","Source","getSources","addSource","Places","getAllPlaces","insertPlace","updatePlace","getPlaceById","getAllPlacesAdmin","searchApiPlaces","removePlace","Tags","getAllTags","addTag","params","Categories","addCategory","getAllCategories","Photos","addPhoto","uploadPhoto","Parking","getParkingByLocation","insertNewParking","TagsPlace","updateTagsForPlace","CategoriesPlace","updateCategoriesForPlace","ParkingPlace","updateParkingForPlace","PhotoPlace","updatePhotoForPlace","Schedule","updateScheduleForPlace","Reviews","getPlaceReviews","AlertDialogContext","createContext","alertConfig","addAlertConfig","removeAlertConfig","AlertDialogProvider","children","setAlertConfig","contextValue","actions","onClose","Provider","UseAlertDialogContext","useContext","Strings","DIALOG_PLACE_PUBLISH_TITLE","DIALOG_PLACE_PUBLISH_MESSAGE","DIALOG_PLACE_UNPUBLISH_MESSAGE","DIALOG_PLACE_INSERT_TITLE","DIALOG_PLACE_INSERT","DIALOG_PLACE_UPDATE_TITLE","DIALOG_PLACE_UPDATE","DIALOG_PLACE_VERIFY_TITLE","DIALOG_PLACE_VERIFY_MESSAGE","DIALOG_PLACE_DELETE_TITLE","DIALOG_PLACE_DELETE_MESSAGE","DIALOG_TOUR_DELETE_TITLE","DIALOG_TOUR_DELETE_MESSAGE","SNACKBAR_PLACE_INSERTED_SUCCESS","SNACKBAR_PLACE_REMOVE_SUCCESS","SNACKBAR_TOUR_INSERTED_SUCCESS","SNACKBAR_TOUR_REMOVE_SUCCESS","SNACKBAR_ERROR","SNACKBAR_CHANGES_SAVED","SnackbarContext","addConfig","removeConfig","SnackbarProvider","setConfig","success","UseSnackbarContext","sortingButtons","flexDirection","buttonsDiv","justifyContent","content","breakpoints","down","up","setData","pageData","setPageData","setIsLoading","filterLabel","filter","filterName","filterOptions","setFilterOptions","filterQuery","setFilterQuery","parseData","placesData","list","anchorEl","setAnchorEl","open","Boolean","handleClick","currentTarget","p","action","tmp","placeId","aria-describedby","Popover","anchorOrigin","vertical","horizontal","transformOrigin","FormControlLabel","control","filters","fq","join","filterOptionsChanged","Box","Button","startIcon","priceRange","averageTimeSpent","autoComplete","chip","flexWrap","listStyle","autoCompleteChipContainer","setOptions","selectedOptions","setSelectedOptions","getCurrentVal","setCurrentVal","firstLoad","setFirstLoad","found","row1","JSON","stringify","option","Chip","onDelete","item","Autocomplete","disableClearable","getOptionLabel","renderInput","closeButton","right","grey","setDialogOpen","setText","setUrl","setError","Dialog","fullWidth","DialogTitle","DialogContent","dividers","ev","marginTop","DialogActions","autoFocus","validateInput","placeInfo","setPlaceInfo","selectedSources","setSelectedSources","updatePlaceInfo","newValue","place","Object","assign","valuetext","setAvailableSources","dialogOpen","availableSources","val","required","placeholder","e","InputLabelProps","shrink","multiline","rows","Slider","marginLeft","defaultValue","getAriaValueText","step","max","marks","FormControl","InputLabel","Select","native","Photo","onItemDelete","photo","left","styles","imgContainer","imgStyle","Card","CardMedia","paddingTop","image","src","CardActions","disableSpacing","SortablePhoto","SortableElement","SortableGallery","SortableContainer","items","photos","renderImage","ReorderablePhotos","setPhotos","srcName","keyName","modifiedData","toString","distance","onSortEnd","oldIndex","newIndex","arrayMove","axis","acceptedFileFormats","dropzoneArea","onCloseCallback","onFinishCallback","loading","selectedFiles","setSelectedFiles","acceptedFiles","maxFileSize","dropzoneProps","disabled","filesLimit","onDrop","all","imagefile","FormData","append","finally","outline","addImageDialogOpen","setAddImageDialogOpen","files","handleAddPhoto","autocomplete","borderBottom","locationData","setLocationData","mapHeight","selectedParkingCallback","changedParkingMarkerCallback","addParkingCallback","useFunction","callback","ref","useRef","current","useCallback","apply","this","arguments","Geocode","setApiKey","enableDebug","selectParkingHandler","addNewParkingHandler","geocodeFromLatLng","newLat","newLng","onMarkerLocationChanged","onParkingDataChanged","fromLatLng","address","results","formatted_address","addressArray","address_components","city","getCity","country","getCountry","changeLocationData","latitude","longitude","i","types","long_name","MyMapComponent","compose","withProps","containerElement","mapElement","withStateHandlers","infoWindow","show","toggleDraggableInfoWindow","draggableMarkerLocation","withGoogleMap","defaultZoom","center","lat","markerLocation","lng","defaultCenter","visible","draggable","onDragEnd","markerChanger","onParkingDataChange","latLng","onCloseClick","onToggleOpen","infoWindows","parkingData","location","parseFloat","parkingId","icon","showInfo","handleKeyPress","onMarkerLocationChange","which","keyCode","test","fromAddress","geometry","split","FullMap","parking","iw","onKeyPress","onPlaceSelected","latitudeValue","longitudeValue","navigator","geolocation","getCurrentPosition","coords","alert","useMemo","parkingMarkerData","setParkingMarkerData","allSelectedParkingData","setAllSelectedParkingData","parkingExists","markerData","getClosestParking","parkingDataChanged","SortableItem","elevation","SortableList","oldArray","textFieldLabel","description","selectedTags","setSelectedTags","selectedCategories","setSelectedCategories","dialogAddTagOpen","setDialogAddTagOpen","dialogAddCategoryOpen","setDialogAddCategoryOpen","availableCategories","setAvailableCategories","availableTags","setAvailableTags","AutocompleteChip","newTag","tagId","newCat","categoryId","initialScheduleData","openDay","closeDay","openTime","closeTime","marginRight","ReviewCard","review","CardContent","Avatar","alt","photoUrl","surname","Rating","rating","readOnly","upvotes","moment","timeAdded","format","reviewsInfo","reviews","overflowX","setReviews","filterBy","setFilterBy","getReviewsForPlace","old","debounceScroll","debounce","round","scrollWidth","scrollLeft","clientWidth","totalReviews","handleScrollDebounced","handleClose","Fragment","overallStarRating","precision","RadioGroup","Radio","onScroll","persist","handleScroll","AppBarTitleContext","setTitle","AppBarTitleProvider","UseAppBarTitleContext","flexFlow","picker","intervalRightSide","intervalLeftSide","intervals","setIntervals","currentInterval","lastAccommodation","lastAccommodationEnabled","setLastAccommodationEnabled","lastAccommodationTime","setLastAccommodationTime","getCloseDay","currentPeriod","isBefore","handleDelete","oldIntervals","useTheme","largeScreen","useMediaQuery","only","TimePicker","ampm","InputProps","disableUnderline","state","scheduleData","setScheduleData","periods","Divider","pickerStyle","headerLeft","setPeriods","handleIntervalChange","newIntervals","oldPeriods","filtered","oldData","schedule","isDefault","DatePicker","views","from","to","generateWeekdayViews","isScheduleEnabled","setIsScheduleEnabled","Switch","float","paperContent","loader","bottom","match","website","phoneNumber","hasSchedule","isPublic","isVerified","source","price","sources","setSources","setPlaceId","firstTimeLoading","setFirstTimeLoading","checkErrors","ColorButton","getContrastText","green","formFeedback","saveChanges","formPlaceInfo","plc","updateAll","updateTagsData","updatePhotoData","updateCategoriesData","updateParkingData","updateSchedule","updateSources","err","er","tags","categories","responses","CircularProgress","obj","CategoriesDisplay","SubheaderDisplay","media","expand","transform","transition","transitions","duration","shortest","expandOpen","avatar","red","placeData","renderActionArea","CardHeader","subheader","substring","iconButton","divider","SearchInputComponent","hint","searchCallback","debounceInput","debouncedInput","InputBase","orientation","topBar","zIndex","searchBox","placeApiCard","isLoadingData","setIsLoadingData","word","query","encodeURI","elementType","isFitWidth","disableImagesLoaded","updateOnEachImageLoad","boxSizing","Copyright","Date","getFullYear","minHeight","footer","cardRoot","details","cover","addParkingWrapper","elementData","addTransportCallback","displayNoTransportWarning","Alert","severity","transportTypes","transportSelectWrapper","transportSelect","transportId","transportChangeCallback","transportRemoveCallback","currentTransport","setCurrentTransport","NativeSelect","transport","TourPlaceSortable","removePlaceCallback","tourPlaceComponent","TransportItemSortable","currentDay","removeElementCallback","tourInfo","shouldDisplayNoTransportWarning","elements","days","tour","ElementType","elementIdentifier","tourInfoReducer","errorInfo","setErrorInfo","day","shortid","generate","searchInputComponent","placeCard","addPlaceCallback","apiPlacesFound","setApiPlacesFound","localPlacesFound","setLocalPlacesFound","apiPlacesLoading","setApiPlacesLoading","localPlacesLoading","setLocalPlacesLoading","placeType","genProps","mappedPlaces","forEach","generatePlaceCards","radioButtonArea","cardArea","descriptionInput","headerWrap","onSelectCallback","handleRemoveDay","updateDescriptionGlobally","DayCardSortable","dayInfo","removeDayCallback","addDayButton","footerWrapper","setCurrentDay","removeDay","TourDataReducer","findIndex","splice","nameField","descriptionField","errors","titleMissing","shouldDisplayTitleMissingError","showErrors","helperText","sampleTourData","rightLayout","overflowY","leftLayout","actionsArea","tourId","setTourId","useReducer","dispatchTourInfo","handleAddPlaceClick","loadData","aggregatedDays","aggregatedElements","aggregatedPlace","fk_transportId","aggregatedDay","aggregatedTour","handleSave","containsErrors","keys","keyIndex","element","j","tourDaysComponents","getAllTours","root1","background","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","Appbar","setOpen","useLocation","handleDrawerClose","handleListItemClick","pathname","go","CssBaseline","AppBar","edge","Drawer","anchor","List","ListItem","Link","ListItemText","exact","Home","Tours","AddPlace","ApiPlaces","Redirect","App","utils","DateFnsUtils","Component","AuthContext","AuthProvider","setCurrentUser","onAuthStateChanged","user","form","submit","loaderMain","AuthenticatedRoute","rest","Route","render","routeProps","SnackbarFeedback","Snackbar","autoHideDuration","AlertDialogFeedback","remove","DialogContentText","require","ReactDOM","email","setEmail","password","setPassword","handleLogin","signInWithEmailAndPassword","idToken","Container","maxWidth","mt","gutterBottom","document","getElementById"],"mappings":"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","file":"static/js/main.022dd3ab.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n});\n\nexport default app;","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport app from \"../helpers/firebaseInit\";\nimport Cookies from \"js-cookie\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(1)\n    },\n    input: {\n        display: \"none\"\n    }\n});\n\n\n\n\n\n\nconst Home = props => {\n    const { classes } = props;\n\n    return (\n        <div>\n\n        </div>\n    );\n};\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Home);","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit'\nimport TextField from \"@material-ui/core/TextField\"\nimport useDebounce from \"../helpers/debounce\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Chip from \"@material-ui/core/Chip\";\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, checkable} = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n\n                {checkable ? <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell> : null}\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right'  : 'left' }\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n    headCells: PropTypes.object.isRequired,\n    checkable: PropTypes.bool.isRequired\n};\n\n\n\n\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, title, changePageCallback, keyword, setKeyword, customToolbarElements} = props;\n\n\n    const debouncedSearch = useDebounce(keyword, 300);\n\n\n    useEffect( () => {\n            changePageCallback(1,keyword)\n        },\n        [debouncedSearch]\n    );\n\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    {title}\n                </Typography>\n            )}\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : <div style={{display: \"flex\", alignItems: \"center\"}}>\n                <TextField id=\"standard-basic\" label=\"Search\" onChange={ event =>{setKeyword(event.target.value)}}/>\n                {!!customToolbarElements ? customToolbarElements : null}\n            </div>}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired\n};\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    centerCell: {\n        textAlign: \"center\",\n        width: '100%'\n    },\n    rowNotPublished:{\n        backgroundColor: \"#ffcdd2\"\n    },\n    rowNotVerified:{\n        backgroundColor: \"#fff9c4\"\n    },\n    rowBasic: {\n        backgroundColor: \"#FFFFFF\"\n    }\n\n}));\n\nexport default function TableComponent({title, headCells, pagingInfo, data, checkable, changePageCallback, updateCallback, removeCallback, id, isLoading, customToolbarElements}) {\n\n    TableComponent.propTypes = {\n        title: PropTypes.string.isRequired,\n        headCells: PropTypes.object.isRequired,\n        pagingInfo: PropTypes.object,\n        data: PropTypes.object.isRequired,\n        checkable: PropTypes.bool.isRequired,\n        changePageCallback: PropTypes.func,\n        updateCallback: PropTypes.func,\n        removeCallback: PropTypes.func,\n        id: PropTypes.string.isRequired,\n        isLoading: PropTypes.bool,\n        customToolbarElements: PropTypes.object\n    };\n\n\n\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [keyword, setKeyword] = useState('');\n\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = data.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleCheckboxChange = (event, name) =>{\n\n            const selectedIndex = selected.indexOf(name);\n            let newSelected = [];\n\n            if (selectedIndex === -1) {\n                newSelected = newSelected.concat(selected, name);\n            } else if (selectedIndex === 0) {\n                newSelected = newSelected.concat(selected.slice(1));\n            } else if (selectedIndex === selected.length - 1) {\n                newSelected = newSelected.concat(selected.slice(0, -1));\n            } else if (selectedIndex > 0) {\n                newSelected = newSelected.concat(\n                    selected.slice(0, selectedIndex),\n                    selected.slice(selectedIndex + 1),\n                );\n            }\n\n            setSelected(newSelected);\n\n    };\n\n    const handleClick = (event, name) => {\n\n    };\n\n\n    const handleChangePage = (event, newPage) => {\n        pagingInfo !==null ? changePageCallback(newPage + 1, keyword) : setPage(newPage)\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n        console.log(\"handleChangeRowsPerPage\")\n\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                {isLoading ? <LinearProgress/> : null }\n                <EnhancedTableToolbar\n                    title={title}\n                    numSelected={selected.length}\n                    changePageCallback={changePageCallback}\n                    keyword={keyword}\n                    setKeyword={setKeyword}\n                    customToolbarElements={customToolbarElements}\n                />\n                 <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={data.length}\n                            headCells={headCells}\n                            checkable={checkable}\n                        />\n\n\n                        <TableBody>\n                            {stableSort(data, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    const rowStyle = row['isVerified'] !== undefined  && row['isVerified'] === false ? classes.rowNotVerified :\n                                        row['isPublic'] !== undefined && row['isPublic'] === false ? classes.rowNotPublished :  classes.rowBasic;\n\n                                    return (\n                                        <TableRow\n                                            className={rowStyle}\n                                            hover\n                                            onClick={(event) => handleClick(event, row.name)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row[id]}\n                                            selected={isItemSelected}\n                                        >\n                                            {checkable ? <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    onChange={(event)=>handleCheckboxChange(event, row.name)}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell> : null}\n\n                                            {headCells.map(header=>{\n                                                if(header.isId){\n                                                    return <TableCell component=\"th\" id={labelId} scope=\"row\" >\n                                                            {row[header.id]}\n                                                        </TableCell>\n                                                }else if(header.id === 'actions' ){\n                                                        return <TableCell >\n                                                            <div>\n                                                                <IconButton onClick={()=>updateCallback(row[id])} size=\"small\" aria-label=\"edit\" >\n                                                                    <EditIcon fontSize=\"small\" />\n                                                                </IconButton>\n\n                                                                <IconButton size=\"small\" aria-label=\"delete\" >\n                                                                    <DeleteIcon onClick={()=>removeCallback(row[id])} fontSize=\"small\" />\n                                                                </IconButton>\n                                                            </div>\n                                                            </TableCell>\n                                                }else{\n                                                    return <TableCell align={header.numeric ? \"right\" : \"left\" }>{row[header.id]}</TableCell>\n                                                }\n\n                                            })}\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows}}>\n\n                                    {data.length > 0 ? <TableCell colSpan={6} /> : !isLoading &&\n                                        <TableCell colSpan={6} className={classes.centerCell}>\n                                            <Typography variant=\"h6\" noWrap>\n                                                No results\n                                            </Typography>\n                                        </TableCell>}\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10]}\n                    component=\"div\"\n                    count={pagingInfo!==null ? pagingInfo.total : data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={pagingInfo!==null ? pagingInfo.pageNum-1 : page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\n\n//Saltinis - https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\nexport default function useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n\n        [value]\n    );\n\n    return debouncedValue;\n}","import { createBrowserHistory as history} from 'history';\n\nexport default history();","import Cookies from 'js-cookie'\n\nexport const getAccessToken = () => Cookies.get('access_token');\nexport const isAuthenticated = () => !!getAccessToken();","import React from \"react\";\nimport axios from \"axios\"\nimport history from \"../helpers/history\";\nimport {getAccessToken} from \"../helpers/tokens\";\nimport Cookies from \"js-cookie\";\nimport app from \"../helpers/firebaseInit\";\n\nconst request = async function (options, contentType) {\n\n    const client = axios.create({\n        baseURL: false ? \"http://localhost:8080/\" : \"https://www.traveldirection.ax.lt:8080/\",\n        headers: {\n            'Content-Type': (contentType == null) ? 'application/json' : contentType,\n            'Accept': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            \"Authorization\": getAccessToken()\n        },\n    });\n\n\n    // Add a response interceptor\n    client.interceptors.response.use(function (response) {\n        return response;\n    }, function (error) {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        // Do something with response error\n        const originalRequest = error.config;\n        const status = error.response.status;\n        if (!!app.auth().currentUser  &&\n            (status === 401 || status === 403) &&\n            originalRequest._retry === undefined\n        ) {\n            //console.log(\"Users token has expired!\");\n            return app.auth().currentUser.getIdToken(true).then(token => {\n                //console.log(\"Retrieving new token and making the same request!\");\n                originalRequest._retry = true;\n                originalRequest.headers.Authorization = token;\n                Cookies.set(\"access_token\", token);\n                return axios(originalRequest)\n            });\n        }\n        return Promise.reject(error);\n    });\n\n    const onSuccess = function (response) {\n        console.log('Request Successful!', response);\n        return response.data;\n    };\n\n    const onError = function (error) {\n        console.debug('Request Failed:', error.config);\n        if (error.response) {\n            console.debug('Status:', error.response.status);\n            if (error.response.status === 403) {\n                history.push(\"/login\")\n            }\n            console.debug('Data:', error.response.data);\n            console.debug('Headers:', error.response.headers);\n        } else {\n            console.debug('Error Message:', error.message);\n        }\n        return Promise.reject(error.response || error.message);\n    };\n\n    return client(options)\n        .then(onSuccess)\n        .catch(onError);\n};\n\nconst getRequest = function (path, urlData = \"\") {\n    return request({\n        url: path + urlData,\n        method: 'GET'\n    });\n};\n\nconst postRequest = function (path, data, urlData = \"\") {\n    return request({\n        url: path + urlData,\n        method: 'POST',\n        data: data\n    });\n};\n\nconst postMultipartRequest = function (path, formData) {\n    return request({\n        url: path,\n        method: 'POST',\n        data: formData\n    }, 'multipart/form-data' /*'application/x-www-form-urlencoded'*/);\n};\n\nconst RequestType = {\n    getRequest, postRequest, postMultipartRequest\n};\n\nexport default RequestType\n\n\n","import RequestType from '../Networking/NetworkLayerCentral'\n\n//Places\nconst getAllPlaces = (urlParams) => RequestType.getRequest(\"api/v1/place/search\", urlParams);\nconst getAllPlacesAdmin = (urlParams) => RequestType.getRequest(\"api/v1/place/searchadmin\", urlParams);\n\nconst insertPlace = (data) => RequestType.postRequest(\"api/v1/place/insert\",data);\nconst updatePlace = (data) => RequestType.postRequest(\"api/v1/place/update\", data);\nconst getPlaceById = (urlParams) => RequestType.getRequest(\"api/v1/place/getplace\", urlParams);\nconst searchApiPlaces = (urlParams) => RequestType.getRequest(\"api/v1/placeApi/search\", urlParams);\nconst removePlace = (urlParams) => RequestType.getRequest(\"api/v1/place/delete\", urlParams);\n\nconst Places = {getAllPlaces, insertPlace, updatePlace, getPlaceById,getAllPlacesAdmin,searchApiPlaces, removePlace};\n\n//Tags\nconst getAllTags = () => RequestType.getRequest(\"api/v1/tags/all\");\nconst addTag = (params) => RequestType.postRequest(\"api/v1/tags/insert\", params);\nconst Tags = {getAllTags, addTag};\n\n//Category\nconst addCategory = (params) => RequestType.postRequest(\"api/v1/categories/insert\", params);\nconst getAllCategories = () => RequestType.getRequest(\"api/v1/categories/all\");\nconst Categories = {addCategory, getAllCategories};\n\n//Photo\nconst addPhoto = (params) => RequestType.postRequest(\"api/v1/photo/insert\", params);\nconst uploadPhoto = (params) => RequestType.postMultipartRequest(\"api/v1/photo/upload\", params);\nconst Photos = {addPhoto, uploadPhoto};\n\n\n//Parking\nconst getParkingByLocation = (urlParams) =>RequestType.getRequest(\"api/v1/parking/searchAdmin\", urlParams);\nconst insertNewParking = (data) =>  RequestType.postRequest(\"api/v1/parking/insert\", data);\nconst Parking = {getParkingByLocation, insertNewParking};\n\n\n//TagsPlace\nconst updateTagsForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/tagsplace/update\", data, urlParams);\nconst TagsPlace = {updateTagsForPlace};\n\n\n//CategoriesPlace\nconst updateCategoriesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/categoryplace/update\", data, urlParams);\nconst CategoriesPlace = {updateCategoriesForPlace};\n\n//PhotoPlace\nconst updateParkingForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/parkingplace/update\", data, urlParams);\nconst ParkingPlace = {updateParkingForPlace};\n\n//PhotoPlace\nconst updatePhotoForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/photoplace/update\", data, urlParams);\nconst PhotoPlace = {updatePhotoForPlace};\n\n//Schedule\nconst updateScheduleForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/ws/update\", data, urlParams);\nconst Schedule = {updateScheduleForPlace};\n\n//ReviewsPlace\nconst getPlaceReviews = (urlParams) => RequestType.getRequest(\"api/v1/reviews/all\", urlParams);\nconst Reviews = {getPlaceReviews};\n\n//Sources\nconst getSources = () => RequestType.getRequest(\"api/v1/source/all\");\nconst addSource = (data) => RequestType.postRequest(\"api/v1/source/insert\",data);\nconst Source = {getSources, addSource};\n\n//SourcePlace\nconst updateSourcesForPlace = (data, urlParams) => RequestType.postRequest(\"api/v1/sourceplace/update\", data, urlParams);\nconst SourcePlace = {updateSourcesForPlace};\n\n//Tours\nconst insertTour = (data) => RequestType.postRequest(\"api/v1/tour/insert\",data)\nconst updateTour = (data, urlParams) => RequestType.postRequest(\"api/v1/tour/update\",data, urlParams)\nconst getTour = (urlParams) => RequestType.getRequest(\"api/v1/tour\",urlParams)\nconst removeTour = (urlParams) => RequestType.getRequest(\"api/v1/tour/delete\", urlParams);\nconst getAllToursAdmin = (urlParams) => RequestType.getRequest(\"api/v1/tour/searchadmin\", urlParams);\nconst Tour = {insertTour, getTour, updateTour, getAllToursAdmin, removeTour}\n\nconst API = {Tour, SourcePlace, Source,Places, Tags, Categories, Photos, Parking, TagsPlace, CategoriesPlace, ParkingPlace, PhotoPlace, Schedule, Reviews};\n\nexport default API\n\n","// src/common/providers/APIErrorProvider/index.js\nimport React, { useState, useCallback } from 'react';\n\nexport const AlertDialogContext = React.createContext({\n    alertConfig: null,\n    addAlertConfig: () => {},\n    removeAlertConfig: () => {}\n});\n\nexport default function AlertDialogProvider({ children }) {\n    const [alertConfig, setAlertConfig] = useState(null);\n    const contextValue = {\n        alertConfig,\n        addAlertConfig: (title, message, actions, onClose = undefined) => setAlertConfig({ title, message, actions, onClose}),\n        removeAlertConfig: () => setAlertConfig(null)\n    };\n\n    return (\n        <AlertDialogContext.Provider value={contextValue}>\n            {children}\n        </AlertDialogContext.Provider>\n    );\n}","import React, {useContext} from \"react\";\nimport {AlertDialogContext} from \"./AlertDialogContext\";\n\nexport default function UseAlertDialogContext() {\n    const { alertConfig, addAlertConfig, removeAlertConfig } = useContext(AlertDialogContext);\n    return { alertConfig, addAlertConfig, removeAlertConfig };\n}\n","const Strings = {\n    DIALOG_PLACE_PUBLISH_TITLE : 'Place publicity',\n    DIALOG_PLACE_PUBLISH_MESSAGE: \"This place will be visible for all users. Are you sure?\",\n    DIALOG_PLACE_UNPUBLISH_MESSAGE :\"This place will not be visible anymore. Are you sure?\",\n\n    DIALOG_PLACE_INSERT_TITLE: \"Insert place\",\n    DIALOG_PLACE_INSERT: \"Are you sure you want to insert this place?\",\n\n    DIALOG_PLACE_UPDATE_TITLE: \"Update place\",\n    DIALOG_PLACE_UPDATE: \"Are you sure you want to make changes to this place?\",\n\n    DIALOG_PLACE_VERIFY_TITLE: \"Place verification\",\n    DIALOG_PLACE_VERIFY_MESSAGE: \"This is a user's suggested place. Are you sure you want to verify this place and make it visible to others?\",\n\n    DIALOG_PLACE_DELETE_TITLE: \"Delete place\",\n    DIALOG_PLACE_DELETE_MESSAGE: \"This action will remove this place permanently. Are you sure you want to proceed?\",\n\n    DIALOG_TOUR_DELETE_TITLE: \"Delete tour\",\n    DIALOG_TOUR_DELETE_MESSAGE: \"This action will remove this tour permanently. Are you sure you want to proceed?\",\n\n    SNACKBAR_PLACE_INSERTED_SUCCESS: \"Place inserted successfully\",\n    SNACKBAR_PLACE_REMOVE_SUCCESS: \"Place was removed successfully\",\n\n    SNACKBAR_TOUR_INSERTED_SUCCESS: \"Tour inserted successfully\",\n    SNACKBAR_TOUR_REMOVE_SUCCESS: \"Tour was removed successfully\",\n\n    SNACKBAR_ERROR: \"Something went wrong!\",\n    SNACKBAR_CHANGES_SAVED: \"All changes saved!\"\n};\n\nexport default Strings;","import React, { useState, useCallback } from 'react';\nimport { useContext } from 'react';\n\nexport const SnackbarContext = React.createContext({\n    config: null,\n    addConfig: () => {},\n    removeConfig: () => {}\n});\n\n\nexport default function SnackbarProvider({ children }) {\n    const [config, setConfig] = useState(null);\n\n    const removeConfig = () => setConfig(null);\n    const addConfig = (success, message) => setConfig({ success, message });\n\n    const contextValue = {\n        config,\n        addConfig: (success, message) => addConfig(success, message),\n        removeConfig: () => removeConfig()\n    };\n\n    return (\n        <SnackbarContext.Provider value={contextValue}>\n            {children}\n        </SnackbarContext.Provider>\n    );\n}","import { useContext } from 'react';\nimport {SnackbarContext} from \"./SnackbarContext\";\n\nexport default function UseSnackbarContext() {\n    const { config, addConfig, removeConfig } = useContext(SnackbarContext);\n    return { config, addConfig, removeConfig };\n}\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TableComponent from \"../components/TableComponent\";\nimport API from \"../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Box from \"@material-ui/core/Box\";\nimport history from \"../helpers/history\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Popover from \"@material-ui/core/Popover\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    input: {\n        display: \"none\"\n    },\n\n    sortingButtons: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\"\n\n},\n    root:{\n        height:\"100vh\",\n        width:\"100%\",\n        overflow: \"auto\"\n    },\n    buttonsDiv: {\n        backgroundColor: \"red\",\n        justifyContent: \"flex-end\"\n    },\n    content:{\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    }\n});\n\n\nconst headCells = [\n    { id: 'name', numeric: false, disablePadding: false, label: 'Place name', isId: true},\n    { id: 'address', numeric: false, disablePadding: false, label: 'Address',isId: false},\n    { id: 'city', numeric: false, disablePadding: false, label: 'City',isId: false },\n    { id: 'country', numeric: false, disablePadding: false, label: 'Country',isId: false },\n    { id: 'phoneNumber', numeric: false, disablePadding: false, label: 'Phone Number',isId: false },\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\n];\n\nfunction Places(props) {\n\n    const [data, setData] = useState([]);\n    const [pageData, setPageData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { classes } = props;\n\n\n    const [filterOptions, setFilterOptions] = useState([\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\n\n    const [filterQuery, setFilterQuery] = useState(\"\");\n\n\n    const { addAlertConfig } = UseAlertDialogContext();\n    const { addConfig } = UseSnackbarContext();\n\n    useEffect(()=>{\n        if(!isLoading){\n            getAllPlaces(\"?o=\"+filterQuery)\n            console.log(\"Filter query\", filterQuery);\n        }\n    },[filterQuery]);\n\n    function parseData(data){\n        setIsLoading(false);\n        let placesData = [];\n        data.list.map(row => {\n            placesData.push(row)\n        });\n\n        delete data.list;\n        setData(placesData);\n        setPageData(data);\n    }\n\n    function updatePlaceCallback(id){\n        history.push(\"/app/addplace/\"+id)\n    }\n    function removePlaceCallback(id){\n        setIsLoading(true);\n        addAlertConfig(Strings.DIALOG_PLACE_DELETE_TITLE, Strings.DIALOG_PLACE_DELETE_MESSAGE, [{\n            name: \"Remove\",\n            action: () =>{\n                    API.Places.removePlace(\"?p=\"+id).then(response=>{\n                        let tmp = [];\n                        data.map(row=>{\n                            if(row.placeId !== id){\n                                tmp.push(row)\n                            }\n                        });\n                        setData(tmp);\n                        addConfig(true, Strings.SNACKBAR_PLACE_REMOVE_SUCCESS)\n                        setIsLoading(false)\n                    }).catch(error=>{\n                        setIsLoading(false);\n                        addConfig(false, Strings.SNACKBAR_ERROR)\n                    })\n            }\n        }], ()=>{setIsLoading(false)})\n    }\n\n    const changePageCallback = (p=0, keyword=\"\") => {\n        setIsLoading(true);\n        getAllPlaces(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword+\"&o=\"+filterQuery)\n    };\n\n\n    //Sorting stuff\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const filterOptionsChanged = (name) =>{\n        let filters = [];\n        let fq = [];\n        filterOptions.map(row=>{\n            if(row.filterName === name){\n                row.filter = !row.filter\n            }\n            if(row.filter){\n                fq.push(row.filterName)\n            }\n            filters.push(row)\n        });\n\n        setFilterQuery(fq.join(\",\"));\n        setFilterOptions(filters)\n    };\n\n    const customToolbarElements = () =>{\n        return <div>\n            <Tooltip aria-describedby={id} title=\"Filter list\">\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\n                    <FilterListIcon />\n                </IconButton>\n            </Tooltip>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={()=>{setAnchorEl(null)}}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <div className={classes.sortingButtons}>\n                    {filterOptions.map(row=>{\n                        return <FormControlLabel\n                            control={<Checkbox checked={row.filter} onChange={()=>filterOptionsChanged(row.filterName)} name={row.filterName} />}\n                            label={row.filterLabel}\n                        />\n                    })}\n                </div>\n\n            </Popover>\n        </div>\n    };\n    /*------------------------------------------------------------------------------------------------------*/\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content} >\n                <TableComponent\n                    title={\"Places\"}\n                    headCells={headCells}\n                    data={data}\n                    pagingInfo={pageData}\n                    checkable={false}\n                    changePageCallback={changePageCallback}\n                    updateCallback={updatePlaceCallback}\n                    removeCallback={removePlaceCallback}\n                    id={\"placeId\"}\n                    isLoading={isLoading}\n                    customToolbarElements={customToolbarElements()}\n                />\n\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <Button\n                        onClick={()=>{history.push(\"/app/addplace\")}}\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        startIcon={<AddIcon />}>\n                        Add\n                    </Button>\n                </Box>\n            </div>\n\n        </div>\n    );\n\n    function getAllPlaces(urlParams=\"\") {\n        API.Places.getAllPlacesAdmin(urlParams).then(response=>{\n            console.log(response)\n            parseData(response)\n        }).catch(error=>{\n            console.log(error)\n        })\n    }\n}\n\nPlaces.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Places);","export const priceRange = [\n    {\n        value: 0,\n        label: \"FREE\",\n    },\n    {\n        value: 25,\n        label: \"$\",\n    },\n    {\n        value: 50,\n        label: \"$$\",\n    },\n    {\n        value: 75,\n        label: \"$$$\",\n    },\n    {\n        value: 100,\n        label: \"$$$$\",\n    },\n    {\n        value: 125,\n        label: \"$$$$$\",\n    }\n];\n","export const averageTimeSpent = [\n    {\n        value: 5,\n        label: 5,\n    },\n    {\n        value: 10,\n        label: 10,\n    },\n    {\n        value: 15,\n        label: 15,\n    },\n    {\n        value: 30,\n        label: 30,\n    },\n    {\n        value: 45,\n        label: 45,\n    },\n    {\n        value: 60,\n        label: 60,\n    },\n    {\n        value: 90,\n        label: 90,\n    },\n    {\n        value: 120,\n        label: 120,\n    },\n    {\n        value: 150,\n        label: 150,\n    },\n    {\n        value: 180,\n        label: 180,\n    },\n    {\n        value: 210,\n        label: 210,\n    },\n    {\n        value: 240,\n        label: 240,\n    },\n    {\n        value: 270,\n        label: 270,\n    },\n];","\nimport React, {useEffect, useState} from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Paper from \"@material-ui/core/Paper\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = theme => ({\n    autoComplete: {\n        margin: theme.spacing(1)\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'left',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(1),\n        margin: 0,\n    },\n    autoCompleteChipContainer: {\n        padding: theme.spacing(1)\n    }\n});\n\nfunction AutoCompleteChip(props){\n\n    const {options, setOptions, selectedOptions, setSelectedOptions, classes, label, id} = props;\n    const [getCurrentVal, setCurrentVal] = useState({\"name\": \"\"});\n    const [firstLoad, setFirstLoad] = useState(true);\n\n    function handleDelete(data) {\n        setSelectedOptions(selectedOptions.filter(item => item !== data));\n        setOptions(\n            [\n                ...options,\n                data\n            ]\n        )\n    }\n\n    useEffect(()=>{\n        if(firstLoad && options.length>0){\n            let data = [];\n            options.map(row=>{\n                let found = false;\n                selectedOptions.map(row1=>{\n                    if(JSON.stringify(row) === JSON.stringify(row1)){\n                        found = true\n                    }\n                });\n                if(!found){\n                   data.push(row)\n                }\n            });\n            setOptions(data);\n            setFirstLoad(false)\n        }\n    },[options]);\n\n    function handleInput(event, value){\n        setCurrentVal({\"name\": \"\"});\n        setSelectedOptions(\n            [\n                ...selectedOptions,\n                value\n            ]\n        );\n        setOptions(options.filter(item => item !== value))\n    }\n\n    return(\n        <div>\n            <Box  className={classes.autoCompleteChipContainer}>\n                {selectedOptions.length !== 0 &&\n                <Box component=\"ul\" className={classes.root}>\n                    {\n                        selectedOptions.map(option => {\n                            return(\n                                <li key={option[id]}>\n                                    <Chip\n                                        variant=\"outlined\"\n                                        label={option.name}\n                                        onDelete={() => handleDelete(option)}\n                                        className={classes.chip}\n                                    />\n                                </li>\n                            )\n                        })\n                    }\n                </Box>\n                }\n\n                <Autocomplete\n                    className={classes.autoComplete}\n                    value={getCurrentVal}\n                    options={options}\n                    onChange={handleInput}\n                    disableClearable\n                    getOptionLabel={(option) =>  option.name}\n                    renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n                />\n            </Box>\n        </div>\n    )\n}\n\nAutoCompleteChip.propTypes = {\n    setSelectedOptions: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired,\n    setOptions: PropTypes.func.isRequired,\n    selectedOptions: PropTypes.array.isRequired,\n    classes: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(AutoCompleteChip)","import {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    }\n});\n\nfunction AddSourceDialog(props){\n\n    function validateInput(){\n        let error = false;\n        if(text.length <= 3 || url.length <=3)\n            error = true;\n        setError(error);\n        return error\n    }\n\n    let {classes, open, action, setDialogOpen} = props;\n    const [text, setText] = useState(\"\");\n    const [url, setUrl] = useState(\"\");\n    const [error, setError] = useState(false);\n    return(\n        <div>\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\">\n                    Insert source\n                </DialogTitle>\n                <DialogContent dividers>\n                        <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}\n                                   label=\"Source name\" variant=\"outlined\" fullWidth />\n                        <TextField style={{marginTop:\"16px\"}} error={error} onChange = {(ev) => {setUrl(ev.target.value)}}\n                                   label=\"Source url\" variant=\"outlined\" fullWidth />\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={()=>setDialogOpen(false)} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button autoFocus color=\"primary\" onClick={() => {\n                        !validateInput() && action(text, url);\n                        setDialogOpen(false)\n                    }}>\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\nexport default withStyles(styles)(AddSourceDialog)","import React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {withStyles} from \"@material-ui/core\";\nimport Slider from \"@material-ui/core/Slider\";\nimport {priceRange} from \"../../helpers/priceRange\";\nimport {averageTimeSpent} from \"../../helpers/averageTimeSpent\"\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport AutoCompleteChip from \"../AutocompleteChip\";\nimport API from \"../../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddSourceDialog from \"../AddSourceDialog\";\n\n\nconst styles = theme => ({});\nlet previousPrice = \"\";\n\nfunction BasicPlaceInfo({classes, placeInfo, setPlaceInfo, selectedSources, setSelectedSources}) {\n\n    const updatePlaceInfo = (event, newValue) => {\n        const {name, value, id} = event.target;\n        let place = Object.assign({}, placeInfo, {});\n        if (id !== \"\") {\n            place[id] = valuetext(newValue[0]);\n        } else {\n            place[name] = value\n        }\n        console.log(\"Updated place\", place);\n        setPlaceInfo(place)\n    };\n\n    const getSources = () =>{\n        API.Source.getSources().then(response=>{\n            setAvailableSources(response)\n        }).catch(error=>{\n\n        })\n    };\n\n    const handleAddSource = (name, url) =>{\n        API.Source.addSource({name: name, url: url}).then(response=>{\n            setAvailableSources(\n                [\n                    ...availableSources,\n                    response\n                ]\n            );\n            setSelectedSources([\n                ...selectedSources,\n                response\n            ]);\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n\n    useEffect(()=>{\n        getSources()\n    },[]);\n\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [availableSources, setAvailableSources] = useState([]);\n\n    function valuetext(value) {\n        let val = \"\";\n        priceRange.map(row => {\n            if (row.value === value)\n                val = row.label\n        });\n        return val\n    }\n\n    return <div>\n        <Typography variant=\"h6\">\n            Basic place information\n        </Typography>\n        <br/>\n        <TextField\n            required\n            label=\"Place name\"\n            style={{margin: 8}}\n            placeholder=\"Enter the place name\"\n            fullWidth\n            value={placeInfo['name']}\n            name=\"name\"\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Place description\"\n            style={{margin: 8}}\n            placeholder=\"Describe the place thoroughly\"\n            fullWidth\n            multiline\n            name=\"description\"\n            value={placeInfo['description']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            rows={4}\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Phone number\"\n            style={{margin: 8}}\n            placeholder=\"Enter phone number\"\n            fullWidth\n            name=\"phoneNumber\"\n            value={placeInfo['phoneNumber']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            label=\"Website\"\n            style={{margin: 8}}\n            placeholder=\"Enter website\"\n            fullWidth\n            name=\"website\"\n            value={placeInfo['website']}\n            onChange={e => updatePlaceInfo(e)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n\n        <br/>\n        <br/>\n       <AutoCompleteChip\n                id=\"source\"\n                label=\"Select sources\"\n                options={availableSources}\n                setOptions={setAvailableSources}\n                setSelectedOptions={setSelectedSources}\n                selectedOptions={selectedSources}\n       />\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => setDialogOpen(true)}\n            startIcon={<AddIcon />}>\n            Add missing source\n        </Button>\n        <AddSourceDialog\n            action={handleAddSource}\n            open={dialogOpen}\n            setDialogOpen={setDialogOpen}\n        />\n\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <div style={{display: \"flex\"}}>\n            <Typography>\n                Price\n            </Typography>\n            <Slider\n                id=\"price\"\n                onChange={updatePlaceInfo}\n                value={priceRange.map(row => {\n                    if (row.label === placeInfo['price']) return row.value\n                })}\n                style={{width: \"60%\", marginLeft: \"48px\"}}\n                defaultValue={0}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider-always\"\n                step={25}\n                max={125}\n                marks={priceRange}\n            />\n        </div>\n        <br/>\n        <br/>\n        <div style={{display: \"flex\"}}>\n            <Typography>\n                Average time spent\n            </Typography>\n            <FormControl variant=\"outlined\" style={{width: \"60%\", marginLeft: \"48px\"}}>\n                <InputLabel>Minutes</InputLabel>\n                <Select\n                    native\n                    value={parseInt(placeInfo['averageTimeSpent'], 10)}\n                    onChange={updatePlaceInfo}\n                    label=\"Average Time spent\"\n                    inputProps={{\n                        name: 'averageTimeSpent'\n                    }}\n                >\n                    <option value=\"-1\">None</option>\n                    {\n                        averageTimeSpent.map(row=>{\n                            return <option value={parseInt(row.value, 10)}> {row.value}</option>\n                        })\n                    }\n                </Select>\n            </FormControl>\n        </div>\n    </div>\n}\n\nexport default withStyles(styles)(BasicPlaceInfo)","import {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport React, {useMemo, useState} from \"react\"\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Gallery from \"react-photo-gallery\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Delete from \"@material-ui/icons/Delete\"\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst imgWithClick = { cursor: \"pointer\" };\n\nconst Photo = ({ index, onItemDelete, photo, margin, direction, top, left }) => {\n\n    const styles = {\n        imgContainer: {\n            margin: margin,\n            display: 'inline',\n            position: 'relative',\n            width: '300px',\n            height: '300px',\n        }\n    }\n    if (direction === \"column\") {\n        styles.imgContainer.position = \"absolute\";\n        styles.imgContainer.imgStyle.left = left;\n        styles.imgContainer.imgStyle.top = top;\n    }\n\n    const handleDelete = event => {\n        onItemDelete(photo);\n    }\n\n        return (\n\n            <Card style={styles.imgContainer}>\n                <CardMedia\n                    style={{height: 0, paddingTop: '80%'}}\n                    image={photo.src}\n                />\n                <CardActions disableSpacing>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        startIcon={<DeleteIcon />}\n                        onClick = {(event) => {handleDelete(event)}}\n                    >\n                        Delete\n                    </Button>\n                </CardActions>\n\n            </Card>\n        )\n\n};\n\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\n//const SortablePhoto = SortableElement(item => <img {...item}/>)\nconst SortableGallery = SortableContainer(({ items, onItemDelete}) => (\n    <Gallery photos={items} renderImage={props => <SortablePhoto {...props} onItemDelete={onItemDelete}/>} />\n));\n\nfunction ReorderablePhotos(props){\n    let {setPhotos, photos, srcName, keyName} = props\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        setPhotos(arrayMove(photos, oldIndex, newIndex));\n    };\n    function handleItemDelete(photo){\n        setPhotos(photos.filter(item => {return item[keyName].toString() !== photo.key}))\n    }\n\n    let modifiedData = photos.map(item =>  {\n        return(\n    {\n        key: item[keyName].toString(),\n        src: item[srcName],\n        width: 1,\n        height: 1\n    })\n\n})\n        return (\n            <div >\n                <SortableGallery distance={10} items={modifiedData} onSortEnd={onSortEnd} axis={\"xy\"} onItemDelete = {handleItemDelete} />\n            </div>\n        );\n\n}\n\n\nexport default  ReorderablePhotos","import {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport {DropzoneArea} from \"material-ui-dropzone\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport PropTypes from \"prop-types\";\nimport API from \"../Networking/API\";\n\nconst styles = theme => ({\n    dropzoneArea: {\n        overflow: \"hidden\"\n    }\n});\n\nconst acceptedFileFormats = ['image/jpeg', 'image/png', 'image/bmp', 'image/jpg']\n\nfunction AddImageDialog(props) {\n\n    const {onCloseCallback, open, onFinishCallback, classes} = props\n    const [loading, setIsLoading] = useState(false)\n    const [selectedFiles, setSelectedFiles] = useState([])\n\n    const submitCallback = () => {\n        setIsLoading(true)\n\n        Promise.all(selectedFiles.map(imagefile => {\n            let formData = new FormData()\n            formData.append(\"image\", imagefile)\n            return API.Photos.uploadPhoto(formData)\n        })).then(response => {\n            console.log(response)\n            onFinishCallback(response)\n        }).catch(error => {\n            onFinishCallback()\n        }).finally(() => {\n            setIsLoading(false)\n        })\n    }\n\n    return (\n        <div>\n            <Dialog aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\">\n                    Photo upload\n                </DialogTitle>\n                {loading && <LinearProgress variant=\"query\"/>}\n                <DialogContent dividers>\n                    <DropzoneArea\n                        className={classes.dropzoneArea}\n                        acceptedFiles={acceptedFileFormats}\n                        maxFileSize={25000000}\n                        dropzoneProps={{disabled: loading}} filesLimit={5} onDrop={setSelectedFiles}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCallback} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={submitCallback} color=\"primary\">\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nAddImageDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onFinishCallback: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(AddImageDialog)\n","import React, {useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ReorderablePhotos from \"../ReorderablePhotos\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddImageDialog from \"../AddImageDialog\";\nimport {Card} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n});\n\nfunction PhotosInfo({classes, setPhotos, photos}) {\n    const [addImageDialogOpen, setAddImageDialogOpen] = useState(false);\n\n    function handleAddPhoto(files) {\n        setAddImageDialogOpen(false);\n        if(files == null)\n            return;\n\n        setPhotos([\n            ...photos,\n            ...files]\n        )\n    }\n\n    return(\n        <div>\n            <Typography variant=\"h6\" >\n                Photos\n            </Typography>\n            <Card variant={\"outlined\"} className={classes.outline}>\n\n                {photos.length > 0 && <ReorderablePhotos keyName=\"photoId\" srcName = \"url\" setPhotos = {setPhotos} photos = {photos} />}\n\n                <Button\n                    variant=\"text\"\n                    color=\"primary\"\n                    size=\"small\"\n                    style={{width: '15%'}}\n                    className={classes.button}\n                    onClick={() => setAddImageDialogOpen(true)}\n                    startIcon={<AddIcon />}>\n                    Add photo\n                </Button>\n\n                <AddImageDialog open={addImageDialogOpen} onFinishCallback={(files) => handleAddPhoto(files)} onCloseCallback={() => setAddImageDialogOpen(false)}/>\n\n\n            </Card>\n        </div>\n\n    )\n}\n\nexport default withStyles(styles)(PhotosInfo)\n\n\n","import React, {memo, useEffect, useMemo, useState} from 'react'\nimport Autocomplete from 'react-google-autocomplete';\nimport Geocode from \"react-geocode\";\nimport {compose, withProps, withStateHandlers} from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {map} from \"react-bootstrap/cjs/ElementChildren\";\nimport PropTypes, {func} from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../helpers/history\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport IconButton from \"@material-ui/core/IconButton\";\n\n\n//\n\n//Geocoding API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\n//Places API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\n//Maps API: AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\n\nconst styles = theme => ({\n    content: {\n        margin: theme.spacing(1)\n    },\n    autocomplete:{\n        width: '200px',\n        height: '40px',\n        fontSize: \"14px\",\n        border: \"0\",\n        borderBottom: \"2px solid grey\",\n        outline:\"0\",\n        marginBottom: \"4px\"\n    }\n});\n\nvar markerData = {};\nfunction CustomMap({classes, locationData, setLocationData, mapHeight, selectedParkingCallback, changedParkingMarkerCallback, addParkingCallback}){\n\n    CustomMap.propTypes = {\n        locationData: PropTypes.object,\n        setLocationData: PropTypes.func,\n        mapHeight: PropTypes.number\n    };\n\n\n\n    var parkingIcon = 'https://developers.google.com/maps/documentation/javascript/examples/full/images/parking_lot_maps.png';\n\n    Geocode.setApiKey(\"AIzaSyDGFjZHSoRrZ2AEO0ONXvjuN4RiCmknXf8\");\n    Geocode.enableDebug();\n\n\n    function useFunction(callback) {\n        const ref = React.useRef();\n        ref.current = callback;\n\n        return React.useCallback(function() {\n            const callback = ref.current;\n            if (typeof callback === \"function\") {\n                return callback.apply(this, arguments);\n            }\n        }, []);\n    }\n    const selectParkingHandler = useFunction(selectedParkingCallback);\n    const addNewParkingHandler = useFunction(addParkingCallback);\n\n\n    const onPlaceSelected = (place, onMarkerLocationChanged, onParkingDataChanged) => {\n\n        const address = place.formatted_address\n        const addressArray =  place.address_components\n        if(addressArray !== undefined){\n            const city = getCity( addressArray ),\n                country = getCountry(addressArray),\n                latitudeValue = place.geometry.location.lat(),\n                longitudeValue = place.geometry.location.lng();\n\n            onMarkerLocationChanged(latitudeValue, longitudeValue, address, city, country);\n            changeLocationData(city,country,address,latitudeValue,longitudeValue, onParkingDataChanged);\n        }\n    };\n\n    const onMarkerDragEnd = ( event, onMarkerLocationChanged, onParkingDataChanged) => {\n        let newLat = event.latLng.lat(),\n            newLng = event.latLng.lng();\n            geocodeFromLatLng(newLat, newLng, onMarkerLocationChanged, onParkingDataChanged)\n    };\n\n    function geocodeFromLatLng(newLat, newLng, onMarkerLocationChanged, onParkingDataChanged){\n        Geocode.fromLatLng( newLat , newLng ).then(\n            response => {\n                const address = response.results[0].formatted_address\n                const addressArray =  response.results[0].address_components\n                if(addressArray!==undefined){\n                    const city = getCity( addressArray ),\n                        country = getCountry( addressArray );\n\n                    onMarkerLocationChanged(newLat, newLng, address, city, country);\n\n                    changeLocationData(city,country,address,newLat,newLng, onParkingDataChanged);\n                }\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n\n    function geocodeFromAddress(address, onMarkerLocationChanged, onParkingDataChanged){\n        Geocode.fromAddress( address ).then(\n            response => {\n                const { lat, lng } = response.results[0].geometry.location;\n                const address = response.results[0].formatted_address;\n                const addressArray =  response.results[0].address_components;\n                if(addressArray!==undefined){\n                    const city = getCity( addressArray ),\n                        country = getCountry( addressArray );\n\n                    console.log(lat, lng)\n                    onMarkerLocationChanged(lat, lng, address, city, country);\n                        console.log(\"Pateko\")\n                    changeLocationData(city,country,address,lat,lng, onParkingDataChanged);\n                }\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n\n    function changeLocationData(city,country,address,latitude,longitude, onParkingDataChanged) {\n        let data = Object.assign({}, locationData, {});\n        data['city'] = city;\n        data['country'] = country;\n        data['address'] = address;\n        data['latitude'] = latitude;\n        data['longitude'] = longitude;\n        setLocationData(data);\n        markerData = data;\n        if (changedParkingMarkerCallback !== undefined){\n            changedParkingMarkerCallback(city,address,country, latitude,longitude, onParkingDataChanged);\n        }\n    }\n\n    /**\n     * Get the city and set the city input value to the one selected\n     *\n     * @param addressArray\n     * @return {string}\n     */\n    const getCity = ( addressArray ) => {\n        if(addressArray !== undefined){\n            let city = '';\n            for( let i = 0; i < addressArray.length; i++ ) {\n                if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\n                    city = addressArray[ i ].long_name;\n                    return city;\n                }\n            }\n        }\n    };\n\n    function getCurrentPosition(onMarkerLocationChanged, onParkingDataChanged){\n        navigator.geolocation.getCurrentPosition(function(position) {\n            let newLat = position.coords.latitude,\n                newLng = position.coords.longitude;\n\n            Geocode.fromLatLng( newLat , newLng ).then(\n                response => {\n                    const address = response.results[0].formatted_address\n                    const addressArray =  response.results[0].address_components\n                    if(addressArray!==undefined){\n                        const city = getCity( addressArray ),\n                            country = getCountry( addressArray );\n\n                        onMarkerLocationChanged(newLat, newLng, address, city, country);\n                        changeLocationData(city,country,address,newLat,newLng, onParkingDataChanged);\n                    }\n                },\n                error => {\n                }\n            );\n            console.log(\"Latitude is :\", position.coords.latitude);\n            console.log(\"Longitude is :\", position.coords.longitude);\n        }, error=>{\n            alert(error.message + \"\\n\" + JSON.stringify(error))\n        });\n    }\n\n    const getCountry = (addressArray) =>{\n        if(addressArray!==undefined){\n        let country = '';\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\n                country = addressArray[ i ].long_name;\n                return country;\n            }\n        }\n        }\n    };\n    /**\n     *\n     * Renders parking data markers\n     *\n     * @param onToggleOpen Method to open marker's info window\n     * @param infoWindows Marker info window\n     * @param parking data\n     * @returns {*}\n     */\n    const markers = (onToggleOpen, infoWindows, parking) =>{\n        return parking.map((location, i) => {\n\n            const latitude = parseFloat(location.latitude);\n            const longitude = parseFloat(location.longitude);\n\n            return (\n                <Marker\n                    key={location.parkingId}\n                    position={{ lat: latitude, lng: longitude}}\n                    options={{icon: parkingIcon}}\n                    onClick={()=>onToggleOpen(location.parkingId)}\n                >\n\n                    {infoWindows[i].showInfo && (\n                        <InfoWindow >\n                            <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                                {location.address}\n                                <Button\n                                    onClick={()=>{selectParkingHandler(location)}}\n                                    variant=\"text\"\n                                    color=\"secondary\"\n                                    size=\"large\"\n                                    className={classes.button}\n                                    startIcon={<AddIcon />}>\n                                    Add parking\n                                </Button>\n                            </div>\n                        </InfoWindow>\n                    )}\n\n                </Marker>\n            )\n        })\n    };\n\n\n    /**\n     * Map component that renders parking data and has draggable marker\n     */\n    const MyMapComponent = compose(\n        withProps({\n            containerElement: <div style={{ height: mapHeight }} />,\n            mapElement: <div style={{ height: `100%` }} />,\n        }),\n        withStateHandlers({\n                infoWindow: {show: false}\n            },{\n            toggleDraggableInfoWindow: ({draggableMarkerLocation}) => (show) => ({\n                infoWindow: {show: show}\n            })\n            }\n        ),\n        withGoogleMap\n    )(props =>\n\n        <GoogleMap\n            defaultZoom={12}\n            center={{lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }}\n            defaultCenter={{ lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }}\n        >\n\n\n\n            <Marker\n                name={'Dolores park'}\n                visible={true}\n                draggable={true}\n                onClick={()=>props.toggleDraggableInfoWindow(true)}\n                onDragEnd={e=>onMarkerDragEnd(e, props.markerChanger, props.onParkingDataChange)}\n                position={{ lat: props.markerLocation.latitude, lng: props.markerLocation.longitude }} >\n\n                {props.infoWindow.show && addParkingCallback && (\n                    <InfoWindow onCloseClick={()=>{props.toggleDraggableInfoWindow(false)}}>\n                        <div style={{display:\"flex\", flexDirection: \"column\"}}>\n                            {props.markerLocation.address}\n                            <Button\n                                onClick={()=>{\n\n                                    addNewParkingHandler(props.markerLocation)\n\n                                }}\n                                variant=\"text\"\n                                color=\"secondary\"\n                                size=\"large\"\n                                className={classes.button}\n                                startIcon={<AddIcon />}>\n                                Add new parking\n                            </Button>\n                        </div>\n                    </InfoWindow>\n                )}\n            </Marker>\n\n            {markers(props.onToggleOpen, props.infoWindows, props.parkingData)}\n        </GoogleMap>\n    );\n\n\n    const handleKeyPress = (event, onMarkerLocationChange, onParkingDataChange) =>{\n        const value = event.target.value;\n        if (event.which === 13 || event.keyCode === 13) {\n            if (/[a-zA-Z]+/.test(value)){\n                geocodeFromAddress(value, onMarkerLocationChange, onParkingDataChange)\n            }else{\n                let position = value.split(/[ ,]+/);\n                if(position.length === 2){\n                    geocodeFromLatLng(parseFloat(position[0]), parseFloat(position[1]), onMarkerLocationChange, onParkingDataChange)\n                }\n            }\n            return false;\n        }\n        return true;\n    };\n\n    /**\n     * Places autocomplete and map. This component holds it's inner states like draggableMarkerLocation, parkingData etc.\n     */\n    const FullMap = compose(\n        withProps(),\n        withStateHandlers({\n            draggableMarkerLocation: {\n                latitude: locationData.latitude,\n                longitude: locationData.longitude,\n                address:  locationData.address\n            },parkingData: [], infoWindows: []\n        },{\n            onMarkerLocationChanged: ({draggableMarkerLocation}) => (newLat, newLng, address, city, country) => ({\n                draggableMarkerLocation: {\n                    latitude: newLat,\n                    longitude: newLng,\n                    address: address,\n                    city: city,\n                    country: country\n                }\n            }),\n                onParkingDataChange: ({parkingData}) => (parking) => ({\n                    parkingData: parking.map(row=>{\n                        return row\n                    }),\n                    infoWindows: parking.map(p => {\n                        return { parkingId: p.parkingId, showInfo: false };\n                    })\n                }),\n                onToggleOpen: ({ infoWindows }) => selectedIndex => ({\n                    infoWindows: infoWindows.map((iw, i) => {\n                        iw.showInfo = selectedIndex === iw.parkingId;\n                        return iw;\n                    })\n                })\n            }\n            )\n    )(props=>\n        <div className={classes.content}>\n            <Autocomplete\n                onKeyPress={(event)=>{handleKeyPress(event, props.onMarkerLocationChanged, props.onParkingDataChange)}}\n                className={classes.autocomplete}\n                onPlaceSelected={(place)=>{onPlaceSelected(place, props.onMarkerLocationChanged, props.onParkingDataChange)} }\n                types={['(regions)']}\n            />\n            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\">\n                <MyLocationIcon\n                    fontSize=\"large\"\n                    color=\"primary\"\n                    onClick={()=>{\n                        getCurrentPosition(props.onMarkerLocationChanged, props.onParkingDataChange)\n                    }}\n\n                />\n            </IconButton>\n\n            <MyMapComponent markerChanger={props.onMarkerLocationChanged}\n                            markerLocation={props.draggableMarkerLocation}\n                            onParkingDataChange={props.onParkingDataChange}\n                            parkingData={props.parkingData}\n                            onToggleOpen={props.onToggleOpen}\n                            infoWindows={props.infoWindows}\n            />\n\n\n        </div>\n    );\n\n    /**\n     * Memoization of a component.\n     */\n    return useMemo(() => {\n        return <FullMap/>;\n    }, [])\n\n\n}\n\nexport default withStyles(styles)(CustomMap);","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomMap from \"../CustomMap\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    }\n});\n\nfunction PlaceLocation({locationData, setLocationData}) {\n\n    function changeLocationData(event){\n        const {name, value} = event.target;\n        let data = Object.assign({}, locationData, {});\n        data[name] = value;\n\n        setLocationData(data)\n    }\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Place location\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select place location from map\n        </Typography>\n        <br/>\n        <CustomMap mapHeight={200}\n                   locationData={locationData}\n                   setLocationData={setLocationData}\n        />\n        <br/>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Place location\n        </Typography>\n        <br/>\n        <TextField\n            required\n            label=\"Address\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter place address\"\n            fullWidth\n            disabled\n            value={locationData['address']}\n            name='address'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"City\"\n            disabled\n            style={{ margin: 8 }}\n            placeholder=\"Enter place city\"\n            fullWidth\n            value={locationData['city']}\n            name='city'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n        <TextField\n            required\n            label=\"Country\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter place country\"\n            fullWidth\n            disabled\n            value={locationData['country']}\n            name='country'\n            onChange={e=>{changeLocationData(e)}}\n            variant=\"outlined\"\n            rows={4}\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n    </div>\n}\n\nexport default withStyles(styles)(PlaceLocation)","import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomMap from \"../CustomMap\";\nimport API from \"../../Networking/API\";\nimport {arrayMove, SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction ParkingLocation({classes, parkingMarkerData, setParkingMarkerData, allSelectedParkingData, setAllSelectedParkingData}) {\n    const { addConfig } = UseSnackbarContext();\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        setAllSelectedParkingData(arrayMove(allSelectedParkingData,oldIndex, newIndex))\n    };\n\n    function changedParkingMarkerCallback(city,address,country,lat,lng, parkingDataChanged) {\n        getClosestParking(parseFloat(lat),parseFloat(lng), parkingDataChanged);\n    }\n\n\n\n    function addNewParking(markerData){\n        if(!parkingExists(markerData)){\n            API.Parking.insertNewParking([markerData]).then(response=>{\n                setAllSelectedParkingData(oldArray=> [...oldArray, response[0]]);\n                addConfig(true)\n            }).catch(error=>{\n                addConfig(false)\n            })\n        }\n    }\n\n    function parkingExists(markerData){\n        for(let i = 0; i<allSelectedParkingData.length; i++){\n            if(allSelectedParkingData[i].address === markerData.address) return true;\n        }\n        return false\n    }\n\n    const getClosestParking = (lat, lng, parkingDataChanged)=>{\n        API.Parking.getParkingByLocation(\"?lat=\"+lat+\"&lng=\"+lng).then(response=>{\n            let placesData = [];\n            console.log(\"ParkingData\", response)\n            response.map(row => {\n                placesData.push(row)\n            });\n            parkingDataChanged(response);\n        }).catch(error=>{\n        })\n    };\n\n    const SortableItem = SortableElement(({value}) => (\n        <Paper className={classes.paper} elevation={3}>\n            <Typography>\n                {value.address}\n            </Typography>\n            <IconButton aria-label=\"delete\" className={classes.margin}\n                        onClick={()=>setAllSelectedParkingData(allSelectedParkingData.filter((item) => item.parkingId !== value.parkingId))}>\n                <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n        </Paper>\n    ));\n\n    useEffect(()=>{\n        getClosestParking(parkingMarkerData.lat, parkingMarkerData.lng)\n    },[]);\n\n    const SortableList = SortableContainer(({items}) => {\n        return (\n            <ul>\n                {items.map((value, index) => (\n                <SortableItem key={index} index={index} value={value} />\n                ))}\n            </ul>\n        );\n    });\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Add parking\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select parking\n        </Typography>\n        <CustomMap mapHeight={350}\n                   locationData={parkingMarkerData}\n                   setLocationData={setParkingMarkerData}\n                   selectedParkingCallback={(location)=>{\n                       if(!parkingExists(location))\n                           setAllSelectedParkingData(oldArray=> [...oldArray, location])\n                       }}\n                   changedParkingMarkerCallback={changedParkingMarkerCallback}\n                   addParkingCallback={addNewParking}\n\n        />\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Selected parking locations\n        </Typography>\n\n        <SortableList distance={10} items={allSelectedParkingData} onSortEnd={onSortEnd} />\n\n    </div>\n}\n\nexport default withStyles(styles)(ParkingLocation)","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nfunction AddDialog(props){\n\n    function validateInput(){\n        var error = false;\n        if(text.length <= 3)\n            error = true\n        setError(error)\n        return error\n    }\n\n    let {classes, open, onCloseCallback, header, description, textFieldLabel, action} = props\n    const [text, setText] = useState(\"\")\n    const [error, setError] = useState(false)\n    return(\n        <div>\n            <Dialog /*onClose={handleClose}*/ aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}>\n                <DialogTitle id=\"customized-dialog-title\" /*onClose={handleClose}*/>\n                    {header}\n                </DialogTitle>\n                <DialogContent dividers>\n                    <TextField error={error} onChange = {(ev) => {setText(ev.target.value)}}label={textFieldLabel} variant=\"outlined\" fullWidth />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCallback} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button autoFocus color=\"primary\" onClick={() => {\n                        !validateInput() && action(text)\n                    }}>\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nAddDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    action: PropTypes.func.isRequired,\n    onCloseCallback: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(AddDialog)\n","import React, {useEffect, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AutocompleteChip from \"../AutocompleteChip\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddDialog from \"../AddDialog\";\nimport API from \"../../Networking/API\";\n\n\nconst styles = theme => ({\n    outline: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing(2)\n    },\n    paper:{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"8px\"\n    },\n});\n\nfunction PlaceDiscovery({classes, selectedTags, setSelectedTags, selectedCategories, setSelectedCategories}) {\n\n    const [dialogAddTagOpen, setDialogAddTagOpen] = useState(false);\n    const [dialogAddCategoryOpen, setDialogAddCategoryOpen] = useState(false);\n\n    const [availableCategories, setAvailableCategories] = useState([]);\n    const [availableTags, setAvailableTags] = useState([]);\n\n\n    const updateTags = () => {\n        API.Tags.getAllTags().then(response=>{\n            setAvailableTags(response);\n            console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n    const updateCategories = () => {\n        API.Categories.getAllCategories().then(response=>{\n            setAvailableCategories(response)\n            console.log(response);\n        }).catch(error=>{\n            console.log(error)\n        });\n    };\n\n    useEffect(()=>{\n        updateTags();\n        updateCategories();\n    },[]);\n\n    const handleAddCategory = (value) => {\n        API.Categories.addCategory([{name: value}]).then(response=>{\n            let newCat = {categoryId: response[0], name: value};\n            setAvailableCategories(\n                [\n                    ...availableCategories,\n                    newCat\n                ]\n            );\n            setSelectedCategories([\n                ...selectedCategories,\n                newCat\n            ]);\n            setDialogAddCategoryOpen(false)\n\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n\n\n\n    const handleAddTag = (value) => {\n        API.Tags.addTag([{name: value}]).then(response=>{\n            let newTag = {tagId: response[0], name: value}\n            setAvailableTags(\n                [\n                    ...availableTags,\n                    newTag\n                ]\n            );\n            setSelectedTags([\n                ...selectedTags,\n                newTag\n            ]);\n            setDialogAddTagOpen(false)\n\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Place discovery settings\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select tags\n        </Typography>\n        <AutocompleteChip label=\"Select tags\"\n                          id=\"tagId\"\n                          options={availableTags}\n                          setOptions={setAvailableTags}\n                          selectedOptions={selectedTags}\n                          setSelectedOptions ={setSelectedTags}/>\n\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => setDialogAddTagOpen(true)}\n            startIcon={<AddIcon />}>\n            Add missing tag\n        </Button>\n        <AddDialog action={handleAddTag} textFieldLabel=\"Name\" open={dialogAddTagOpen} onCloseCallback={() => setDialogAddTagOpen(false)} header = \"Add a new tag\" />\n\n        <br/>\n        <br/>\n        <Typography variant=\"subtitle1\" >\n            Select categories\n        </Typography>\n        <AutocompleteChip label=\"Select categories\"\n                          id=\"categoryId\"\n                          options={availableCategories}\n                          setOptions={setAvailableCategories}\n                          selectedOptions={selectedCategories} \n                          setSelectedOptions={setSelectedCategories}/>\n        <Button\n            variant=\"text\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => setDialogAddCategoryOpen(true)}\n            startIcon={<AddIcon />}>\n            Add missing category\n        </Button>\n        <AddDialog action={handleAddCategory}\n                   textFieldLabel=\"Name\"\n                   open={dialogAddCategoryOpen}\n                   onCloseCallback={() => setDialogAddCategoryOpen(false)}\n                   header = \"Add a new category\" />\n    </div>\n}\n\nexport default withStyles(styles)(PlaceDiscovery)","const initialScheduleData = [\n    {\n        \"isDefault\": true,\n        \"periods\": [\n            {\n                openDay: 0,\n                closeDay: 0,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            },\n            {\n                openDay: 1,\n                closeDay: 1,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            },\n            {\n                openDay: 2,\n                closeDay: 2,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            },\n            {\n                openDay: 3,\n                closeDay: 3,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            },\n            {\n                openDay: 4,\n                closeDay: 4,\n                openTime: \"08:00\",\n                closeTime: \"17:00\"\n            }\n        ]\n    }\n]\n\nexport default initialScheduleData","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport moment from \"moment\";\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        width: \"20%\",\n        padding: \"2px\",\n        marginRight: \"16px\"\n    },\n\n});\nexport default function ReviewCard({review}) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <div style={{display: \"flex\"}} >\n                    <Avatar alt=\"Cindy Baker\" src={!!review.photoUrl ? review.photoUrl : \"/broken-image.jpg\"} />\n                    <div style={{display: \"flex\", flexDirection: \"column\", marginLeft:\"8px\"}}>\n                        <Typography title=\"subtitle1\">\n                            {review.name} {review.surname}\n                        </Typography>\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                            <Rating size=\"small\" name=\"read-only\" value={review.rating} readOnly />\n                            <Typography title=\"subtitle1\">\n                                {\"+\" + review.upvotes}\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n                <Typography title=\"subtitle1\">\n                    {moment(review.timeAdded).format('LL')}\n                </Typography>\n                <div style={{marginTop: \"16px\"}}>\n                    {review.title}\n                </div>\n                <Typography title=\"subtitle1\">\n                        {review.review}\n                </Typography>\n\n            </CardContent>\n        </Card>\n    );\n}\n\n","import React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Rating from '@material-ui/lab/Rating';\nimport ReviewCard from \"../ReviewCard\";\nimport API from \"../../Networking/API\";\nimport debounce from \"lodash/debounce\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\n\nconst styles = theme => ({\n    reviewsInfo:{\n        display: \"flex\",\n    },\n    reviews:{\n        display: \"flex\",\n        width: \"100%\",\n        margin: theme.spacing(2),\n        overflowX: \"scroll\"\n    },\n    sortingButtons: {\n        padding: theme.spacing(2)\n    }\n});\n\nfunction Reviews({classes, placeInfo}) {\n\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [page, setPage] = useState(1);\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const [filterBy, setFilterBy] = useState('mostRated');\n\n    function getReviewsForPlace(urlParams = \"?p=\"+placeInfo.placeId) {\n        API.Reviews.getPlaceReviews(urlParams).then(response=>{\n            setReviews(old=>[...old, ...response.list]);\n            setIsLoading(false)\n        }).catch(error=>{\n            setIsLoading(false)\n        })\n    }\n\n    //Get ordered by new filter\n    useEffect(()=>{\n            getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=1&o=\"+filterBy)\n    },[filterBy]);\n\n\n    const handleScrollDebounced = (e) => {\n        const scrollOffset = 0;\n        const bottom = Math.round(e.target.scrollWidth - e.target.scrollLeft - scrollOffset)  <= e.target.clientWidth;\n        if (bottom && !isLoading && reviews.length>0 && reviews.length<placeInfo.totalReviews) {\n            setIsLoading(true);\n            setPage(old=>{\n                getReviewsForPlace(\"?p=\"+placeInfo.placeId+\"&page=\"+(old+1)+\"&o=\"+filterBy);\n                return old+1\n            });\n        }\n    };\n\n    const debounceScroll = debounce(e => handleScrollDebounced(e), 200);\n\n    const handleScroll = (e) => {\n        e.persist();\n        debounceScroll(e)\n    };\n\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    function changeSorting(e){\n        const {name, value} = e.target;\n        setFilterBy(value);\n        setReviews([]);\n        setPage(1);\n        handleClose()\n    }\n\n\n    return <div>\n        <Typography variant=\"h6\" >\n            Reviews\n            <br/>\n            {\n               reviews.length > 0 ?\n                   <React.Fragment>\n                       <div style={{display:\"flex\", justifyContent: \"space-between\"}}>\n                           <div className={classes.reviewsInfo}>\n                               <Rating name=\"read-only\" value={placeInfo.overallStarRating} precision={0.2} readOnly />\n                               <Typography style={{marginLeft:\"8px\"}} variant=\"subtitle1\">\n                                   {placeInfo.totalReviews} reviews\n                               </Typography>\n                           </div>\n                           <Tooltip aria-describedby={id} title=\"Filter list\">\n                               <IconButton  aria-label=\"filter list\" onClick={handleClick}>\n                                   <FilterListIcon />\n                               </IconButton>\n                           </Tooltip>\n                           <Popover\n                               id={id}\n                               open={open}\n                               anchorEl={anchorEl}\n                               onClose={handleClose}\n                               anchorOrigin={{\n                                   vertical: 'bottom',\n                                   horizontal: 'center',\n                               }}\n                               transformOrigin={{\n                                   vertical: 'top',\n                                   horizontal: 'center',\n                               }}\n                           >\n                               <RadioGroup className={classes.sortingButtons} aria-label=\"gender\" value={filterBy} name=\"gender1\"  onChange={changeSorting}>\n                                   <FormControlLabel value=\"mostRated\" control={<Radio />} label=\"Most rated\" />\n                                   <FormControlLabel value=\"newest\" control={<Radio />} label=\"Newest\" />\n                               </RadioGroup>\n                           </Popover>\n                       </div>\n\n                       <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                           <Typography>\n                               Showing: {reviews.length} out of {placeInfo.totalReviews}\n                           </Typography>\n                           <Typography>\n                               Sorting by: {filterBy}\n                           </Typography>\n                       </div>\n                       <div className={classes.reviews} onScroll={e=>handleScroll(e)}>\n                           {reviews.map(row=>{\n                               return <ReviewCard review={row}/>\n                           })}\n                       </div>\n                   </React.Fragment> : <Typography> No reviews for this place</Typography>\n            }\n\n        </Typography>\n        <br/>\n        {isLoading ? <LinearProgress/> : null }\n    </div>\n}\n\nexport default withStyles(styles)(Reviews)","import React, { useState } from 'react';\n\nexport const AppBarTitleContext = React.createContext({\n    title: \"\",\n    setTitle: () => {},\n});\n\nexport default function AppBarTitleProvider({ children }) {\n    const [title, setTitle] = useState(\"Home\");\n\n    const contextValue = {\n        title,\n        setTitle: (title) => setTitle(title)\n    };\n\n    return (\n        <AppBarTitleContext.Provider value={contextValue}>\n            {children}\n        </AppBarTitleContext.Provider>\n    );\n}","import React, {useContext} from \"react\";\nimport {AppBarTitleContext} from \"./AppBarTitleContext\";\n\nexport default function UseAppBarTitleContext() {\n    const { title, setTitle } = useContext(AppBarTitleContext);\n    return { title, setTitle };\n}\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { TimePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport WarningIcon from '@material-ui/icons/Warning';\nimport Moment from \"react-moment\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\",\n        justifyContent : \"space-between\",\n        margin: theme.spacing(0.5),\n        // padding: theme.spacing(0.5),\n        alignItems: \"center\",\n        flexFlow: \"row wrap\"\n    },\n    picker: {\n        margin: theme.spacing(0.5),\n        width: \"30%\"\n    },\n    intervalRightSide: {\n        display: \"flex\",\n        // width: \"100%\",\n        // justifyContent : \"space-between\",\n        alignItems: \"center\",\n    },\n    intervalLeftSide: {\n    }\n});\n\nfunction ScheduleInterval({classes, intervals, index, setIntervals}){\n\n    let currentInterval = intervals[index]\n\n    const [lastAccommodationEnabled, setLastAccommodationEnabled] = useState(currentInterval.lastAccommodation != null)\n    const [lastAccommodationTime, setLastAccommodationTime] = useState(currentInterval.lastAccommodation == null ? currentInterval.closeTime : currentInterval.lastAccommodation)\n\n    const getCloseDay = (closeTime, openTime) => {\n        let currentPeriod = intervals[index]\n        if(moment(closeTime, \"HH:mm\").isBefore(moment(openTime, \"HH:mm\")))\n            return (currentPeriod.openDay + 1) > 6 ? 0 : (currentPeriod.openDay +1)\n        else return currentPeriod.openDay\n    }\n\n    let handleUpdateOpenTime = (value) => {\n        setIntervals((oldIntervals) => {\n            return oldIntervals.map((item, i) => {\n                if(index === i){\n                    return {\n                        ...item,\n                        openTime: moment(value).format(\"HH:mm\").toString(),\n                        closeDay: getCloseDay(item.closeTime, value)\n                    }\n                }else return item\n            })\n        })\n    }\n    let handleUpdateCloseTime = (value) => {\n        setIntervals((oldIntervals) => {\n            return oldIntervals.map((item, i) => {\n                if(index === i){\n                    return {\n                        ...item,\n                        closeTime: moment(value).format(\"HH:mm\").toString(),\n                        closeDay: getCloseDay(value, item.openTime)\n                    }\n                }else return item\n            })\n\n        })\n    }\n\n    const handleDelete = () => {\n        setIntervals(oldIntervals => {\n            return oldIntervals.filter((item, i) => i !== index)\n        })\n    }\n\n    useEffect(() => {\n        setIntervals((oldIntervals) => {\n            return oldIntervals.map((item, i) => {\n                if(index === i){\n                    return {\n                        ...item,\n                        lastAccommodation: lastAccommodationEnabled ? lastAccommodationTime.toString() : null\n                    }\n                }else return item\n            })\n\n        })\n    }, [lastAccommodationTime, lastAccommodationEnabled])\n\n    const theme = useTheme();\n    const largeScreen = useMediaQuery(theme.breakpoints.only('lg'));\n\n    return(\n        <div className={classes.root}>\n            <div className={classes.intervalLeftSide}>\n                <TimePicker\n                    margin=\"normal\"\n                    ampm={false}\n                    label=\"Opens\"\n                    className={classes.picker}\n                    format=\"HH:mm\"\n                    value={moment(currentInterval.openTime, \"HH:mm\")}\n                    onChange={handleUpdateOpenTime}\n                    InputProps={{\n                        disableUnderline: true,\n                    }}\n                />\n                <TimePicker\n                    margin=\"normal\"\n                    ampm={false}\n                    className={classes.picker}\n                    label=\"Closes\"\n                    format=\"HH:mm\"\n                    value={moment(currentInterval.closeTime, \"HH:mm\")}\n                    onChange={handleUpdateCloseTime}\n                    InputProps={{\n                        disableUnderline: true,\n                    }}\n                />\n\n                {intervals[index].closeDay !== intervals[index].openDay &&\n                    <React.Fragment>\n                        <Typography variant=\"subtitle1\">\n                            <WarningIcon style={{marginRight: \"10px\"}}/>\n                            Closes the next day\n                        </Typography>\n                    </React.Fragment>}\n\n                {!largeScreen &&\n                <Button color=\"primary\" onClick={handleDelete}>\n                    <DeleteOutlineIcon/>\n                </Button>\n                }\n            </div>\n\n            <div className={classes.intervalRightSide}>\n\n                <Checkbox checked={lastAccommodationEnabled} onChange={() => setLastAccommodationEnabled(state => !state)} />\n\n                <TimePicker\n                    margin=\"normal\"\n                    ampm={false}\n                    label=\"Last accommodation\"\n                    format=\"HH:mm\"\n                    disabled={!lastAccommodationEnabled}\n                    value={moment(lastAccommodationTime.toString(), \"HH:mm\")}\n                    onChange={(value) => setLastAccommodationTime(moment(value).format(\"HH:mm\").toString())}\n                    InputProps={{\n                        disableUnderline: true,\n                    }}\n                />\n\n                {largeScreen &&\n                    <Button color=\"primary\" onClick={handleDelete}>\n                    <DeleteOutlineIcon/>\n                    </Button>\n                }\n\n            </div>\n        </div>\n    )\n}\n\nScheduleInterval.propTypes = {\n    classes: PropTypes.object.isRequired,\n    intervals: PropTypes.array.isRequired,\n    setIntervals: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(ScheduleInterval)\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ScheduleInterval from \"./ScheduleInterval\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst styles = theme => ({\n    header: {\n        display: \"flex\",\n        justifyContent : \"space-between\"\n    },\n    root: {\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(0.5)\n    }\n});\n\nfunction DayComponent({classes, scheduleData, setScheduleData, openDay, onChange}){\n\n    let [intervals, setIntervals] = useState(scheduleData.periods.filter(item => item.openDay === openDay))\n\n    useEffect(() => {\n        onChange(intervals, openDay)\n        console.log(intervals)\n    }, [intervals])\n\n    let weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\n    const handleAddPeriod = () => {\n        setIntervals(oldIntervals => {\n            return [\n                ...oldIntervals,\n                {openDay: openDay, closeDay: openDay, openTime: \"08:00\", closeTime: \"18:00\"}\n            ]\n        })\n    }\n\n    return(\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <Typography variant=\"h6\" >\n                    {weekDays[openDay]}\n                </Typography>\n                <Button color=\"secondary\" onClick={handleAddPeriod}>\n                    <AddIcon/>\n                </Button>\n            </div>\n\n            {intervals.map((value, index) => {\n                return <React.Fragment>\n                    <Divider variant=\"middle\" />\n                    <ScheduleInterval index={index} intervals={intervals} setIntervals={setIntervals}/>\n                </React.Fragment>\n            })}\n\n        </div>\n    )\n}\n\nDayComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    scheduleData: PropTypes.object.isRequired,\n    setScheduleData: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(DayComponent)\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, {useEffect, useState} from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {DatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\nimport Divider from \"@material-ui/core/Divider\";\nimport DayComponent from \"./DayComponent\";\nimport moment from \"moment\";\n\nconst styles = theme => ({\n    header: {\n        display: \"flex\",\n        justifyContent : \"space-between\"\n    },\n    root: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(1)\n    },\n    pickerStyle: {\n        margin: theme.spacing(1)\n    },\n    headerLeft: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"left\"\n    }\n});\n\nfunction Schedule({classes, data, setData, index}){\n\n    const[periods, setPeriods] = useState([...data.periods])\n\n    const handleIntervalChange = (newIntervals, openDay) => {\n        setPeriods(oldPeriods => {\n            let filtered = oldPeriods.filter(item => item.openDay !== openDay)\n            if(newIntervals.length === 0)\n                return [...filtered]\n            return [\n                ...filtered,\n                ...newIntervals\n            ]\n        })\n    }\n\n    useEffect(() => {\n        setData(oldData => {\n            return oldData.map((schedule, i) => {\n                if( i === index){\n                    return {...schedule, periods: periods}\n                }else return schedule\n            })\n        })\n    }, [periods])\n\n    const generateWeekdayViews = () => {\n        let views = []\n        for(let i =0; i < 7; i++){\n            views.push(<DayComponent scheduleData={data} onChange={handleIntervalChange} setScheduleData={setData} openDay={i} key={i}/>)\n        }\n        return views\n    }\n\n    const updateFromTime = (value) => {\n        setData(oldData => {\n            return oldData.map((schedule, i) => {\n                if( i === index){\n                    return {...schedule, from: moment(value).format('MM-DD').toString()}\n                }else return schedule\n            })\n        })\n    }\n    const updateToTime = (value) => {\n        setData(oldData => {\n            return oldData.map((schedule, i) => {\n                if( i === index){\n                    return {...schedule, to: moment(value).format('MM-DD').toString()}\n                }else return schedule\n            })\n        })\n    }\n    const removeSchedule = () => {\n        setData(oldData => {\n            return oldData.filter((item, i) => index !== i)\n        })\n    }\n\n    return(\n        <Paper className={classes.root}>\n            <div className={classes.header}>\n                <div className={classes.headerLeft}>\n                    {data.isDefault &&\n                    <Typography variant=\"h6\" >\n                        Date: Year round\n                    </Typography>}\n                    {!data.isDefault &&\n                        <React.Fragment>\n                            <DatePicker\n                                className={classes.pickerStyle}\n                                views={[\"month\", \"date\"]}\n                                label=\"From\"\n                                value={moment(data.from, \"MM-DD\")}\n                                onChange={updateFromTime}\n                            />\n                            <DatePicker\n                                className={classes.pickerStyle}\n                                views={[\"month\", \"day\"]}\n                                label=\"To\"\n                                value={moment(data.to, \"MM-DD\")}\n                                onChange={updateToTime}\n                            />\n                        </React.Fragment>\n                    }\n                </div>\n                {!data.isDefault &&\n                <Button color=\"secondary\" onClick = {removeSchedule}>\n                    <RemoveIcon/>\n                </Button>}\n\n            </div>\n            <br/>\n            {generateWeekdayViews()}\n        </Paper>\n    )\n}\n\nSchedule.propTypes = {\n    classes: PropTypes.object.isRequired,\n    data: PropTypes.object.isRequired,\n    setData: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Schedule)\n","import PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, {useEffect, useState} from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from \"@material-ui/core/Button\";\nimport Schedule from \"../Schedule\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {TimePicker} from \"@material-ui/pickers\";\nimport moment from \"moment\";\n\nconst styles = theme => ({\n    header: {\n        display: \"flex\",\n        justifyContent : \"space-between\",\n        flexWrap: \"wrap\"\n    }\n});\n\nfunction SchedulesWrapper({classes, scheduleData, setScheduleData, isScheduleEnabled, setIsScheduleEnabled}){\n\n    const addSchedule = () => {\n        setScheduleData(oldData => {\n            return [\n                ...oldData,\n                {isDefault: false, from: \"01-01\", to: \"01-02\", periods : []}\n            ]\n        })\n    }\n\n    return(\n        <div>\n            <div className={classes.header}>\n                <Typography variant=\"h6\" >\n                    Working schedule\n                </Typography>\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={isScheduleEnabled}\n                            onChange={() => setIsScheduleEnabled(state => !state)}\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"Enable schedule for this place?\"\n                />\n            </div>\n            <br/>\n            {isScheduleEnabled &&\n                <React.Fragment>\n                    {scheduleData.map((value, index) => {\n                        return <Schedule data={value} index={index} setData={setScheduleData}/>\n                    })}\n                    <Button style={{float: \"right\"}}color=\"secondary\" onClick={addSchedule}>\n                        <AddIcon/>\n                    </Button>\n                </React.Fragment>}\n        </div>\n    )\n}\n\nSchedulesWrapper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    scheduleData: PropTypes.array.isRequired,\n    setScheduleData: PropTypes.func.isRequired,\n    isScheduleEnabled: PropTypes.object.isRequired,\n    setIsScheduleEnabled: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SchedulesWrapper)\n","import React, {useEffect, useState} from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes, {func} from \"prop-types\";\nimport {Paper} from '@material-ui/core';\nimport BasicPlaceInfo from \"../components/add_place_components/BasicPlaceInfo\";\nimport PhotosInfo from \"../components/add_place_components/PhotosInfo\";\nimport PlaceLocation from \"../components/add_place_components/PlaceLocation\";\nimport ParkingLocation from \"../components/add_place_components/ParkingLocation\";\nimport PlaceDiscovery from \"../components/add_place_components/PlaceDiscovery\";\nimport initialScheduleData from \"../components/add_place_components/initialScheduleData\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport API from \"../Networking/API\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Strings from \"../helpers/stringResources\";\nimport green from \"@material-ui/core/colors/green\";\nimport Reviews from \"../components/add_place_components/Reviews\";\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\nimport Schedule from \"../components/add_place_components/SchedulesWrapper\";\nimport SchedulesWrapper from \"../components/add_place_components/SchedulesWrapper\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    paperContent: {\n        marginTop: theme.spacing(4),\n        [theme.breakpoints.down(\"lg\")]: {\n            width: \"95%\",\n            padding: theme.spacing(2),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            width: \"70%\",\n            padding: theme.spacing(4),\n        },\n    },\n    root:{\n        height:\"100vh\"\n    },\n    loader:{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100vw\",\n        height: \"100vh\"\n    },\n    content:{\n        display:\"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        height:`calc(93vh - 64px)`,\n        [theme.breakpoints.down(\"lg\")]: {\n            width: \"100%\",\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            width: \"auto\",\n            padding: theme.spacing(8),\n        },\n        overflowY: \"auto\"\n    },\n    bottom:{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        padding: theme.spacing(1),\n        height: \"7vh\"\n    }\n});\n\n\nfunction AddPlace({classes, match}){\n    const [placeInfo, setPlaceInfo] = useState({placeId: \"\",\n        name: \"\", description: \"\",website: \"\", phoneNumber: \"\",\n        hasSchedule: false, isPublic: false, isVerified: true, overallStarRating: 0, totalReviews: 0,\n        source: \"\", price: \"\", averageTimeSpent: \"0\"});\n\n\n    const [selectedTags, setSelectedTags] = useState([]);\n    const [selectedCategories, setSelectedCategories] = useState([]);\n\n    const [photos, setPhotos] = useState([]);\n\n    const [locationData, setLocationData] = useState({city: '', address: '', country: '', latitude: 54.687157, longitude: 25.279652});\n    const [parkingMarkerData, setParkingMarkerData] = useState({city: '', address: '', country: '', latitude: 54.687157, longitude: 25.279652});\n    const [allSelectedParkingData, setAllSelectedParkingData] = useState([]);\n\n    const [sources, setSources] = useState([]);\n\n    const [scheduleData, setScheduleData] = useState(initialScheduleData);\n    const [isScheduleEnabled, setIsScheduleEnabled] = useState(false);\n\n    const [placeId, setPlaceId] = useState(match.params.placeId);\n\n    const [firstTimeLoading, setFirstTimeLoading] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [error, setError] = useState({name: false});\n    const [checkErrors, setCheckErrors] = useState(false);\n\n\n    const { addConfig } = UseSnackbarContext();\n    const { addAlertConfig } = UseAlertDialogContext();\n\n    const { title, setTitle } = UseAppBarTitleContext();\n\n    const ColorButton = withStyles((theme) => ({\n        root: {\n            color: theme.palette.getContrastText(green[500]),\n            backgroundColor: green[500],\n            '&:hover': {\n                backgroundColor: green[700],\n            },\n        },\n    }))(Button);\n\n    useEffect(()=>{\n        console.log(placeId)\n        //Loaded place for editing\n        if(placeId!==undefined){\n            console.log(\"Getting place location\");\n            getPlaceInfo()\n        }else{\n            setTitle(\"Add new place\");\n            console.log(\"Came here to add new place\");\n            setFirstTimeLoading(false) //Just loaded add place window\n        }\n\n        //New Place has been just inserted, thus inserting other place info\n        if(placeId!==undefined && firstTimeLoading===false){\n            console.log(\"Just added new place\");\n            Promise.all([\n                updateTagsData(placeId),\n                updateParkingData(placeId),\n                updateCategoriesData(placeId),\n                updatePhotoData(placeId),\n                updateSchedule(placeId),\n                updateSources(placeId)\n            ]).then(responses=>{\n                formFeedback(true, Strings.SNACKBAR_PLACE_INSERTED_SUCCESS)\n            }).catch(error=>{\n                formFeedback(false)\n            })\n        }\n\n    },[placeId]);\n\n    useEffect(()=>{\n        if(firstTimeLoading === false){\n            console.log(\"Making this place public\");\n            updateAll()\n        }\n    },[placeInfo['isPublic']]);\n\n    function getPlaceInfo() {\n        API.Places.getPlaceById(\"?full=true&p=\"+placeId).then(response=>{\n            setAllData(response)\n            setTitle(\"Editing place/\"+response.name);\n        }).catch(error=>{\n            formFeedback(false)\n        })\n    }\n\n    function setAllData(place){\n        console.log(\"Got data:\",place);\n        setPlaceInfo({\n            placeId: place.placeId,\n            name: place.name,\n            description: place.description,\n            website: place.website,\n            phoneNumber: place.phoneNumber,\n            hasSchedule: place.hasSchedule,\n            isPublic: place.isPublic,\n            isVerified: place.isVerified,\n            overallStarRating: place.overallStarRating,\n            totalReviews: place.totalReviews,\n            price: place.price,\n            averageTimeSpent: place.averageTimeSpent\n        });\n\n        setLocationData({city: place.city,\n            address: place.address,\n            country: place.country,\n            latitude: place.latitude,\n            longitude: place.longitude});\n\n        setSources(place.sources);\n        setSelectedTags(place.tags);\n        setSelectedCategories(place.categories);\n        if(place.schedule.length > 0) {\n            setScheduleData([...place.schedule]);\n            setIsScheduleEnabled(true)\n        }else setIsScheduleEnabled(false)\n\n        setAllSelectedParkingData(place.parking);\n        setPhotos(place.photos);\n        setFirstTimeLoading(false)\n    }\n\n    function formFeedback(success, message=Strings.SNACKBAR_ERROR){\n        addConfig(success, message);\n        setIsLoading(false)\n    }\n\n    function saveChanges(){\n        if(placeId === undefined){\n            addAlertConfig(Strings.DIALOG_PLACE_INSERT_TITLE, Strings.DIALOG_PLACE_INSERT, [{name: \"Insert\", action: ()=>{\n                    setIsLoading(true);\n                    insertBasicPlaceInfo()\n                }}])\n        }else{\n            addAlertConfig(Strings.DIALOG_PLACE_UPDATE_TITLE, Strings.DIALOG_PLACE_UPDATE, [{name: \"save and publish\", action: ()=>{\n                    let plc = Object.assign({}, placeInfo, {});\n                    plc.isPublic = 1;\n                    setPlaceInfo(plc);\n                    setIsLoading(true);\n                    updateAll()\n                }},{name: \"save\", action: ()=>{\n                    setIsLoading(true);\n                    updateAll()\n                }}])\n        }\n    }\n\n    function updateAll(){\n        Promise.all([\n            updatePlaceInfo(),\n            updateTagsData(placeId),\n            updatePhotoData(placeId),\n            updateCategoriesData(placeId),\n            updateParkingData(placeId),\n            updateSchedule(placeId),\n            updateSources(placeId)\n        ]).then(response=>{\n            formFeedback(true, Strings.SNACKBAR_CHANGES_SAVED);\n        }).catch(err=>{\n            formFeedback(false)\n        })\n    }\n\n    function updatePlaceInfo() {\n        console.log(formPlaceInfo());\n        API.Places.updatePlace(formPlaceInfo()).then(response=>{\n\n        }).catch(error=>{\n\n        })\n\n    }\n\n    function insertBasicPlaceInfo(){\n            API.Places.insertPlace(formPlaceInfo()).then(placeId=>{\n                setPlaceId(placeId)\n            }).catch(error=>{\n\n            })\n    }\n\n    function updateParkingData(id) {\n        API.ParkingPlace.updateParkingForPlace(allSelectedParkingData, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n    function updateTagsData(id) {\n        API.TagsPlace.updateTagsForPlace(selectedTags, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n    function updateSources(id) {\n        console.log(\"Hello\")\n        API.SourcePlace.updateSourcesForPlace(sources, \"?p=\"+id).then(response=>{\n            console.log(sources)\n        }).catch(error=>{\n\n        })\n    }\n\n\n    function updateCategoriesData(id) {\n        API.CategoriesPlace.updateCategoriesForPlace(selectedCategories, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n    function updatePhotoData(id) {\n        API.PhotoPlace.updatePhotoForPlace(photos, \"?p=\"+id).then(response=>{\n\n        }).catch(error=>{\n\n        })\n    }\n\n\n    function updateSchedule(id){\n        console.log(scheduleData);\n        API.Schedule.updateScheduleForPlace(isScheduleEnabled ? scheduleData : [], \"?id=\" + id).then(response => {\n        }).catch(er => {\n        })\n\n    }\n\n    function formPlaceInfo(){\n        let d = Object.assign(placeInfo, locationData);\n        return d\n    }\n\n\n    function publishPlace(){\n        addAlertConfig(Strings.DIALOG_PLACE_PUBLISH_TITLE, placeInfo['isPublic'] ? Strings.DIALOG_PLACE_UNPUBLISH_MESSAGE : Strings.DIALOG_PLACE_PUBLISH_MESSAGE,\n            [{name: \"Agree\", action: ()=>{\n                let obj = Object.assign({}, placeInfo, {});\n                obj['isPublic'] = !obj['isPublic'];\n                setPlaceInfo(obj);\n            }}])\n\n    }\n\n    function verifyPlace(){\n        addAlertConfig(Strings.DIALOG_PLACE_VERIFY_TITLE, Strings.DIALOG_PLACE_VERIFY_MESSAGE, [{name: \"agree\", action: ()=>{\n                let obj = Object.assign({}, placeInfo, {});\n                obj['isPublic'] = 1;\n                obj['isVerified'] = 1;\n                setPlaceInfo(obj);\n            }}])\n    }\n\n    return(\n        <div className={classes.root}>\n            {firstTimeLoading ? <div className={classes.loader}><CircularProgress /></div> : <div className={classes.content}>\n\n\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <BasicPlaceInfo\n                        error={error}\n                        setError={setError}\n                        checkErrors={checkErrors}\n                        placeInfo={placeInfo}\n                        setPlaceInfo={setPlaceInfo}\n                        selectedSources={sources}\n                        setSelectedSources={setSources}\n                    />\n\n                </Paper>\n\n                {placeId !== undefined ?\n                    <Paper elevation = {4} className={classes.paperContent}>\n                        <Reviews\n                            placeInfo={placeInfo}\n                        />\n                    </Paper>\n                    : null}\n\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PhotosInfo\n                        photos={photos}\n                        setPhotos={setPhotos}\n                    />\n                </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PlaceLocation\n                        error={error}\n                        setError={setError}\n                        checkErrors={checkErrors}\n                        locationData={locationData}\n                        setLocationData={setLocationData}/>\n                </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <ParkingLocation\n                        allSelectedParkingData={allSelectedParkingData}\n                        setAllSelectedParkingData={setAllSelectedParkingData}\n                        parkingMarkerData={parkingMarkerData}\n                        setParkingMarkerData={setParkingMarkerData}/>\n                </Paper>\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <PlaceDiscovery\n                        selectedTags={selectedTags}\n                        setSelectedTags={setSelectedTags}\n                        selectedCategories={selectedCategories}\n                        setSelectedCategories={setSelectedCategories}/>\n                </Paper>\n\n                <Paper elevation = {4} className={classes.paperContent}>\n                    <SchedulesWrapper isScheduleEnabled={isScheduleEnabled} setIsScheduleEnabled={setIsScheduleEnabled} setScheduleData={setScheduleData} scheduleData={scheduleData}/>\n                </Paper>\n            </div> }\n\n            {isLoading ? <LinearProgress/> : null}\n\n            <Paper elevation={1} className={classes.bottom}>\n\n                {\n\n                    placeInfo['isVerified'] === false && placeId !== undefined ?\n                        <ColorButton\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={()=>{verifyPlace()}}\n                            className={classes.button}\n                        >\n                            Verify place\n                        </ColorButton>\n                    :\n                    <FormControlLabel\n                    control={<Switch checked={placeInfo['isPublic']} onChange={()=> {\n                        publishPlace()\n                    }\n                    } name=\"isPublic\" />}\n                    label=\"Make this place public\"\n                />}\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={()=>saveChanges()}\n                    className={classes.button}>\n                    Save\n                </Button>\n\n\n            </Paper>\n        </div>)\n\n}\n\nAddPlace.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AddPlace)\n\n\n","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {Fragment, useState} from \"react\"\nimport Typography from \"@material-ui/core/Typography\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Card from \"@material-ui/core/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport red from \"@material-ui/core/colors/red\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = theme => ({\n    root: {\n\n    },\n    media: {\n        height: 0,\n            paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n})\n\nfunction CategoriesDisplay({categories}){\n    return(\n        categories != null &&\n        <Box component=\"ul\"  style={{\n            display: 'flex',\n            justifyContent: 'left',\n            flexWrap: 'wrap',\n            listStyle: 'none',\n            padding: '0px'\n        }}>\n            {categories.map((data, index) => {\n                return (\n                    <li key={index}>\n                        <Chip\n                            variant=\"outlined\"\n                            style={{margin: \"5px\"}}\n                            label={data.name}\n                        />\n                    </li>\n\n                );\n            })}\n        </Box>\n    )\n}\n\nfunction SubheaderDisplay({city, address, priceRange, rating}){\n    return(\n        <div>\n            {rating != null &&\n            <Fragment><Rating\n                readOnly={true}\n                value={rating}\n            /><br/></Fragment>}\n            {(address != null ? address : \"\") + \" \" + (city != null ? city: \"\")} <div style={{color: \"green\"}}>{priceRange}</div>\n\n        </div>\n    )\n}\n\nfunction ApiPlaceCard({classes, placeData, renderActionArea}){\n\n    function truncateText(text){\n        if(text == null)\n            return \"\"\n        if(text.length > 500){\n            return text.substring(0, 500) + \"...\";\n        }else{\n            return text\n        }\n    }\n\n    return(\n        <Card className={classes.root}>\n            <CardHeader\n                action={\n                    renderActionArea != null && renderActionArea()\n                }\n                title={placeData.name}\n                subheader={<SubheaderDisplay  city={placeData.city} address={placeData.address} priceRange={placeData.priceRange} rating={placeData.overallStarRating}/>}\n\n            />\n            {placeData.photos != null && placeData.photos.length > 0 &&\n            <CardMedia\n                className={classes.media}\n                image={placeData.photos[0].url}\n            />}\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {truncateText(placeData.description)}\n                </Typography>\n\n                <CategoriesDisplay categories={placeData.categories}/>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\n                {placeData.website}\n                </Typography>\n\n            </CardContent>\n            <CardActions disableSpacing>\n            </CardActions>\n        </Card>\n    )\n}\n\nApiPlaceCard.propTypes = {\n    placeData: PropTypes.object.isRequired,\n    renderActionArea: PropTypes.func\n};\n\nexport default withStyles(styles)(ApiPlaceCard)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport {debounce} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        margin: theme.spacing(2)\n        // width: 400,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    divider: {\n        // height: 28,\n        margin: 4,\n    },\n}));\n\nexport default function SearchInputComponent({hint, searchCallback}) {\n    const classes = useStyles();\n\n    const debouncedInput = (event) => {\n        searchCallback(event.target.value)\n    }\n\n    const debounceInput = debounce(event => debouncedInput(event), 500)\n\n    const handleInput = (event) => {\n        event.persist()\n        debounceInput(event)\n    }\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <InputBase\n                className={classes.input}\n                placeholder={hint}\n                inputProps={{ 'aria-label': hint }}\n                onChange={handleInput}\n            />\n            <IconButton className={classes.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n            <Divider className={classes.divider} orientation=\"vertical\" />\n        </Paper>\n    );\n}","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {useState} from \"react\"\nimport ApiPlaceCard from \"../components/ApiPlaceCard\";\nimport API from \"../Networking/API\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport debounce from 'lodash/debounce'\nimport Masonry from \"react-masonry-component\";\nimport SearchInputComponent from \"../components/SearchInputComponent\";\nimport Strings from \"../helpers/stringResources\";\nimport Typography from \"@material-ui/core/Typography\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\n\n\n\nconst styles = theme => ({\n    root:{\n        overflow: 'scroll',\n        width: \"100%\",\n        padding: theme.spacing(1),\n        height:`calc(100vh - 64px)`,\n        paddingTop: \"9vh\",\n    },\n    topBar: {\n        height: \"8vh\",\n        position: \"absolute\",\n        width: \"60%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        justifyContent: \"center\",\n        zIndex: 1\n    },\n    searchBox: {\n        margin: theme.spacing(1)\n    },\n    placeApiCard: {\n        [theme.breakpoints.down('lg')]: {\n            width: \"95%\",\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: \"28vw\",\n        },\n        // minWidth: \"400px\",\n        margin: theme.spacing(1)\n    }\n})\n\nfunction ApiPlaces({classes}){\n\n    const [data, setData] = useState([]);\n    const [isLoadingData, setIsLoadingData] = useState(false);\n    const { addConfig } = UseSnackbarContext();\n\n    const loadDataFunc = (query) => {\n        setData([])\n        setIsLoadingData(true)\n        API.Places.searchApiPlaces(\"?keyword=\" + encodeURI(query)).then(response => {\n            setData([...response])\n        }).catch(error => {\n            addConfig(false, \"The request did not go through.\")\n        }).finally(() => {\n            setIsLoadingData(false)\n        })\n    }\n\n    const handleSearch = (word) => {\n        if(word.length > 3)\n            loadDataFunc(word)\n    }\n\n    return(\n        <div style={{position: \"relative\"}}>\n            <div className = {classes.topBar}>\n                <SearchInputComponent searchCallback={handleSearch} hint=\"Search api places\" style={classes.searchBox} />\n            </div>\n\n            <div className={classes.root}>\n                <Masonry\n                    style={{margin: \"0 auto\"}}\n                    elementType={'div'} // default 'div'\n                    options={{\n                        isFitWidth: true\n                    }} // default {}\n                    disableImagesLoaded={false} // default false\n                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n                >\n\n                    {data.map(item => {\n                        return <ApiPlaceCard classes ={{ root: classes.placeApiCard}} key={item.placeId} placeData = {item} style={{boxSizing: 'border-box'}}/>\n                    })}\n\n                    {\n                        data.length === 0 && !isLoadingData &&\n                        <Typography variant=\"subtitle1\">No results</Typography>\n                    }\n                    {\n                        isLoadingData &&\n                        <CircularProgress  />\n                    }\n\n                </Masonry>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(ApiPlaces)","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\">\n            {'Copyright © '}\n            Traveldirection {' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n    main: {\n        marginTop: theme.spacing(8),\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n    },\n}));\n\nexport default function NotFoundPage() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n                    Page not found\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                    {'Try something else'}\n                </Typography>\n            </Container>\n            <footer className={classes.footer}>\n                <Container maxWidth=\"sm\">\n                    <Copyright />\n                </Container>\n            </footer>\n        </div>\n    );\n}","import {withStyles} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst styles = theme => ({\n    cardRoot: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 5\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        flex: 1\n    },\n    root: {\n        display: \"flex\",\n        flexFlow: \"column wrap\"\n    },\n    addParkingWrapper: {\n        display: \"inline-block\"\n    }\n})\n\n\nfunction TourPlaceComponent({classes, elementData, removeCallback, addTransportCallback, displayNoTransportWarning}) {\n\n    function truncateText(text){\n        if(text == null)\n            return \"\"\n        if(text.length > 500){\n            return text.substring(0, 500) + \"...\";\n        }else{\n            return text\n        }\n    }\n\n    return(\n        <div className={classes.root}>\n            <Card className={classes.cardRoot}>\n\n                {elementData.data.details.photos != null && elementData.data.details.photos.length > 0 &&\n                <CardMedia\n                    className={classes.cover}\n                    image={elementData.data.details.photos[0].url}\n                />\n                }\n\n                <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                        <Typography component=\"h5\" variant=\"h5\">\n                            {elementData.data.details.name}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                            {truncateText(elementData.data.details.description)}\n                        </Typography>\n                    </CardContent>\n                </div>\n                <CardHeader\n                    action={\n                        <IconButton aria-label=\"remove\" onClick={() => removeCallback(elementData)}>\n                            <RemoveIcon />\n                        </IconButton>\n                    }\n                />\n            </Card>\n\n            {displayNoTransportWarning &&\n            <Alert severity=\"error\">No transport from this place specified</Alert>}\n\n            <div className={classes.addParkingWrapper}>\n                <Button style={{display: \"inline\"}}  color=\"secondary\" onClick={() => addTransportCallback(elementData)}>\n                    <AddIcon/>\n                </Button>\n                <Typography style={{display: \"inline\"}} variant=\"subtitle1\">\n                    Add transport from this place\n                </Typography>\n            </div>\n\n        </div>\n\n    )\n}\nTourPlaceComponent.propTypes = {\n    elementData: PropTypes.object.isRequired,\n    removeCallback: PropTypes.func.isRequired,\n    addTransportCallback: PropTypes.func.isRequired,\n    displayNoTransportWarning: PropTypes.bool\n};\n\nexport default withStyles(styles)(TourPlaceComponent)\n","import React, {createRef, useCallback, useEffect, useRef, useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MetroIcon from '@material-ui/icons/DirectionsTransit';\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DriveEta';\nimport TrainIcon from '@material-ui/icons/Train';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport TramIcon from '@material-ui/icons/Tram';\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\n\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\",\n        flexFlow: \"column wrap\"\n    },\n    transportSelectWrapper: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    transportSelect: {\n        marginLeft: theme.spacing(1),\n        width: \"100px\"\n    }\n});\n\nconst transportTypes = [\n    {\n        icon: <DirectionsWalkIcon/>,\n        label: \"Walk\"\n    },\n    {\n        icon: <MetroIcon/>,\n        label: \"Metro\"\n    },\n    {\n        icon: <DirectionsBikeIcon/>,\n        label: \"Bike\"\n    },\n    {\n        icon: <DirectionsBusIcon/>,\n        label: \"Bus\"\n    },\n    {\n        icon: <CarIcon/>,\n        label: \"Car\"\n    },\n    {\n        icon: <TrainIcon/>,\n        label: \"Train\"\n    },\n    {\n        icon: <FlightIcon/>,\n        label: \"Plane\"\n    },\n    {\n        icon: <TramIcon/>,\n        label: \"Tram\"\n    }\n]\n\nfunction TransportItem({classes, transportId, transportChangeCallback, transportRemoveCallback}) {\n\n    const [currentTransport, setCurrentTransport] = useState(transportId == null ? 0 : transportId)\n\n    const handleTransportChange = (e) => {\n        setCurrentTransport(e.target.value)\n        transportChangeCallback({transport: parseInt(e.target.value)})\n    }\n\n    return (\n        <div className={classes.root}>\n            <MoreVertIcon/>\n            <div className={classes.transportSelectWrapper}>\n                {transportTypes[currentTransport].icon}\n                <FormControl className={classes.transportSelect} >\n                    <NativeSelect\n                        value={currentTransport}\n                        onChange={handleTransportChange}\n                    >\n                        {transportTypes.map((item, index) => {\n                            return <option key={index} value={index}> {item.label}</option>\n                        })}\n                    </NativeSelect>\n                </FormControl>\n                <IconButton aria-label=\"remove\" onClick={() => transportRemoveCallback()}>\n                    <RemoveIcon />\n                </IconButton>\n            </div>\n            <MoreVertIcon/>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(TransportItem)","import {withStyles} from \"@material-ui/core/styles\";\nimport TourPlaceComponent from \"./TourPlaceComponent\";\nimport React, {useEffect, useMemo} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ElementType} from \"./Tour\";\nimport {arrayMove, SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport TransportItem from \"./TransportItem\";\nimport shortid from 'shortid';\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst styles = theme => ({\n    tourPlaceComponent: {\n        margin: theme.spacing(2)\n    },\n    root: {\n        display: \"flex\",\n        flexFlow: \"column wrap\",\n        margin: theme.spacing(1)\n    }\n})\n\nconst TourPlaceSortable = SortableElement(({displayNoTransportWarning, elementData, removePlaceCallback, classes, addTransportCallback}) => (\n    <div>\n        <TourPlaceComponent removeCallback={removePlaceCallback} classes={{root: classes.tourPlaceComponent}}\n                            addTransportCallback={addTransportCallback} elementData={elementData}\n                            displayNoTransportWarning={displayNoTransportWarning}/>\n    </div>\n));\nconst TransportItemSortable = SortableElement(({transportId, transportChangeCallback, transportRemoveCallback}) => (\n    <div>\n        <TransportItem transportId={transportId} transportRemoveCallback={transportRemoveCallback} transportChangeCallback={transportChangeCallback}/>\n    </div>\n));\n\nconst SortableList = SortableContainer(({currentDay, removeElementCallback, tourInfo, classes, addTransportCallback, transportChangeCallback}) => {\n\n    const shouldDisplayNoTransportWarning = (index) => {\n        let elements = tourInfo.days[currentDay].tour\n        return ((elements.length -1 ) > index) && elements[index + 1].type !== ElementType.transport\n    }\n\n    return (\n\n        <ul>\n            {tourInfo.days[currentDay].tour.map((item, index) => {\n\n                switch (item.type) {\n                    case ElementType.place:\n                        return <TourPlaceSortable key={item.data.details.placeId} index={index}\n                                                  addTransportCallback={addTransportCallback} elementData={item}\n                                                  classes={classes}\n                                                  displayNoTransportWarning={shouldDisplayNoTransportWarning(index)}\n                                                  removePlaceCallback={() => removeElementCallback(index)}/>\n                    case ElementType.transport:\n                        return <TransportItemSortable key={item.data.elementIdentifier} index={index}\n                                                      transportId={item.data.transport}\n                                                      transportRemoveCallback = {() => removeElementCallback(index)}\n                                                      transportChangeCallback={(transport) => transportChangeCallback(index, transport)}/>\n                }\n            })}\n        </ul>\n    )\n});\n\nfunction TourPlacesWrapper({classes, tourInfo, tourInfoReducer, currentDay, errorInfo, setErrorInfo}) {\n\n    const removeElementCallback = (index) => {\n        tourInfoReducer({\n            type: 'REMOVE_ELEMENT',\n            day: currentDay,\n            index: index\n        })\n    }\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        tourInfoReducer({\n            type: 'MOVE_ELEMENT',\n            day: currentDay,\n            oldIndex: oldIndex,\n            newIndex: newIndex\n        })\n    }\n\n    const handleTransportChange = (index, data) => {\n        tourInfoReducer({\n            type: 'UPDATE_ELEMENT',\n            day: currentDay,\n            index: index,\n            data: data\n        })\n    }\n\n    const addTransportCallback = (details) => {\n        tourInfoReducer({\n            type: 'INSERT_TRANSPORT_FOR_PLACE',\n            placeId: details.data.details.placeId,\n            day: currentDay,\n            data: {type: ElementType.transport, data: {transport: 0, elementIdentifier: shortid.generate()}}\n        })\n    }\n\n    useEffect(() => {\n        console.log(tourInfo.days[currentDay].tour)\n    }, [tourInfo])\n\n    return (\n        <div className={classes.root}>\n            {tourInfo.days[currentDay].tour.length === 0 &&\n            <Alert severity=\"warning\">You have not added any places for the currently selected day.</Alert>}\n            <SortableList\n                distance={10}\n                currentDay={currentDay}\n                tourInfo={tourInfo}\n                transportChangeCallback={handleTransportChange}\n                onSortEnd={onSortEnd}\n                classes={classes}\n                addTransportCallback={addTransportCallback}\n                removeElementCallback={removeElementCallback}/>\n        </div>\n    )\n}\n\nTourPlacesWrapper.propTypes = {\n    tourInfo: PropTypes.object.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n    currentDay: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(TourPlacesWrapper)\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React, {useState} from \"react\";\nimport SearchInputComponent from \"../SearchInputComponent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\nimport DnsIcon from \"@material-ui/icons/Dns\";\nimport ApiPlaceCard from \"../ApiPlaceCard\";\nimport API from \"../../Networking/API\";\n\nconst styles = theme => ({\n    searchInputComponent: {\n\n    },\n    placeCard: {\n        margin: theme.spacing(1, 8, 1, 8),\n    },\n})\n\n\nfunction PlaceSearch({classes, addPlaceCallback, apiPlacesFound, setApiPlacesFound, localPlacesFound, setLocalPlacesFound}) {\n\n    const [apiPlacesLoading, setApiPlacesLoading] = useState(false)\n    const [localPlacesLoading, setLocalPlacesLoading] = useState(false)\n\n    const placeType = {\n        local: 0,\n        api: 1\n    }\n\n    const generatePlaceCards = () => {\n        let genProps = (placeInfo, type) => {\n            return {\n                classes: {root: classes.placeCard},\n                key: placeInfo.placeId,\n                renderActionArea: () => {\n                    return (\n                        <div>\n                            <Button color=\"primary\" onClick={() => addPlaceCallback(placeInfo, type)}>\n                                <AddIcon/>\n                            </Button>\n                            <Tooltip title={type === placeType.local ? \"This place is from our database\" : \"This place is from API\"} aria-label=\"add\">\n                                {type === placeType.local ? <LocalLibraryIcon/> : <DnsIcon/>}\n                            </Tooltip>\n                        </div>\n                    )\n                },\n                placeData : placeInfo\n            }\n        }\n\n        let mappedPlaces = []\n        localPlacesFound.forEach(item => {\n            mappedPlaces.push(<ApiPlaceCard {...genProps(item, placeType.local)}/>)\n        })\n        apiPlacesFound.forEach(item => {\n            mappedPlaces.push( <ApiPlaceCard {...genProps(item, placeType.api)}/>)\n        })\n        return mappedPlaces\n    }\n\n    const searchCallback = (keyword) => {\n        setLocalPlacesFound([])\n        setApiPlacesFound([])\n        setApiPlacesLoading(true)\n        setLocalPlacesLoading(true)\n        API.Places.getAllPlacesAdmin(\"?keyword=\" + keyword).then(response=>{\n            setLocalPlacesFound(response.list)\n            setLocalPlacesLoading(false)\n        }).catch(error=>{\n            console.log(error)\n        })\n\n        API.Places.searchApiPlaces(\"?keyword=\" + keyword).then(response => {\n            setApiPlacesFound(response)\n            setApiPlacesLoading(false)\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    return(\n        <React.Fragment>\n            <SearchInputComponent hint=\"Search for a place\" searchCallback={searchCallback} className={classes.searchInputComponent}/>\n            {(localPlacesLoading || apiPlacesLoading) ?\n                <CircularProgress  /> :\n                <React.Fragment>\n                    {generatePlaceCards()}\n                </React.Fragment>\n            }\n        </React.Fragment>\n    )\n}\n\nexport default withStyles(styles)(PlaceSearch)\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Button from \"@material-ui/core/Button\";\n\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\",\n        margin: theme.spacing(2)\n    },\n    radioButtonArea: {\n        marginRight: theme.spacing(1)\n    },\n    cardArea: {\n        flex: 1,\n        display: \"flex\"\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    descriptionInput: {\n        marginTop: theme.spacing(2),\n        width: \"100%\",\n        height: \"auto\"\n    },\n    headerWrap: {}\n})\n\nfunction DayCard({classes, onSelectCallback, index, currentDay, tourInfoReducer, description, handleRemoveDay}) {\n\n    const updateDescriptionGlobally = (e) => {\n        tourInfoReducer({\n            type: 'UPDATE_DAY',\n            day: index,\n            data: {\n                description: e\n            }\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.radioButtonArea}>\n                <Radio checked={index === currentDay} onChange={(e) => {\n                    onSelectCallback(index)\n                }}/>\n            </div>\n            <Card className={classes.cardArea}>\n                <CardContent className={classes.content}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                        Day {index + 1}\n                    </Typography>\n\n                    <TextField\n                        className={classes.descriptionInput}\n                        multiline\n                        label=\"Description\"\n                        value={description}\n                        variant=\"outlined\"\n                        onChange={(e) => {\n                            updateDescriptionGlobally(e.target.value)\n                        }}\n                    />\n                </CardContent>\n                <CardHeader\n                    action={\n                        <Button startIcon={<RemoveIcon/>} aria-label=\"remove\" onClick={() => handleRemoveDay(index)}/>\n                    }\n                />\n            </Card>\n        </div>\n    )\n}\n\nDayCard.propTypes = {\n    onSelectCallback: PropTypes.func.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n    currentDay: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(DayCard)\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DayCard from \"./DayCard\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {SortableContainer, SortableElement} from \"react-sortable-hoc\";\nimport shortid from 'shortid';\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\";\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(2)\n    },\n    addDayButton: {\n        marginTop: theme.spacing(1)\n    },\n    footerWrapper: {\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"flex-end\"\n    }\n})\n\nconst DayCardSortable = SortableElement(({dayInfo, day, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => (\n    <DayCard\n        description={dayInfo.description}\n        currentDay={currentDay}\n        index={day}\n        handleRemoveDay={removeDayCallback}\n        onSelectCallback={onSelectCallback}\n        tourInfoReducer={tourInfoReducer}/>\n));\n\nconst SortableList = SortableContainer(({elements, currentDay, onSelectCallback, tourInfoReducer, removeDayCallback}) => {\n\n    return (\n        <ul>\n            {elements.map((item, index) => {\n                return <DayCardSortable\n                    currentDay={currentDay}\n                    day={index}\n                    index={index}\n                    removeDayCallback={removeDayCallback}\n                    key={item.elementIdentifier}\n                    dayInfo={item}\n                    onSelectCallback={onSelectCallback}\n                    tourInfoReducer={tourInfoReducer}/>\n            })}\n        </ul>\n    );\n});\n\nfunction DaysWrapper({classes, currentDay, setCurrentDay, tourInfo, tourInfoReducer}) {\n\n    const { addAlertConfig } = UseAlertDialogContext();\n\n    const handleSelect = (index) => {\n        setCurrentDay(index)\n    }\n\n    const addDayHandler = () => {\n        tourInfoReducer({\n            type: 'ADD_DAY',\n            data: {\n                description: \"\",\n                elementIdentifier: shortid.generate(),\n                tour: []\n            }\n        })\n    }\n\n    const removeDay = (day) => {\n        tourInfoReducer({\n                type: 'REMOVE_DAY',\n                day: day,\n            }\n        )\n        if(day === currentDay)\n            setCurrentDay(day - 1)\n    }\n\n    const removeDayCallback = (day) => {\n        if(tourInfo.days.length === 1){\n            addAlertConfig(\"Warning\", \"The tour has to have at least one day\", [])\n        }else{\n            if(tourInfo.days[day].tour.length > 0){ //This day has at least one place/transport added to it\n                addAlertConfig(\"Warning\", \"Are you sure you want to remove this day?\",[{name: \"yes\", action: ()=>{\n                    removeDay(day)\n                    }}],() => {\n                })\n            }else removeDay(day)\n        }\n    }\n\n    const onSortEnd = ({oldIndex, newIndex}) => {\n        tourInfoReducer({\n            type: 'MOVE_DAY',\n            oldIndex: oldIndex,\n            newIndex: newIndex\n        })\n        setCurrentDay(newIndex)\n    }\n\n    return (\n        <div className={classes.root}>\n            <SortableList\n                elements={tourInfo.days}\n                currentDay={currentDay}\n                onSortEnd={onSortEnd}\n                removeDayCallback={removeDayCallback}\n                distance={10}\n                onSelectCallback={handleSelect}\n                tourInfoReducer={tourInfoReducer}/>\n            <div className={classes.footerWrapper}>\n                <Button\n                    variant=\"text\"\n                    color=\"secondary\"\n                    size=\"large\"\n                    className={classes.addDayButton}\n                    onClick={addDayHandler}\n                    startIcon={<AddIcon/>}>\n                    Add another day\n                </Button>\n            </div>\n\n        </div>\n    )\n}\n\nDaysWrapper.propTypes = {\n    setCurrentDay: PropTypes.func.isRequired,\n    currentDay: PropTypes.number.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n    tourInfo: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DaysWrapper)\n","import {arrayMove} from \"react-sortable-hoc\";\nimport {array} from \"prop-types\";\nimport {ElementType} from \"./Tour\";\n\nexport default function TourDataReducer(state, action) {\n\n    let days = []\n\n    switch (action.type) {\n        case 'ADD_ELEMENT':\n            state.days.forEach((item, index) => {\n                if (index === action.day) {\n                    days.push({\n                        ...item,\n                        tour: [\n                            ...item.tour,\n                            action.data\n                        ]\n                    })\n                } else days.push(item)\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'UPDATE_ELEMENT':\n            state.days.forEach((item, index) => {\n                if (index === action.day) {\n                    let tour = item.tour\n                    tour[action.index] = {...tour[action.index], data: {...tour[action.index].data, ...action.data}}\n                    days.push({\n                        ...item,\n                        tour: tour\n                    })\n                } else days.push(item)\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'INSERT_TRANSPORT_FOR_PLACE':\n            state.days.forEach((item, index) => {\n                if (index === action.day) {\n                    let tour = item.tour\n                    let index = tour.findIndex((item) => item.type === ElementType.place && item.data.details.placeId === action.placeId)\n                    tour.splice(index + 1, 0, action.data)\n                    days.push({\n                        ...item,\n                        tour: tour\n                    })\n                } else days.push(item)\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'ADD_DAY':\n            return {\n                ...state,\n                days: [\n                    ...state.days,\n                    action.data\n                ]\n            }\n        case 'MOVE_DAY':\n            return {\n                ...state,\n                days: arrayMove(state.days, action.oldIndex, action.newIndex)\n            }\n        case 'MOVE_ELEMENT':\n            days = state.days.map((item, index) => {\n                if (index === action.day)\n                    return {...item, tour: arrayMove(item.tour, action.oldIndex, action.newIndex)}\n                else return item\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'UPDATE_DAY':\n            days = state.days.map((item, index) => {\n                if (index === action.day) {\n                    return {...item, ...action.data}\n                } else return item\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'REMOVE_ELEMENT':\n            days = state.days.map((item, index) => {\n                if (index === action.day)\n                    return {...item, tour: item.tour.filter((value, index) => index !== action.index)}\n                else return item\n            })\n            return {\n                ...state,\n                days: [\n                    ...days\n                ]\n            }\n        case 'REMOVE_DAY':\n            days = state.days.filter((item, index) => index !== action.day)\n            return {\n                ...state,\n                days: days\n            }\n        case 'UPDATE_TOUR':\n            return {\n                ...state,\n                ...action.data\n            }\n        case 'SET_ALL':\n            return action.data\n\n        default:\n            return state\n    }\n\n}\n","import React, {useEffect} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(4),\n    },\n    nameField: {\n        width: \"100%\"\n    },\n    descriptionField: {\n        marginTop: theme.spacing(2),\n        width: \"100%\",\n        height: \"auto\"\n    }\n});\n\nfunction TourInfoComponent({classes, tourInfo, tourInfoReducer, errorInfo, setErrorInfo}) {\n\n    const handleDescriptionChange = (e) => {\n        tourInfoReducer({\n            type: 'UPDATE_TOUR',\n            data: {description: e.target.value}\n        })\n    }\n    const handleTitleChange = (e) => {\n        tourInfoReducer({\n            type: 'UPDATE_TOUR',\n            data:  {name: e.target.value}\n        })\n    }\n\n    useEffect(()=>{\n        if(tourInfo.name === \"\")\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: true}}})\n        else\n            setErrorInfo(state => {return {...state, errors: {...state.errors, titleMissing: false}}})\n    }, [tourInfo.name])\n\n    let shouldDisplayTitleMissingError = errorInfo.showErrors && errorInfo.errors.titleMissing\n\n    return (\n        <div className={classes.root}>\n            <TextField label=\"Tour name\"\n                       variant=\"outlined\"\n                       error={shouldDisplayTitleMissingError}\n                       helperText={shouldDisplayTitleMissingError ? \"Please provide a title for your tour\" : \"\"}\n                       value={tourInfo.name}\n                       onChange={handleTitleChange}\n                       defaultValue=\"My tour name\" className={classes.nameField}/>\n            <TextField\n                className={classes.descriptionField}\n                multiline\n                label=\"Description\"\n                value={tourInfo.description}\n                variant=\"outlined\"\n                onChange={handleDescriptionChange}\n            />\n        </div>\n    )\n}\n\nTourInfoComponent.propTypes = {\n    tourInfo: PropTypes.object.isRequired,\n    tourInfoReducer: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(TourInfoComponent)","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n    root: {\n        margin: theme.spacing(4),\n    },\n});\n\nfunction TourMap({classes, tourInfo, currentDay}) {\n\n    /*\n    Example of getting 0th place and 0th day lat and lng\n    let lat = tourInfo.days[0].tour[0].details.latitude\n    let lng = tourInfo.days[0].tour[0].details.longitude\n\n    Keep in mind, that you want to only look for elements, that are of place (not of transport) type.\n    So you'd do something like this to get current day's places:\n    let places = tourInfo.days[currentDay].tour.filter(item => item.type === ElementType.place)\n    and then something like this\n    places.forEach(item => {\n        let lat = item.details.latitude\n        let lng = item.details.longitude\n    })\n    */\n    return (\n        <div className={classes.root}>\n            {/*Map placeholder*/}\n        </div>\n    )\n}\n\nTourMap.propTypes = {\n    tourInfo: PropTypes.object.isRequired,\n    currentDay: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(TourMap)","import {withStyles} from \"@material-ui/core/styles\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport TourPlaceComponent from \"./TourPlaceComponent\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TourPlacesWrapper from \"./TourPlacesWrapper\";\nimport PlaceSearch from \"./PlaceSearch\";\nimport DaysWrapper from \"./DaysWrapper\";\nimport TourReducer from \"./TourReducer\";\nimport TourDataReducer from \"./TourReducer\";\nimport TourInfoComponent from \"./TourInfoComponent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TourMap from \"./TourMap\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../Networking/API\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\nimport shortid from 'shortid';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\n\nexport const ElementType = {\n    place: 0,\n    transport: 1\n}\nexport const PlaceType = {\n    api: 1,\n    local: 0\n}\n\nconst styles = theme => ({\n    root: {\n        [theme.breakpoints.down(\"lg\")]: {\n            overflow: \"scroll\",\n        },\n        [theme.breakpoints.only(\"lg\")]: {\n            overflow: \"initial\",\n            display: \"flex\",\n        },\n        height: `calc(100% - 64px)`,\n        width: \"100%\",\n        '&::-webkit-scrollbar': {\n            display: \"none\"\n        },\n    },\n    loader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100vw\",\n        height: \"100vh\"\n    },\n    rightLayout: {\n        flex: 2,\n        overflowY: \"scroll\",\n        // flexDirection: \"row\",\n        '&::-webkit-scrollbar': {\n            display: \"none\"\n        },\n        [theme.breakpoints.only(\"lg\")]: {\n            height: \"100%\",\n        },\n    },\n    leftLayout: {\n        [theme.breakpoints.only(\"lg\")]: {\n            height: \"100%\",\n        },\n        overflowY: \"scroll\",\n\n        flex: 1,\n        '&::-webkit-scrollbar': {\n            display: \"none\"\n        },\n    },\n    actionsArea: {\n        margin: theme.spacing(1),\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n    },\n\n})\n\nconst sampleTourData = {\n    name: \"\",\n    description: \"\",\n    days: [\n        {\n            description: \"\",\n            elementIdentifier: \"jkasfbjkdsbjk\",\n            tour: []\n        }\n    ]\n}\n\nfunction Tour({classes, match}) {\n\n    const [localPlacesFound, setLocalPlacesFound] = useState([])\n    const [apiPlacesFound, setApiPlacesFound] = useState([])\n    const [currentDay, setCurrentDay] = useState(0)\n    const [tourId, setTourId] = useState(match.params.tourId)\n    const [isLoading, setIsLoading] = useState(false)\n\n    const [errorInfo, setErrorInfo] = useState({\n            errors: {\n                titleMissing: false,\n                /* Any client-side verification errors may by added here, and handled in individual components */\n            },\n            showErrors: false\n        }\n    )\n\n    const [tourInfo, dispatchTourInfo] = React.useReducer(TourDataReducer, sampleTourData)\n    const {addConfig} = UseSnackbarContext();\n\n    const handleAddPlaceClick = (placeInfo, type) => {\n        dispatchTourInfo({\n            type: 'ADD_ELEMENT',\n            day: currentDay,\n            data: {\n                type: ElementType.place,\n                data: {\n                    type: type,\n                    details: {...placeInfo}\n                }\n            }\n        })\n    }\n\n    useEffect(() => {\n        if (tourId !== undefined) {\n            setIsLoading(true)\n            loadData()\n        }\n    }, [])\n\n    const loadData = () => {\n        API.Tour.getTour(\"?id=\" + tourId).then((response) => {\n            let aggregatedDays = []\n            response.days.forEach(day => {\n                let aggregatedElements = []\n                day.data.forEach(place => {\n                    let aggregatedPlace = {\n                        type: ElementType.place,\n                        data: {details: place.place, type: place.place.type}\n                    }\n                    delete aggregatedPlace.data.details.type\n                    aggregatedElements.push(aggregatedPlace)\n                    place.transport.forEach(transport => {\n                        aggregatedElements.push({\n                            type: ElementType.transport,\n                            data: {transport: transport.fk_transportId - 1, elementIdentifier: shortid.generate()}\n                        })\n                    })\n                })\n                let aggregatedDay = {...day, tour: aggregatedElements, elementIdentifier: shortid.generate()}\n                delete aggregatedDay.data\n                aggregatedDays.push(aggregatedDay)\n            })\n            let aggregatedTour = {...response, days: aggregatedDays}\n            dispatchTourInfo({type: 'SET_ALL', data: aggregatedTour})\n        }).catch((error) => {\n            addConfig(false, \"Tour has failed to load\")\n        }).finally(() => {\n            setIsLoading(false)\n        })\n    }\n\n    const handleSave = () => {\n        let containsErrors = false;\n        Object.keys(errorInfo.errors).map(function(keyName, keyIndex) {\n            if(errorInfo.errors[keyName]){\n                setErrorInfo(state => {return {...state, showErrors: true}})\n                containsErrors = true;\n            }\n        })\n        if(containsErrors) return\n        setErrorInfo(state => {return {...state, showErrors: false}})\n\n        const aggregatedDays = []\n        tourInfo.days.forEach(day => {\n            let aggregatedDay = {...day, data: []}\n            delete aggregatedDay.tour\n            delete aggregatedDay.elementIdentifier\n            for (let i = 0; i < day.tour.length; i++) {\n                let element = day.tour[i]\n                if (element.type !== ElementType.place)\n                    continue;\n                let transport = []\n                for (let j = i + 1; j < day.tour.length && day.tour[j].type === ElementType.transport; j++) {\n                    transport.push({fk_transportId: day.tour[j].data.transport + 1})\n                }\n                let aggregatedPlace = {\n                    place: {\n                        type: element.data.type,\n                        placeId: element.data.details.placeId\n                    },\n                    transport: transport\n                }\n                aggregatedDay.data.push(aggregatedPlace)\n            }\n            aggregatedDays.push(aggregatedDay)\n        })\n        let aggregatedTour = {...tourInfo, days: aggregatedDays}\n\n        if (tourId === undefined) {\n            API.Tour.insertTour(aggregatedTour).then((response) => {\n                addConfig(true, \"Tour has been inserted successfully!\")\n                setTourId(response)\n            }).catch((error) => {\n                addConfig(false, \"Something went wrong while saving this tour.\")\n            })\n        } else {\n            API.Tour.updateTour(aggregatedTour, \"?id=\" + tourId).then((response) => {\n                addConfig(true, \"Tour has been updated successfully!\")\n            }).catch((error) => {\n                addConfig(false, \"Something went wrong while saving this tour.\")\n            })\n        }\n\n    }\n\n    const leftLayout = useMemo(() => (\n        <div className={classes.leftLayout}>\n            <PlaceSearch addPlaceCallback={handleAddPlaceClick} localPlacesFound={localPlacesFound}\n                         setLocalPlacesFound={setLocalPlacesFound} apiPlacesFound={apiPlacesFound}\n                         setApiPlacesFound={setApiPlacesFound}/>\n        </div>\n    ), [localPlacesFound, apiPlacesFound, currentDay])\n\n\n    const tourDaysComponents = useMemo(() => (\n        <React.Fragment>\n            <DaysWrapper currentDay={currentDay} setCurrentDay={setCurrentDay} tourInfo={tourInfo}\n                         tourInfoReducer={dispatchTourInfo}/>\n            <Divider variant=\"middle\"/>\n            <TourPlacesWrapper errorInfo={errorInfo} setErrorInfo={setErrorInfo}\n                               currentDay={currentDay} tourInfoReducer={dispatchTourInfo} tourInfo={tourInfo}/>\n            <TourMap tourInfo={tourInfo} currentDay={currentDay}/>\n        </React.Fragment>\n    ), [tourInfo.days, currentDay, errorInfo])\n\n    const rightLayout = useMemo(() => (\n        <Paper className={classes.rightLayout}>\n            <TourInfoComponent tourInfo={tourInfo} tourInfoReducer={dispatchTourInfo} errorInfo={errorInfo} setErrorInfo={setErrorInfo}/>\n            <Divider variant=\"middle\"/>\n            {tourDaysComponents}\n            <div className={classes.actionsArea}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\n                    Save this tour\n                </Button>\n            </div>\n        </Paper>\n    ), [tourInfo, currentDay, errorInfo])\n\n    const theme = useTheme();\n    const largeScreen = useMediaQuery(theme.breakpoints.only('lg'));\n\n    const content = (\n        <React.Fragment>\n            {largeScreen ?\n                <React.Fragment>\n                    {leftLayout}\n                    {rightLayout}\n                </React.Fragment> :\n                <React.Fragment>\n                    {rightLayout}\n                    {leftLayout}\n                </React.Fragment>\n            }\n        </React.Fragment>\n    )\n\n    return (\n        <div className={classes.root}>\n            {isLoading ? <div className={classes.loader}><CircularProgress/></div> : content}\n        </div>\n    )\n}\n\n\nexport default withStyles(styles)(Tour)\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TableComponent from \"../components/TableComponent\";\nimport API from \"../Networking/API\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Box from \"@material-ui/core/Box\";\nimport history from \"../helpers/history\";\nimport UseAlertDialogContext from \"../contexts/UseAlertDialogContext\";\nimport Strings from \"../helpers/stringResources\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Popover from \"@material-ui/core/Popover\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(2)\n    },\n    input: {\n        display: \"none\"\n    },\n\n    sortingButtons: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\"\n\n    },\n    root:{\n        height:\"100vh\",\n        width:\"100%\",\n        overflow: \"auto\"\n    },\n    buttonsDiv: {\n        backgroundColor: \"red\",\n        justifyContent: \"flex-end\"\n    },\n    content:{\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"lg\")]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            padding: theme.spacing(8),\n        },\n    }\n});\n\n\nconst headCells = [\n    { id: 'name', numeric: false, disablePadding: false, label: 'Tour name', isId: true},\n    { id: 'description', numeric: false, disablePadding: false, label: 'Tour description',isId: false},\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions', isId: false }\n];\n\nfunction Tours(props) {\n\n    const [data, setData] = useState([]);\n    const [pageData, setPageData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { classes } = props;\n\n    const [filterOptions, setFilterOptions] = useState([\n        {filterLabel: \"Unverified\", filter: false, filterName: \"unverified\"},\n        {filterLabel: \"Unpublished\", filter: false, filterName: \"unpublished\"}]);\n\n    const [filterQuery, setFilterQuery] = useState(\"\");\n\n\n    const { addAlertConfig } = UseAlertDialogContext();\n    const { addConfig } = UseSnackbarContext();\n\n    useEffect(()=>{\n        if(!isLoading){\n            getAllTours(\"?o=\"+filterQuery);\n            console.log(\"Filter query\", filterQuery);\n        }\n    },[filterQuery]);\n\n    function parseData(data){\n        console.log(\"deita\", data.list)\n        setIsLoading(false);\n        let placesData = [];\n        data.list.map(row => {\n            placesData.push(row)\n        });\n\n        delete data.list;\n        setData(placesData);\n        setPageData(data);\n    }\n\n    function updatePlaceCallback(id){\n        history.push(\"/app/addtour/\"+id)\n    }\n    function removePlaceCallback(id){\n        console.log(\"tour id\", id)\n        setIsLoading(true);\n        addAlertConfig(Strings.DIALOG_TOUR_DELETE_TITLE, Strings.DIALOG_TOUR_DELETE_MESSAGE, function () {\n            API.Tour.removeTour(\"?id=\"+id).then(response=>{\n                let tmp = [];\n                data.map(row=>{\n                    if(row.placeId !== id){\n                        tmp.push(row)\n                    }\n                });\n                setData(tmp);\n                addConfig(true, Strings.SNACKBAR_TOUR_REMOVE_SUCCESS)\n                setIsLoading(false)\n            }).catch(error=>{\n                setIsLoading(false);\n                addConfig(false, Strings.SNACKBAR_ERROR)\n            })\n        }, ()=>{setIsLoading(false)})\n    }\n\n    const changePageCallback = (p=0, keyword=\"\") => {\n        setIsLoading(true);\n        getAllTours(\"?p=\"+p+\"&s=\"+10+\"&keyword=\"+keyword+\"&o=\"+filterQuery)\n    };\n\n\n    //Sorting stuff\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const filterOptionsChanged = (name) =>{\n        let filters = [];\n        let fq = [];\n        filterOptions.map(row=>{\n            if(row.filterName === name){\n                row.filter = !row.filter\n            }\n            if(row.filter){\n                fq.push(row.filterName)\n            }\n            filters.push(row)\n        });\n\n        setFilterQuery(fq.join(\",\"));\n        setFilterOptions(filters)\n    };\n\n    const customToolbarElements = () =>{\n        return <div>\n            <Tooltip aria-describedby={id} title=\"Filter list\">\n                <IconButton  aria-label=\"filter list\" onClick={handleClick}>\n                    <FilterListIcon />\n                </IconButton>\n            </Tooltip>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={()=>{setAnchorEl(null)}}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <div className={classes.sortingButtons}>\n                    {filterOptions.map(row=>{\n                        return <FormControlLabel\n                            control={<Checkbox checked={row.filter} onChange={()=>filterOptionsChanged(row.filterName)} name={row.filterName} />}\n                            label={row.filterLabel}\n                        />\n                    })}\n                </div>\n\n            </Popover>\n        </div>\n    };\n    /*------------------------------------------------------------------------------------------------------*/\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content} >\n                <TableComponent\n                    title={\"Tours\"}\n                    headCells={headCells}\n                    data={data}\n                    pagingInfo={pageData}\n                    checkable={false}\n                    changePageCallback={changePageCallback}\n                    updateCallback={updatePlaceCallback}\n                    removeCallback={removePlaceCallback}\n                    id={\"tourId\"}\n                    isLoading={isLoading}\n                    customToolbarElements={customToolbarElements()}\n                />\n\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <Button\n                        onClick={()=>{history.push(\"/app/addtour\")}}\n                        variant=\"text\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        startIcon={<AddIcon />}>\n                        Add\n                    </Button>\n                </Box>\n            </div>\n\n        </div>\n    );\n\n    function getAllTours(urlParams=\"\") {\n        API.Tour.getAllToursAdmin(urlParams).then(response=>{\n            console.log(response);\n            parseData(response)\n        }).catch(error=>{\n            console.log(error)\n        })\n    }\n}\n\nTours.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Tours);","import React, {Fragment, useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Places from \"../pages/Places\";\nimport AddPlace from \"../pages/AddPlace\";\nimport history from \"../helpers/history\";\nimport ApiPlaces from \"../pages/ApiPlaces\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport UseAppBarTitleContext from \"../contexts/UseAppBarTitleContext\";\nimport NotFoundPage from \"../pages/NotFoundPage\";\nimport Redirect from \"react-router-dom/es/Redirect\";\n\nimport Tour from \"./tour_components/Tour\";\nimport { useLocation } from 'react-router-dom'\nimport Tours from \"../pages/Tours\";\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles((theme) => ({\n    root1: {\n        overflow: \"hidden\",\n        display: 'flex',\n        height: \"100vh\",\n        background: \"#F1F1F1\"\n    },\n    appBar: {\n        height: \"64px\",\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        width: \"100vw\",\n        height: \"100%\",\n        //padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        width: \"100vw\",\n        height: \"100%\",\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0\n    },\n}));\n\n\nexport default function Appbar(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n    const { title, setTitle } = UseAppBarTitleContext();\n    let location = useLocation();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const handleListItemClick = (url,title) =>{\n        handleDrawerClose();\n        setTitle(title);\n\n        if(location.pathname === url){\n            history.go(0)\n        }\n    };\n\n    return (\n        <div className={classes.root1}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n\n                <Divider />\n                <List>\n                    <ListItem button component={Link} to=\"/app/\" onClick={()=>handleListItemClick(\"/app/\",\"Home\")}>\n                        <ListItemText>Home</ListItemText>\n                    </ListItem>\n                    <Divider light />\n                    <ListItem button component={Link} to=\"/app/places\" onClick={()=>handleListItemClick(\"/app/places\",\"Places\")} >\n                        <ListItemText>Places</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/tours\" onClick={()=>handleListItemClick(\"/app/tours\",\"Tours\")} >\n                        <ListItemText>Tours</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/apiplaces\" onClick={()=>handleListItemClick(\"/app/apiplaces\",\"Api places\")} >\n                        <ListItemText>Explore API places</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/addplace\" onClick={()=>handleListItemClick(\"/app/addplace\",\"Add Place\")} >\n                        <ListItemText>Add place</ListItemText>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/app/addtour\" onClick={()=>setTitle(\"Add tour\")} >\n                        <ListItemText>Add tour</ListItemText>\n                    </ListItem>\n                </List>\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n                <Switch>\n                    <Route exact path=\"/app\" component={Home} />\n                    <Route path=\"/app/places\" component={Places} />\n                    <Route path=\"/app/tours\" component={Tours} />\n                    <Route path=\"/app/addplace/:placeId?\" component={AddPlace} />\n                    <Route path=\"/app/apiplaces\" component={ApiPlaces} />\n                    <Route path=\"/app/addplace\" component={AddPlace} />\n                    <Route path=\"/app/addtour/:tourId?\" component={Tour} />\n                    <Route path=\"/app/addtour\" component={Tour} />\n                    <Redirect from=\"*\" to=\"/404\"/>\n                </Switch>\n\n            </main>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport Appbar from './components/Appbar.js';\nimport AppBarTitleProvider from \"./contexts/AppBarTitleContext\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\n\nclass App extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <AppBarTitleProvider>\n                        <Appbar />\n                    </AppBarTitleProvider>\n                    </MuiPickersUtilsProvider>\n            </React.Fragment>\n        );\n    }\n}\nexport default App;","import React, {useEffect, useState} from \"react\";\nimport app from \"../helpers/firebaseInit\"\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({children}) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(()=>{\n        app.auth().onAuthStateChanged(function (user) {\n            if (user) {\n                setCurrentUser(user);\n\n            }\n            setIsLoading(false)\n        });\n    },[]);\n\n\n    return (\n        <AuthContext.Provider\n            value={{\n                currentUser,\n                isLoading\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};","import React, {useContext, useEffect, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Cookies from 'js-cookie'\nimport * as firebase from \"firebase\";\nimport history from \"../helpers/history\";\nimport UseSnackbarContext from \"../contexts/UseSnackbarContext\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport app from \"../helpers/firebaseInit\";\nimport {AuthContext} from \"../contexts/AuthContext\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {isAuthenticated} from \"../helpers/tokens\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n                Traveldirection {' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    loaderMain: {\n        width: \"100%\",\n        height: \"100%\",\n        alignItems:\"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"red\"\n    }\n}));\n\n\nexport default function LoginPage() {\n    const classes = useStyles();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loading, setIsLoading] = useState(false);\n    const { addConfig } = UseSnackbarContext();\n    const { currentUser, isLoading } = useContext(AuthContext);\n\n\n    const handleLogin = () =>{\n        setIsLoading(true);\n        app.auth().signInWithEmailAndPassword(email , password)\n            .then(function(user) {\n                setIsLoading(false)\n                app.auth().currentUser.getIdToken(true).then(function (idToken) {\n                    console.log(\"Getting new access token\");\n                    Cookies.set(\"access_token\", idToken);\n                    history.push(\"/app\");\n                }).catch(function (error) {\n                    addConfig(false, \"Error receiving access token\")\n                });\n            })\n            .catch(function(error) {\n                setIsLoading(false);\n                addConfig(false, error.message)\n            });\n    };\n\n\n    if (isAuthenticated()) {\n        return <Redirect to=\"/app\" />;\n    }\n\n    const handleKeyPress = (event) =>{\n        if (event.which === 13 || event.keyCode === 13) {\n            handleLogin();\n            return false;\n        }\n        return true;\n    };\n\n    return <Container component=\"main\" maxWidth=\"xs\" onKeyPress={(e)=>handleKeyPress(e)}>\n\n                            {loading && <LinearProgress />}\n                            <CssBaseline />\n                            <div className={classes.paper}>\n                                <Avatar className={classes.avatar}>\n                                    <LockOutlinedIcon />\n                                </Avatar>\n                                <Typography component=\"h1\" variant=\"h5\">\n                                    Sign in\n                                </Typography>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    value={email}\n                                    onChange={(e)=>{setEmail(e.target.value)}}\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    value={password}\n                                    onChange={(e)=>{setPassword(e.target.value)}}\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                />\n                                <Button\n                                    onClick={()=>{handleLogin()}}\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                >\n                                    Sign In\n                                </Button>\n                            </div>\n                            <Box mt={8}>\n                                <Copyright />\n                            </Box>\n                        </Container>\n\n}","import Route from \"react-router-dom/es/Route\";\nimport React, {useContext} from \"react\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport {isAuthenticated} from \"../helpers/tokens\";\n\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={routeProps =>\n                isAuthenticated() === true ? (\n                    <Component {...routeProps} />\n                ) : (\n                    <Redirect to={\"/login\"} />\n                )\n            }\n        />\n    );\n};","import React, {useState} from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport UseSnackbarContext from \"../../contexts/UseSnackbarContext\";\n\n\nexport default function SnackbarFeedback(props){\n\n    const { config, removeConfig } = UseSnackbarContext();\n\n    return(\n        <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'left'}} open={!!config} autoHideDuration={4000} onClose={removeConfig}>\n            <Alert onClose={removeConfig} severity={!!config ? (config.success ? \"success\" : \"error\") : \"\"}>\n                {!!config && config.message}\n            </Alert>\n        </Snackbar>\n    )\n}\n","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport UseAlertDialogContext from \"../../contexts/UseAlertDialogContext\"\n\nconst AlertDialogFeedback = () => {\n\n    const {alertConfig, removeAlertConfig} = UseAlertDialogContext();\n\n    function remove() {\n        if(alertConfig.onClose !== undefined){\n            alertConfig.onClose()\n        }\n        removeAlertConfig()\n    }\n\n    return(\n        <Dialog\n            open={!!alertConfig}\n            onClose={remove}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{!!alertConfig ? alertConfig.title : \"\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {!!alertConfig ? alertConfig.message : \"\"}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={remove}\n                        color=\"primary\">\n                    Close\n                </Button>\n                {!!alertConfig && alertConfig.actions.map(row=>{\n                    return <Button onClick={()=>{\n                        remove();\n                        row.action();\n                    }}\n                    color=\"primary\"\n                    >\n                            {row.name}\n                    </Button>\n                })}\n            </DialogActions>\n        </Dialog>\n    )\n};\n\n\nexport default AlertDialogFeedback\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport history from \"./helpers/history\";\nimport LoginPage from \"./pages/LoginPage\";\nimport { Router, Route, Link, Switch} from \"react-router-dom\";\nimport {AuthenticatedRoute} from \"./components/AuthenticatedRoute\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport SnackbarProvider from \"./contexts/SnackbarContext\";\nimport SnackbarFeedback from \"./components/feedback/SnackbarFeedback\";\nimport AlertDialogProvider from \"./contexts/AlertDialogContext\";\nimport AlertDialogFeedback from \"./components/feedback/AlertDialogFeedback\";\nimport {AuthProvider} from \"./contexts/AuthContext\";\n\nrequire('dotenv').config();\n\nReactDOM.render(\n    <AuthProvider>\n        <Router history={history}>\n            <SnackbarProvider>\n                <AlertDialogProvider>\n                    <SnackbarFeedback/>\n                    <AlertDialogFeedback/>\n                    <Switch>\n                        <Redirect exact from=\"/\" to=\"/app\"/>\n                        <AuthenticatedRoute path=\"/app\" component={App} />\n                        <Route path=\"/login\" component={LoginPage} />\n                        <Route path=\"*\" component={NotFoundPage}/>\n                        <Redirect from=\"*\" to=\"/404\" />\n                    </Switch>\n                </AlertDialogProvider>\n            </SnackbarProvider>\n        </Router>\n    </AuthProvider>\n   , document.getElementById('root'));\n"],"sourceRoot":""}